{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx","webpack:///./source/src/app/data/Wsdl.js","webpack:///./source/src/app/components/Apis/Details/APIDefinition/LinterUI/LinterUI.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/Linting/APILintingSummary.tsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEditWorkspace.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/MethodView.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/Steps/ProvideWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/Steps/ProvideAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ProvideOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ValidationResults.tsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/Steps/ProvideGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/StreamingAPI/APICreateStreamingAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ApiCreateAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ExternalEndpoint.jsx","webpack:///./node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","webpack:///./node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","webpack:///./source/src/app/components/Apis/Details/APIDefinition/Linting/Linting.tsx","webpack:///./source/src/app/components/Shared/DropZoneLocal.jsx"],"names":["useStyles","makeStyles","theme","mandatoryStar","color","palette","error","main","marginLeft","spacing","helperTextContext","textOverflow","width","display","whiteSpace","overflow","endpointValidChip","border","endpointInvalidChip","endpointErrorChip","iconButton","padding","iconButtonValid","green","actualContext","isWebSocket","initialContext","context","version","indexOf","replace","checkContext","value","result","tenant","user","AuthManager","getUser","name","split","length","contextVal","startsWith","toLowerCase","undefined","find","x","contextTemplate","DefaultAPIForm","props","onChange","onValidate","api","isAPIProduct","children","appendChildrenBeforeEndpoint","hideEndpoint","classes","useState","validity","setValidity","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","useEffect","Boolean","condition","then","otherwise","updateValidity","newState","isFormValid","Object","entries","map","reduce","acc","cVal","validate","field","nameValidity","APIValidation","apiName","abortEarly","apiParameter","body","list","details","message","contextValidity","apiContext","required","param","includes","apiContextWithoutKeyWords","charCount","a","count","versionValidity","apiVersion","wsUrlValidity","wsUrl","endpointURL","item","md","noValidate","autoComplete","autoFocus","fullWidth","id","label","defaultMessage","className","helperText","detail","index","style","marginTop","InputProps","onBlur","target","InputLabelProps","for","margin","variant","container","key","xs","root","endpoint","endAdornment","position","aria-label","onClick","API","testEndpoint","statusMessage","finally","disabled","size","direction","justify","alignItems","gutterBottom","defaultProps","propTypes","PropTypes","shape","isRequired","func","APICreateBase","title","sm","elevation","element","arrayOf","Wsdl","file","apiClient","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","CONST","API_CLIENT","client","requestBody","apis","Validation","validateWSDLDefinition","url","additionalProperties","implementationType","APIs","importWSDLDefinition","JSON","stringify","response","Resource","tableCell","fontSize","headerTableCell","background","fontWeight","tableRow","backgroundColor","action","hover","cursor","tableWrapper","headerTableRow","LinterUI","React","page","setPage","rowsPerPage","setRowsPerPage","linterResults","handleRowClick","columns","minWidth","align","rows","type","severityMap","severity","line","range","start","code","sx","maxHeight","stickyHeader","column","slice","row","format","rowsPerPageOptions","component","onPageChange","event","newPage","onRowsPerPageChange","activeButton","default","handleChange","selectedSeverity","setSelectedSeverity","severityCounts","forEach","ml","Number","exclusive","String","maxWidth","noWrap","Math","random","searchWrapper","paper","height","borderRadius","apiWrapper","overflowY","ResourceWrapper","marginRight","grey","common","white","SelectedResourceWrapper","overflowX","leftMost","getContrastText","rightMost","colTitle","minHeight","treeItemMain","treeItemMainWrapper","paddingLeft","treeItem","hr","flex","methodView","middleText","selectedApi","selectedTitle","buttonWrapper","textDecorate","selectedApiDescription","messageWrapper","tootBar","justifyContent","inactiveIcon","resourceMethod","POST","PUT","GET","DELETE","PATCH","OPTIONS","HEAD","ProductResourcesEdit","apiResources","setApiResources","isStateCreate","resourceNotFountMessage","allApis","setAllApis","notFound","setNotFound","searchText","setSearchText","selectedApiPaths","setSelectedApiPaths","setSelectedApi","fromSearch","setFromSearch","apiRestClient","filterAPIs","text","inputValue","trim","composeQuery","composeQueryJSON","queryString","parse","limit","offset","search","all","query","isValidHttpVerb","innerKey","addPropsToSelectedApiPaths","paths","apiId","latestApiResources","keys","methodObj","checked","verb","resourceFound","resourcekey","apiResource","operations","operationKey","operation","allreadyAdded","getApiSwagger","apiSelected","getSwagger","obj","catch","status","doRedirectToLogin","updateResourceTree","resourceToAdd","inputApiResources","updateStateHere","newApiResources","cloneDeep","newResource","toUpperCase","authType","throttlingPolicy","scopes","apiFound","indexA","operationFound","indexB","splice","push","updateCheckBox","prevSelectedApiPaths","addSelectedResourcesToTree","addAll","filteredList","filter","theApi","lifeCycleStatus","placeholder","shrink","dense","apiObj","labelId","role","button","primary","secondary","onKeyDown","path","CONSTS","HTTP_METHODS","edge","tabIndex","disableRipple","inputProps","method","instanceOf","Array","string","MethodView","console","info","Configurations","app","useTheme","chipColor","custom","resourceChipColors","chipTextColor","log","ProvideWSDL","apiInputs","inputsDispatcher","isFileInput","inputType","isGenerateRESTAPI","isError","isValidating","setIsValidating","isCreateMode","mode","handleWSDLValidationResponse","isWSDLValid","isValid","success","handleWSDLValidationErrorResponse","description","onDrop","files","state","validateFileOrArchive","dropBoxControlLabel","values","break","urlStateEndAdornment","control","onClose","disableActions","paperProps","humanFileSize","accept","validateUrl","ProvideAsyncAPI","validationErrors","setValidationErrors","gatewayVendor","setGatewayVendor","pop","validFile","validateAsyncAPIByFile","isValidFile","errors","validateURL","validateAsyncAPIByUrl","returnContent","isValidURL","content","INPUT_TYPES","FILE","URL","isInvalidURL","data-testid","icon","ProvideOpenAPI","onLinterLineSelect","setLinterResults","isLinting","setIsLinting","lint","getLinterResultsFromContent","results","reset","validateURLDebounced","useCallback","debounce","newURL","validateOpenAPIByUrl","formattedContent","definition","err","hasJSONStructure","YAML","load","validateOpenAPIByFile","endsWith","read","FileReader","readAsText","onloadend","toString","importDefinitionDialogHeader","ValidationResults","expandValidationErrors","setExpandValidationErrors","expandLinterResults","setExpandLinterResults","linterSelectedSeverity","setLinterSelectedSeverity","expanded","expandIcon","stopPropagation","ProvideGraphQL","validateGraphQLFile","graphQLInfo","ariaLabel","getPolicies","promisedPolicies","policies","APICreateDefault","history","intl","usePublisherSettings","settings","data","isLoading","settingsError","pageError","setPageError","isCreating","setIsCreating","isPublishing","setIsPublishing","isRevisioning","setIsRevisioning","isDeploying","setIsDeploying","isPublishButtonClicked","setIsPublishButtonClicked","useReducer","currentState","inputAction","formValidity","isPublishable","isAPICreateDisabled","createAPI","allPolicies","Alert","formatMessage","p","apiData","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","newAPIProduct","APIProduct","promisedCreatedAPI","saveProduct","apiProduct","newAPI","save","loading","pageTitle","mt","isNotPublisher","restApi","promisedAPIRevision","createRevision","api1","revisionId","envList","environment","env","body1","internalGateways","provider","getFirstVhost","envName","e","vhosts","host","displayOnDevportal","vhost","promisedDeployment","deployRevision","promisedPublish","publish","workflowStatus","WORKFLOW_STATUS","CREATED","to","withRouter","injectIntl","styles","flexGrow","APICreateRoutes","APIProductCreateWrapper","ApiCreateGraphQL","ApiCreateSwagger","ApiCreateWSDL","ApiCreateWebSocket","APICreateStreamingAPI","APICreateAsyncAPI","ResourceNotFound","withStyles","Paper","saveButton","titleWrapper","flexDirection","paddingBottom","alternativeLabel","ApiProductCreateWrapper","useIntl","wizardStep","setWizardStep","useAppContext","setPolicies","setCreating","steps","createAPIProduct","activeStep","step","createProductRevision","deployProductRevision","updateLcState","APICreateProductBase","apiInputsReducer","endpoints","ApiCreateOpenAPI","handleOnValidate","importOpenAPIByFile","importOpenAPIByUrl","mb","href","importByUrl","importByFileOrArchive","useHistory","marginBottom","newApi","importGraphQL","uuid","apiType","useParams","isWebSub","asyncAPIPolicies","policyName","protocolKeys","WebSocket","SSE","WebSub","setHideEndpoint","isAPICreatable","handleOnChange","protocol","endpointType","saveStreamingAPI","endpointPlaceholderText","select","WS","WEBSUB","SelectProps","multiple","renderValue","selected","displayName","disableGutters","streamingApi","ApiCreateAsyncAPI","hideExternalEndpoint","setHideExternalEndpoint","isValidExternalEndpoint","setValidExternalEndpoint","asyncTransportProtocols","Other","validateEndpoint","Joi","uri","empty","lg","upperCaseString","externalEndpoint","advertiseInfo","advertised","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","originalDevPortalUrl","apiOwner","vendor","importAsyncAPIByFile","importAsyncAPIByUrl","externalEndpointWarning","alertTitle","typography","fontWeightMedium","ExternalEndpoint","LinearProgress","ref","_props$color","valueBuffer","_props$variant","other","rootProps","inlineStyles","bar1","bar2","round","transform","concat","_transform","determinate","indeterminate","buffer","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","backgroundPrimary","backgroundSecondary","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","AlertTitle","spectralFunctions","spectralSeverityMap","0","1","2","3","spectralSeverityNames","swagger","validationResults","defaultRuleSet","extends","rules","linter","setRuleset","run","customRuleset","getLinterCustomRules","LinterCustomRuleset","parsedCustomRuleset","Error","stack","sort","b","bytesParam","si","bytes","thresh","abs","units","u","toFixed","baseStyle","borderWidth","borderColor","borderStyle","outline","activeStyle","acceptStyle","rejectStyle","DropZoneLocal","dropZoneObject","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","containerStyles","fontFamily","textAlign","showFilesList","bool","oneOfType"],"mappings":"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","file":"APICreateRoutes.310c9f26f66207b7d6e3.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @param isWebSocket check whether it is a webSocketAPI\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }, isWebSocket) {\n    let initialContext;\n    // eslint-disable-next-line no-unused-expressions\n    isWebSocket ? (initialContext = '{channel}/{version}') : (initialContext = '{context}/{version}');\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    let tenant;\n    const user = AuthManager.getUser();\n    if (user.name && user.name.indexOf('@') !== -1) {\n        tenant = user.name.split('@')[user.name.split('@').length - 1];\n    }\n    let contextVal = value.startsWith('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    if (tenant !== null && tenant !== undefined && tenant !== 'carbon.super') {\n        contextVal = '/t/' + tenant + contextVal.toLowerCase();\n    }\n    if (\n        result.find(\n            (x) =>\n                x.context.toLowerCase() === contextVal.toLowerCase() ||\n                x.contextTemplate.toLowerCase() === contextVal.toLowerCase(),\n        ) !== undefined\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket, children, appendChildrenBeforeEndpoint, hideEndpoint,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name?.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                let contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.startsWith('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    const splitContext = apiContext.split('/');\n                    for(const param of splitContext) {\n                        if (param !== null && param !== '{version}') {\n                            if (param.includes('{version}')) {\n                                contextValidity = APIValidation.apiContextWithoutKeyWords.required()\n                                    .validate(value, { abortEarly: false }).error;\n                                updateValidity({\n                                    ...validity,\n                                    // eslint-disable-next-line max-len\n                                    context: { details: [{ message: '{version} cannot exist as a substring in a path param' }] },\n                                });\n                            } else if (param.includes('{') || param.includes('}')) {\n                                contextValidity = APIValidation.apiContextWithoutKeyWords.required()\n                                    .validate(value, { abortEarly: false }).error;\n                                updateValidity({\n                                    ...validity,\n                                    // eslint-disable-next-line max-len\n                                    context: { details: [{ message: '{ or } cannot exist as a substring in a path param' }] },\n                                });\n                            }\n                        }\n                    }\n\n                    let charCount = 0;\n\n                    if (contextValidity === null) {\n                        for (const a of apiContext) {\n                            if (a === '(') {\n                                charCount++;\n                            } else if (a === ')') {\n                                charCount--;\n                            }\n                            if (charCount < 0) {\n                                updateValidity({\n                                    ...validity,\n                                    // eslint-disable-next-line max-len\n                                    context: { details: [{ message: 'Parentheses should be balanced in API context' }] },\n                                });\n                            }\n                        }\n\n                        if(charCount > 0) {\n                            updateValidity({\n                                ...validity,\n                                // eslint-disable-next-line max-len\n                                context: { details: [{ message: 'Parentheses should be balanced in API context' }] },\n                            });\n                        }\n                    }\n\n                    if(contextValidity===null && charCount===0) {\n                        APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                            const count = result.body.list.length;\n                            if (count > 0 && checkContext(value, result.body.list)) {\n                                updateValidity({\n                                    ...validity,\n                                    // eslint-disable-next-line max-len\n                                    context: { details: [{ message:  isWebSocket ? apiContext + ' channel already exists' : apiContext + ' context already exists' }] },\n                                });\n                            } else if (count > 0 && checkContext(value, result.body.list)) {\n                                updateValidity({\n                                    ...validity,\n                                    context: { details: [{ message: apiContext + ' dynamic context already exists' }] },\n                                });\n                            } else {\n                                updateValidity({ ...validity, context: contextValidity, version: null });\n                            }\n                        });\n                    }\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                updateValidity({ ...validity, version: versionValidity });\n                break;\n            }\n            case 'endpoint': {\n                if (isWebSocket && value && value.length > 0) {\n                    const wsUrlValidity = APIValidation.wsUrl.validate(value).error;\n                    updateValidity({ ...validity, endpointURL: wsUrlValidity });\n                }\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='api-name'\n                    error={Boolean(validity.name)}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    InputLabelProps={{\n                        for: 'itest-id-apiname-input',\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            {isWebSocket ? (\n                                                <FormattedMessage\n                                                    id='Apis.Create.Components.DefaultAPIForm.api.channel'\n                                                    defaultMessage='Channel'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                    defaultMessage='Context'\n                                                />\n                                            )}\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apicontext-input',\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        // eslint-disable-next-line max-len\n                                        || `API will be exposed in ${actualContext(api, isWebSocket)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='version'\n                                    error={Boolean(validity.version)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apiversion-input',\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div\n                                                        key={detail.message}\n                                                        style={{ marginTop: index !== 0 && '10px' }}\n                                                    >\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {appendChildrenBeforeEndpoint && !!children && children}\n                {!isAPIProduct && !hideEndpoint && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            (validity.endpointURL\n                                && validity.endpointURL.details.map((detail, index) => {\n                                    return (\n                                        <div style={{ marginTop: index !== 0 && '10px' }}>\n                                            {detail.message}\n                                        </div>\n                                    );\n                                }))\n                        }\n                        error={Boolean(validity.endpointURL)}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                validate('endpoint', value);\n                            },\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                        check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                {!appendChildrenBeforeEndpoint && !!children && children}\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\n                        Mandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={false} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport API from 'AppData/api';\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of a Scopes\n */\nclass Wsdl extends Resource {\n    /**\n     * Validate a WSDL file or an archive\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateFileOrArchive(file) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        const requestBody = {\n            requestBody: {\n                file,\n            },\n        };\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition(null, requestBody);\n        });\n    }\n\n    /**\n     * Validate a WSDL URL\n     *\n     * @static\n     * @param {*} url WSDL URL\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateUrl(url) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition(\n                {},\n                {\n                    requestBody: { url },\n                },\n            );\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} url WSDL url\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByUrl(url, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition(\n                {},\n                {\n                    requestBody: {\n                        url,\n                        additionalProperties: JSON.stringify(additionalProperties),\n                        implementationType,\n                    },\n                },\n            );\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByFileOrArchive(file, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition(\n                null,\n                {\n                    requestBody: {\n                        file,\n                        additionalProperties: JSON.stringify(additionalProperties),\n                        implementationType,\n                    },\n                },\n            );\n\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n}\n\nexport default Wsdl;\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { spectralSeverityMap as severityMap} from '../Linting/Linting'\n\nconst useStyles = makeStyles((theme) => ({\n\n    tableCell: {\n        border: 'none',\n        fontSize: '10px !important',\n    },\n    headerTableCell: {\n        background: 'transparent',\n        fontSize: 10,\n        fontWeight: 'bold',\n        border: 'none',\n    },\n    tableRow: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        cursor: 'pointer',\n    },\n    tableWrapper: {\n        '& table tr td:first-child': {\n            width: 10,\n        },\n        '& table tr td:nth-child(2)': {\n            width: 10,\n        },\n    },\n    headerTableRow: {\n        display: 'flex',\n    }\n\n}));\n\nexport default function LinterUI(props) {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const { linterResults, handleRowClick } = props;\n    const classes = useStyles();\n\n    function getData(type, line, message, code) {\n        return { type, line, message, code};\n    }\n\n    const columns = [\n        { id: 'type',\n            label: 'Type',\n            minWidth: 50,\n        },\n        { id: 'line',\n            label: 'Line',\n            minWidth: 50\n        },\n        {\n            id: 'message',\n            label: 'Message',\n            minWidth: 170,\n            align: 'left',\n        },\n    ];\n\n    const  rows = linterResults.map((item, index) => getData(\n            severityMap[item.severity],\n            item.range.start.line + 1, \n            item.message,\n            index,\n    ));\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }} className={classes.tableWrapper}>\n                <Table stickyHeader aria-label='linter-table'>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    className={classes.headerTableCell}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row) => {\n                                return (\n                                    <TableRow\n                                        key={row.code}\n                                        className={classes.tableRow}\n                                        onClick={() => handleRowClick(row.line)}\n                                    >\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell\n                                                    key={column.id}\n                                                    align={column.align}\n                                                    className={classes.tableCell}>\n                                                    {column.format && typeof value === 'number'\n                                                        ? column.format(value)\n                                                        : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component='div'\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    ISpectralDiagnostic,\n} from '@stoplight/spectral-core';\nimport { oas } from '@stoplight/spectral-rulesets';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { spectralSeverityMap, spectralSeverityNames } from \"./Linting\"\nimport { Grid, Tooltip, Typography } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n// TODO tmkasun: Possible to extend AsyncAPI rule set as well\nconst defaultRuleSet = { extends: [oas], rules: {} };\ntype APILintingProps = {\n    linterResults: ISpectralDiagnostic[],\n    handleChange: Function,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    activeButton: {\n        \"&:selected\": {\n            backgroundColor: theme.palette.background.default,\n        }\n    }\n}));\nexport const APILintingSummary = (props: APILintingProps) => {\n    const { linterResults, handleChange } = props;\n    const classes = useStyles();\n    const [selectedSeverity, setSelectedSeverity] = useState(null);\n    const severityCounts: { [key: number]: number } = {};\n    \n    if (linterResults) {\n        linterResults.forEach(({ severity }) => {\n            severityCounts[severity] = severityCounts[severity] + 1 || 1;\n        });\n    }\n    \n    return (\n        <Box ml={3}>\n            {linterResults === null && (\n                <FormattedMessage\n                    id=\"Apis.Details.APIDefinition.Linting.APILintingSummary.loading\"\n                    defaultMessage=\"Linting . . .\"\n                />\n            )}\n            {linterResults && (\n                <Tooltip title={\n                    Object.entries(spectralSeverityNames).map(([severity, name]) => {\n                        return `${name}:${severityCounts[Number(severity)]||0}${(Number(severity) !== 3) ? \", \": \"\"}` || '-';\n                    })\n                }>\n                    <ToggleButtonGroup\n                        exclusive\n                        value={selectedSeverity}\n                        size=\"small\"\n                        onChange={(event, value) => { \n                            setSelectedSeverity(value);\n                            handleChange(event, value) }}>\n                        {Object.entries(spectralSeverityMap).map(([severity, component]) => (\n                            <ToggleButton\n                                key={Math.random()}\n                                value={String(severity)}\n                            >\n                                <Box ml={1} display=\"flex\">\n                                    {component}\n                                    <Grid item>\n                                        <Box maxWidth='2rem'>\n                                            <Typography noWrap>\n                                                &nbsp;{severityCounts[Number(severity)] || 0}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                </Box>\n                            </ToggleButton>\n                        ))}\n                    </ToggleButtonGroup>\n                </Tooltip>\n            )}\n        </Box>\n    );\n};\nexport default APILintingSummary;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport queryString from 'query-string';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport cloneDeep from 'lodash.clonedeep';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport MethodView from 'AppComponents/Apis/Details/ProductResources/MethodView';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport CONSTS from 'AppData/Constants';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        padding: 0,\n        marginTop: theme.spacing(1),\n        '& input': {\n            padding: '12px 14px',\n        },\n        display: 'flex',\n    },\n    paper: {\n        height: '100%',\n        borderRadius: 0,\n    },\n    apiWrapper: {\n        overflowY: 'auto',\n        height: 349,\n    },\n    ResourceWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        '& .frame': {\n            overflowY: 'auto',\n            height: 328,\n            border: '1px solid ' + theme.palette.grey[400],\n            borderRadius: theme.spacing(1),\n        },\n        '& .frame::-webkit-scrollbar': {\n            '-webkit-appearance': 'none',\n        },\n        '& .frame::-webkit-scrollbar:vertical': {\n            width: 11,\n        },\n        '& .frame::-webkit-scrollbar:horizontal': {\n            height: 11,\n        },\n        '& .frame::-webkit-scrollbar-thumb': {\n            borderRadius: theme.spacing(1),\n            border: '2px solid' + theme.palette.common.white,\n            backgroundColor: theme.palette.grey[400],\n        },\n        '& .frame.rightFrame': {\n            height: 369,\n        },\n    },\n    SelectedResourceWrapper: {\n        overflowY: 'auto',\n        overflowX: 'auto',\n        height: 321,\n    },\n    leftMost: {\n        background: theme.palette.grey[700],\n        color: theme.palette.getContrastText(theme.palette.grey[700]),\n        padding: theme.spacing(1),\n    },\n    rightMost: {\n        background: theme.palette.grey[600],\n        color: theme.palette.getContrastText(theme.palette.grey[600]),\n        padding: theme.spacing(1),\n    },\n    colTitle: {\n        background: theme.palette.grey[400],\n        color: theme.palette.getContrastText(theme.palette.grey[400]),\n        padding: theme.spacing(1),\n        fontWeight: 200,\n        minHeight: 25,\n    },\n    treeItemMain: {\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: theme.spacing(1),\n    },\n    treeItemMainWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    treeItem: {\n        '& .material-icons': {\n            fontSize: theme.spacing(2),\n            cursor: 'pointer',\n            marginRight: theme.spacing(1),\n        },\n        display: 'flex',\n        alignItems: 'center',\n        padding: '6px 0',\n    },\n    hr: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n    },\n    methodView: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    middleText: {\n        flex: 1,\n    },\n    selectedApi: {\n        background: theme.palette.grey[100],\n    },\n    selectedTitle: {\n        padding: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(2),\n        textDecorate: 'none',\n    },\n    selectedApiDescription: {\n        padding: '0px 16px',\n    },\n    messageWrapper: {\n        padding: theme.spacing(3),\n    },\n    tootBar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: '0 16px',\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: 5,\n        borderRadius: 5,\n        '& a': {\n            cursor: 'pointer',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n    },\n    inactiveIcon: {\n        color: theme.palette.grey[300],\n    },\n}));\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n    PATCH: 'patch',\n    OPTIONS: 'options',\n    HEAD: 'head',\n};\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction ProductResourcesEdit(props) {\n    const classes = useStyles();\n    const {\n        apiResources, setApiResources, isStateCreate, api, resourceNotFountMessage,\n    } = props;\n\n    // Define states\n    const [allApis, setAllApis] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    const [selectedApiPaths, setSelectedApiPaths] = useState([]);\n    const [selectedApi, setSelectedApi] = useState(null);\n    const [fromSearch, setFromSearch] = useState(false);\n    // Initialize the rest api libraries\n    const apiRestClient = new API();\n\n    /**\n     * This method is filtering apis base on the searchText entered. In no searchText provided it will give all apis.\n     *\n     * @param {*} [text=null]\n     * @returns a promise\n     */\n    const filterAPIs = (text = null) => {\n        if (text) {\n            // Build the search query and update\n            const inputValue = text.trim().toLowerCase();\n            const composeQuery = '?query=name:' + inputValue + ' type:HTTP';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            // TODO we need to make the limit and offset changeable from the UI ( paggination )\n            composeQueryJSON.limit = 100;\n            composeQueryJSON.offset = 0;\n            return API.search(composeQueryJSON);\n        } else {\n            return API.all({\n                query: {\n                    type: 'HTTP',\n                },\n            });\n        }\n    };\n\n    const isValidHttpVerb = (innerKey) => {\n        if (innerKey === resourceMethod.DELETE || innerKey === resourceMethod.POST\n                || innerKey === resourceMethod.GET || innerKey === resourceMethod.PUT\n                || innerKey === resourceMethod.PATCH || innerKey === resourceMethod.OPTIONS\n                || innerKey === resourceMethod.HEAD) {\n            return true;\n        }\n        return false;\n    };\n\n    const addPropsToSelectedApiPaths = (paths, apiId, latestApiResources = apiResources) => {\n        /* Add checked field to each resource object */\n        Object.keys(paths).map((key) => {\n            const methodObj = paths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if (isValidHttpVerb(innerKey)) {\n                    methodObj[innerKey].checked = false;\n\n                    // We need to check the latestApiResources for the same\n                    // API/Resource Name / Verb and  indicate it differently\n                    // Loop latestApiResources object\n                    const target = key;\n                    const verb = innerKey;\n                    let resourceFound = false;\n                    if (latestApiResources) {\n                        Object.keys(latestApiResources).map((resourcekey) => {\n                            const apiResource = latestApiResources[resourcekey];\n\n                            // Check if the the api slected from UI is same as the operation api id checking\n                            if (apiResource && apiId === apiResource.apiId) {\n                                // API is the same\n                                Object.keys(apiResource.operations).map((operationKey) => {\n                                    const operation = apiResource.operations[operationKey];\n                                    if (\n                                        operation\n                                        && operation.target === target\n                                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                                    ) {\n                                        // Operation is already there\n                                        resourceFound = true;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    if (resourceFound) {\n                        methodObj[innerKey].allreadyAdded = true;\n                    } else {\n                        methodObj[innerKey].allreadyAdded = false;\n                    }\n                }\n            });\n        });\n        setSelectedApiPaths(paths);\n    };\n\n    // Get the api swagger after an api is selected\n    const getApiSwagger = (apiSelected) => {\n        const { id } = apiSelected;\n        const promisedAPI = apiRestClient.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    addPropsToSelectedApiPaths(response.obj.paths, id);\n                    setSelectedApi(apiSelected);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n    const handleSearchTextChange = (event) => {\n        const apiPromise = filterAPIs(event.target.value);\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.status !== 'PROTOTYPED');\n                if (filteredList.length > 0) {\n                    setSelectedApi(list[0]);\n                }\n                setAllApis(filteredList);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n        setSearchText(event.target.value);\n        setFromSearch(event.target.value);\n    };\n    const updateResourceTree = (resourceToAdd, action, inputApiResources = null) => {\n        let updateStateHere = false;\n        let newApiResources = null;\n        if (!inputApiResources) {\n            // If a copy of the state variable is not passed from the calling method we\n            // have to make a copy inside here before doing modifications to that\n            newApiResources = cloneDeep(apiResources);\n            updateStateHere = true;\n        } else {\n            newApiResources = inputApiResources;\n        }\n        const {\n            target, verb, apiId, name, version,\n        } = resourceToAdd;\n        const newResource = {\n            id: null,\n            target,\n            verb: verb.toUpperCase(),\n            authType: null,\n            throttlingPolicy: null,\n            scopes: [],\n        };\n        let apiFound = false;\n\n        // Loop copy of apiResources object\n        Object.keys(newApiResources).map((key, indexA) => {\n            const apiResource = newApiResources[key];\n\n            // Check if the the api slected from UI is same as the operation api id trying to remove.\n            if (apiResource && apiId === apiResource.apiId) {\n                apiFound = true;\n                let operationFound = false;\n                Object.keys(apiResource.operations).map((innerKey, indexB) => {\n                    const operation = apiResource.operations[innerKey];\n                    if (\n                        operation\n                        && operation.target === target\n                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                    ) {\n                        // Operation is already there\n                        operationFound = true;\n                        if (action === 'remove') {\n                            if (apiResource.operations.length > 1) {\n                                apiResource.operations.splice(indexB, 1);\n                            } else {\n                                newApiResources.splice(indexA, 1);\n                            }\n                        }\n                    }\n                });\n                // Operation not added .. so we need to add that\n                if (!operationFound && action === 'add') {\n                    apiResource.operations.push(newResource);\n                }\n            }\n        });\n\n        if (!apiFound) {\n            // Add api object\n            newApiResources.push({\n                name,\n                apiId,\n                operations: [newResource],\n                version,\n            });\n        }\n        // When we are adding the resources in a loop we do not care about the return but we simply set the state here.\n        if (updateStateHere) {\n            setApiResources(newApiResources);\n            // We need to call this in order to set other properties\n            if (apiId === selectedApi.id) {\n                addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), apiId, newApiResources);\n            }\n        }\n        return newApiResources;\n    };\n\n    const updateCheckBox = (key, innerKey) => {\n        // we need to copy the object from the state and modify it before set it to the state\n        const prevSelectedApiPaths = { ...selectedApiPaths };\n\n        // Now we inverse the checked value\n        prevSelectedApiPaths[key][innerKey].checked = !prevSelectedApiPaths[key][innerKey].checked;\n\n        // Then we set state\n        setSelectedApiPaths(prevSelectedApiPaths);\n    };\n    const addSelectedResourcesToTree = (addAll = false) => {\n        /* Add checked field to each resource object */\n        const newApiResources = cloneDeep(apiResources);\n        Object.keys(selectedApiPaths).map((key) => {\n            const methodObj = selectedApiPaths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if ((methodObj[innerKey].checked || addAll) && isValidHttpVerb(innerKey)) {\n                    // We need to add this to apiResources array\n                    updateResourceTree(\n                        {\n                            target: key,\n                            verb: innerKey,\n                            apiId: selectedApi.id,\n                            name: selectedApi.name,\n                            version: selectedApi.version,\n                        },\n                        'add',\n                        newApiResources,\n                    );\n                }\n            });\n        });\n        setApiResources(newApiResources);\n        addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), selectedApi.id, newApiResources);\n    };\n    useEffect(() => {\n        // Get all apis\n        const apiPromise = filterAPIs();\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.lifeCycleStatus !== 'PROTOTYPED' &&\n                    theApi.lifeCycleStatus !== 'RETIRED' && theApi.lifeCycleStatus !== 'DEPRECATED'\n                );\n\n                setAllApis(filteredList);\n                if (filteredList.length > 0) {\n                    setSelectedApi(filteredList[0]);\n                    getApiSwagger(filteredList[0]);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n    return (\n        <>\n            {allApis.length === 0 && !fromSearch ? (\n                <Grid container>\n                    <Typography className={classes.messageWrapper}>\n                        <FormattedMessage\n                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.ApisnotFound'\n                            defaultMessage='No REST APIs are created yet'\n                        />\n                    </Typography>\n                </Grid>\n            ) : (\n                <>\n                    {!isStateCreate && (\n                        <Grid container>\n                            <>\n                                <Grid item xs={8} className={classes.leftMost}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.find.and.select'\n                                            defaultMessage='Find and select resources for the API Product'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4} className={classes.rightMost}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.selected'\n                                            defaultMessage='Selected resources of API Product'\n                                        />\n                                    </Typography>\n                                </Grid>\n                            </>\n                        </Grid>\n                    )}\n                    <Grid container>\n                        {/* ************************************************ */}\n                        {/* 1st column API search and select column          */}\n                        {/* ************************************************ */}\n                        <Grid item xs={3}>\n                            <div className={classes.colTitle}>\n                                <Typography>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.select.an.api'\n                                        defaultMessage='Select an API'\n                                    />\n                                </Typography>\n                            </div>\n                            <Paper>\n                                <div className={classes.searchWrapper}>\n                                    <TextField\n                                        id='outlined-full-width'\n                                        label='API'\n                                        style={{ margin: 8 }}\n                                        placeholder='Filter APIs'\n                                        helperText='Filter by name'\n                                        onChange={handleSearchTextChange}\n                                        value={searchText}\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </div>\n                                <div className={classes.apiWrapper}>\n                                    <List dense component='nav'>\n                                        {allApis.map((apiObj) => {\n                                            const labelId = `checkbox-list-label-${apiObj.id}`;\n\n                                            return (\n                                                <ListItem\n                                                    key={apiObj.id}\n                                                    role={undefined}\n                                                    dense\n                                                    button\n                                                    className={\n                                                        selectedApi\n                                                        && apiObj.id === selectedApi.id\n                                                        && classes.selectedApi\n                                                    }\n                                                >\n                                                    <ListItemText\n                                                        id={labelId}\n                                                        primary={apiObj.name}\n                                                        secondary={`${apiObj.version} - ${apiObj.context}`}\n                                                        onClick={() => getApiSwagger(apiObj)}\n                                                    />\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* 2nd column Resource Selection                    */}\n                        {/* ************************************************ */}\n                        <Grid item xs={5}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.api.resources'\n                                            defaultMessage='Select API Resources'\n                                        />\n                                    </Typography>\n                                </div>\n                                {selectedApi && (\n                                    <Typography variant='h5' component='h2' className={classes.selectedTitle}>\n                                        {selectedApi.name}\n                                    </Typography>\n                                )}\n                                <div className={classes.tootBar}>\n                                    <Button\n                                        onClick={() => addSelectedResourcesToTree()}\n                                        onKeyDown={() => addSelectedResourcesToTree()}\n                                        id='add-selected-resources'\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                        toolbar.add.selected'\n                                                defaultMessage='Add Selected'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </Button>\n                                    <VerticalDivider />\n                                    <Button\n                                        onClick={() => addSelectedResourcesToTree(true)}\n                                        onKeyDown={() => addSelectedResourcesToTree(true)}\n                                        id='add-all-resources-btn'\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.toolbar.\n                                                add.all'\n                                                defaultMessage='Add All'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </Button>\n                                </div>\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame'>\n                                        <List dense id='resource-wrapper'>\n                                            {Object.keys(selectedApiPaths).map((key) => {\n                                                const path = selectedApiPaths[key];\n                                                const labelId = `checkbox-list-label_${key}`;\n                                                return Object.keys(path).map((innerKey) => {\n                                                    const methodObj = path[innerKey];\n                                                    return (\n                                                        CONSTS.HTTP_METHODS.includes(innerKey) && (\n                                                            <ListItem\n                                                                key={`${innerKey} - ${key}`}\n                                                                role={undefined}\n                                                                dense\n                                                            >\n                                                                <ListItemIcon style={{ minWidth: 35 }}>\n                                                                    <Checkbox\n                                                                        edge='start'\n                                                                        checked={methodObj.checked}\n                                                                        tabIndex={-1}\n                                                                        disableRipple\n                                                                        onChange={() => updateCheckBox(key, innerKey)}\n                                                                        color='primary'\n                                                                        disabled={methodObj.allreadyAdded}\n                                                                        inputProps={\n                                                                            {\n                                                                                'aria-label': 'Select API resource',\n                                                                            }\n                                                                        }\n                                                                    />\n                                                                </ListItemIcon>\n                                                                <ListItemText\n                                                                    id={labelId + innerKey}\n                                                                    primary={(\n                                                                        <div>\n                                                                            <MethodView\n                                                                                method={innerKey}\n                                                                                className={classes.methodView}\n                                                                            />\n                                                                            <span>{key}</span>\n                                                                        </div>\n                                                                    )}\n                                                                    secondary={\n                                                                        methodObj['x-auth-type']\n                                                                    && methodObj['x-throttling-tier']\n                                                                    && `${methodObj['x-auth-type']} - ${\n                                                                        methodObj['x-throttling-tier']\n                                                                    }`\n                                                                    }\n                                                                    onClick={() => updateResourceTree(\n                                                                        {\n                                                                            target: key,\n                                                                            verb: innerKey,\n                                                                            apiId: selectedApi.id,\n                                                                            name: selectedApi.name,\n                                                                            version: selectedApi.version,\n                                                                        },\n                                                                        'add',\n                                                                    )}\n                                                                    className={classes.middleText}\n                                                                />\n                                                                <ListItemSecondaryAction>\n                                                                    {methodObj.allreadyAdded && (\n                                                                        <Icon className={classes.inactiveIcon}>\n                                                                            chevron_right\n                                                                        </Icon>\n                                                                    )}\n                                                                    {!methodObj.allreadyAdded && (\n                                                                        <IconButton\n                                                                            edge='end'\n                                                                            aria-label='comments'\n                                                                            onClick={() => updateResourceTree(\n                                                                                {\n                                                                                    target: key,\n                                                                                    verb: innerKey,\n                                                                                    apiId: selectedApi.id,\n                                                                                    name: selectedApi.name,\n                                                                                    version: selectedApi.version,\n                                                                                },\n                                                                                'add',\n                                                                            )}\n                                                                        >\n                                                                            <Icon>chevron_right</Icon>\n                                                                        </IconButton>\n                                                                    )}\n                                                                </ListItemSecondaryAction>\n                                                            </ListItem>\n                                                        )\n                                                    );\n                                                });\n                                            })}\n                                        </List>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* Third column with  selected resources            */}\n                        {/* ************************************************ */}\n                        <Grid item xs={4}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle} />\n                                {api.name && (\n                                    <>\n                                        <Typography variant='h5' component='h2' className={classes.selectedTitle}>\n                                            {api.name}\n                                        </Typography>\n                                    </>\n                                )}\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame rightFrame'>\n                                        {allApis.length > 0 && apiResources && apiResources.length === 0 && (\n                                            <div className={classes.messageWrapper}>\n                                                <Typography component='p'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                                    empty.title'\n                                                        defaultMessage='Use the left side panel to add resources'\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        )}\n                                        {apiResources\n                                        && apiResources.length > 0\n                                        && Object.keys(apiResources).map((key) => {\n                                            const apiResource = apiResources[key];\n                                            return (\n                                                <div key={apiResource.name}>\n                                                    <div className={classes.treeItemMain}>\n                                                        <Typography component='p'>\n                                                            {apiResource.name}\n                                                            {' - '}\n                                                            {apiResource.version}\n                                                        </Typography>\n                                                    </div>\n                                                    <div className={classes.treeItemMainWrapper}>\n                                                        {Object.keys(apiResource.operations).map((innerKey) => {\n                                                            const operation = apiResource.operations[innerKey];\n                                                            const { target, verb } = operation;\n                                                            return (\n                                                                <div\n                                                                    key={`${apiResource.apiId}_${verb}_${target}`}\n                                                                    className={classes.treeItem}\n                                                                >\n                                                                    <MethodView\n                                                                        method={verb}\n                                                                        className={classes.methodView}\n                                                                    />\n                                                                    <Typography variant='body2'>{target}</Typography>\n                                                                    <hr className={classes.hr} />\n                                                                    <IconButton\n                                                                        onClick={() => updateResourceTree(\n                                                                            {\n                                                                                target,\n                                                                                verb,\n                                                                                apiId: apiResource.apiId,\n                                                                                name: apiResource.name,\n                                                                                version: apiResource.version,\n                                                                            },\n                                                                            'remove',\n                                                                        )}\n                                                                        aria-label={\n                                                                            'delete resource ' + apiResource.name\n                                                                        }\n                                                                    >\n                                                                        <Icon>\n                                                                            delete\n                                                                        </Icon>\n                                                                    </IconButton>\n                                                                </div>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </>\n    );\n}\nProductResourcesEdit.propTypes = {\n    apiResources: PropTypes.instanceOf(Array).isRequired,\n    setApiResources: PropTypes.func.isRequired,\n    isStateCreate: PropTypes.isRequired,\n    api: PropTypes.isRequired,\n    resourceNotFountMessage: PropTypes.string.isRequired,\n};\nexport default ProductResourcesEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\nimport Configurations from 'Config';\n\nfunction MethodView(props) {\n    console.info(Configurations.app);\n    const theme = useTheme();\n    const { method, className } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method.toLowerCase()] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method.toLowerCase()]);\n    }\n    return (\n        <Chip\n            label={method}\n            className={className || ''}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, width: 65,\n            }}\n        />\n    );\n}\nMethodView.propTypes = {\n    className: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n};\n\nexport default MethodView;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport APIValidation from 'AppData/APIValidation';\nimport Wsdl from 'AppData/Wsdl';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using WSDL UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using WSDL wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideWSDL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const isGenerateRESTAPI = apiInputs.type === 'SOAPTOREST';\n    const classes = useStyles();\n    const [isError, setValidity] = useState(); // If valid value is `null` else an error object will be there\n    const [isValidating, setIsValidating] = useState(false);\n    const isCreateMode = apiInputs.mode === 'create';\n\n    /**\n     * Handles WSDL validation response and returns the state.\n     *\n     * @param {*} response WSDL validation response\n     * @param {string} type of the input; file or url\n     * @returns {boolean} validation status\n     */\n    function handleWSDLValidationResponse(response, type) {\n        const isWSDLValid = response.body.isValid;\n        let success = false;\n        if (isWSDLValid) {\n            if (type === 'file') {\n                setValidity({ ...isError, file: null });\n            } else {\n                setValidity({ ...isError, url: null });\n            }\n            success = true;\n        } else if (type === 'file') {\n            setValidity({ ...isError, file: { message: 'WSDL content validation failed!' } });\n        } else {\n            setValidity({ ...isError, url: { message: 'Invalid WSDL URL!' } });\n        }\n        onValidate(isWSDLValid);\n        setIsValidating(false);\n        return success;\n    }\n\n    /**\n     * Handles WSDL validation error response.\n     *\n     * @param error {*} error object\n     * @param type {string} file/url type\n     */\n    function handleWSDLValidationErrorResponse(error, type) {\n        let message = 'Error occurred during validation';\n        if (error.response && error.response.body.description) {\n            message = error.response.body.description;\n        }\n        if (type === 'file') {\n            setValidity({ ...isError, file: { message } });\n        } else {\n            setValidity({ ...isError, url: { message } });\n        }\n        setIsValidating(false);\n    }\n\n    /**\n     * Trigger the onValidate call back after validating WSDL url from the state.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object\n     */\n    function validateUrl(state) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateUrl(apiInputs.inputValue).then((response) => {\n                handleWSDLValidationResponse(response, 'url');\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'url');\n            });\n        } else {\n            setValidity({ ...isError, url: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate callback after validating the provided WSDL file.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {*} file WSDL file or archive\n     * @param {Object} state Validation state object\n     */\n    function validateFileOrArchive(file, state = null) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateFileOrArchive(file).then((response) => {\n                if (handleWSDLValidationResponse(response, 'file')) {\n                    inputsDispatcher({ action: 'inputValue', value: file });\n                }\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'file');\n            });\n        } else {\n            setValidity({ ...isError, file: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        // Why `files[0]` below is , We only handle one wsdl file at a time, So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        validateFileOrArchive(files[0]);\n    }\n\n    /**\n     *  Render uploaded WSDL schema list\n     */\n    function renderUploadedList() {\n        return (\n            <List>\n                <ListItem key={apiInputs.inputValue.path}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <InsertDriveFile />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={`${apiInputs.inputValue.path} - ${humanFileSize(apiInputs.inputValue.size)}`}\n                    />\n                    <ListItemSecondaryAction>\n                        <IconButton\n                            edge='end'\n                            aria-label='delete'\n                            onClick={() => {\n                                inputsDispatcher({ action: 'inputValue', value: null });\n                                inputsDispatcher({ action: 'isFormValid', value: false });\n                            }}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        );\n    }\n\n    const dropBoxControlLabel = isGenerateRESTAPI ? (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.dropzone'\n            defaultMessage='Drag & Drop WSDL file {break} -or-'\n            values={{ break: <br /> }}\n        />\n    ) : (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.archive.dropzone'\n            defaultMessage='Drag & Drop WSDL file/archive {break} -or-'\n            values={{ break: <br /> }}\n        />\n    );\n\n    /**\n     * Render file upload UI.\n     *\n     */\n    function renderFileUpload() {\n        if (apiInputs.inputValue) {\n            return renderUploadedList();\n        }\n        // TODO: Pass message saying accepting only one file ~tmkb\n        return (\n            <DropZoneLocal\n                error={isError && isError.file}\n                onDrop={onDrop}\n                files={apiInputs.inputValue}\n                accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.wsdl'\n            >\n                {isValidating ? (<CircularProgress />)\n                    : (\n                        <>\n                            { dropBoxControlLabel }\n                            <Button\n                                color='primary'\n                                variant='contained'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.upload'\n                                    defaultMessage='Browse File to Upload'\n                                />\n                            </Button>\n                        </>\n                    )}\n            </DropZoneLocal>\n        );\n    }\n\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isError && isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <ErrorOutlineIcon fontSize='large' color='error' />\n            </InputAdornment>\n        );\n    } else if (isError && !isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CheckIcon fontSize='large' color='primary' />\n            </InputAdornment>\n        );\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                {isCreateMode\n                && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.implementation.type'\n                                        defaultMessage='Implementation Type'\n                                    />\n                                </>\n                            </FormLabel>\n                            <RadioGroup\n                                aria-label='Implementation type'\n                                value={apiInputs.type ? apiInputs.type : 'SOAP'}\n                                onChange={\n                                    (event) => {\n                                        inputsDispatcher({ action: 'type', value: event.target.value });\n                                        inputsDispatcher({ action: 'isFormValid', value: false });\n                                        inputsDispatcher({ action: 'inputValue', value: null });\n                                        inputsDispatcher({ action: 'inputType', value: 'url' });\n                                    }\n                                }\n                            >\n                                <FormControlLabel\n                                    value='SOAP'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.passthrough.label'\n                                            defaultMessage='Pass Through'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='SOAPTOREST'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.SOAPtoREST.label'\n                                            defaultMessage='Generate REST APIs'\n                                        />\n                                    )}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                )}\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value='url'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.url.label'\n                                        defaultMessage='WSDL URL'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='file'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.file.label.wsdl.file.archive'\n                                        defaultMessage='WSDL File/Archive'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isError && isError.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isError.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {isFileInput ? renderFileUpload()\n                        : (\n                            <TextField\n                                autoFocus\n                                id='outlined-full-width'\n                                label='WSDL URL'\n                                placeholder='Enter WSDL URL'\n                                fullWidth\n                                margin='normal'\n                                variant='outlined'\n                                onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                                value={apiInputs.inputValue}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    onBlur: ({ target: { value } }) => {\n                                        validateUrl(APIValidation.url.required().validate(value).error);\n                                    },\n                                    endAdornment: urlStateEndAdornment,\n                                }}\n                                helperText={\n                                    (isError && isError.url && isError.url.message) || 'Click away to validate the URL'\n                                }\n                                error={isError && Boolean(isError.url)}\n                                disabled={isValidating}\n                            />\n                        )}\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideWSDL.defaultProps = {\n    onValidate: () => { },\n};\nProvideWSDL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        mode: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Banner from 'AppComponents/Shared/Banner';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using AsyncAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using AsyncAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideAsyncAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [isValidating, setIsValidating] = useState(false);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [gatewayVendor, setGatewayVendor] = useState('wso2');\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one AsyncAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateAsyncAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info, errors },\n                } = response;\n                setGatewayVendor(info.gatewayVendor);\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    // eslint-disable-next-line max-len\n                    setValidity({ ...isValid, file: { message: 'AsyncAPI content validation failed! ' } });\n                    setValidationErrors(errors);\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'AsyncAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only in valid URLs\n        if (state === null) {\n            setIsValidating(true);\n            API.validateAsyncAPIByUrl(apiInputs.inputValue, { returnContent: true }).then((response) => {\n                const {\n                    body: {\n                        isValid: isValidURL, info, content, errors,\n                    },\n                } = response;\n                if (isValidURL) {\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'AsyncAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            }).catch((error) => {\n                setValidity({ url: { message: error.message } });\n                onValidate(false);\n                setIsValidating(false);\n                console.error(error);\n            });\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideAsyncAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideAsyncAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                data-testid='input-asyncapi-url'\n                                value={ProvideAsyncAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='AsyncAPI URL'\n                            />\n                            <FormControlLabel\n                                data-testid='input-asyncapi-file'\n                                value={ProvideAsyncAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='AsyncAPI File'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isValid.file\n                && (\n                    <Grid item md={11}>\n                        <Banner\n                            onClose={() => setValidity({ file: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={isValid.file.message}\n                            errors={validationErrors}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={() => {\n                                                    inputsDispatcher({ action: 'inputValue', value: null });\n                                                    inputsDispatcher({ action: 'isFormValid', value: false });\n                                                }}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.json,application/json,.yaml,.yml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.file.dropzone'\n                                                defaultMessage={'Drag & Drop AsyncAPI File '\n                                                + 'here {break} or {break} Browse files'}\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                data-testid='upload-api-file'\n                                                color='primary'\n                                                variant='contained'\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='AsyncAPI URL'\n                            placeholder='Enter AsyncAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of AsyncAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                        />\n                    )}\n                </Grid>\n                { gatewayVendor === 'solace' && (\n                    <Grid item xs={10} md={11}>\n                        <Chip\n                            data-testid='solace-api-label'\n                            label='Identified as Solace Event Portal API'\n                            icon={<CheckCircleSharpIcon style={{ color: 'green' }} />}\n                            variant='outlined'\n                            style={{ color: 'green' }}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideAsyncAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideAsyncAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideAsyncAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport debounce from 'lodash.debounce'; // WARNING: This is coming from mui-datatable as a transitive dependency\nimport YAML from 'js-yaml';\n\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport {  \n    getLinterResultsFromContent } from \"../../../Details/APIDefinition/Linting/Linting\";\nimport ValidationResults from './ValidationResults';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using OpenAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideOpenAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate, onLinterLineSelect } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [linterResults, setLinterResults] = useState ([]);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [isValidating, setIsValidating] = useState(false);\n    const [isLinting, setIsLinting] = useState(false);\n    \n    function lint(content) {\n        // Validate and linting\n        setIsLinting(true);\n        getLinterResultsFromContent(content).then((results)=>{\n            if (results) {\n                setLinterResults(results);\n            } else {\n                setLinterResults([]);\n            }\n        }).finally(()=>{setIsLinting(false);});\n    }\n\n    function reset() {\n        setIsLinting(false);\n        setLinterResults([]);\n        setValidationErrors([]);\n        inputsDispatcher({ action: 'importingContent', value: null });\n        inputsDispatcher({ action: 'inputValue', value: null });\n        inputsDispatcher({ action: 'isFormValid', value: false });\n    }\n\n    function hasJSONStructure (definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            console.log(\"API definition is in not in JSON format\");\n            return false;\n        }\n    }\n\n    const validateURLDebounced = useCallback(\n        debounce((newURL) => { // Example: https://codesandbox.io/s/debounce-example-l7fq3?file=/src/App.js\n            API.validateOpenAPIByUrl(newURL, { returnContent: true }).then((response) => {\n                const {\n                    body: {\n                        isValid: isValidURL, info, content, errors,\n                    },\n                } = response;\n                if (isValidURL) {\n                    let formattedContent;\n                    if (hasJSONStructure(content)) {\n                        formattedContent = JSON.stringify(JSON.parse(content), null, 2);\n                    } else {\n                        formattedContent = JSON.stringify(YAML.load(content), null, 2);\n                    }\n                    lint(formattedContent);\n                    inputsDispatcher({ action: 'importingContent', value: formattedContent});\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'OpenAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            }).catch((error) => {\n                setValidity({ url: { message: error.message } });\n                onValidate(false);\n                setIsValidating(false);\n                console.error(error);\n                \n            });\n        }, 750),\n        [],\n    );\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one OpenAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateOpenAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info, errors },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: file });\n            });\n\n        if (!file.path.endsWith(\".zip\")){\n            const read = new FileReader();\n            read.readAsText(file);\n            read.onloadend = function(){\n                const content = read.result?.toString();\n                inputsDispatcher({ action: 'importingContent', value: content });\n                lint(content);\n            }\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only if it's a valid URL\n        if (state === null) {\n            setIsValidating(true);\n            validateURLDebounced(apiInputs.inputValue);\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        reset();\n    }, [inputType]);\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideOpenAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideOpenAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end' id='url-validated'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input Source'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', \n                                value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                disabled={isLinting || isValidating}\n                                value={ProvideOpenAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI URL'\n                                id='open-api-url-select-radio'\n                            />\n                            <FormControlLabel\n                                disabled={isLinting || isValidating}\n                                value={ProvideOpenAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI File/Archive'\n                                aria-label='OpenAPI File/Archive'\n                                id='open-api-file-select-radio'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={reset}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.json,application/json,.yaml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.dropzone'\n                                                defaultMessage={'Drag & Drop Open API File/Archive '\n                                                 + 'here {break} or {break} Browse files'}\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                color='primary'\n                                                variant='contained'\n                                                id='browse-to-upload-btn'\n                                                onClick={ reset }\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='OpenAPI URL'\n                            placeholder='Enter OpenAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of OpenAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                            data-testid='swagger-url-endpoint'\n                        />\n                    )}\n                </Grid>\n                <ValidationResults \n                    inputValue={inputValue} \n                    isValidating={isValidating}\n                    isLinting={isLinting}\n                    validationErrors={validationErrors}\n                    linterResults={linterResults}\n                    onLinterLineSelect={onLinterLineSelect}\n                />\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideOpenAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideOpenAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideOpenAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CircularProgress, Grid, List, ListItem, \n    ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport { FormattedMessage } from \"react-intl\";\nimport LinterUI from \"AppComponents/Apis/Details/APIDefinition/LinterUI/LinterUI\";\nimport APILintingSummary from \"AppComponents/Apis/Details/APIDefinition/Linting/APILintingSummary\";\nimport {  \n    spectralSeverityMap as severityMap } from \"../../../Details/APIDefinition/Linting/Linting\"\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: 600,\n    }\n}));\n\ntype APILintingProps = {\n    inputValue: any,\n    isValidating: boolean,\n    isLinting: boolean,\n    linterResults: any,\n    validationErrors: any,\n    onLinterLineSelect: Function,\n};\n\nexport default function ValidationResults(props: APILintingProps) {\n    const {inputValue, isValidating, isLinting, linterResults, validationErrors, onLinterLineSelect} = props;\n    const [expandValidationErrors, setExpandValidationErrors] = useState(true);\n    const [expandLinterResults, setExpandLinterResults] = useState(false);\n    const [linterSelectedSeverity, setLinterSelectedSeverity] = useState(-1);\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={10} md={11}>\n                <List>\n                    {inputValue && isValidating && (\n                        <ListItem>\n                            <ListItemIcon><CircularProgress /></ListItemIcon>\n                            <ListItemText>\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ValidationResults.validating'\n                                    defaultMessage='Validating API definition'\n                                />\n                            </ListItemText>\n                        </ListItem>\n                    )}\n                    {inputValue && !isValidating && isLinting && (\n                        <ListItem>\n                            <ListItemIcon><CircularProgress /></ListItemIcon>\n                            <ListItemText>\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ValidationResults.linting'\n                                    defaultMessage='Generating Linter Results'\n                                />\n                            </ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n            </Grid>\n            {!isValidating && validationErrors.length>0 && (\n                <Grid item xs={10} md={11}>\n                    <Accordion\n                        expanded={expandValidationErrors}\n                        onChange={()=>{setExpandValidationErrors(!expandValidationErrors)}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore/>}\n                            aria-controls='panel1bh-content'\n                            id='panel1bh-header'>\n                            <Grid container direction='row' \n                                justifyContent='space-between' alignItems='center'>\n                                <Typography className={classes.importDefinitionDialogHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ValidationResults.validation.errros'\n                                        defaultMessage='Validation Errors'\n                                    />\n                                </Typography>\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <List>\n                                {validationErrors.map((error:any)=>(\n                                    <ListItem>\n                                        <ListItemIcon>\n                                            {severityMap[0]}\n                                        </ListItemIcon>\n                                        <ListItemText>\n                                            <Typography>\n                                                <Box sx={{ fontWeight: 'bold' }}>{error.message}</Box>\n                                            </Typography>\n                                            <Typography>{error.description}</Typography>\n                                        </ListItemText>\n                                    </ListItem>\n                                    \n                                ))}\n                            </List>\n                            \n                        </AccordionDetails>\n                        \n                    </Accordion>\n                </Grid>\n            )}\n            {!isLinting && linterResults.length>0 && (\n                <Grid item xs={10} md={11}\n                    data-testid='itest-id-linter-results'>\n                    <Accordion\n                        expanded={expandLinterResults}\n                        onChange={()=>{setExpandLinterResults(!expandLinterResults)}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore />}\n                            aria-controls='panel1bh-content'\n                            id='panel1bh-header'>\n                            <Grid container direction='row' \n                                justifyContent='space-between' alignItems='center'>\n                                <Typography className={classes.importDefinitionDialogHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ValidationResults.linter.results'\n                                        defaultMessage='Linter Results'\n                                    />\n                                </Typography>\n                                <APILintingSummary\n                                    linterResults={ linterResults }\n                                    handleChange = { (event:any, value:any)=>{\n                                        event.stopPropagation();\n                                        setLinterSelectedSeverity(value);\n                                        setExpandLinterResults(true);\n                                    } }\n                                />\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails\n                            style={{padding:0}}>\n                                <LinterUI\n                                    linterResults={ linterResults.filter(\n                                        (item: any)=> linterSelectedSeverity===-1||\n                                            item.severity===Number(linterSelectedSeverity))\n                                    }\n                                    severityMap={ severityMap }\n                                    handleRowClick={ (line: any) => { \n                                        if(onLinterLineSelect) onLinterLineSelect(line);\n                                    } }\n                                />\n                        </AccordionDetails>\n                        \n                    </Accordion>\n                </Grid>\n            )}\n        </>\n    );\n}","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using GraphQL UI, This is handling the taking input of GraphQL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideGraphQL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const { inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({ file: null });\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one graphQL file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateGraphQLFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, graphQLInfo },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'graphQLInfo', value: graphQLInfo });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            onDrop([inputValue]);\n        }\n    }, [inputValue]);\n    const accept = '.graphql,text/plain';\n    return (\n        <>\n            <Grid container spacing={5}>\n                {!apiInputs.inputValue && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.type'\n                                        defaultMessage='Provide GraphQL File'\n                                    />\n                                </>\n                            </FormLabel>\n                        </FormControl>\n                    </Grid>\n                )}\n                {isValid.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isValid.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {apiInputs.inputValue ? (\n                        <List data-testid='uploaded-list-graphql'>\n                            <ListItem key={apiInputs.inputValue.path} data-testid='uploaded-list-content-graphql' >\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <InsertDriveFile />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={`${apiInputs.inputValue.path} - \n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                    data-testid={'file-input-'+apiInputs.inputValue.path}\n                                />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        edge='end'\n                                        aria-label='delete'\n                                        onClick={() => {\n                                            inputsDispatcher({ action: 'inputValue', value: null });\n                                            inputsDispatcher({ action: 'isFormValid', value: false });\n                                        }}\n                                        data-testid='btn-delete-imported-file'\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    ) : (\n                        <DropZoneLocal\n                            error={isValid.file}\n                            onDrop={onDrop}\n                            files={apiInputs.inputValue}\n                            accept={accept}\n                            ariaLabel='GraphQL file upload'\n                        >\n                            {isValidating ? (<CircularProgress />)\n                                : ([\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.dropzone'\n                                        defaultMessage={'Drag & Drop files here {break} or {break} '\n                                        + 'Browse files{break}({accept})'}\n                                        values={{ break: <br />, accept }}\n                                    />,\n                                    <Button\n                                        color='primary'\n                                        variant='contained'\n                                        data-testid='browse-to-upload-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.upload'\n                                            defaultMessage='Browse File to Upload'\n                                        />\n                                    </Button>,\n                                ]\n                                )}\n                        </DropZoneLocal>\n                    )}\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideGraphQL.defaultProps = {\n    onValidate: () => {},\n};\nProvideGraphQL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n\nconst getPolicies = async () => {\n    const promisedPolicies = API.policies('subscription');\n    const policies = await promisedPolicies;\n    return policies.body.list;\n};\n/**\n *\n * @export\n * @param {*} props\n * @returns\n */\n/**\n * Handle API creation.\n * @param {JSON} props properties passed in.\n * @returns {JSX} API creation form.\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { data: settings, isLoading, error: settingsError } = usePublisherSettings();\n\n    const [pageError, setPageError] = useState(null);\n    useEffect(() => {\n        if (settingsError) {\n            setPageError(settingsError.message);\n        }\n    }, [settingsError]);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    async function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        let policies;\n        const allPolicies = await getPolicies();\n        if (allPolicies.length === 0) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                defaultMessage: 'Throttling policies not available. Contact your administrator',\n            }));\n        } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n            policies = ['Unlimited'];\n        } else {\n            policies = [allPolicies[0].name];\n        }\n\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        const message = 'Something went wrong while adding the API Product';\n                        setPageError(message);\n                        // TODO add i18n ~tmkb\n                        return message;\n                    }\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save();\n            Alert.loading(promisedCreatedAPI, {\n                loading: 'Creating API...',\n                success: 'API created successfully',\n                error: (error) => {\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        setPageError(message);\n                        return message;\n                    }\n                },\n            });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const restApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            const promisedAPIRevision = restApi.createRevision(api.id, body);\n            Alert.loading(promisedAPIRevision, {\n                success: 'API revision created successfully',\n                error: (error) => {\n                    console.error(error);\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        setPageError('Something went wrong while creating the API Revision');\n                        return intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        });\n                    }\n                },\n                loading: 'Creating API revision...',\n            });\n            promisedAPIRevision.then((api1) => {\n                const revisionId = api1.body.id;\n                setIsRevisioning(false);\n                const envList = settings.environment.map((env) => env.name);\n                const body1 = [];\n                const internalGateways = settings.environment.filter((p) => p.provider\n                        && p.provider.toLowerCase().includes('wso2'));\n                const getFirstVhost = (envName) => {\n                    const env = internalGateways.find(\n                        (e) => e.name === envName && e.vhosts.length > 0,\n                    );\n                    return env && env.vhosts[0].host;\n                };\n                if (envList && envList.length > 0) {\n                    if (envList.includes('Default') && getFirstVhost('Default')) {\n                        body1.push({\n                            name: 'Default',\n                            displayOnDevportal: true,\n                            vhost: getFirstVhost('Default'),\n                        });\n                    } else if (getFirstVhost(envList[0])) {\n                        body1.push({\n                            name: envList[0],\n                            displayOnDevportal: true,\n                            vhost: getFirstVhost(envList[0]),\n                        });\n                    }\n                }\n                setIsDeploying(true);\n                const promisedDeployment = restApi.deployRevision(api.id, revisionId, body1);\n                Alert.loading(promisedDeployment, {\n                    loading: 'Deploying API...',\n                    success: 'API deployed successfully',\n                    error: (error) => {\n                        console.error(error);\n                        if (error.response) {\n                            setPageError(error.response.body);\n                            return error.response.body.description;\n                        } else {\n                            setPageError('Something went wrong while publishing the API');\n\n                            return intl.formatMessage({\n                                id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                defaultMessage: 'Something went wrong while publishing the API',\n                            });\n                        }\n                    },\n                });\n                promisedDeployment.then(() => {\n                    setIsDeploying(false);\n                    // Publishing API after deploying\n                    setIsPublishing(true);\n                    const promisedPublish = api.publish();\n                    Alert.loading(promisedPublish, {\n                        loading: 'Publishing API...',\n                        success: (response) => {\n                            const { workflowStatus } = response.body;\n                            if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                    defaultMessage: 'Lifecycle state change request has been sent',\n                                });\n                            } else {\n                                return intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                    defaultMessage: 'API updated successfully',\n                                });\n                            }\n                        },\n                        error: () => intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.otherStatus',\n                            defaultMessage: 'Error while publishing the API',\n                        }),\n                    });\n                    promisedPublish.then(() => history.push(`/apis/${api.id}/overview`))\n                        .finally(() => {\n                            setIsPublishing(false);\n                            setIsPublishButtonClicked(false);\n                        });\n                })\n                    .finally(() => {\n                        setIsDeploying(false);\n                    });\n            })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5' component='h1'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context and'\n                        + ' Backend Endpoint (optional)'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage='Create a WebSocket API by providing a Name, and a Context.'\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {(pageError) && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12}>\n                    {/* This -2 is to counter act with Grid container spacing 3 */}\n                    {isLoading && (\n                        <Box mt={-2}>\n                            <LinearProgress data-testid='loading-publisher-settings' />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                id='itest-create-default-api-button'\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled || !apiInputs.isFormValid}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || isAPICreateDisabled || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\nimport APICreateStreamingAPI from './StreamingAPI/APICreateStreamingAPI';\nimport APICreateAsyncAPI from './AsyncAPI/ApiCreateAsyncAPI';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                {/* TODO: Remove ApiCreateWebSocket components and associated routes */}\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route path='/apis/create/streamingapi/:apiType' component={APICreateStreamingAPI} />\n                <Route path='/apis/create/asyncapi' component={APICreateAsyncAPI} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishing, setIsPublishing] = useState(false);\n\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.APIProduct.APIProductCreateWrapper.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n    let newAPIProduct;\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.transport = ['http', 'https'];\n        newAPIProduct = new APIProduct(apiData);\n        const promisedCreatedAPIProduct = newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                return apiProduct;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n        return promisedCreatedAPIProduct.finally(() => setCreating(false));\n    };\n\n    const createAPIProductOnly = () => {\n        createAPIProduct().then((apiProduct) => {\n            history.push(`/api-products/${apiProduct.id}/overview`);\n        });\n    };\n\n    const createAndPublishAPIProduct = () => {\n        setIsPublishButtonClicked(true);\n        createAPIProduct()\n            .then((apiProduct) => {\n                setIsRevisioning(true);\n                Alert.info('API Product created successfully');\n                const body = {\n                    description: 'Initial Revision',\n                };\n                newAPIProduct.createProductRevision(apiProduct.id, body)\n                    .then((api1) => {\n                        setIsRevisioning(false);\n                        const revisionId = api1.body.id;\n                        Alert.info('API Revision created successfully');\n                        const envList = settings.environment.map((env) => env.name);\n                        const body1 = [];\n                        const getFirstVhost = (envName) => {\n                            const env = settings.environment.find(\n                                (e) => e.name === envName && e.vhosts.length > 0,\n                            );\n                            return env && env.vhosts[0].host;\n                        };\n                        if (envList && envList.length > 0) {\n                            if (envList.includes('Default') && getFirstVhost('Default')) {\n                                body1.push({\n                                    name: 'Default',\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost('Default'),\n                                });\n                            } else if (getFirstVhost(envList[0])) {\n                                body1.push({\n                                    name: envList[0],\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost(envList[0]),\n                                });\n                            }\n                        }\n                        setIsDeploying(true);\n                        newAPIProduct.deployProductRevision(apiProduct.id, revisionId, body1)\n                            .then(() => {\n                                Alert.info('API Product Revision Deployed Successfully');\n                                setIsDeploying(false);\n                                setIsPublishing(true);\n                                newAPIProduct.updateLcState(apiProduct.id, 'Publish')\n                                    .then((response) => {\n                                        const { workflowStatus } = response.body;\n                                        if (workflowStatus === 'CREATED') {\n                                            Alert.info(intl.formatMessage({\n                                                id: 'Apis.Create.APIProduct.APIProductCreateWrapper.publishStatus',\n                                                defaultMessage: 'Lifecycle state change request has been sent',\n                                            }));\n                                        } else {\n                                            Alert.info(intl.formatMessage({\n                                                id: 'Apis.Create.APIProduct.APIProductCreateWrapper.otherStatus',\n                                                defaultMessage: 'API Product status updated successfully',\n                                            }));\n                                        }\n                                        history.push(`/api-products/${apiProduct.id}/overview`);\n                                    });\n                            })\n                            .catch((error) => {\n                                if (error.response) {\n                                    Alert.error(error.response.body.description);\n                                } else {\n                                    Alert.error(intl.formatMessage({\n                                        id: 'Apis.APIProductCreateWrapper.error.errorMessage.deploy.revision',\n                                        defaultMessage: 'Something went wrong while deploying the API Product Revision',\n                                    }));\n                                }\n                                console.error(error);\n                            })\n                            .finally(() => {\n                                setIsPublishing(false);\n                                setIsPublishButtonClicked(false);\n                            });\n                    })\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.APIProductCreateWrapper.error.errorMessage.create.revision',\n                                defaultMessage: 'Something went wrong while creating the API Product Revision',\n                            }));\n                        }\n                        console.error(error);\n                    });\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/api-products/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)\n                                                    || isPublishButtonClicked}\n                                        onClick={createAPIProductOnly}\n                                        id='create-api-product-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.create'\n                                            defaultMessage='Create'\n                                        />\n                                        {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                        id='api-product-next-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && !AuthManager.isNotPublisher() && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        id='create-and-publish-api-product-btn'\n                                        disabled={\n                                            !apiInputs.isFormValid || isCreating || (apiResources.length === 0)\n                                            || isDeploying || isRevisioning || !apiInputs.isFormValid\n                                        }\n                                        onClick={createAndPublishAPIProduct}\n                                    >\n                                        {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                        {(isPublishing || isRevisioning || isDeploying)\n                                        && <CircularProgress size={24} />}\n                                        {isCreating && isPublishing && 'Creating API Product. . .'}\n                                        {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                        {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API Product. . .'}\n                                        {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\nfunction apiInputsReducer(currentState, inputAction) {\n    const { action, value } = inputAction;\n    switch (action) {\n        case 'type':\n        case 'inputValue':\n        case 'name':\n        case 'version':\n        case 'endpoint':\n        case 'context':\n        case 'policies':\n        case 'isFormValid':\n            return { ...currentState, [action]: value };\n        case 'inputType':\n            return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n        case 'preSetAPI':\n            return {\n                ...currentState,\n                name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                version: value.version,\n                context: value.context,\n                endpoint: value.endpoints && value.endpoints[0],\n            };\n        default:\n            return currentState;\n    }\n}\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                    id='open-api-create-next-btn'\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                    id='open-api-create-btn'\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Link as MUILink } from '@material-ui/core';\nimport { Alert as MUIAlert, AlertTitle } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.WSDL.ApiCreateWSDL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    {wizardStep === 1 && apiInputs.type === \"SOAPTOREST\" && (\n                        <Box mb={2}>\n                            <MUIAlert severity='warning'>\n                                <AlertTitle>\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.ApiCreateWSDL.deprecated.msg'\n                                        defaultMessage='APIM supports only a limited set of capabilities with\n                                        this feature. If you want to process complex WSDL/XML schema,\n                                        please refer to the following documentation.'\n                                    />\n                                </AlertTitle>\n                                <MUILink\n                                    // eslint-disable-next-line\n                                    href={`https://apim.docs.wso2.com/en/4.2.0/integrate/develop/creating-artifacts/creating-an-api/`}\n                                    target='_blank'>\n                                    WSO2 Integration Studio Documentation\n                                </MUILink>\n                            </MUIAlert>\n                        </Box>\n                    )}\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL() {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const history = useHistory();\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.GraphQL.ApiCreateGraphQL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.back'\n                                        defaultMessage='Back'\n                                    />\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                    data-testid='create-graphql-next-btn'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.next'\n                                        defaultMessage='Next'\n                                    />\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                    data-testid='itest-create-graphql-api-button'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.create'\n                                        defaultMessage='Create'\n                                    />\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/**\n * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link, useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n\nconst APICreateStreamingAPI = (props) => {\n    const { history } = props;\n    const intl = useIntl();\n    const { data: settings, isLoading, error: settingsError } = usePublisherSettings();\n    const [pageError, setPageError] = useState(null);\n    useEffect(() => {\n        if (settingsError) {\n            setPageError(settingsError.message);\n        }\n    }, [settingsError]);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const classes = useStyles();\n    const [policies, setPolicies] = useState([]);\n    let { apiType } = useParams();\n    if (apiType) {\n        apiType = apiType.toUpperCase();\n    }\n    const isWebSub = (apiType === 'WEBSUB');\n\n    useEffect(() => {\n        API.asyncAPIPolicies().then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncWHUnlimited').length > 0) {\n                setPolicies(['AsyncWHUnlimited']);\n            } else if (!isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncUnlimited').length > 0) {\n                setPolicies(['AsyncUnlimited']);\n            } else {\n                setPolicies([allPolicies[0].policyName]);\n            }\n        });\n    }, []);\n\n    const protocols = [\n        {\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n    ];\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n    };\n    const protocolDisplayNames = {\n        WS: 'WebSocket',\n        SSE: 'SSE',\n        WEBSUB: 'WebSub',\n    };\n    const [hideEndpoint, setHideEndpoint] = useState(!apiType || apiType === protocolKeys.WebSub);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'context':\n            case 'endpoint':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'protocol':\n                setHideEndpoint(protocolKeys[value] === protocolKeys.WebSub);\n                return { ...currentState, [action]: protocolKeys[value] };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n\n    const isAPICreatable = apiInputs.name && apiInputs.context && apiInputs.version && !isCreating;\n    // TODO: If WebSub API no endpoint is required. Or else check apiInputs.endpoint has a value.\n    const isPublishable = true;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, protocol,\n        } = apiInputs;\n        const apiData = {\n            name,\n            version,\n            context,\n            endpoint,\n            type: apiType || protocol.toUpperCase(),\n            policies,\n        };\n\n        let endpointType = 'http';\n        if ((apiType && apiType.toUpperCase() === 'WS') || (protocol && protocol.toUpperCase() === 'WS')) {\n            endpointType = 'ws';\n        }\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: endpointType,\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n\n\n        const newAPI = new API(apiData);\n        const promisedCreatedAPI = newAPI\n            .saveStreamingAPI()\n            .then((api) => {\n                Alert.info('API created successfully');\n                return api;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n                setIsPublishing(false); // We don't publish if something when wrong\n            })\n            .finally(() => {\n                setIsCreating(false);\n            });\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const streamingApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            streamingApi.createRevision(api.id, body)\n                .then((api1) => {\n                    const revisionId = api1.body.id;\n                    Alert.info('API Revision created successfully');\n                    setIsRevisioning(false);\n                    const envList = settings.environment.map((env) => env.name);\n                    const body1 = [];\n                    const getFirstVhost = (envName) => {\n                        const env = settings.environment.find(\n                            (e) => e.name === envName && e.vhosts.length > 0,\n                        );\n                        return env && env.vhosts[0].host;\n                    };\n                    if (envList && envList.length > 0) {\n                        if (envList.includes('Default') && getFirstVhost('Default')) {\n                            body1.push({\n                                name: 'Default',\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost('Default'),\n                            });\n                        } else if (getFirstVhost(envList[0])) {\n                            body1.push({\n                                name: envList[0],\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost(envList[0]),\n                            });\n                        }\n                    }\n                    setIsDeploying(true);\n                    streamingApi.deployRevision(api.id, revisionId, body1)\n                        .then(() => {\n                            Alert.info('API Revision Deployed Successfully');\n                            setIsDeploying(false);\n                            // Publishing API after deploying\n                            setIsPublishing(true);\n                            api.publish()\n                                .then((response) => {\n                                    const { workflowStatus } = response.body;\n                                    if (workflowStatus === APICreateStreamingAPI.WORKFLOW_STATUS.CREATED) {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                            defaultMessage: 'Lifecycle state change request has been sent',\n                                        }));\n                                    } else {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                            defaultMessage: 'API updated successfully',\n                                        }));\n                                    }\n                                    history.push(`/apis/${api.id}/overview`);\n                                })\n                                .catch((error) => {\n                                    if (error.response) {\n                                        Alert.error(error.response.body.description);\n                                        setPageError(error.response.body);\n                                    } else {\n                                        Alert.error(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                            defaultMessage: 'Something went wrong while publishing the API',\n                                        }));\n                                        setPageError('Something went wrong while publishing the API');\n                                    }\n                                    console.error(error);\n                                })\n                                .finally(() => {\n                                    setIsPublishing(false);\n                                    setIsPublishButtonClicked(false);\n                                });\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                                setPageError(error.response.body);\n                            } else {\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.deploy.revision',\n                                    defaultMessage: 'Something went wrong while deploying the API Revision',\n                                }));\n                                setPageError('Something went wrong while deploying the API Revision');\n                            }\n                            console.error(error);\n                        })\n                        .finally(() => {\n                            setIsDeploying(false);\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        }));\n                        setPageError('Something went wrong while creating the API Revision');\n                    }\n                    console.error(error);\n                })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.heading'\n                    defaultMessage='Create a Streaming API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                {isWebSub ? (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.websub.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version and a Context'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version, a Context and the Endpoint'\n                    />\n                )}\n\n            </Typography>\n        </>\n    );\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12}>\n                    {/* This -2 is to counter act with Grid container spacing 3 */}\n                    {isLoading && (\n                        <Box mt={-2}>\n                            <CircularProgress data-testid='loading-publisher-settings' />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        endpointPlaceholderText='Streaming Provider'\n                        appendChildrenBeforeEndpoint\n                        hideEndpoint={hideEndpoint}\n                        isWebSocket={(apiType && apiType === protocolKeys.WebSocket)\n                            || apiInputs.protocol === protocolKeys.WebSocket}\n                    >\n                        <TextField\n                            fullWidth\n                            select\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Create.streaming.Components.SelectPolicies.business.plans'\n                                        defaultMessage='Protocol'\n                                    />\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                </>\n                            )}\n                            value={apiType ? protocolDisplayNames[apiType] : apiInputs.protocol}\n                            disabled={apiType}\n                            name='protocol'\n                            SelectProps={{\n                                multiple: false,\n                                renderValue: (selected) => (selected),\n                            }}\n                            margin='normal'\n                            variant='outlined'\n                            InputProps={{\n                                id: 'itest-id-apipolicies-input',\n                            }}\n                            onChange={handleOnChange}\n                        >\n                            {protocols.map((protocol) => (\n                                <MenuItem\n                                    dense\n                                    disableGutters={false}\n                                    value={protocol.displayName}\n                                >\n                                    <ListItemText primary={protocol.displayName} secondary={protocol.description} />\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </DefaultAPIForm>\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={!(isAPICreatable && apiInputs.isFormValid)}\n                                onClick={createAPIOnly}\n                                data-testid='itest-create-streaming-api-button'\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || !isAPICreatable || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n};\nAPICreateStreamingAPI.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\n\nexport default withRouter(APICreateStreamingAPI);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport Joi from '@hapi/joi';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport ExternalEndpoint from 'AppComponents/Apis/Create/AsyncAPI/ExternalEndpoint';\nimport ProvideAsyncAPI from './Steps/ProvideAsyncAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateAsyncAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    // eslint-disable-next-line no-use-before-define\n    const classes = useStyles();\n    const [hideEndpoint, setHideEndpoint] = useState(true);\n    const [hideExternalEndpoint, setHideExternalEndpoint] = useState(true);\n    const [isValidExternalEndpoint, setValidExternalEndpoint] = useState(true);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'gatewayVendor':\n            case 'asyncTransportProtocols':\n            case 'protocol':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints && value.endpoints[0],\n                    gatewayVendor: value.gatewayVendor,\n                    asyncTransportProtocols: value.asyncTransportProtocols,\n                };\n            case 'externalEndpoint':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateAsyncAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    const protocols = [\n        {\n            name: 'ws',\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            name: 'websub',\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            name: 'sse',\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n        {\n            name: 'other',\n            displayName: 'Other',\n            description: 'Other Async APIs such as AMQP, MQTT etc.',\n        },\n    ];\n\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n        Other: 'ASYNC',\n    };\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     * Validate the external endpoint URL\n     * @param value endpoint URL\n     * @returns {boolean} validity of the URL\n     */\n    function validateEndpoint(value) {\n        if (value) {\n            const urlSchema = Joi.string().uri().empty();\n            return !urlSchema.validate(value).error;\n        }\n        return false;\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChangeForProtocol(event) {\n        const { name: action, value } = event.target;\n        if (value === 'WebSub') {\n            setHideEndpoint(true);\n            setHideExternalEndpoint(true);\n            setValidExternalEndpoint(true);\n        } else if (value === 'Other') {\n            setHideEndpoint(true);\n            setHideExternalEndpoint(false);\n            setValidExternalEndpoint(validateEndpoint(apiInputs.externalEndpoint));\n        } else {\n            setHideEndpoint(false);\n            setHideExternalEndpoint(true);\n            setValidExternalEndpoint(true);\n        }\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType, protocol, gatewayVendor,\n            externalEndpoint,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            type: protocolKeys[protocol],\n            gatewayVendor,\n        };\n        if (gatewayVendor === 'solace') {\n            additionalProperties.type = protocolKeys.WebSub;\n        }\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (protocolKeys[protocol] === 'ASYNC') {\n            additionalProperties.advertiseInfo = {\n                advertised: true,\n                apiExternalProductionEndpoint: externalEndpoint,\n                apiExternalSandboxEndpoint: externalEndpoint,\n                originalDevPortalUrl: '',\n                apiOwner: 'admin',\n                vendor: 'WSO2',\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importAsyncAPIByFile(inputValue) : newAPI.importAsyncAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.heading'\n                            defaultMessage='Create an API using an AsyncAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.sub.heading'\n                            defaultMessage='Create an API using an existing AsyncAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.one'\n                                defaultMessage='Provide AsyncAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideAsyncAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                            hideEndpoint={hideEndpoint}\n                            endpointPlaceholderText='Streaming Provider'\n                            appendChildrenBeforeEndpoint\n                        >\n                            <Grid container spacing={2}>\n                                {apiInputs.gatewayVendor === 'solace'\n                                && apiInputs.asyncTransportProtocols.length !== 0 && (\n                                    <>\n                                        <Grid item xs={12} md={6} lg={3}>\n                                            <Typography component='p' variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.MetaData.solace.transports'\n                                                    defaultMessage='Available Protocols'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} lg={9}>\n                                            {apiInputs.asyncTransportProtocols.map((protocol) => (\n                                                <Chip\n                                                    data-testid={upperCaseString(protocol) + '-label'}\n                                                    key={protocol}\n                                                    label={upperCaseString(protocol)}\n                                                    style={{\n                                                        'font-size': 13,\n                                                        height: 20,\n                                                        marginRight: 5,\n                                                    }}\n                                                    color='primary'\n                                                />\n                                            ))}\n                                        </Grid>\n                                    </>\n                                )}\n                            </Grid>\n                            {apiInputs.gatewayVendor === 'wso2' && (\n                                <TextField\n                                    fullWidth\n                                    select\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.asyncAPI.Components.SelectPolicies.business.plans'\n                                                defaultMessage='Protocol'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    value={apiInputs.protocol}\n                                    name='protocol'\n                                    SelectProps={{\n                                        multiple: false,\n                                        renderValue: (selected) => (selected),\n                                    }}\n                                    margin='normal'\n                                    variant='outlined'\n                                    InputProps={{\n                                        id: 'itest-id-apipolicies-input',\n                                    }}\n                                    onChange={handleOnChangeForProtocol}\n                                >\n                                    {protocols.map((protocol) => (\n                                        <MenuItem\n                                            dense\n                                            disableGutters={false}\n                                            id={protocol.name}\n                                            key={protocol.name}\n                                            value={protocol.displayName}\n                                        >\n                                            <ListItemText\n                                                primary={protocol.displayName}\n                                                secondary={protocol.description}\n                                            />\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            )}\n                            {!hideExternalEndpoint && (\n                                <ExternalEndpoint\n                                    classes={classes}\n                                    apiInputs={apiInputs}\n                                    inputsDispatcher={inputsDispatcher}\n                                    isValidExternalEndpoint={isValidExternalEndpoint}\n                                    setValidExternalEndpoint={setValidExternalEndpoint}\n                                    validateEndpoint={validateEndpoint}\n                                />\n                            )}\n                        </DefaultAPIForm>\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    data-testid= 'next-btn'\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    data-testid='asyncapi-create-btn'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating || !isValidExternalEndpoint}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateAsyncAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    externalEndpointWarning: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    alertTitle: {\n        fontWeight: theme.typography.fontWeightMedium,\n        marginTop: -2,\n    },\n}));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport MuiAlert from 'AppComponents/Shared/MuiAlert';\nimport Typography from '@material-ui/core/Typography';\n\nconst ExternalEndpoint = (props) => {\n    const {\n        classes, apiInputs, inputsDispatcher, isValidExternalEndpoint, setValidExternalEndpoint, validateEndpoint,\n    } = props;\n    const handleOnChangeExternalEndpoint = (event) => {\n        const { name: action, value } = event.target;\n        setValidExternalEndpoint(validateEndpoint(value));\n        inputsDispatcher({ action, value });\n    };\n    return (\n        <>\n            <TextField\n                fullWidth\n                id='itest-id-api-external-endpoint-input'\n                label={(\n                    <>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.externalEndpoint'\n                            defaultMessage='External Endpoint'\n                        />\n                        <sup className={classes.mandatoryStar}>*</sup>\n                    </>\n                )}\n                name='externalEndpoint'\n                value={apiInputs.externalEndpoint}\n                onChange={handleOnChangeExternalEndpoint}\n                helperText={\n                    !isValidExternalEndpoint && (\n                        <div style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id={'Apis.Create.AsyncAPI.ApiCreateAsyncAPI'\n                                + '.externalEndpoint.error'}\n                                defaultMessage='Invalid Endpoint URL'\n                            />\n                        </div>\n                    )\n                }\n                error={!isValidExternalEndpoint}\n                margin='normal'\n                variant='outlined'\n            />\n            <MuiAlert severity='warning' className={classes.externalEndpointWarning}>\n                <Typography gutterBottom component='div' className={classes.alertTitle}>\n                    <FormattedMessage\n                        id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.advertiseOnly.warning.title'\n                        defaultMessage='\"Other\" type streaming APIs will be created as third party APIs.'\n                    />\n                </Typography>\n                <FormattedMessage\n                    id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.advertiseOnly.warning'\n                    defaultMessage={'API Manager only supports the streaming APIs of types'\n                    + ' WebSocket, SSE and WebSub. Please create one of the supported types'\n                    + ' if you want to deploy it in the gateway.'}\n                />\n            </MuiAlert>\n        </>\n    );\n};\n\nexport default ExternalEndpoint;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0 -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0 -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React from 'react';\nimport API from 'AppData/api.js';\nimport {\n    Spectral,\n    ISpectralDiagnostic,\n} from '@stoplight/spectral-core';\nimport *  as spectralFunc from \"@stoplight/spectral-functions\";\nimport { oas } from '@stoplight/spectral-rulesets';\nimport { green, orange } from '@material-ui/core/colors';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage } from 'react-intl';\n\n/** @type DiagnosticSeverity \n * \n * \nSomething not allowed by the rules of a language or other means.\n    Error = 0,\nSomething suspicious but allowed.\n    Warning = 1,\nSomething to inform about but not a problem.\n    Information = 2,\nSomething to hint to a better way of doing it, like proposing a refactoring.\n    Hint = 3\n*/\n\nconst spectralFunctions: { [key: string]: any} = {\n    \"alphabetical\": spectralFunc.alphabetical,\n    \"casing\": spectralFunc.casing,\n    \"defined\": spectralFunc.defined,\n    \"enumeration\": spectralFunc.enumeration,\n    \"falsy\": spectralFunc.falsy,\n    \"length\": spectralFunc.length,\n    \"pattern\":spectralFunc.pattern,\n    \"truthy\": spectralFunc.truthy,\n    \"undefined\": spectralFunc.undefined,\n    \"unreferencedReusableObject\": spectralFunc.unreferencedReusableObject,\n    \"xor\": spectralFunc.xor,\n}\n\nexport const spectralSeverityMap: { [key: number]: JSX.Element } = {\n    0: <ErrorIcon color=\"error\" />,\n    1: <WarningIcon style={{ color: orange[500] }} />,\n    2: <InfoIcon color=\"primary\" />,\n    3: <HelpOutlineIcon style={{ color: green[500] }} />,\n};\n\nexport const spectralSeverityNames: { [key: number]: string } = {\n    0: \"Errors\",\n    1: \"Warnings\",\n    2: \"Info\",\n    3: \"Hints\"\n};\n\nexport async function getLinterResultsFromContent(swagger: string|undefined) {\n    let validationResults: ISpectralDiagnostic[] = [];\n    \n    if (swagger) {\n        // Validate againt default ruleset by Spectral\n        let defaultRuleSet = { extends: [oas], rules: {} };\n        const linter = new Spectral();\n        linter.setRuleset(defaultRuleSet);\n        \n        try {\n            \n            await linter.run(swagger).then((results)=> {\n                if (results) {\n                    validationResults = validationResults.concat(results);\n                }\n            });\n        } catch (err) {\n            console.error(\"OpenAPI linter default ruleset validation failed\", err);\n            Alert.error(\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.Linting.Linting.default.ruleset.validation.failed'\n                defaultMessage='OpenAPI linter default ruleset validation failed'\n            />);\n        }\n\n\n        // Validate againt custom ruleset defined in tenant config\n        let customRuleset:JSON = await API.getLinterCustomRules().then((LinterCustomRuleset: JSON) => {\n            return LinterCustomRuleset;\n        }).catch((error: any) => {\n            console.log(\"Error retrieving custom linter rules\", error);\n            Alert.error(\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.Linting.Linting.error.retrieving.custom.rules'\n                defaultMessage='Error retrieving custom linter rules'\n            />);\n        });\n        if (customRuleset) {\n            //Parse JSON to JS object to support spectral\n            const parsedCustomRuleset = JSON.parse(\n                JSON.stringify(customRuleset), \n                function (key, value) {\n                    if (key === \"function\") {\n                        return spectralFunctions[value];\n                    } else {\n                        return value;\n                    }\n                }\n            );\n\n            linter.setRuleset(parsedCustomRuleset);\n            \n            try {\n                await linter.run(swagger).then((results)=> {\n                    if (results) {\n                        validationResults = validationResults.concat(results);\n                    }\n                });\n            } catch (error) {\n                if (error instanceof Error) {\n                    console.error(\"OpenAPI linter custom ruleset validation failed\\n\", error, error.stack);\n                }\n                Alert.error(\n                    <FormattedMessage\n                        id='Apis.Details.APIDefinition.Linting.Linting.custom.ruleset.validation.failed'\n                        defaultMessage='OpenAPI linter custom ruleset validation failed'\n                    />);\n            }\n        }\n\n        //Sort linter results order based of severity\n        validationResults = validationResults.sort( function compare(a, b) {\n            if (a.severity < b.severity){\n              return -1;\n            }\n            if (a.severity > b.severity){\n              return 1;\n            }\n            return 0;\n        });\n    }\n    return validationResults;\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { useTheme } from '@material-ui/core/styles';\n\n/**\n *\n * Convert raw byte values to human readable format\n * @param {Number} bytes number of bytes\n * @param {boolean} [si=false]\n * @returns {String} Human readable string format\n */\nexport function humanFileSize(bytesParam, si = false) {\n    let bytes = bytesParam; // To prevent `no-param-reassign` eslint rule violation\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '100px 20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744',\n};\n\n/**\n *\n * Provide a class friendly Dropzone wrapper using hooks.\n * @export\n * @returns\n */\nexport default function DropZoneLocal(props) {\n    const {\n        message, onDrop, error, children, accept, ariaLabel,\n    } = props;\n    const dropZoneObject = useDropzone({ onDrop });\n    const {\n        getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject,\n    } = dropZoneObject;\n\n    const style = useMemo(\n        () => ({\n            ...baseStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {}),\n        }),\n        [isDragActive, isDragReject, error],\n    );\n    const theme = useTheme();\n\n    const containerStyles = {\n        fontFamily: theme.typography.fontFamily,\n        textAlign: 'center',\n    };\n\n    return (\n        <section className='container' style={containerStyles}>\n            <div {...getRootProps({ style })}>\n                <input\n                    // In accordance with https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html\n                    aria-label={ariaLabel}\n                    {...getInputProps()}\n                    multiple={false}\n                    accept={accept}\n                />\n                {children || message}\n            </div>\n        </section>\n    );\n}\nDropZoneLocal.defaultProps = {\n    message: \"Drag 'n' drop some files here, or click to select files\",\n    onDrop: () => {},\n    showFilesList: true,\n    children: null,\n    error: false,\n    accept: '*',\n};\nDropZoneLocal.propTypes = {\n    message: PropTypes.string,\n    onDrop: PropTypes.func,\n    accept: PropTypes.string,\n    showFilesList: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.shape({}))]),\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({})]),\n};\n"],"sourceRoot":""}