{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/Resources/operationUtils.js","webpack:///./source/src/app/components/Shared/WrappedExpansionPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/apiSecurityConstants.js","webpack:///./source/src/app/components/Apis/Details/Policies/ApiOperationContext.js","webpack:///./source/src/app/components/Shared/RevisionContext.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/endpointUtils.js","webpack:///./source/src/app/data/Wsdl.js","webpack:///./source/src/app/components/Apis/Details/APIDefinition/LinterUI/LinterUI.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/Linting/APILintingSummary.tsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/APIRateLimiting.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEditWorkspace.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/MethodView.jsx","webpack:///./source/src/app/data/Comments.js","webpack:///./source/src/app/components/Apis/Create/WSDL/Steps/ProvideWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/Steps/ProvideAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ProvideOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ValidationResults.tsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/Steps/ProvideGraphQL.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ThumbnailView.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/KeyManager.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/Certificates.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/AddOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SaveOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Create.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/CreateEditForm.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/MarkdownEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Edit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/GenerateDocument.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/GroupOfOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpoint.jsx","webpack:///./source/src/app/components/Shared/useAutocomplete.js","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/ImportDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/DefinitionOutdated.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Base/Errors/AuthorizedError.jsx","webpack:///./source/src/app/components/Apis/Details/components/LastUpdatedTime.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./source/src/app/components/Apis/Details/components/leftMenu/DevelopSectionMenu.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Overview.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/ProductResources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Configuration.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Policies.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/CustomizedStepper.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/MetaData.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Topics.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/DesignConfigurations.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/UpdateWithoutDetails.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/DefaultVersion.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/DescriptionEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AccessControl.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AdvertiseInfo.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/StoreVisibility.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Tags.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Social.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APICategories.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/ResponseCaching.jsx","webpack:///./source/src/app/data/UserStateUtils.js","webpack:///./source/src/app/components/Apis/Details/Configuration/components/CORSConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/SchemaValidation.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/MaxBackendTps.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/APISecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/ApplicationLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AuthorizationHeader.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint.jsx","webpack:///./source/src/app/components/Apis/Create/Components/SelectPolicies.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/CertificateUsage.tsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Transports.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/QueryAnalysis.jsx","webpack:///./source/src/app/components/Apis/Details/QueryAnalysis/UpdateComplexity.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/WebSubConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/Topics.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/AsyncOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/DescriptionAndSummary.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/OperationGovernance.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/Parameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/ListParameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/EditParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/PayloadProperties.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/AddPayloadProperty.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/ListPayloadProperties.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/EditPayloadProperty.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/Runtime.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/GroupOfOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/asyncapi/SubscriptionConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfigurationWebSocket.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APILevelRateLimitingPolicies.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycle.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleUpdate.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/Components/PublishWithoutDeploy.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/Components/PublishWithoutDeployProduct.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleImage.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/CheckboxLabels.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifecyclePending.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/index.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Listing.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/GoToEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/DeleteMultiple.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Download.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/ViewDocument.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/elements.css?78e7","webpack:///./source/src/app/components/Apis/Details/Documents/elements.css","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./source/src/app/components/Shared/HTMLRender.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/EditContent.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/APIOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/DescriptionAndSummary.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/OperationGovernance.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AWSLambdaSettings.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/Parameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AddParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/ListParameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/RequestBody.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/EditParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/SOAPToRESTListing.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/PolicyEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/CloseConfirmation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SpecErrors.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GoToDefinitionLink.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/OperationsSelector.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/APIProductOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/NewEndpointCreate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/MockImplEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/MockedOASOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/MockScriptOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GenericOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadbalanceFailoverConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointListing.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpointAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadBalanceConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AdvancedConfig/AdvanceEndpointConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EndpointSecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EditableParameterRow.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AWSLambda/Credentials.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/ServiceEndpoint.jsx","webpack:///./source/src/app/components/Shared/Autocomplete.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/DisplayDevportal.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/DeploymentOnbording.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Subscriptions.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Invoice.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionPoliciesManage.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionAvailability.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/TenantAutocomplete.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/index.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/CreateScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/EditScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Scopes.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Security/index.jsx","webpack:///./source/src/app/components/Apis/Details/Security/SecurityOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Security/AddPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APIDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APISecurityAudit.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/WSDL.jsx","webpack:///./source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/GoTo.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/Components/GoToSuggestions.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/RouteMappings.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/Components/GoToSuggestion.jsx","webpack:///./source/src/app/components/Apis/Details/components/CreateNewVersionButton.jsx","webpack:///./source/src/app/components/Apis/Details/BusinessInformation/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/Properties.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/EditableRow.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/index.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/BusinessPlans.jsx","webpack:///./source/src/app/components/Apis/Details/ExternalStores/ExternalStores.jsx","webpack:///./source/src/app/components/Apis/Details/NewVersion/NewVersion.jsx","webpack:///./source/src/app/components/Apis/Details/TryOut/TryOutConsole.jsx","webpack:///./source/src/app/components/Apis/Details/TryOut/AdvertiseDetailsPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Policies/AttachedPolicyForm/General.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/PolicyConfigurationEditDrawer.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/AttachedPolicyCard.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/AttachedPolicyList.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/PolicyConfiguringDrawer.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/PolicyDropzone.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/components/FlowArrow.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/PoliciesExpansion.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/OperationPolicy.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/OperationsGroup.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/ViewPolicy.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/DeletePolicy.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/DraggablePolicyCard.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/components/TabPanel.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/CreatePolicy.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/PolicyList.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/GatewaySelector.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/SaveOperationPolicies.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/PoliciesSection.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/components/PolicyPanel.tsx","webpack:///./source/src/app/components/Apis/Details/Policies/Policies.tsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/Linting/Linting.tsx","webpack:///./source/src/app/components/Shared/CustomSplitButton.jsx","webpack:///./source/src/app/components/Shared/DropZoneLocal.jsx"],"names":["VERSIONS","V3","RegExp","V2","getAPIProductTaggedOperations","apiProduct","openAPI","taggedOperations","Default","apis","map","apiOperations","operations","operation","target","verb","openAPIOperation","paths","toLowerCase","console","warn","operationInfo","spec","name","push","getTaggedOperations","api","isAPIProduct","apiOperation","tags","tag","getVersion","openapi","swagger","extractPathParameters","params","match","parameters","openAPIVersion","test","para","paraObj","in","required","schema","type","format","extractAsyncAPIPathParameters","forEach","param","description","getOperationScopes","scopes","Array","isArray","security","find","item","default","getAsyncAPIOperationScopes","Object","entries","v","mapAPIOperations","temp","rest","isSelectAll","selectedOperations","path","prototype","hasOwnProperty","call","verbs","keys","length","isRef","content","isReference","WrappedExpansionPanel","props","id","useState","getUserLocalStorage","expanded","setExpanded","onChange","event","expandedState","updateUserLocalStorage","muiName","DEFAULT_API_SECURITY_OAUTH2","API_SECURITY_BASIC_AUTH","API_SECURITY_API_KEY","API_SECURITY_MUTUAL_SSL","API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY","API_SECURITY_MUTUAL_SSL_MANDATORY","ApiOperationContext","React","createContext","useApiOperationContext","useContext","ApiOperationContextProvider","Provider","RevisionContext","useRevisionContext","RevisionContextProvider","getEndpointTypeProperty","category","mergeEndpoints","endpointConfig","endpoint_type","production","production_endpoints","sandbox","sandbox_endpoints","concat","production_failovers","sandbox_failovers","getEndpointTemplateByType","endpointType","isAddressEndpoint","currentEndpointConfig","tmpEndpointConfig","failOver","algoClassName","algoCombo","sessionManagement","sessionTimeOut","endpointsToList","config","cloneDeep","endpoints","getEndpointConfigByImpl","implementationType","implementation_status","url","createEndpointConfig","access_method","assume_role","amznAccessKey","amznSecretKey","amznRegion","amznRoleArn","amznRoleSessionName","amznRoleRegion","getEndpointTemplate","template_not_supported","Wsdl","file","apiClient","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","CONST","API_CLIENT","client","requestBody","then","Validation","validateWSDLDefinition","additionalProperties","APIs","importWSDLDefinition","JSON","stringify","response","API","body","Resource","useStyles","makeStyles","theme","tableCell","border","fontSize","headerTableCell","background","fontWeight","tableRow","backgroundColor","palette","action","hover","cursor","tableWrapper","width","headerTableRow","display","LinterUI","page","setPage","rowsPerPage","setRowsPerPage","linterResults","handleRowClick","classes","columns","label","minWidth","align","rows","index","severityMap","severity","line","range","start","message","code","sx","overflow","maxHeight","className","stickyHeader","aria-label","column","key","style","slice","row","onClick","value","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","activeButton","handleChange","selectedSeverity","setSelectedSeverity","severityCounts","ml","defaultMessage","title","Number","exclusive","size","String","maxWidth","noWrap","Math","random","RateLimitingLevels","RESOURCE","focusLabel","boxShadow","paddingRight","spacing","APIRateLimiting","updateAPI","operationRateLimits","currentApiThrottlingPolicy","setFocusOperationLevel","focusOperationLevel","apiThrottlingPolicy","setApiThrottlingPolicy","isSaving","setIsSaving","isResourceLevel","rateLimitingLevel","apiFromContext","useAPI","useEffect","operationRateLimitMessage","variant","gutterBottom","container","direction","justify","alignItems","md","xs","placement","interactive","light","userSelection","control","color","disabled","isRestricted","labelPlacement","minHeight","borderLeft","pl","select","helperText","margin","rateLimit","displayName","finally","defaultProps","propTypes","PropTypes","func","isRequired","oneOf","arrayOf","shape","disabledAction","string","bool","memo","searchWrapper","padding","marginTop","paper","height","borderRadius","apiWrapper","overflowY","ResourceWrapper","marginLeft","marginRight","grey","common","white","SelectedResourceWrapper","overflowX","leftMost","getContrastText","rightMost","colTitle","treeItemMain","treeItemMainWrapper","paddingLeft","treeItem","hr","flex","methodView","middleText","selectedApi","selectedTitle","buttonWrapper","textDecorate","selectedApiDescription","messageWrapper","tootBar","justifyContent","inactiveIcon","resourceMethod","POST","PUT","GET","DELETE","PATCH","OPTIONS","HEAD","ProductResourcesEdit","apiResources","setApiResources","isStateCreate","resourceNotFountMessage","allApis","setAllApis","notFound","setNotFound","searchText","setSearchText","selectedApiPaths","setSelectedApiPaths","setSelectedApi","fromSearch","setFromSearch","apiRestClient","filterAPIs","text","inputValue","trim","composeQuery","composeQueryJSON","queryString","parse","limit","offset","search","all","query","isValidHttpVerb","innerKey","addPropsToSelectedApiPaths","apiId","latestApiResources","methodObj","checked","resourceFound","resourcekey","apiResource","operationKey","allreadyAdded","getApiSwagger","apiSelected","getSwagger","undefined","obj","catch","error","status","doRedirectToLogin","updateResourceTree","resourceToAdd","inputApiResources","updateStateHere","newApiResources","version","newResource","toUpperCase","authType","throttlingPolicy","apiFound","indexA","operationFound","indexB","splice","updateCheckBox","prevSelectedApiPaths","addSelectedResourcesToTree","addAll","filteredList","list","filter","theApi","lifeCycleStatus","placeholder","fullWidth","InputLabelProps","shrink","dense","apiObj","labelId","role","button","primary","secondary","context","onKeyDown","CONSTS","HTTP_METHODS","includes","edge","tabIndex","disableRipple","inputProps","method","instanceOf","MethodView","info","Configurations","app","useTheme","chipColor","custom","resourceChipColors","chipTextColor","log","Comments","parentId","kwargs","properties","deepFreeze","_data","replies","_requestMetaData","commentId","callback","promise","this","deleteComment","commentInfo","put_apis__apiId__comments__commentId_","comment","replyTo","addCommentToAPI","getAllCommentsOfAPI","freeze","mandatoryStar","main","ProvideWSDL","apiInputs","inputsDispatcher","onValidate","isFileInput","inputType","isGenerateRESTAPI","isError","setValidity","isValidating","setIsValidating","isCreateMode","mode","handleWSDLValidationResponse","isWSDLValid","isValid","success","handleWSDLValidationErrorResponse","onDrop","files","state","validateFileOrArchive","dropBoxControlLabel","values","break","urlStateEndAdornment","position","onClose","disableActions","paperProps","elevation","humanFileSize","accept","autoFocus","InputProps","onBlur","APIValidation","validate","validateUrl","endAdornment","Boolean","ProvideAsyncAPI","validationErrors","setValidationErrors","gatewayVendor","setGatewayVendor","pop","validFile","validateAsyncAPIByFile","isValidFile","errors","validateURL","validateAsyncAPIByUrl","returnContent","isValidURL","INPUT_TYPES","FILE","URL","isInvalidURL","data-testid","icon","ProvideOpenAPI","onLinterLineSelect","setLinterResults","isLinting","setIsLinting","lint","getLinterResultsFromContent","results","reset","validateURLDebounced","useCallback","debounce","newURL","validateOpenAPIByUrl","formattedContent","definition","result","err","hasJSONStructure","YAML","load","validateOpenAPIByFile","endsWith","read","FileReader","readAsText","onloadend","toString","importDefinitionDialogHeader","ValidationResults","expandValidationErrors","setExpandValidationErrors","expandLinterResults","setExpandLinterResults","linterSelectedSeverity","setLinterSelectedSeverity","expandIcon","stopPropagation","ProvideGraphQL","validateGraphQLFile","graphQLInfo","ariaLabel","leftLInkText","leftMenu","textTransform","leftMenuTextStyle","textAlign","textOverflow","typography","body1","whiteSpace","leftLInkTextHead","leftLInkText_IconLeft","LeftMenu","leftMenuWidth","fontFamily","bottom","left","top","leftLInk","paddingTop","paddingBottom","caption","textDecoration","leftLInkOverview","leftLink_Icon","leftMenuIconSize","leftLink_IconLeft","noIcon","leftLInkText_NoText","diplay","selectedMenu","appBarSelected","LeftMenuItem","Icon","to","route","head","strokeColor","iconSize","pathname","useLocation","menuPathPattern","isSelected","classNames","cloneElement","iconText","divider","number","appBar","element","history","listen","location","windowURL","window","webkitURL","dropzoneStyles","styles","acceptDrop","green","dropzone","dropZoneWrapper","preview","rejectDrop","red","group","flexDirection","popupHeader","iconView","subtitle","subtitleWrapper","marginBottom","imageGenWrapper","backgroundSelection","actionBox","imageContainer","Transition","ThumbnailView","selectedIconUpdate","setState","backgroundIndexUpdate","intl","open","fileObj","selectedTab","colorUpdate","Alert","formatMessage","File","newIconJson","backgroundIndex","blob","Blob","uploadThumbnail","hex","thumbnail","MaterialIcons","categories","selectedIcon","uploading","handleClick","bind","handleClose","revokeObjectURL","acceptedFile","cState","apiType","setImageUpdate","Api","APIProduct","addAPIProductThumbnail","addAPIThumbnail","hasThumbnail","createObjectURL","isEditable","imageUpdate","TransitionComponent","aria-labelledby","disableBackdropClick","fullScreen","square","src","alt","multiple","maxSize","activeClassName","rejectClassName","dropFile","getRootProps","getInputProps","rejectedFiles","isFileTooLarge","dropIcon","saveDisableEnable","Component","injectIntl","withAPI","withStyles","withTheme","showEndpoint","getProductionEndpoint","getSandboxEndpoint","expansionPanel","expansionPanelDetails","notConfigured","subHeading","lineHeight","textTrim","externalLink","dark","Endpoints","isPrototypedAvailable","defaultExpanded","pb","m","iconSpace","actionSpace","keyManagerSelect","KeyManager","keyManagersConfigured","setKeyManagersConfigured","configDispatcher","keyManagers","securityScheme","newKeyManagers","indexOf","APIContext","formControl","enabled","mb","fileinput","uploadedFile","certificatesHeader","addCertificateBtn","borderColor","borderStyle","borderWidth","certificateList","certDetailsHeader","uploadCertDialogHeader","alertWrapper","warningIcon","warningColor","deleteIcon","deleteIconDisable","Certificates","certificates","uploadCertificate","deleteCertificate","isMutualSSLEnabled","aliasList","setCertificateList","anchor","details","openCertificateDetails","setOpenCertificateDetails","alias","certificateToDelete","setCertificateToDelete","apiList","certificateUsageDetails","setCertificateUsageDetails","isDeleting","setDeleting","uploadCertificateOpen","setUploadCertificateOpen","getCertificateUsage","certAlias","getEndpointCertificateUsage","showCertificateDeleteDialog","cert","tier","endpoint","getClientCertificateStatus","currentTarget","getCertificateStatus","showCertificateDetails","certificateAlias","subject","VerbElement","isButton","customMenu","customButton","useMenuStyles","disableFocusRipple","SUPPORTED_VERBS","REST","WEBSUB","SSE","WS","AddOperation","operationsDispatcher","isAsyncAPI","inputLabel","useRef","labelWidth","setLabelWidth","useIntl","isWebSub","getSupportedVerbs","useReducer","newOperations","newOperationsDispatcher","current","offsetWidth","clearInputs","addOperation","operationTarget","operationVerbs","warning","websubOperationTarget","data","ref","htmlFor","renderValue","remaining","verbElements","allSelected","join","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","startsWith","onKeyPress","preventDefault","SaveOperations","updateOpenAPI","updateAsyncAPI","isUpdating","useHistory","isOpen","setIsOpen","isRevision","advertiseInfo","handleSave","handleSaveAndDeploy","aria-describedby","onBackdropClick","root","flexGrow","titleWrapper","titleLink","contentWrapper","contentAreaWidth","addNewWrapper","addNewHeader","h6","addNewOther","mainTitle","Create","newDoc","setNewDoc","saveDisabled","setSaveDisabled","listingPath","restAPI","createEditForm","Fragment","sm","lg","innerRef","node","promiseWrapper","addDocument","docPromise","doc","documentId","addFileToDocument","withRouter","radioGroup","formControlFirst","formControlLabel","typeTextWrapper","FormControlOdd","CreateEditForm","e","sourceType","summary","sourceUrl","otherTypeName","visibility","inlineContent","docId","updateDocument","disableName","nameNotDuplicate","nameMaxLengthExceeds","invalidUrl","nameEmpty","summeryEmpty","urlEmpty","invalidDocName","getDocument","apiNotFound","field","nameValidity","documentName","abortEarly","apiDocument","isDocumentPresent","settingsContext","settings","showNameHelper","multiline","onKeyUp","docVisibilityEnabled","changeType","changeSource","setDisable","getUrlHelperText","supportedDocTypes","contextType","AppContext","MonacoEditor","lazy","ReactMarkdown","splitWrapper","docName","markdownViewWrapper","MarkdownEditor","skipHtml","markdown","markdownSyntaxHighlighterProps","syntaxHighlighterProps","syntaxHighlighterDarkTheme","showAtOnce","setIsUpdating","setOpen","docContent","setDocContent","toggleOpen","updateDoc","getInlineContentOfDocument","markdownWithApiData","originalMarkdown","newMarkdown","fieldName","regex","replace","addApiContent","addInlineContentToDocument","fallback","language","options","selectOnLineNumbers","editorDidMount","editor","monaco","focus","children","remarkPlugins","remarkGfm","components","inline","exec","vscDarkPlus","vs","PreTag","editMetaButton","Edit","getDocumentsList","process","GenerateDocument","updateSwagger","safeDump","safeLoad","apiDescriptionDocument","hideTryIt","router","layout","Resources","operationProps","disableRateLimiting","hideAPIDefinitionLink","disableMultiSelect","disableUpdate","disableAddOperation","pageError","setPageError","setOperationRateLimits","markedOperations","setSelectedOperation","sharedScopes","setSharedScopes","sharedScopesByName","setSharedScopesByName","openAPISpec","setOpenAPISpec","securityDefScopes","setSecurityDefScopes","arns","setArns","resolvedSpec","setResolvedSpec","expandedResource","setExpandedResource","currentPolicies","policyAction","nextResourcePolicies","resourcePath","httpVerb","resourcePolicies","resourcePoliciesDispatcher","currentOperations","operationAction","updatedOperation","addedOperations","newData","reduce","resourceAcc","resourceKey","verbObj","verbList","verbListAcc","verbKey","newOperation","disable","newVerbListAcc","newResourceListAcc","findIndex","bodyIndex","parameter","defValue","selectedScope","scopeDescription","scope","alreadyExistCount","currentVerb","responses","200","onMarkAsDelete","currentSelections","nextSelectedOperations","isEmpty","localAPI","useMemo","resolveAndUpdateSpec","rawSpec","specCopy","SwaggerParser","securitySchemes","flows","implicit","securityDefinitions","setSecurityDefScopesFromSpec","getAmznResourceNames","apitype","getAllScopes","sharedScopesList","sharedScopesByNameList","modifiedScope","shared","isSOAPToREST","promisedInPolicies","getResourcePolicies","promisedOutPolicies","Promise","inPolicies","outPolicies","mappedPolicies","policy","out","throttlingPolicyLimit","policies","disableShrink","specErrors","enableSecurity","disableSecurity","verbObject","highlight","resourcePolicy","markAsDelete","copyOfOperations","reject","Error","verbInfo","isScopeExistsInOperation","secDef","disableDelete","supportedDataTypes","formData","header","cookie","iff","condition","matched","otherwise","getSupportedDataTypes","specVersion","paramType","getDataFormats","dataType","getParameter","getParameterTypes","tagClass","breakpoints","down","GroupOfOperations","currentTagInfo","tagInfo","endpointInputWrapper","textField","input","iconButton","iconButtonValid","endpointValidChip","endpointInvalidChip","endpointErrorChip","GenericEndpoint","endpointURL","editEndpoint","setAdvancedConfigOpen","esCategory","setESConfigOpen","deleteEndpoint","readOnly","serviceUrl","setServiceUrl","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","setUpdating","isErrorCode","setIsErrorCode","isWebSocket","apiID","testEndpoint","statusMessage","stripDiacritics","normalize","createFilterOptions","ignoreAccents","ignoreCase","matchFrom","getOptionLabel","filteredOptions","option","candidate","array","comp","i","defaultFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","debug","defaultValue","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","getOptionSelected","groupBy","handleHomeEndKeys","idProp","includeInputInList","inputValueProp","onHighlightChange","onInputChange","onOpen","openProp","openOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","setValue","setInputValue","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","querySelector","setHighlightedIndex","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","setRef","handleOpen","handleValue","isTouch","selectNewValue","reasonProp","origin","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","which","handleFocus","handleBlur","document","activeElement","handleInputChange","handleOptionMouseOver","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","selectionEnd","selectionStart","handleInputMouseDown","dirty","groupedOptions","Map","acc","onMouseDown","getInputLabelProps","onFocus","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","commentIcon","commentAddWrapper","flexFlow","commentAddButton","CommentAdd","currentLength","inputChange","handleClickAddComment","handleClickCancel","filterCommentToAddReply","handleShowReply","commentToFilter","addComment","addReply","CommentsAPI","add","newComment","cancelButton","zeroMinWidth","maxLength","maxCommentLength","buttonIcon","ImportDefinition","setSchemaDefinition","editAndImport","openAPIDefinitionImport","setOpenAPIDefinitionImport","isImporting","setIsImporting","isGraphQL","isGraphql","isSOAP","asyncAPIDefinitionImport","setAsyncAPIDefinitionImport","currentState","inputAction","formValidity","importingContent","updateGraphQLSchema","graphQLSchema","schemaDefinition","updateGraphQLAPIDefinition","handleOnValidate","isFormValid","dialogTitle","dialogContent","btnText","updateWSDLByFileOrArchive","updateWSDLByUrl","reader","contentType","newAPI","updateAsyncAPIDefinitionByFile","updateAsyncAPIDefinitionByUrl","updateAsyncAPIDefinition","updateAPIDefinitionByFile","updateAPIDefinitionByUrl","updateOASDefinition","DefinitionOutdated","openImport","setOpenImport","showDiff","setShowDiff","newDefinition","setNewDefinition","oldDefinition","setOldDefinition","isRendering","setIsRendering","buttonWarningColor","oldValue","splitView","disableWordDiff","leftTitle","rightTitle","promisedNewServiceDef","ServiceCatalog","searchServiceByKey","serviceInfo","promisedOldServiceDef","getWSDL","newServiceDef","oldServiceDef","getServiceDefinition","definitionType","beautify","reimportService","footer","leftLInkMain","leftMenuActive","topMenu","contentInside","footeremaillink","heading","pxToRem","fontWeightRegular","expandIconColor","headingText","customIcon","leftMenuIconMainSize","Details","allRevisions","allEnvRevision","authorizedAPI","openPageSearch","setAPI","setOpenPageSearch","setAPIProduct","getRevision","getDeployedEnv","handleAccordionState","getLeftMenuItemForResourcesByType","getLeftMenuItemForDefinitionByType","getTenantsByState","tenantList","prevProps","prevSettings","apiUUID","apiProdUUID","updateSettings","previousState","get","pathPrefix","api_uuid","apiDefinitionMenuItem","promisedUpdate","restApi","restApiProduct","revisionedApiProductId","getProductRevisions","revisionedApiId","getRevisions","getProductRevisionsWithEnv","getRevisionsWithEnv","isExpanded","user","setProperty","UserProperties","PORTAL_CONFIG_OPEN","API_CONFIG_OPEN","_updatedProperties","updatedProperties","toJson","update","updatedAPI","isSettingsLoading","pageLocation","uuid","redirectUrl","resourceNotFoundMessageText","defineMessages","titleMessage","bodyMessage","environmentLabel","per","externalStoresEnabled","lastUpdatedTime","lastUpdatedTimestamp","exact","from","subPaths","BASE","OVERVIEW_PRODUCT","OVERVIEW","API_DEFINITION","WSDL","API_DEFINITION_PRODUCT","SCHEMA_DEFINITION","ASYNCAPI_DEFINITION","LIFE_CYCLE","LIFE_CYCLE_PRODUCT","CONFIGURATION","RUNTIME_CONFIGURATION","RUNTIME_CONFIGURATION_WEBSOCKET","TOPICS","CONFIGURATION_PRODUCT","RUNTIME_CONFIGURATION_PRODUCT","ENDPOINTS","ENVIRONMENTS","ENVIRONMENTS_PRODUCT","OPERATIONS","RESOURCES_PRODUCT","APIProductOperations","RESOURCES_PRODUCT_EDIT","RESOURCES","APIOperations","SCOPES","DOCUMENTS","DOCUMENTS_PRODUCT","SUBSCRIPTIONS","SUBSCRIPTIONS_PRODUCT","SECURITY","COMMENTS","BUSINESS_INFO","BUSINESS_INFO_PRODUCT","PROPERTIES","PROPERTIES_PRODUCT","NEW_VERSION","MONETIZATION","MONETIZATION_PRODUCT","TRYOUT","TRYOUT_PRODUCT","EXTERNAL_STORES","ExternalStores","POLICIES","subPathKey","subPath","matchPath","BASE_PRODUCT","QUERYANALYSIS","withSettings","AuthorizedError","statusText","more","py","fill","oneOfType","FormattedMessage","LastUpdatedTime","float","moment","parseInt","calendar","fromNow","webpackContext","req","webpackContextResolve","__webpack_require__","o","resolve","module","exports","AccordianSummary","borderBottom","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","DevelopSectionMenu","useUser","getProperty","portalConfigsExpanded","setPortalConfigsExpanded","apiConfigsExpanded","setApiConfigsExpanded","section","advertised","mixins","gutters","buttonSuccess","checkItem","chip","imageWrapper","specialGap","resourceTitle","ListRoot","helpButton","helpIcon","htmlTooltip","fontWeightMedium","lifecycleWrapper","lifecycleIcon","leftSideWrapper","Overview","loadEndpoints","newApi","ApiContext","getResourcesClassForAPIs","parentClasses","addEventListener","removeEventListener","s","RenderMethodBase","RenderMethod","p","methodLower","operationChipColor","Operations","Consumer","resourceRow","ProductResources","resource","PureComponent","HUMAN_READABLE_SCHEMES","oauth2","basic_auth","mutualssl","api_key","Configuration","tooltip","transport","upperCaseString","solaceTransportProtocols","protocol","filteredItem","accessControl","capitalizeFirstLetter","lowerCaseString","accessControlRoles","workflowStatus","visibleRoles","Policies","ColorlibConnector","completedColor","overview","stepper","completed","activeColor","active","alternativeLabel","backgroundImage","viewInStoreLauncher","StepConnector","useColorlibStepIconStyles","zIndex","ColorlibStepIcon","forceComplete","step","clsx","instructions","iconTrue","iconFalse","pageLinks","disabledLink","pointerEvents","textLink","CustomizedStepper","deploymentsAvailable","setDeploymentsAvailable","isEndpointAvailable","isTierAvailable","lifecycleState","isPublished","useAppContext","usePublisherSettings","userNameSplit","split","tenantDomain","isMutualSslOnly","devportalUrl","steps","activeStep","updateLCStateOfAPI","updateLcState","errorResponse","isTestLinkDisabled","isDeployLinkDisabled","deployLinkToolTipTitle","connector","StepIconComponent","underline","RouterLink","mt","rel","href","AuthManager","isNotPublisher","finalLifecycleState","MetaData","provider","wordBreak","createdTime","originalDevPortalUrl","BusinessInformation","businessInformation","businessOwner","technicalOwner","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","productionEndpointSecurity","endpoint_security","sandboxEndpointSecurity","authTypes","NONE","BASIC","DIGEST","OAUTH","Topics","topics","getAsyncAPIDefinition","channels","topic","subscribe","publish","substr","paperCenter","itemPadding","arrowForwardIcon","right","arrowBackIcon","btnSpacing","tierList","closeButton","copyAPIConfig","copiedConfig","authorizationHeader","responseCachingEnabled","cacheTimeout","isDefaultVersion","enableSchemaValidation","maxTps","wsdlUrl","corsConfiguration","corsConfigurationEnabled","accessControlAllowCredentials","accessControlAllowOrigins","accessControlAllowHeaders","accessControlAllowMethods","apiOwner","vendor","configReducer","configAction","nextState","targetProperty","property","updatedProperty","DesignConfigurations","errorInAccessRoles","setErrorInAccessRoles","errorInRoleVisibility","setErrorInRoleVisibility","errorInTags","setErrorInTags","errorInExternalEndpoints","setErrorInExternalEndpoints","apiConfig","descriptionType","setDescriptionType","setOverview","overviewDocument","setOverviewDocument","prop","slackURLProperty","githubURLProperty","invalidTagsExist","DESCRIPTION_TYPES","addDocumentContent","deleteOverviewDocument","deleteDocument","DESCRIPTION","getDocuments","overviewDoc","restricted","px","updateContent","setIsDisabled","slackURL","githubURL","oldApi","pt","Link","availableTiers","endpointUrl","updatedEndpointConfig","endpointTypeForApi","UpdateWithoutDetails","availableEndpoint","setEndpointUrl","isValidEndpoint","setValidEndpoint","setAvailableTiers","asyncAPIPolicies","policyName","disableTypography","my","tierName","urlSchema","Joi","uri","empty","DefaultVersion","editorHeader","DescriptionEditor","setContent","mx","newContent","propsInner","AccessControl","roleValidity","setRoleValidity","userRoleValidity","setUserRoleValidity","isNone","invalidRoles","setInvalidRoles","otherValidSystemRoles","setOtherValidSystemRoles","every","SelectProps","menu","alwaysShowPlaceholder","blurBehavior","onAdd","systemRolePromise","base64url","encode","userRolePromise","userRole","chipRenderer","existingRole","alertGrid","alertTitle","AdvertiseInfo","oldPolicies","oldEndpointConfig","isDeployed","deploymentInfo","isEmptyAllowed","allow","isValidApiExternalProductionEndpoint","setValidApiExternalProductionEndpoint","isValidApiExternalSandboxEndpoint","setValidApiExternalSandboxEndpoint","isValidOriginalDevPortalUrl","setValidOriginalDevPortalUrl","handleOnChange","alert","StoreVisibility","roleExists","setRoleExists","isRestrictedByRoles","tenants","setTenants","TENANT_STATE_ACTIVE","Tags","isTagValid","setIsTagValid","invalidTags","setInvalidTags","isTagWithinLimit","setIsTagWithinLimit","regexPattern","currentInvalidTags","existingTag","oldTag","Social","listItemText","APICategories","setCategories","apiCategories","disableGutters","keepMounted","PaperProps","apiConfigJson","enableSubscriberVerification","RuntimeConfiguration","saveButtonDisabled","setSaveButtonDisabled","isNonWebSubAsyncAPI","updateComplexityList","setUpdateComplexityList","newState","noMandatoryOAuthBasicAuth","noMandatoryMutualSSL","updateComplexity","updateGraphqlPoliciesComplexity","kmNameList","km","ResponseCaching","isEnabled","isResponseCachingEnabled","environmentName","userStorageKey","User","LOCAL_STORAGE_USER","userData","localStorage","getItem","setItem","CORSConfiguration","isCorsEnabled","isAllowAllOrigins","accessControlAllowOrigin","oldOrigin","accessControlAllowHeader","oldHeader","accessControlAllowMethod","oldMethod","SchemaValidation","MaxBackendTps","bottomSpace","APISecurity","isPrototyped","apiContext","haveMultiLevelSecurity","Validate","resourcesWithSecurity","apiInProduct","op","ApplicationLevel","hasResourceWithSecurity","mandatoryValue","AuthorizationHeader","isHeaderNameValid","setIsHeaderNameValid","authorizationHeaderValue","validateHeader","TransportLevel","clientCertificates","setClientCertificates","getAllClientCertificates","resp","certificate","addClientCertificate","tmpCertificates","deleteClientCertificate","UploadCertificate","setAlias","setPolicy","setEndpoint","setSaving","setCertificate","isEndpointEmpty","setIsEndpointEmpty","isPoliciesEmpty","setPoliciesEmpty","aliasValidity","setAliasValidity","isRejected","setIsRejected","closeCertificateUpload","aliasValidation","certificateFile","extension","SelectEndpoint","ep","SelectPolicies","selectedPolicies","setPolicies","for","usageDialogHeader","CertificateUsage","usageData","setUsageData","setCount","isLoading","setIsLoading","fetchUsage","pagination","usageList","usageListItem","total","filterType","selectableRows","sort","print","download","viewColumns","customToolbar","paginated","serverSide","onChangePage","onChangeRowsPerPage","newRowsPerPage","Transports","itemWrapper","FormControl","subTitle","subTitleDescription","flowWrapper","editIcon","dialogPaper","GraphQLQueryAnalysis","setList","typelist","setTypeList","findSummation","List","Set","respond","ob","summation","complexityValue","getGraphqlPoliciesComplexity","res","getGraphqlPoliciesComplexityTypes","typeList","fieldList","setInitialComplexity","dividers","fixed","saveButton","UpdateComplexity","filterKeyWord","setFilter","typename","aria-controls","newArr","WebSubConfiguration","verbMap","sub","pub","asyncAPISpec","setAsyncAPISpec","initialWebsubSubscriptionConfig","websubSubscriptionConfiguration","enable","signingAlgorithm","signatureHeader","secret","websubSubscriptionConfigDispatcher","payload","verifySecurityScheme","resolvedChannels","resolveSpec","source","k","resolvedRef","arr","j","getRefTarget","AsyncOperation","trimmedVerb","setIsExpanded","toggleDelete","paperStyles","customDivider","linearProgress","highlightSelected","hexToRGBA","contentNoMargin","overlayUnmarkDelete","operationDeleteUndo","disableTouchRipple","invisible","DescriptionAndSummary","OperationGovernance","operationScopes","filteredApiScopes","sharedScope","apiScope","Parameters","disableForSolace","haveParameters","table","ListParameters","editingParameter","setEditingParameter","disableForSolaceAPI","form","EditParameter","currentParameter","paramAction","nextParameter","parameterActionDispatcher","isEditing","PayloadProperties","parameterContainer","checkBox","AddPayloadProperty","newPropertyDispatcher","addNewProperty","ListPayloadProperties","editingProperty","setEditingProperty","EditPayloadProperty","currentProperty","nextProperty","propertyActionDispatcher","Runtime","allEnvDeployments","getAllEnvironmentDeployments","environment","buildCallbackURL","host","port","getUriMappingHelperText","fqPath","uriMappingHelperText","setUriMappingHelperText","env","vhost","websubHttpPort","websubHttpsPort","SubscriptionConfig","setEnabled","c","r","boxFlex","flexWrap","pr","APILevelRateLimitingPolicies","apiRateLimits","setApiRateLimits","historyHead","LifeCycle","checkList","lcHistory","certList","updateData","handleChangeCheckList","promisedClientCerts","clientCerts","promisedAPI","promisedLcState","promisedLcHistory","getAPIProductByID","getLCStateOfAPIProduct","getLCHistoryOfAPIProduct","getLcState","getLcHistory","lcState","postState","checkItems","handleUpdate","buttonsWrapper","stateButton","LifeCycleUpdate","updateLifeCycleState","WORKFLOW_STATUS","CREATED","APPROVED","REJECTED","lifecycleChecklist","lifecycleStates","availableTransitions","isWorkflowPending","lcMap","set","isAppLayerSecurityMandatory","isCertAvailable","isBusinessPlanAvailable","lifecycleButtons","buttonDisabled","lifeCycleImage","API_CHANGE_LC","transitionState","data-value","DialogTitle","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","PublishWithoutDeploy","isExternalEndpointAvailable","availableExternalEndpoint","externalEndpoint","setExternalEndpoint","isValidExternalEndpoint","setValidExternalEndpoint","endIcon","PublishWithoutDeployProduct","LifeCycleImage","opacity","xmlns","viewBox","aria-hidden","transform","d","isolation","mixBlendMode","strokeWidth","strokeLinejoin","highLightMe","y","x","letterSpacing","wordSpacing","clipRule","fillRule","stroke","strokeLinecap","iconWarn","yellow","grid","labelsGrid","CheckboxLabels","lifecyclePending","transition","Slide","cleanupPendingTask","firstCol","personIcon","avatar","LifeCycleHistory","reverse","entry","previous","post","updatedTime","Documents","urlPrefix","Listing","View","EditContent","DocCreate","ResourceNotFound","TextEditor","actionTable","messageBox","actions","genDocumentButton","documentsPaper","LinkGenerator","docs","showAddDocs","docsToDelete","toggleAddDocs","getSortOrder","a","b","documentList","errorData","messageTxt","oldState","showActionsColumn","onRowsDelete","rowData","rowMeta","that","customBodyRender","tableMeta","cla","GoToEdit","displayAddContent","docContentEditPath","Delete","runAction","deleteDoc","apiName","DeleteMultiple","deleteDocs","docPromises","docIndexObj","Download","isFileAvailable","setIsFileAvailable","isSuccessful","setIsSuccessful","getFileForDocument","done","forceDownload","viewButton","ViewDocument","locals","___CSS_LOADER_EXPORT___","docTitle","docBadge","displayURL","displayURLLink","leftCell","summaryView","setCode","setDoc","loadContentForDoc","escapeHtml","html","HTMLRender","reactHTMLParser","decodeEntities","tagsNotAllowed","ReactHtmlParser","buttonMain","addResource","operationCopy","apiPolicies","apiScopesByName","handleUpdateList","handleApiThrottlePolicy","updateOperations","handleSaveAndDeployOperations","apiScopesByNameList","scopeObject","getAllSharedScopes","updatedList","updateApiScopes","resourceNotFoundMessage","setFilterByKeyWord","isOperationRateLimiting","dropDown","chipActive","link","listItem","resourceRoot","deleteButton","pathDisplay","descriptionWrapper","scopeSelect","descriptionWrapperUp","addParamRow","propsForm","deleteLink","verticalAlign","Operation","isSecurity","handleScopeChange","handlePolicyChange","newoperation","dropdownScopes","auth","hideParameters","targetText","isUsedInAPIProduct","usedProductIds","panel","autoWidth","IconComponent","ArrowDropDownIcon","renderInput","inputRoot","inputInput","renderSuggestion","suggestionProps","suggestion","itemProps","isHighlighted","highlightedIndex","selectedItem","getSuggestions","showEmpty","deburr","inputLength","keep","IntegrationDownshift","timeout","setTimeout","onSelect","changes","clearSelection","getItemProps","getLabelProps","getMenuProps","openMenu","min","max","floor","milliSeconds","newTimeout","handleTimeoutMin","handleTimeoutSec","AddParameter","initParameter","newParameter","newParameterDispatcher","isParameterExist","isParameterExistValue","paramIn","addNewParameter","hideParameterEdit","isRefParam","paramCopy","RequestBody","subtleText","SOAPToRESTListing","resourcePolicyIn","setResourcePolicyIn","resourcePolicyOut","setResourcePolicyOut","prefersDarkMode","useMediaQuery","openEditor","setOpenEditor","setTabIndex","selectedPolicy","editorProps","smoothScrolling","wordWrap","indicatorColor","textColor","tab","setPolicyContent","originalResourcePolicy","forwardRef","PolicyEditor","openConfirmation","setOpenConfirmation","saving","editorOptions","updateResourcePolicy","closeEditor","CloseConfirmation","SpecErrors","primaryTypographyProps","inset","GoToDefinitionLink","OperationsSelector","isIndeterminate","operationCount","operationWithSecurityCount","mr","apiCopy","endpointTypesWrapper","buttonSection","endpointValidityMessage","errorMessageContainer","implSelectRadio","defaultSwagger","setSwagger","endpointValidity","setAPIEndpointsValid","initState","generateMockScripts","endpointImplementationType","tmpSecurityInfo","endpointSecurity","toJSON","apiObject","apiDispatcher","isRedirect","apiObjectCopy","grantType","tokenUrl","clientId","clientSecret","username","password","generateEndpointConfig","endpointsContainer","swaggerDef","swaggerObj","onChangeAPI","endpointsDispatcher","saveAndRedirect","inlineMessageContainer","endpointTypeCard","cardContent","cardActions","borderTop","NewEndpointCreate","endpointImplType","setImplType","eligibleTypes","types","listing","endpointContainer","endpointName","sandboxHeading","endpointsWrapperLeft","borderRight","borderRightStyle","borderRightWidth","endpointsWrapperRight","endpointsTypeSelectWrapper","endpointTypesSelectWrapper","defaultEndpointWrapper","configDialogHeader","addLabel","endpointTypes","EndpointOverview","setEndpointType","supportedEnpointTypes","setSupportedEndpointType","epConfig","setEpConfig","endpointSecurityInfo","setEndpointSecurityInfo","advanceConfigOptions","setAdvancedConfigOptions","endpointSecurityConfig","setEndpointSecurityConfig","prod","endpointCategory","setEndpointCategory","openDialog","typeChangeConfirmation","setTypeChangeConfirmation","servicesList","setServicesList","getEndpointType","availableEndpoints","supportedTypeLists","epType","getServiceList","getEndpoints","handleOnChangeEndpointCategoryChange","endpointConfigCopy","endpointProp","modifiedEndpoint","endpointTypeProperty","outdated","changeEndpointType","selectedKey","tmpConfig","generatedEndpointConfig","handleEndpointTypeSelect","toggleAdvanceConfig","advanceEPConfig","advanceConfig","endpointInfo","getAdvanceConfig","toggleEndpointSecurityConfig","DEFAULT_ENDPOINT_SECURITY","handleEndpointSecurityChange","saveEndpointSecurityConfig","endpointSecurityObj","enType","newEndpointSecurityObj","closeEndpointSecurityConfig","updatePaths","epCategoryOnChangeHandler","overviewWrapper","services","existingService","editService","newService","serviceKey","service","handleEndpointCategorySelect","toggleESConfig","globalEpType","isSOAPEndpoint","onSaveAdvanceConfig","endpointConfigProperty","selectedEndpoints","onCancel","securityInfo","onChangeEndpointAuth","isProduction","useFetchScripts","setError","progress","setProgress","mockScripts","setMockScripts","getGeneratedMockScriptsOfAPI","MockImplEndpoints","scriptType","changedToType","setChangedToType","handleEndpointTypeChange","dropdown","MockedOASOperation","responseCode","MockedOASExample","oas2Examples","examples","isEmptyOAS3Content","isEmptyOAS2Examples","selectedMediaType","setSelectedMediaType","selectedExample","setSelectedExample","selectedExampleType","setSelectedExampleType","example","ArrowDropDown","mediaType","exampleType","lineNumbers","scrollbar","renderWhitespace","automaticLayout","minimap","defaultScript","scriptResetButton","getGeneratedMockScriptOfAPI","matchedResource","mockScript","MockScriptOperation","showReset","setShowReset","mockValueDetails","setMockValueDetails","onScriptChange","tmpPaths","mediationScript","script","originalScript","GenericOperation","configHeaderContainer","generalConfigContent","secondaryHeading","flexBasis","flexShrink","endpointConfigSection","generalConfigPanel","securityHeading","sandboxEndpointSwitch","GeneralConfiguration","isConfigExpanded","setConfigExpand","endpointCertificates","setEndpointCertificates","setAliasList","endpointCertificatesList","aliases","filteredEndpoints","epLookup","getEndpointCertificates","hidden","addCertificate","deleteEndpointCertificate","endpointTypeSelect","lbConfigBtn","wrapper","LoadbalanceFailoverConfig","isLBConfigOpen","setLBConfigOpen","addEndpoint","endpointTemplate","epConfigProperty","endpointList","removeEndpoint","indexToRemove","tmpEndpoints","getEndpointTypeHeading","lpConfigWrapper","apiEndpoints","failOvers","addNewEndpoint","handleLBConfigChange","lbConfig","closeLBConfigDialog","epInput","epTypeWrapper","epTypeName","leftArrow","leftArrowLight","dialogHeader","listItemOdd","EndpointListing","setEndpoints","selectedRef","listingWrapper","GenericEndpointAdd","algorithms","sessionManagementOps","defaultTemplateObj","configButtonContainer","LoadBalanceConfig","setLbConfigObject","algoClassNameError","setAlgoClassNameError","tmpLBConfig","handleFieldChange","algo","handleFailoverFieldChange","itemHeight","configContainer","configSubContainer","advanceDialogActions","AdvanceEndpointConfig","optimize","actionDuration","actionSelect","factor","retryDelay","retryErroCode","retryTimeOut","suspendDuration","suspendErrorCode","suspendMaxDuration","advanceConfigObj","setAdvanceConfig","errorCodes","actionItems","messageTypes","optimizeOptions","handleConfigFieldChange","di","messageType","radioWrapper","addParameter","eye","EndpointSecurity","securityValidity","setSecurityValidity","showAddParameter","setShowAddParameter","clientSecretIsMasked","setClientSecretIsMasked","parameterName","setParameterName","parameterValue","setParameterValue","grantTypes","tmpSecurity","customParameters","validateAndUpdateSecurityInfo","validity","toggleAddParameter","handleParameterChange","validateEmpty","itemValue","handleAddToList","customParametersCopy","oldRow","newRow","oldName","newName","handleDelete","items","renderCustomParameters","EditableParameterRow","setName","editMode","setEditMode","saveRow","addProperty","selectField","banner","Credentials","regions","aws","newEndpointConfig","ServiceEndpoint","selectedServiceUrl","setSelectedServiceUrl","defaultService","setEndpointValue","tagSizeSmall","hasPopupIcon","hasClearIcon","inputFocused","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","popper","modal","popperDisablePortal","listbox","listStyle","loading","noOptions","boxSizing","outline","WebkitTapHighlightColor","up","disabledOpacity","groupLabel","groupUl","DisablePortal","Autocomplete","startAdornment","ChipProps","clearText","closeIcon","closeText","disablePortal","forcePopupIcon","getLimitTagsText","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","Paper","PopperComponent","PopperComponentProp","Popper","popupIcon","renderGroupProp","renderGroup","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","renderListOption","optionProps","clientWidth","option2","index2","object","any","elementType","shapeRec","alignSelf","shapeCircaleBack","shapeInnerComplete","placeSelf","shapeInnerInactive","shapeDottedEnd","shapeDottedStart","plusIconStyle","shapeDottedStart1","textShape","textShape2","textPadding","textDelete","textShape3","textShape7","primaryEndpoint","secondaryEndpoint","textShape4","textShape8","textShape5","textShape6","button1","button2","shapeRecBack","shapeCircle","shapeCircleBlack","changeCard","noChangeCard","cardHeight","cardContentHeight","cardActionHeight","textOverlay","gridOverflow","createRevisionDialogStyle","sectionTitle","deployNewRevButtonStyle","popover","timePaddingStyle","labelSpace","labelSpacingDown","warningText","tableCellVhostSelect","vhostSelect","textCount","containerInline","containerOverflow","gridGap","gridTemplateColumns","gridAutoFlow","gridAutoColumns","infoAlert","clear","Environments","revisionCount","isDeployButtonDisabled","restProductApi","selectedRevision","setRevision","externalGateways","internalGateways","selectedVhosts","setVhosts","selectedVhostDeploy","setVhostsDeploy","defaultVhosts","vhosts","wsHost","extraRevisionToDelete","setExtraRevisionToDelete","setDescription","SelectedEnvironment","setSelectedEnvironment","confirmDeleteOpen","setConfirmDeleteOpen","revisionToDelete","setRevisionToDelete","confirmRestoreOpen","setConfirmRestoreOpen","revisionToRestore","setRevisionToRestore","setCurrentLength","openDeployPopup","setOpenDeployPopup","externalEnvEndpoints","setExternalEnvEndpoints","allExternalGatewaysMap","allExternalGateways","revision","envDetails","disPlayDevportal","displayOnDevportal","externalEnvWithEndpoints","protocolBindings","channelNames","channelName","channel","hasPublish","bindingProtocols","hasSubscribe","endpointURIs","endpointURI","toggleOpenConfirmDelete","revisionName","revisionId","toggleOpenConfirmRestore","handleCloseDeployPopup","handleClickOpen","handleDeleteSelect","handleSelect","revisions","oldRevision","displayOnDevPortal","handleSelectForBrokers","handleVhostSelect","handleVhostDeploySelect","deleteRevision","deleteProductRevision","createRevision","createProductRevision","runActionRestore","confirm","restoreRevision","restoreProductRevision","undeployRevision","envName","undeployProductRevision","deployRevision","deployProductRevision","createDeployRevision","envList","vhostList","confirmDeleteDialog","labelCancel","labelOk","getOrganizationFromAdditionalProperties","organization","item1","confirmRestoreDialog","ReturnItem1","revDescription","revName","revCreatedTime","handlePopoverClose","openPopover","onMouseEnter","onMouseLeave","transformOrigin","disableRestoreFocus","item6","item2","item3","item4","item5","ReturnItem6","anchorEl1","setAnchorEl1","startIcon","o1","unassignRevision","getGatewayAccessUrl","combined","wsPort","wssHost","wssPort","httpContext","httpPort","httpsPort","getVhostHelperText","selectionList","shorten","maxTextLen","maxtLen","gatewayHttpUrl","gatewayWsUrl","gatewayUrls","substring","rowsMax","checkedIcon","subheader","o2","o3","EnvDeployments","DisplayDevportal","restAPIProduct","check","setCheck","revisionUuid","displayInDevportalProduct","displayInDevportalAPI","textOptional","textRevision","textDeploy","textDescription","descriptionWidth","DeploymentOnboarding","classes1","environments","hasOnlyOneEnvironment","descriptionOpen","setDescriptionOpen","selectedEnvironment","solaceEnv","selectedSolaceEnvironment","setSelectedSolaceEnvironment","handleDescriptionOpen","emptyBox","Subscriptions","setPolices","subscriptionAvailability","availability","setAvailability","subscriptionAvailableTenants","setTenantList","subscriptions","setSubscriptions","updateInProgress","setUpdateInProgress","crossTenantSubscriptionEnabled","saveAPI","headline","popupHeadline","searchDiv","searchRoot","searchInput","searchIconButton","noDataMessage","tableColumnSize","tableColumnSize2","dialogColumnSize","dialog","invoiceTable","uniqueCell","InfoToolTip","disableColor","subscriberHeader","subscriptionStatus","BLOCKED","PROD_BLOCKED","SubscriptionTablePagination","ceil","SubscriptionsTable","totalSubscription","searchQuery","emptyColumnHeight","subscriberClaims","formatSubscriptionStateString","blockSubscription","blockProductionOnly","unblockSubscription","handleChangePage","handleChangeRowsPerPage","filterSubscriptions","isMonetizedPolicy","renderClaims","isNotCreator","fetchSubscriptionData","subscriptionId","changeRowsPerPage","blockSubscriptions","messages","errorMessage","unblockSubscriptions","applicationInfo","getSubscriberInfo","prevState","getMonetization","monetizationStatus","getSubscriptionPolicies","filteredPolicies","tierPlan","monetizationAttributes","pricePerRequest","claimsObject","claims","claim","BLOCK_SUBSCRIPTION","getSubscriptionBlockingButtons","isNotAuthorized","isMonetizedUsagePolicy","customFooter","muiPage","muiRowsPerPage","colSpan","ActionsComponent","subMails","emails","email","names","Tip","Tooltip","selectableRowsHeader","Invoice","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","getMonetizationInvoice","invoiceData","invoiceItem","insideArray","subscriptionPoliciesPaper","gridLabel","SubscriptionPoliciesManage","subscriptionPolicies","newSelectedPolicies","preMigrationPolicies","migratedCase","apiPolicy","subPolicy","migrateMessage","textControl","selectEmpty","subscriptionAvailabilityPaper","tenantsList","SimpleSelect","currentAvailability","setValues","isSpecificTenants","isUIElementDisabled","onSubmit","availabilityValue","displayEmpty","suggestions","DownshiftMultiple","newSelectedItem","inputValue2","tenantList2","setsuggestions","newSuggestions","tenant","domain","contentWrapperOverview","titleSub","verticalSpace","loadMoreLink","genericMessageWrapper","paperProgress","dialogContainer","allComments","comments","totalComments","handleExpandClick","handleLoadMoreComments","updateComment","onDeleteComment","commentsLimit","commentList","commentIdOfCommentToDelete","remainingComments","newTotal","newComments","cur","newAllCommentList","commentsUpdate","dayjs","extend","relativeTime","commentText","overflowWrap","cleanBack","Comment","replyId","editIndex","handleClickDeleteComment","handleShowEdit","showAddComment","showEditComment","handleConfirmDialog","filterRemainingComments","filterCommentToDelete","handleLoadMoreReplies","handleAddReply","handleDeleteReply","keyCount","parentCommentId","getAllCommentReplies","replyList","replyCount","existingComment","newRepliesList","newCount","newLimit","updatedComment","parentCommentIdOfCommentToDelete","replyCommentId","updatedRepliesList","reply","isOverview","commenterInfo","firstName","lastName","createdBy","commentIndex","fullName","toggleShowEdit","zvariant","CommentEdit","handleCategoryChange","handleClickUpdateComment","filterCommentToUpdate","filterCommentToUpdateReply","commentToEdit","replyIndex","time","unig","CommentOptions","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","getUser","getUserNameWithoutDomain","canDelete","isAdmin","canReply","isCreator","Scope","Scopes","FormControlLabel","helpText","hint","extraPadding","titleGrid","descriptionForm","CreateScope","validRoles","invalidRolesArray","valid","invalid","apiScopes","scopeAddDisabled","addScope","validateScopeName","handleScopeNameInput","validateScopeDescription","validateScopeDisplayName","handleRoleAddition","handleRoleDeletion","exist","bindings","aScope","promisedApiUpdate","redirectURL","EditScope","thisScope","scopeName","updateScope","handleInputs","originalScope","scopeObj","buttonProgress","api_data","editUrl","scopesList","resources","ops","setOpenLocal","deleteScope","Security","SecurityOverview","tableLayout","addJsonContent","showAddPolicy","formattedPolicy","toggleShowAddPolicy","updatePolicyData","policyIds","threatProtectionPolicies","policyId","getThreatProtectionPolicy","updatedPolicies","associatedApi","deleteThreatProtectionPolicyFromApi","n","formatPolicy","deletePolicy","AddPolicy","getThreatProtectionPolicies","currentApi","addThreatProtectionPolicyToApi","handlePolicyAdd","EditorDialog","AsyncAPIEditor","swaggerEditorWrapper","topBar","converterWrapper","downloadLink","progressLoader","updateApiWarning","serviceCatalog","onboarding","buttonText","warningIconStyle","APIDefinition","schemaContent","graphQL","asyncAPI","asyncAPIModified","convertTo","getConvertToFormat","swaggerModified","swaggerImporting","isAuditApiClicked","securityAuditProperties","isSwaggerValid","isAsyncAPIValid","isSwaggerUI","linterSelectedLine","handleNo","openEditorToImport","hasJsonStructure","onAuditApiClick","onChangeFormatClick","openUpdateConfirmation","updateSwaggerDefinition","updateAsyncAPIDefinitionAndDeploy","onChangeSwaggerContent","onChangeAsyncAPIContent","setErrors","promisedApi","getSchema","modifiedContent","formattedString","blobJson","blobYaml","validateDebounced","importingSwagger","swaggerContent","specFormat","toFormat","parsedContent","swaggerFile","validateSwagger","ValidationResponse","validateErr","asyncAPIContent","fileName","isApiProduct","encodeURIComponent","apiToken","collectionId","onEditContent","rootPaper","inlineDecoration","contentLine","htmlToolTip","referenceErrorTypography","referenceTypography","subheadingTypography","paperDiv","sectionHeadingTypography","auditSummaryDiv","auditSummarySubDiv","circularProgressBarScore","circularProgressBarScoreFooter","auditSummaryDivRight","columnOne","columnTwo","linkText","APISecurityAudit","createMuiTheme","useNextVariants","overrides","MUIDataTableBodyCell","MUIDataTableSelectCell","MUIDataTableToolbarSelect","searchTerm","lastTerms","termObject","regexPatterns","appendedString","getModel","findNextMatch","lineNumber","endLineNumber","finalMatchIndex","revealLineInCenter","startLineNumber","deltaDecorations","Range","startColumn","endColumn","isWholeLine","glyphMarginClassName","report","overallScore","numErrors","externalApiId","apiDefinition","criticalityObject","1","2","3","4","5","getSecurityAuditReport","grade","issues","rowType","dataObject","rowObject","specificDescription","pointer","criticality","roundScore","score","tooManyImpacted","pointersAffected","tooManyError","baseUrl","round","reportObject","linkToDetailedReport","errorColumns","glyphMargin","responsive","expandableRows","expandableRowsOnClick","renderExpandableRow","getMoreDetailUrl","linkToDetailedReportText","afterLinkText","overallScoreText","totalNumOfErrorsText","totalNumOfErrors","overallCriticalityText","overallCriticality","securitySummary","percent","dataValidationSummary","getMuiTheme","getRowData","semanticErrors","getErrorMuiTheme","warnings","securityNumOfIssuesText","securityNumOfIssues","issueCounter","securityScoreText","securityScore","securityCriticalityText","securityCriticality","dataNumOfIssuesText","dataNumOfIssues","dataScoreText","dataScore","dataCriticalityText","dataCriticality","isArchive","wsdl","loadWSDLInEditor","handleDownloadWSDLZip","getWSDLInfo","downloadWidget","downloadButtonContent","cursorStyle","A200","backLink","backIcon","backText","dateWrapper","lastUpdatedTypography","downloadApi","downloadApiFlex","revisionWrapper","topRevisionStyle","readOnlyStyle","activeRevision","APIDetailsTopMenu","isVisibleInStore","lastIndex","setRevisionId","isDownloadable","getDeployments","revisionKey","infoItem","buttonClass","export","zipFile","goToSearch","linkButton","goToWrapper","downshiftWrapper","backdrop","drawer","backdropFilter","GoTo","showSearch","setShowSearch","handleClickAway","productOnly","graphqlOnly","apiOnly","GoToSuggestions","currentSuggestions","RenderSuggestion","aria-haspopup","createNewVersionWrapper","createNewVersion","createNewVersionButtonColor","CreateNewVersionButton","API_COPY","paperRoot","emailStatus","isValidBusinessOwnerEmail","isValidTechnicalOwnerEmail","isFormUpdated","businessOwnerEmail","technicalOwnerEmail","noValidate","handleSubmit","checkBoxStyles","tableHead","Properties","additionalPropertiesTemp","github_repo","slack_url","setAdditionalProperties","showAddProperty","setShowAddProperty","propertyKey","setPropertyKey","propertyValue","setPropertyValue","editing","setEditing","isAdditionalPropertiesStale","setIsAdditionalPropertiesStale","setIsVisibleInStore","keywords","toggleAddProperty","isKeyword","hasWhiteSpace","whitespaceChars","char","oldKey","additionalPropertiesCopy","validateBeforeAdd","fieldKey","fieldValue","isDisplayInStore","newKey","newProperty","newPropertiesList","apiAdditionalProperties","additionalPropertiesCopyForMap","additionalPropertiesMap","colorPrimary","EditableRow","setKey","resetText","updateEditMode","Monetization","monStatus","getMonetizationData","getSettings","configureMonetizationToApiProduct","configureMonetizationToApi","monetizationAttribute","rightDataColumn","box","tableCel","tableHeadCell","stateWrapper","tableHeadTitle","BusinessPlans","monetizedPolices","monetizationQuery","policiesList","viewInExStoreLink","black","allExternalStores","setAllExternalStores","publishedExternalStores","setPublishedExternalStores","getPublishedExternalStores","publishedStoreIds","store","getAllExternalStores","publishAPIToExternalStores","successfulStores","FormLabel","CreateNewVersion","serviceVersion","newVersion","alreadyExists","hasSpecialChars","MaxLengthExceeds","isMaxLengthExceeds","versionList","getServiceByName","isDefaultVersionBool","createNewAPIVersion","redirectToReferrer","handleVersionChange","handleServiceVersionChange","handleDefaultVersionChange","SwaggerUI","centerItems","tryoutHeading","menuItem","tokenType","tasksReducer","TryOutConsole","apiKey","setAPIKey","deployments","setDeployments","selectedDeployment","setSelectedDeployment","oasDefinition","setOasDefinition","advAuthHeader","setAdvAuthHeader","advAuthHeaderValue","setAdvAuthHeaderValue","selectedEndpoint","setSelectedEndpoint","publisherSettings","generateKey","inProgress","getOAS","tasksStatus","tasksStatusDispatcher","generateInternalKey","keyResponse","apikey","getDeployedRevisions","deploymentsResponse","currentDeploymentsWithDisplayName","deploy","gwEnvironment","initialDeploymentSelection","swaggerResponse","isAdvertised","setServersSpec","serverUrl","schemes","updatedOasDefinition","oasCopy","selectedDeploymentVhost","DEFAULT_VHOST","pathSeparator","servers","transportPort","baseURL","replaceAll","basePath","decodedJWT","decodeJWT","isAPIRetired","unix","exp","artifactType","selectedGWEnvironment","currentSelection","deployment","accessTokenProvider","userNotificationPaper","AdvertiseDetailsPanel","resetBtn","btn","drawerInfo","policyObj","setDroppedPolicy","currentFlow","policySpec","handleDrawerClose","isEditMode","isAPILevelPolicy","applyToAll","setApplyToAll","updateApiOperations","updateAllApiOperations","policyAttributes","attr","specType","getValueOfPolicyParam","policyParamName","getError","specInCheck","validationRegex","getValue","specName","previousVal","hasAttributes","resetDisabled","Box","updateCandidates","attributeSpec","attribute","apiPolicyToSave","Grid","Button","Typography","TextField","InputLabel","Select","native","allowedValues","enumVal","FormHelperText","Checkbox","isDisabled","currentVal","isSaveDisabled","formHasAnError","formHasErrors","CircularProgress","drawerPaper","allPolicies","drawerOpen","setDrawerOpen","apiLevelPolicies","setPolicySpec","policySpecVal","getOperationPolicy","operationInAction","operationPolicies","uniqueKey","policyVersion","Drawer","ListItem","ListItemIcon","Settings","ListItemText","IconButton","Close","Divider","actionsBox","currentPolicyList","setCurrentPolicyList","deleteApiOperation","policyColor","stringToColor","policyBackgroundColor","hexToRGB","attributes","listeners","setNodeRef","isDragging","Transform","handleDrawerOpen","Avatar","stringAvatar","isAPISpecific","getOperationPolicyContent","apiPolicyResponse","getCommonOperationPolicyContent","commonPolicyResponse","policyToDelete","policyDisplayStartDirection","reversedPolicyList","policyListToDisplay","rearrangeApiOperations","sensors","activationConstraint","distance","collisionDetection","onDragEnd","over","policyListCopy","oldIndex","strategy","applicableFlows","dropzoneDiv","alignLeft","alignRight","alignCenter","droppablePolicyList","droppedPolicy","canDrop","drop","useDrop","collect","monitor","arrowColor","arrowDirection","flowSpecificPolicyAttachGrid","defaultPolicyForMigration","supportedGateways","supportedApiTypes","isChoreoConnectEnabled","policyList","requestFlowPolicyList","setRequestFlowPolicyList","responseFlowPolicyList","setResponseFlowPolicyList","faultFlowPolicyList","setFaultFlowPolicyList","requestFlowDroppablePolicyList","setRequestFlowDroppablePolicyList","responseFlowDroppablePolicyList","setResponseFlowDroppablePolicyList","faultFlowDroppablePolicyList","setFaultFlowDroppablePolicyList","requestList","responseList","faultList","requestFlowList","requestFlow","request","requestFlowAttachedPolicy","policyResponse","responseFlowList","responseFlow","responseFlowAttachedPolicy","faultFlowList","faultFlow","fault","faultFlowAttachedPolicy","ExpansionPanelDetails","operationSummaryGrid","ExpansionPanel","ExpansionPanelSummary","Badge","bgcolor","handleDialogClose","dialogOpen","isLocalToAPI","setLoading","getCommonOperationPolicy","Dialog","DialogContentText","PolicyViewForm","onDone","fetchPolicies","deleteOperationPolicy","policyCardText","policyActions","showCopyIcon","hovered","setHovered","setDialogOpen","drag","useDrag","dropEffect","containerStyle","onMouseOut","ListItemAvatar","singlePolicy","synapsePolicyDefinitionFile","setSynapsePolicyDefinitionFile","ccPolicyDefinitionFile","setCcPolicyDefinitionFile","PolicyCreateForm","onSave","policySpecification","policySpecContent","synapsePolicyDefinition","ccPolicyDefinition","addOperationPolicy","savePolicy","PATH_TEMPLATES","COMMON_POLICIES","flowTabs","flowTab","addPolicyBtn","paperPosition","setSelectedTab","gatewayType","GATEWAY_TYPE","synapse","choreoConnect","Card","CardContent","AddCircle","Tabs","Tab","SupportedGatewayTypes","setIsChangedToCCGatewayType","removeAPIPoliciesForGatewayChange","selectedGatewayType","isDialogBoxVisible","setIsDialogBoxVisible","isCCSelected","setIsCCSelected","HelpOutline","RadioGroup","Radio","defaultChecked","saveApi","updating","CustomSplitButton","gridItem","isAPILevelTabSelected","OperationsGroup","currentTab","operationListingBox","ccTypography","setAllPolicies","setIsChoreoConnectEnabled","apiPoliciesEnabled","setApiPoliciesEnabled","showMultiVersionPolicies","initApiLevelPolicy","getInitPolicyState","flow","policyItem","getInitState","clonedOperations","getInitAPILevelPoliciesState","clonedAPIPolicies","setApiOperations","setApiLevelPolicies","isAPIPoliciesEnabled","currentAPIPolicies","apiPoliciesPromise","getOperationPolicies","commonPoliciesPromise","getCommonOperationPolicies","apiPoliciesResponse","commonPoliciesResponse","apiSpecificPolicies","mergedList","unionByPolicyDisplayName","localeCompare","filteredByGatewayTypeList","filteredByAPITypeList","retrievedSpec","newApiOperations","newApiLevelPolicies","flowPolicy","newAPIPolicies","policyArray","deletePolicyUuid","providerValue","DndProvider","backend","isCCEnabled","handleTabChange","getewayTypeForPolicies","amber","InlineMessage","iconItem","spectralFunctions","spectralSeverityMap","0","spectralSeverityNames","validationResults","defaultRuleSet","extends","rules","linter","setRuleset","run","customRuleset","getLinterCustomRules","LinterCustomRuleset","parsedCustomRuleset","stack","anchorRef","selectedIndex","setSelectedIndex","contains","aria-expanded","prevOpen","TransitionProps","onClickAway","bytesParam","si","bytes","thresh","units","u","toFixed","baseStyle","activeStyle","acceptStyle","rejectStyle","DropZoneLocal","dropZoneObject","useDropzone","isDragActive","isDragAccept","isDragReject","containerStyles","showFilesList"],"mappings":"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c,4DAMxC,EApCIkqG,EAAe,wCAIDnuG,MAAS,IAmCE,EAvCV,EAIQ,EAmCdmuG,EAAA,OAAgB,6FAvFzBnuG,EAAS,gNAoBNkmE,EAAc,qNA4BjBioC,EAAe,yf,0PC2iBM,EAtmBV,EAAXzX,EAAc,CAChBvtF,OAAQ,CACJ,CACIvH,MAAO,WACPka,MAAO,YAEX,CACIla,MAAO,eACPka,MAAO,eAEX,CACIla,MAAO,WACPka,MAAO,YAEX,CACIla,MAAO,WACPka,MAAO,YAEX,CACIla,MAAO,yBACPka,MAAO,yBAEX,CACIla,MAAO,2BACPka,MAAO,yBAEX,CACIla,MAAO,aACPka,MAAO,yBAEX,CACIla,MAAO,wBACPka,MAAO,iBAEX,CACIla,MAAO,0BACPka,MAAO,iBAEX,CACIla,MAAO,4BACPka,MAAO,yBAEX,CACIla,MAAO,6BACPka,MAAO,yBAEX,CACIla,MAAO,wBACPka,MAAO,yBAEX,CACIla,MAAO,4BACPka,MAAO,yBAEX,CACIla,MAAO,yBACPka,MAAO,yBAEX,CACIla,MAAO,wBACPka,MAAO,yBAEX,CACIla,MAAO,qBACPka,MAAO,yBAEX,CACIla,MAAO,qBACPka,MAAO,yBAEX,CACIla,MAAO,oBACPka,MAAO,yBAEX,CACIla,MAAO,WACPka,MAAO,yBAEX,CACIla,MAAO,UACPka,MAAO,yBAEX,CACIla,MAAO,UACPka,MAAO,yBAEX,CACIla,MAAO,+BACPka,MAAO,iBAEX,CACIla,MAAO,+BACPka,MAAO,iBAEX,CACIla,MAAO,mCACPka,MAAO,iBAEX,CACIla,MAAO,mBACPka,MAAO,yBAEX,CACIla,MAAO,2BACPka,MAAO,iBAEX,CACIla,MAAO,8BACPka,MAAO,iBAEX,CACIla,MAAO,OACPka,MAAO,iBAEX,CACIla,MAAO,kBACPka,MAAO,iBAEX,CACIla,MAAO,QACPka,MAAO,iBAEX,CACIla,MAAO,YACPka,MAAO,iBAEX,CACIla,MAAO,cACPka,MAAO,iBAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,WACPka,MAAO,aAEX,CACIla,MAAO,qBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,iBAEX,CACIla,MAAO,iBACPka,MAAO,iBAEX,CACIla,MAAO,kBACPka,MAAO,iBAEX,CACIla,MAAO,aACPka,MAAO,iBAEX,CACIla,MAAO,gBACPka,MAAO,iBAEX,CACIla,MAAO,wBACPka,MAAO,iBAEX,CACIla,MAAO,4BACPka,MAAO,iBAEX,CACIla,MAAO,YACPka,MAAO,eAEX,CACIla,MAAO,SACPka,MAAO,gBAGfoyF,QAAS,CACL,CACItsG,MAAO,eACPka,MAAO,eAEX,CACIla,MAAO,eACPka,MAAO,eAEX,CACIla,MAAO,cACPka,MAAO,eAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,cACPka,MAAO,aAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,gBACPka,MAAO,aAEX,CACIla,MAAO,mBACPka,MAAO,aAEX,CACIla,MAAO,4BACPka,MAAO,aAEX,CACIla,MAAO,eACPka,MAAO,aAEX,CACIla,MAAO,qBACPka,MAAO,yBAEX,CACIla,MAAO,eACPka,MAAO,gBAEX,CACIla,MAAO,0BACPka,MAAO,gBAEX,CACIla,MAAO,sBACPka,MAAO,gBAEX,CACIla,MAAO,qBACPka,MAAO,eAEX,CACIla,MAAO,iBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,aAEX,CACIla,MAAO,sBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,eACPka,MAAO,aAEX,CACIla,MAAO,sBACPka,MAAO,aAEX,CACIla,MAAO,mBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,wBACPka,MAAO,aAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,iBACPka,MAAO,kBAEX,CACIla,MAAO,wBACPka,MAAO,kBAEX,CACIla,MAAO,0BACPka,MAAO,kBAEX,CACIla,MAAO,UACPka,MAAO,kBAEX,CACIla,MAAO,iBACPka,MAAO,kBAEX,CACIla,MAAO,mBACPka,MAAO,kBAEX,CACIla,MAAO,MACPka,MAAO,kBAEX,CACIla,MAAO,aACPka,MAAO,kBAEX,CACIla,MAAO,eACPka,MAAO,kBAEX,CACIla,MAAO,UACPka,MAAO,kBAEX,CACIla,MAAO,iBACPka,MAAO,kBAEX,CACIla,MAAO,mBACPka,MAAO,kBAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,0BACPka,MAAO,aAEX,CACIla,MAAO,gBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,aAEX,CACIla,MAAO,SACPka,MAAO,UAEX,CACIla,MAAO,gBACPka,MAAO,UAEX,CACIla,MAAO,oBACPka,MAAO,yBAEX,CACIla,MAAO,QACPka,MAAO,yBAEX,CACIla,MAAO,YACPka,MAAO,yBAEX,CACIla,MAAO,aACPka,MAAO,cAEX,CACIla,MAAO,WACPka,MAAO,aAGfkyF,YAAa,CACT,CACIpsG,MAAO,uBACPka,MAAO,iBAEX,CACIla,MAAO,iBACPka,MAAO,kBAEX,CACIla,MAAO,wBACPka,MAAO,kBAEX,CACIla,MAAO,0BACPka,MAAO,kBAEX,CACIla,MAAO,UACPka,MAAO,kBAEX,CACIla,MAAO,iBACPka,MAAO,kBAEX,CACIla,MAAO,mBACPka,MAAO,kBAEX,CACIla,MAAO,MACPka,MAAO,kBAEX,CACIla,MAAO,aACPka,MAAO,kBAEX,CACIla,MAAO,eACPka,MAAO,kBAEX,CACIla,MAAO,UACPka,MAAO,kBAEX,CACIla,MAAO,iBACPka,MAAO,kBAEX,CACIla,MAAO,mBACPka,MAAO,kBAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,0BACPka,MAAO,aAEX,CACIla,MAAO,gBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,0BAGfmyF,YAAa,CACT,CACIrsG,MAAO,aACPka,MAAO,cAEX,CACIla,MAAO,iBACPka,MAAO,cAEX,CACIla,MAAO,2BACPka,MAAO,cAEX,CACIla,MAAO,gBACPka,MAAO,cAEX,CACIla,MAAO,oBACPka,MAAO,qBAEX,CACIla,MAAO,SACPka,MAAO,UAEX,CACIla,MAAO,gBACPka,MAAO,UAEX,CACIla,MAAO,QACPka,MAAO,yBAEX,CACIla,MAAO,YACPka,MAAO,yBAEX,CACIla,MAAO,eACPka,MAAO,eAEX,CACIla,MAAO,cACPka,MAAO,eAEX,CACIla,MAAO,eACPka,MAAO,eAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,cACPka,MAAO,aAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,gBACPka,MAAO,aAEX,CACIla,MAAO,mBACPka,MAAO,aAEX,CACIla,MAAO,4BACPka,MAAO,aAEX,CACIla,MAAO,eACPka,MAAO,aAEX,CACIla,MAAO,eACPka,MAAO,gBAEX,CACIla,MAAO,0BACPka,MAAO,gBAEX,CACIla,MAAO,sBACPka,MAAO,gBAEX,CACIla,MAAO,qBACPka,MAAO,eAEX,CACIla,MAAO,iBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,aAEX,CACIla,MAAO,uBACPka,MAAO,aAEX,CACIla,MAAO,sBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,eACPka,MAAO,aAEX,CACIla,MAAO,sBACPka,MAAO,aAEX,CACIla,MAAO,mBACPka,MAAO,aAEX,CACIla,MAAO,oBACPka,MAAO,aAEX,CACIla,MAAO,wBACPka,MAAO,aAEX,CACIla,MAAO,YACPka,MAAO,aAEX,CACIla,MAAO,QACPka,MAAO,yBAEX,CACIla,MAAO,YACPka,MAAO,yBAEX,CACIla,MAAO,aACPka,MAAO,gBAGjB,EACa46E,EAAA,OAAY,6FAtmBrBA,EAAW,2d,iiBC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","file":"DeferredDetails.9037da1eaa05267174a5.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst VERSIONS = {\n    V3: new RegExp('[3][.][0][.][0-9]'),\n    V2: new RegExp('[2][.][0]'),\n};\n/**\n *\n *\n * @param {*} apiProduct\n */\nfunction getAPIProductTaggedOperations(apiProduct, openAPI) {\n    const taggedOperations = { Default: [] };\n    apiProduct.apis.map((apiOperations) => {\n        return apiOperations.operations.map((operation) => {\n            const { target, verb } = operation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive issues\n            // in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...operation };\n\n            if (!taggedOperations[apiOperations.name]) {\n                taggedOperations[apiOperations.name] = [];\n            }\n            taggedOperations[apiOperations.name].push(operationInfo);\n            return operationInfo;\n        });\n    });\n    return taggedOperations;\n}\n\n/**\n *\n *\n */\nfunction getTaggedOperations(api, openAPI) {\n    const taggedOperations = { Default: [] };\n    if (api.isAPIProduct()) {\n        return getAPIProductTaggedOperations(api, openAPI);\n    } else {\n        api.operations.map((apiOperation) => {\n            const { target, verb } = apiOperation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive\n            // issues in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...apiOperation };\n            if (openAPIOperation.tags) {\n                openAPIOperation.tags.map((tag) => {\n                    if (!taggedOperations[tag]) {\n                        taggedOperations[tag] = [];\n                    }\n                    taggedOperations[tag].push(operationInfo);\n                    return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n                });\n            } else {\n                taggedOperations.Default.push(operationInfo);\n            }\n            return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n        });\n        return taggedOperations;\n    }\n}\n\n/**\n * Return the definition version given the parsed spec object\n *\n * @param {SwaggerObject} spec\n * @returns {String} version\n */\nfunction getVersion(spec) {\n    return spec.openapi || spec.swagger;\n}\n/**\n *Extract the path parameters from URI template. User has to give the Open API spec version as well\n * https://github.com/OAI/OpenAPI-Specification/tree/master/versions\n * @param {String} target URI template\n * @param {String} openAPIVersion Should be a valid Open API specification version (i:e \"2.0\", \"3.0.0\")\n * @returns {Array} List of parameter objects according to the given spec version\n */\nfunction extractPathParameters(target, spec) {\n    const regEx = /[^{}]+(?=})/g;\n    const params = target.match(regEx) || [];\n    let parameters = [];\n    const openAPIVersion = getVersion(spec);\n    if (VERSIONS.V3.test(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.schema = {\n                type: 'string',\n                format: 'string',\n            };\n            return paraObj;\n        });\n    } else if (VERSIONS.V2.test(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.type = 'string';\n            paraObj.format = 'string';\n            return paraObj;\n        });\n    }\n\n    return parameters;\n}\n\n/**\n * Extract AsyncAPI path parameters from the channel name.\n * @param {*} target\n */\nfunction extractAsyncAPIPathParameters(target) {\n    const regEx = /[^{}]+(?=})/g;\n    const params = target.match(regEx) || [];\n    const parameters = { };\n    params.forEach((param) => {\n        parameters[param] = {\n            description: '',\n            schema: {\n                type: 'string',\n            },\n        };\n    });\n    return parameters;\n}\n\n/**\n *\n * Return the WSO2 specific scopes array (currently only use the first element of the array)\n * @param {*} operation\n * @param {*} openAPIVersion\n * @returns {Array} Scopes of the `default` security scheme\n */\nfunction getOperationScopes(operation, spec) {\n    const openAPIVersion = getVersion(spec);\n    let scopes = [];\n    if (VERSIONS.V3.test(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        } else if (operation['x-scope']) {\n            scopes = [operation['x-scope']];\n        }\n    } else if (VERSIONS.V2.test(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        } else if (operation['x-scope']) {\n            scopes = [operation['x-scope']];\n        }\n    }\n    return scopes;\n}\n\n/**\n * Return AsyncAPI operation scopes array.\n * @param {*} operation\n * @param {*} spec\n */\nfunction getAsyncAPIOperationScopes(operation) {\n    const scopes = [];\n    if (operation['x-scopes']) {\n        // eslint-disable-next-line no-unused-vars\n        Object.entries(operation['x-scopes']).forEach(([k, v]) => {\n            scopes.push(v);\n        });\n    }\n    return scopes;\n}\n\n/**\n * Map the api.operations array to swagger paths like object\n * @param {Array} operations Operations in API DTO\n * @returns {Object} Mapped operations object\n */\nfunction mapAPIOperations(operations) {\n    const temp = {};\n    for (const operation of operations) {\n        const { target, verb, ...rest } = operation;\n        if (!temp[target]) {\n            temp[target] = {\n                [verb]: rest,\n            };\n        } else {\n            temp[target][verb] = rest;\n        }\n    }\n    return temp;\n}\n\n/**\n *\n *\n * @param {*} selectedOperations\n * @param {*} operations\n * @returns\n */\nfunction isSelectAll(selectedOperations, operations) {\n    for (const path in operations) {\n        if (Object.prototype.hasOwnProperty.call(operations, path)) {\n            const verbs = operations[path];\n            if (\n                !selectedOperations[path]\n                || Object.keys(selectedOperations[path]).length !== Object.keys(verbs).length\n            ) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Check whether the provided object is a Ref object.\n *\n * @param {object} content : The object that needs to be checked.\n * @return {boolean} true if Ref, false otherwise.\n * */\nfunction isRef(content) {\n    let isReference = false;\n    if (typeof content === 'object') {\n        Object.keys(content).map((name) => {\n            isReference = name === '$ref';\n            return name;\n        });\n    }\n    return isReference;\n}\n\nexport {\n    mapAPIOperations,\n    getTaggedOperations,\n    getAPIProductTaggedOperations,\n    extractPathParameters,\n    extractAsyncAPIPathParameters,\n    getOperationScopes,\n    getAsyncAPIOperationScopes,\n    isSelectAll,\n    getVersion,\n    VERSIONS,\n    isRef,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport { updateUserLocalStorage, getUserLocalStorage } from 'AppData/UserStateUtils';\n\nconst WrappedExpansionPanel = (props) => {\n    const { id } = props;\n    const [expanded, setExpanded] = useState(getUserLocalStorage(`${id}-expanded`));\n    const setExpandState = (event, expandedState) => {\n        updateUserLocalStorage(`${id}-expanded`, expandedState);\n        setExpanded(expandedState);\n    };\n    return (<ExpansionPanel expanded={expanded} {...props} onChange={setExpandState} />);\n};\nWrappedExpansionPanel.muiName = 'ExpansionPanel';\n\nexport default WrappedExpansionPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Check this file for more info  <CARBON_APIMGT>/components/apimgt/org.wso2.carbon.apimgt.impl\n// /src/main/java/org/wso2/carbon/apimgt/impl/APIConstants.java\n\nconst DEFAULT_API_SECURITY_OAUTH2 = 'oauth2';\nconst API_SECURITY_BASIC_AUTH = 'basic_auth';\nconst API_SECURITY_API_KEY = 'api_key';\nconst API_SECURITY_MUTUAL_SSL = 'mutualssl';\nconst API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY = 'oauth_basic_auth_api_key_mandatory';\nconst API_SECURITY_MUTUAL_SSL_MANDATORY = 'mutualssl_mandatory';\n\nexport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n};\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\n\nconst ApiOperationContext = React.createContext({});\nexport const useApiOperationContext = () => useContext(ApiOperationContext);\nexport const ApiOperationContextProvider = ApiOperationContext.Provider;\nexport default ApiOperationContext;\n","import React, { useContext } from 'react';\n\nconst RevisionContext = React.createContext({ });\nexport const useRevisionContext = () => useContext(RevisionContext);\nexport const RevisionContextProvider = RevisionContext.Provider;\nexport default RevisionContext;\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * Utility method to get the endpoint property name based on the given endpoint type and category.\n *\n * @param {string} type The type of the endpoint (load_balance/ failover)\n * @param {string} category The endpoint category (production/ sandbox)\n * @return {string} The property name of the endpoints.\n */\nfunction getEndpointTypeProperty(type, category) {\n    if (type !== 'failover') {\n        return category;\n    } else {\n        return category === 'sandbox_endpoints' ? 'sandbox_failovers' : 'production_failovers';\n    }\n}\n\n/**\n * Merge the loadbalance/ failover endpoints to single object.\n *\n * @param {object} endpointConfig The endpoint config object\n * @return {object} {production: [], sandbox: []}\n * */\nfunction mergeEndpoints(endpointConfig) {\n    const type = endpointConfig.endpoint_type;\n    if (type === 'load_balance') {\n        return { production: endpointConfig.production_endpoints, sandbox: endpointConfig.sandbox_endpoints };\n    } else if (type === 'failover') {\n        const prodEps = [endpointConfig.production_endpoints].concat(endpointConfig.production_failovers);\n        const sandboxEps = [endpointConfig.sandbox_endpoints].concat(endpointConfig.sandbox_failovers);\n        return { production: prodEps, sandbox: sandboxEps };\n    }\n    return { production: [endpointConfig.production_endpoints], sandbox: [endpointConfig.sandbox_endpoints] };\n}\n\n/**\n * Method to get the endpoints templates based on the selected endpoint type (loadbalance/ failover) and whether is\n * http or address endpoint.\n *\n * @param {string} endpointType The endpoint type\n * @param {bool} isAddressEndpoint Whether the endpoint is soap or not.\n * @param {object} currentEndpointConfig The existing endpoint information.\n * @return {object} A endpoint template object.\n * */\nfunction getEndpointTemplateByType(endpointType, isAddressEndpoint, currentEndpointConfig) {\n    const tmpEndpointConfig = {};\n    if (endpointType === 'failover') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.production_failovers = currentEndpointConfig.production_failovers\n            ? currentEndpointConfig.production_failovers : [];\n        tmpEndpointConfig.sandbox_failovers = currentEndpointConfig.sandbox_failovers\n            ? currentEndpointConfig.sandbox_failovers : [];\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = true;\n    } else if (endpointType === 'load_balance') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.algoClassName = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.algoCombo = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.sessionManagement = '';\n        tmpEndpointConfig.sessionTimeOut = '';\n        if (currentEndpointConfig.production_endpoints) {\n            tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n                ? currentEndpointConfig.production_endpoints : [currentEndpointConfig.production_endpoints];\n        }\n        if (currentEndpointConfig.sandbox_endpoints) {\n            tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n                ? currentEndpointConfig.sandbox_endpoints : [currentEndpointConfig.sandbox_endpoints];\n        }\n        tmpEndpointConfig.failOver = false;\n    } else {\n        tmpEndpointConfig.endpoint_type = isAddressEndpoint === true ? 'address' : 'http';\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = false;\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Returns all the endpoints as a list.\n *\n * @param {object} endpointConfig The endpoint config object from the api.\n * @return {array} The list of endpoints.\n * */\nfunction endpointsToList(endpointConfig) {\n    const config = cloneDeep(endpointConfig);\n    const endpoints = [];\n    if (Array.isArray(config.production_endpoints)) {\n        endpoints.push(...config.production_endpoints);\n    } else {\n        endpoints.push(config.production_endpoints);\n    }\n\n    if (Array.isArray(config.sandbox_endpoints)) {\n        endpoints.push(...config.sandbox_endpoints);\n    } else {\n        endpoints.push(config.sandbox_endpoints);\n    }\n\n    if (config.endpoint_type === 'failover') {\n        if (config.sandbox_failovers) {\n            endpoints.push(...config.sandbox_failovers);\n        }\n        if (config.production_failovers) {\n            endpoints.push(...config.production_failovers);\n        }\n    }\n    return endpoints;\n}\n\n/**\n * Returns an endpoint config object template based on the implementation method.\n * Eg: Managed, Prototyped.\n *\n * @param {string} implementationType The endpoint implementation type.\n * @return {object} The endpoint template.\n * */\nfunction getEndpointConfigByImpl(implementationType) {\n    const tmpEndpointConfig = {};\n    if (implementationType === 'PROTOTYPED') {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.implementation_status = 'prototyped';\n        tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n        tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n    } else {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.production_endpoints = { url: '' };\n        tmpEndpointConfig.sandbox_endpoints = { url: '' };\n        tmpEndpointConfig.failOver = false;\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint config based on the selected endpoint type.\n * Supported endpoint types:\n * 1. http\n * 2. address\n * 3. prototyped\n * 4. awslambda\n * 5. default (Dynamic)\n * 6. service\n *\n * @param {string} endpointType The selected endpoint type.\n * @return {endpointConfig} Endpoint config object.\n * */\nfunction createEndpointConfig(endpointType) {\n    const tmpEndpointConfig = {};\n    switch (endpointType) {\n        case 'http':\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.failOver = false;\n            break;\n        case 'service':\n            tmpEndpointConfig.endpoint_type = 'service';\n            tmpEndpointConfig.failOver = false;\n            break;\n        case 'address':\n            tmpEndpointConfig.endpoint_type = 'address';\n            tmpEndpointConfig.failOver = false;\n            break;\n        case 'prototyped':\n            tmpEndpointConfig.implementation_status = 'prototyped';\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n            tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n            break;\n        case 'awslambda':\n            tmpEndpointConfig.endpoint_type = 'awslambda';\n            tmpEndpointConfig.access_method = 'role-supplied';\n            tmpEndpointConfig.assume_role = false;\n            tmpEndpointConfig.amznAccessKey = '';\n            tmpEndpointConfig.amznSecretKey = '';\n            tmpEndpointConfig.amznRegion = '';\n            tmpEndpointConfig.amznRoleArn = '';\n            tmpEndpointConfig.amznRoleSessionName = '';\n            tmpEndpointConfig.amznRoleRegion = '';\n            break;\n        default:\n            tmpEndpointConfig.endpoint_type = 'default';\n            tmpEndpointConfig.production_endpoints = { url: 'default' };\n            tmpEndpointConfig.sandbox_endpoints = { url: 'default' };\n            tmpEndpointConfig.failOver = false;\n            break;\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint template based on endpoint type.\n *\n * @param {string} type: Endpoint type (HTTP/ Address)\n * @return {object} Endpoint Template\n * */\nfunction getEndpointTemplate(type) {\n    if (type === 'address') {\n        return { url: '', endpoint_type: 'address', template_not_supported: false };\n    }\n    return { url: '', template_not_supported: false };\n}\n\nexport {\n    getEndpointTypeProperty,\n    mergeEndpoints,\n    getEndpointTemplateByType,\n    endpointsToList,\n    getEndpointConfigByImpl,\n    createEndpointConfig,\n    getEndpointTemplate,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport API from 'AppData/api';\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of a Scopes\n */\nclass Wsdl extends Resource {\n    /**\n     * Validate a WSDL file or an archive\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateFileOrArchive(file) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        const requestBody = {\n            requestBody: {\n                file,\n            },\n        };\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition(null, requestBody);\n        });\n    }\n\n    /**\n     * Validate a WSDL URL\n     *\n     * @static\n     * @param {*} url WSDL URL\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateUrl(url) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition(\n                {},\n                {\n                    requestBody: { url },\n                },\n            );\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} url WSDL url\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByUrl(url, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition(\n                {},\n                {\n                    requestBody: {\n                        url,\n                        additionalProperties: JSON.stringify(additionalProperties),\n                        implementationType,\n                    },\n                },\n            );\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByFileOrArchive(file, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition(\n                null,\n                {\n                    requestBody: {\n                        file,\n                        additionalProperties: JSON.stringify(additionalProperties),\n                        implementationType,\n                    },\n                },\n            );\n\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n}\n\nexport default Wsdl;\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { spectralSeverityMap as severityMap} from '../Linting/Linting'\n\nconst useStyles = makeStyles((theme) => ({\n\n    tableCell: {\n        border: 'none',\n        fontSize: '10px !important',\n    },\n    headerTableCell: {\n        background: 'transparent',\n        fontSize: 10,\n        fontWeight: 'bold',\n        border: 'none',\n    },\n    tableRow: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        cursor: 'pointer',\n    },\n    tableWrapper: {\n        '& table tr td:first-child': {\n            width: 10,\n        },\n        '& table tr td:nth-child(2)': {\n            width: 10,\n        },\n    },\n    headerTableRow: {\n        display: 'flex',\n    }\n\n}));\n\nexport default function LinterUI(props) {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const { linterResults, handleRowClick } = props;\n    const classes = useStyles();\n\n    function getData(type, line, message, code) {\n        return { type, line, message, code};\n    }\n\n    const columns = [\n        { id: 'type',\n            label: 'Type',\n            minWidth: 50,\n        },\n        { id: 'line',\n            label: 'Line',\n            minWidth: 50\n        },\n        {\n            id: 'message',\n            label: 'Message',\n            minWidth: 170,\n            align: 'left',\n        },\n    ];\n\n    const  rows = linterResults.map((item, index) => getData(\n            severityMap[item.severity],\n            item.range.start.line + 1, \n            item.message,\n            index,\n    ));\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }} className={classes.tableWrapper}>\n                <Table stickyHeader aria-label='linter-table'>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    className={classes.headerTableCell}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row) => {\n                                return (\n                                    <TableRow\n                                        key={row.code}\n                                        className={classes.tableRow}\n                                        onClick={() => handleRowClick(row.line)}\n                                    >\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell\n                                                    key={column.id}\n                                                    align={column.align}\n                                                    className={classes.tableCell}>\n                                                    {column.format && typeof value === 'number'\n                                                        ? column.format(value)\n                                                        : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component='div'\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    ISpectralDiagnostic,\n} from '@stoplight/spectral-core';\nimport { oas } from '@stoplight/spectral-rulesets';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { spectralSeverityMap, spectralSeverityNames } from \"./Linting\"\nimport { Grid, Tooltip, Typography } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n// TODO tmkasun: Possible to extend AsyncAPI rule set as well\nconst defaultRuleSet = { extends: [oas], rules: {} };\ntype APILintingProps = {\n    linterResults: ISpectralDiagnostic[],\n    handleChange: Function,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    activeButton: {\n        \"&:selected\": {\n            backgroundColor: theme.palette.background.default,\n        }\n    }\n}));\nexport const APILintingSummary = (props: APILintingProps) => {\n    const { linterResults, handleChange } = props;\n    const classes = useStyles();\n    const [selectedSeverity, setSelectedSeverity] = useState(null);\n    const severityCounts: { [key: number]: number } = {};\n    \n    if (linterResults) {\n        linterResults.forEach(({ severity }) => {\n            severityCounts[severity] = severityCounts[severity] + 1 || 1;\n        });\n    }\n    \n    return (\n        <Box ml={3}>\n            {linterResults === null && (\n                <FormattedMessage\n                    id=\"Apis.Details.APIDefinition.Linting.APILintingSummary.loading\"\n                    defaultMessage=\"Linting . . .\"\n                />\n            )}\n            {linterResults && (\n                <Tooltip title={\n                    Object.entries(spectralSeverityNames).map(([severity, name]) => {\n                        return `${name}:${severityCounts[Number(severity)]||0}${(Number(severity) !== 3) ? \", \": \"\"}` || '-';\n                    })\n                }>\n                    <ToggleButtonGroup\n                        exclusive\n                        value={selectedSeverity}\n                        size=\"small\"\n                        onChange={(event, value) => { \n                            setSelectedSeverity(value);\n                            handleChange(event, value) }}>\n                        {Object.entries(spectralSeverityMap).map(([severity, component]) => (\n                            <ToggleButton\n                                key={Math.random()}\n                                value={String(severity)}\n                            >\n                                <Box ml={1} display=\"flex\">\n                                    {component}\n                                    <Grid item>\n                                        <Box maxWidth='2rem'>\n                                            <Typography noWrap>\n                                                &nbsp;{severityCounts[Number(severity)] || 0}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                </Box>\n                            </ToggleButton>\n                        ))}\n                    </ToggleButtonGroup>\n                </Tooltip>\n            )}\n        </Box>\n    );\n};\nexport default APILintingSummary;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { FormattedMessage } from 'react-intl';\n\nconst RateLimitingLevels = {\n    API: 'api',\n    RESOURCE: 'resource',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    focusLabel: {\n        boxShadow: '1px 1px 1px 1px #efefef',\n        paddingRight: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * Handles the resource level and API level throttling UI switch\n * @export\n * @param {*} props\n * @returns\n */\nfunction APIRateLimiting(props) {\n    const {\n        updateAPI, operationRateLimits, onChange, value: currentApiThrottlingPolicy, isAPIProduct,\n        setFocusOperationLevel, focusOperationLevel,\n    } = props;\n    const classes = useStyles();\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(currentApiThrottlingPolicy);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const isResourceLevel = apiThrottlingPolicy === null;\n    const rateLimitingLevel = isResourceLevel ? RateLimitingLevels.RESOURCE : RateLimitingLevels.API;\n    const [apiFromContext] = useAPI();\n\n    // Following effect is used to handle the controlled component case, If user provide onChange handler to\n    // control this component, Then we accept the props as the valid input and update the current state value from props\n    useEffect(() => {\n        if (onChange) {\n            if (currentApiThrottlingPolicy === '' && apiFromContext.apiThrottlingPolicy) {\n                setApiThrottlingPolicy(apiFromContext.apiThrottlingPolicy);\n            } else {\n                setApiThrottlingPolicy(currentApiThrottlingPolicy);\n            }\n        }\n    }, [onChange, currentApiThrottlingPolicy]); // Do not expect to change the onChange during the runtime\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function updateRateLimitingPolicy(event) {\n        // If the selected option is resource, we set the api level rate limiting to null\n        const userSelection = event.target.value === RateLimitingLevels.RESOURCE\n            ? null : '';\n        if (onChange) {\n            // Assumed controlled component\n            onChange(userSelection);\n        } else {\n            setApiThrottlingPolicy(userSelection);\n        }\n        if (event.target.value === RateLimitingLevels.RESOURCE) {\n            setFocusOperationLevel(false);\n        }\n    }\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function resetChanges() {\n        setApiThrottlingPolicy(currentApiThrottlingPolicy);\n    }\n\n    let operationRateLimitMessage = (\n        <Typography variant='body1' gutterBottom>\n            You may change the rate limiting policies per operation\n            <Typography variant='caption' display='block' gutterBottom>\n                Expand an operation below to select a rate limiting policy for an operation\n            </Typography>\n        </Typography>\n    );\n    if (isAPIProduct) {\n        operationRateLimitMessage = (\n            <Typography variant='body1' gutterBottom>\n                Rate limiting polices of the source operation will be applied\n                <Typography variant='caption' display='block' gutterBottom>\n                    Rate limiting policy of an individual operation will be govern by the policy specified in the source\n                    operation\n                </Typography>\n            </Typography>\n        );\n    }\n    return (\n        <Paper>\n            <Grid container direction='row' spacing={3} justify='flex-start' alignItems='flex-start'>\n                <Grid item md={12} xs={12}>\n                    <Box ml={1}>\n                        <Typography variant='subtitle1' component='h3' gutterBottom>\n                            Operations Configuration\n                            <Tooltip\n                                fontSize='small'\n                                title='Configurations that affects on all the resources'\n                                placement='right-end'\n                                interactive\n                            >\n                                <IconButton aria-label='Operations Configuration help text'>\n                                    <HelpOutline />\n                                </IconButton>\n                            </Tooltip>\n                        </Typography>\n                    </Box>\n                    <Divider light variant='middle' />\n                </Grid>\n                <Grid item md={1} xs={1} />\n                <Grid item md={5} xs={11}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.APIRateLimiting.rate.limiting.level'\n                                defaultMessage='Rate limiting level'\n                            />\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Apply rate limiting in'\n                            value={rateLimitingLevel}\n                            onChange={updateRateLimitingPolicy}\n                            row\n                        >\n                            <FormControlLabel\n                                value={RateLimitingLevels.API}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='API Level'\n                                labelPlacement='end'\n                                id='api-rate-limiting-api-level'\n                            />\n                            <FormControlLabel\n                                value={RateLimitingLevels.RESOURCE}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                className={focusOperationLevel && classes.focusLabel}\n                                label='Operation Level'\n                                labelPlacement='end'\n                                id='api-rate-limiting-operation-level'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Box minHeight={70} borderLeft={1} pl={10}>\n                        {isResourceLevel ? (\n                            operationRateLimitMessage\n                        ) : (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                label='Rate limiting policies'\n                                value={apiThrottlingPolicy}\n                                onChange={({ target: { value } }) => (\n                                    onChange ? onChange(value) : setApiThrottlingPolicy(value))}\n                                helperText='Selected rate limiting policy will be applied to whole API'\n                                margin='dense'\n                                variant='outlined'\n                            >\n                                {operationRateLimits.map((rateLimit) => (\n                                    <MenuItem\n                                        key={rateLimit.name}\n                                        value={rateLimit.name}\n                                        id={'api-rate-limiting-api-level-' + rateLimit.name}\n                                    >\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Box>\n                </Grid>\n                {/* If onChange handler is provided we assume that component is getting controlled by its parent\n                so that, hide the save cancel action */}\n                {!onChange && (\n                    <>\n                        <Grid item md={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item>\n                            <Box ml={1}>\n                                <Button\n                                    onClick={saveChanges}\n                                    disabled={false}\n                                    variant='outlined'\n                                    size='small'\n                                    color='primary'\n                                >\n                                    Save\n                                    {isSaving && <CircularProgress size={24} />}\n                                </Button>\n                                <Box display='inline' ml={1}>\n                                    <Button size='small' onClick={resetChanges}>\n                                        Reset\n                                    </Button>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </Paper>\n    );\n}\nAPIRateLimiting.defaultProps = {\n    onChange: null,\n    isAPIProduct: false,\n};\nAPIRateLimiting.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n    onChange: PropTypes.oneOf([null, PropTypes.func]),\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    disabledAction: PropTypes.shape({}).isRequired,\n    value: PropTypes.string.isRequired,\n    isAPIProduct: PropTypes.bool,\n};\n\nexport default React.memo(APIRateLimiting);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport queryString from 'query-string';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport cloneDeep from 'lodash.clonedeep';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport MethodView from 'AppComponents/Apis/Details/ProductResources/MethodView';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport CONSTS from 'AppData/Constants';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        padding: 0,\n        marginTop: theme.spacing(1),\n        '& input': {\n            padding: '12px 14px',\n        },\n        display: 'flex',\n    },\n    paper: {\n        height: '100%',\n        borderRadius: 0,\n    },\n    apiWrapper: {\n        overflowY: 'auto',\n        height: 349,\n    },\n    ResourceWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        '& .frame': {\n            overflowY: 'auto',\n            height: 328,\n            border: '1px solid ' + theme.palette.grey[400],\n            borderRadius: theme.spacing(1),\n        },\n        '& .frame::-webkit-scrollbar': {\n            '-webkit-appearance': 'none',\n        },\n        '& .frame::-webkit-scrollbar:vertical': {\n            width: 11,\n        },\n        '& .frame::-webkit-scrollbar:horizontal': {\n            height: 11,\n        },\n        '& .frame::-webkit-scrollbar-thumb': {\n            borderRadius: theme.spacing(1),\n            border: '2px solid' + theme.palette.common.white,\n            backgroundColor: theme.palette.grey[400],\n        },\n        '& .frame.rightFrame': {\n            height: 369,\n        },\n    },\n    SelectedResourceWrapper: {\n        overflowY: 'auto',\n        overflowX: 'auto',\n        height: 321,\n    },\n    leftMost: {\n        background: theme.palette.grey[700],\n        color: theme.palette.getContrastText(theme.palette.grey[700]),\n        padding: theme.spacing(1),\n    },\n    rightMost: {\n        background: theme.palette.grey[600],\n        color: theme.palette.getContrastText(theme.palette.grey[600]),\n        padding: theme.spacing(1),\n    },\n    colTitle: {\n        background: theme.palette.grey[400],\n        color: theme.palette.getContrastText(theme.palette.grey[400]),\n        padding: theme.spacing(1),\n        fontWeight: 200,\n        minHeight: 25,\n    },\n    treeItemMain: {\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: theme.spacing(1),\n    },\n    treeItemMainWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    treeItem: {\n        '& .material-icons': {\n            fontSize: theme.spacing(2),\n            cursor: 'pointer',\n            marginRight: theme.spacing(1),\n        },\n        display: 'flex',\n        alignItems: 'center',\n        padding: '6px 0',\n    },\n    hr: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n    },\n    methodView: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    middleText: {\n        flex: 1,\n    },\n    selectedApi: {\n        background: theme.palette.grey[100],\n    },\n    selectedTitle: {\n        padding: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(2),\n        textDecorate: 'none',\n    },\n    selectedApiDescription: {\n        padding: '0px 16px',\n    },\n    messageWrapper: {\n        padding: theme.spacing(3),\n    },\n    tootBar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: '0 16px',\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: 5,\n        borderRadius: 5,\n        '& a': {\n            cursor: 'pointer',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n    },\n    inactiveIcon: {\n        color: theme.palette.grey[300],\n    },\n}));\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n    PATCH: 'patch',\n    OPTIONS: 'options',\n    HEAD: 'head',\n};\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction ProductResourcesEdit(props) {\n    const classes = useStyles();\n    const {\n        apiResources, setApiResources, isStateCreate, api, resourceNotFountMessage,\n    } = props;\n\n    // Define states\n    const [allApis, setAllApis] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    const [selectedApiPaths, setSelectedApiPaths] = useState([]);\n    const [selectedApi, setSelectedApi] = useState(null);\n    const [fromSearch, setFromSearch] = useState(false);\n    // Initialize the rest api libraries\n    const apiRestClient = new API();\n\n    /**\n     * This method is filtering apis base on the searchText entered. In no searchText provided it will give all apis.\n     *\n     * @param {*} [text=null]\n     * @returns a promise\n     */\n    const filterAPIs = (text = null) => {\n        if (text) {\n            // Build the search query and update\n            const inputValue = text.trim().toLowerCase();\n            const composeQuery = '?query=name:' + inputValue + ' type:HTTP';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            // TODO we need to make the limit and offset changeable from the UI ( paggination )\n            composeQueryJSON.limit = 100;\n            composeQueryJSON.offset = 0;\n            return API.search(composeQueryJSON);\n        } else {\n            return API.all({\n                query: {\n                    type: 'HTTP',\n                },\n            });\n        }\n    };\n\n    const isValidHttpVerb = (innerKey) => {\n        if (innerKey === resourceMethod.DELETE || innerKey === resourceMethod.POST\n                || innerKey === resourceMethod.GET || innerKey === resourceMethod.PUT\n                || innerKey === resourceMethod.PATCH || innerKey === resourceMethod.OPTIONS\n                || innerKey === resourceMethod.HEAD) {\n            return true;\n        }\n        return false;\n    };\n\n    const addPropsToSelectedApiPaths = (paths, apiId, latestApiResources = apiResources) => {\n        /* Add checked field to each resource object */\n        Object.keys(paths).map((key) => {\n            const methodObj = paths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if (isValidHttpVerb(innerKey)) {\n                    methodObj[innerKey].checked = false;\n\n                    // We need to check the latestApiResources for the same\n                    // API/Resource Name / Verb and  indicate it differently\n                    // Loop latestApiResources object\n                    const target = key;\n                    const verb = innerKey;\n                    let resourceFound = false;\n                    if (latestApiResources) {\n                        Object.keys(latestApiResources).map((resourcekey) => {\n                            const apiResource = latestApiResources[resourcekey];\n\n                            // Check if the the api slected from UI is same as the operation api id checking\n                            if (apiResource && apiId === apiResource.apiId) {\n                                // API is the same\n                                Object.keys(apiResource.operations).map((operationKey) => {\n                                    const operation = apiResource.operations[operationKey];\n                                    if (\n                                        operation\n                                        && operation.target === target\n                                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                                    ) {\n                                        // Operation is already there\n                                        resourceFound = true;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    if (resourceFound) {\n                        methodObj[innerKey].allreadyAdded = true;\n                    } else {\n                        methodObj[innerKey].allreadyAdded = false;\n                    }\n                }\n            });\n        });\n        setSelectedApiPaths(paths);\n    };\n\n    // Get the api swagger after an api is selected\n    const getApiSwagger = (apiSelected) => {\n        const { id } = apiSelected;\n        const promisedAPI = apiRestClient.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    addPropsToSelectedApiPaths(response.obj.paths, id);\n                    setSelectedApi(apiSelected);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n    const handleSearchTextChange = (event) => {\n        const apiPromise = filterAPIs(event.target.value);\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.status !== 'PROTOTYPED');\n                if (filteredList.length > 0) {\n                    setSelectedApi(list[0]);\n                }\n                setAllApis(filteredList);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n        setSearchText(event.target.value);\n        setFromSearch(event.target.value);\n    };\n    const updateResourceTree = (resourceToAdd, action, inputApiResources = null) => {\n        let updateStateHere = false;\n        let newApiResources = null;\n        if (!inputApiResources) {\n            // If a copy of the state variable is not passed from the calling method we\n            // have to make a copy inside here before doing modifications to that\n            newApiResources = cloneDeep(apiResources);\n            updateStateHere = true;\n        } else {\n            newApiResources = inputApiResources;\n        }\n        const {\n            target, verb, apiId, name, version,\n        } = resourceToAdd;\n        const newResource = {\n            id: null,\n            target,\n            verb: verb.toUpperCase(),\n            authType: null,\n            throttlingPolicy: null,\n            scopes: [],\n        };\n        let apiFound = false;\n\n        // Loop copy of apiResources object\n        Object.keys(newApiResources).map((key, indexA) => {\n            const apiResource = newApiResources[key];\n\n            // Check if the the api slected from UI is same as the operation api id trying to remove.\n            if (apiResource && apiId === apiResource.apiId) {\n                apiFound = true;\n                let operationFound = false;\n                Object.keys(apiResource.operations).map((innerKey, indexB) => {\n                    const operation = apiResource.operations[innerKey];\n                    if (\n                        operation\n                        && operation.target === target\n                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                    ) {\n                        // Operation is already there\n                        operationFound = true;\n                        if (action === 'remove') {\n                            if (apiResource.operations.length > 1) {\n                                apiResource.operations.splice(indexB, 1);\n                            } else {\n                                newApiResources.splice(indexA, 1);\n                            }\n                        }\n                    }\n                });\n                // Operation not added .. so we need to add that\n                if (!operationFound && action === 'add') {\n                    apiResource.operations.push(newResource);\n                }\n            }\n        });\n\n        if (!apiFound) {\n            // Add api object\n            newApiResources.push({\n                name,\n                apiId,\n                operations: [newResource],\n                version,\n            });\n        }\n        // When we are adding the resources in a loop we do not care about the return but we simply set the state here.\n        if (updateStateHere) {\n            setApiResources(newApiResources);\n            // We need to call this in order to set other properties\n            if (apiId === selectedApi.id) {\n                addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), apiId, newApiResources);\n            }\n        }\n        return newApiResources;\n    };\n\n    const updateCheckBox = (key, innerKey) => {\n        // we need to copy the object from the state and modify it before set it to the state\n        const prevSelectedApiPaths = { ...selectedApiPaths };\n\n        // Now we inverse the checked value\n        prevSelectedApiPaths[key][innerKey].checked = !prevSelectedApiPaths[key][innerKey].checked;\n\n        // Then we set state\n        setSelectedApiPaths(prevSelectedApiPaths);\n    };\n    const addSelectedResourcesToTree = (addAll = false) => {\n        /* Add checked field to each resource object */\n        const newApiResources = cloneDeep(apiResources);\n        Object.keys(selectedApiPaths).map((key) => {\n            const methodObj = selectedApiPaths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if ((methodObj[innerKey].checked || addAll) && isValidHttpVerb(innerKey)) {\n                    // We need to add this to apiResources array\n                    updateResourceTree(\n                        {\n                            target: key,\n                            verb: innerKey,\n                            apiId: selectedApi.id,\n                            name: selectedApi.name,\n                            version: selectedApi.version,\n                        },\n                        'add',\n                        newApiResources,\n                    );\n                }\n            });\n        });\n        setApiResources(newApiResources);\n        addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), selectedApi.id, newApiResources);\n    };\n    useEffect(() => {\n        // Get all apis\n        const apiPromise = filterAPIs();\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.lifeCycleStatus !== 'PROTOTYPED' &&\n                    theApi.lifeCycleStatus !== 'RETIRED' && theApi.lifeCycleStatus !== 'DEPRECATED'\n                );\n\n                setAllApis(filteredList);\n                if (filteredList.length > 0) {\n                    setSelectedApi(filteredList[0]);\n                    getApiSwagger(filteredList[0]);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n    return (\n        <>\n            {allApis.length === 0 && !fromSearch ? (\n                <Grid container>\n                    <Typography className={classes.messageWrapper}>\n                        <FormattedMessage\n                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.ApisnotFound'\n                            defaultMessage='No REST APIs are created yet'\n                        />\n                    </Typography>\n                </Grid>\n            ) : (\n                <>\n                    {!isStateCreate && (\n                        <Grid container>\n                            <>\n                                <Grid item xs={8} className={classes.leftMost}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.find.and.select'\n                                            defaultMessage='Find and select resources for the API Product'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={4} className={classes.rightMost}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.selected'\n                                            defaultMessage='Selected resources of API Product'\n                                        />\n                                    </Typography>\n                                </Grid>\n                            </>\n                        </Grid>\n                    )}\n                    <Grid container>\n                        {/* ************************************************ */}\n                        {/* 1st column API search and select column          */}\n                        {/* ************************************************ */}\n                        <Grid item xs={3}>\n                            <div className={classes.colTitle}>\n                                <Typography>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.select.an.api'\n                                        defaultMessage='Select an API'\n                                    />\n                                </Typography>\n                            </div>\n                            <Paper>\n                                <div className={classes.searchWrapper}>\n                                    <TextField\n                                        id='outlined-full-width'\n                                        label='API'\n                                        style={{ margin: 8 }}\n                                        placeholder='Filter APIs'\n                                        helperText='Filter by name'\n                                        onChange={handleSearchTextChange}\n                                        value={searchText}\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </div>\n                                <div className={classes.apiWrapper}>\n                                    <List dense component='nav'>\n                                        {allApis.map((apiObj) => {\n                                            const labelId = `checkbox-list-label-${apiObj.id}`;\n\n                                            return (\n                                                <ListItem\n                                                    key={apiObj.id}\n                                                    role={undefined}\n                                                    dense\n                                                    button\n                                                    className={\n                                                        selectedApi\n                                                        && apiObj.id === selectedApi.id\n                                                        && classes.selectedApi\n                                                    }\n                                                >\n                                                    <ListItemText\n                                                        id={labelId}\n                                                        primary={apiObj.name}\n                                                        secondary={`${apiObj.version} - ${apiObj.context}`}\n                                                        onClick={() => getApiSwagger(apiObj)}\n                                                    />\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* 2nd column Resource Selection                    */}\n                        {/* ************************************************ */}\n                        <Grid item xs={5}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle}>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.api.resources'\n                                            defaultMessage='Select API Resources'\n                                        />\n                                    </Typography>\n                                </div>\n                                {selectedApi && (\n                                    <Typography variant='h5' component='h2' className={classes.selectedTitle}>\n                                        {selectedApi.name}\n                                    </Typography>\n                                )}\n                                <div className={classes.tootBar}>\n                                    <Button\n                                        onClick={() => addSelectedResourcesToTree()}\n                                        onKeyDown={() => addSelectedResourcesToTree()}\n                                        id='add-selected-resources'\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                        toolbar.add.selected'\n                                                defaultMessage='Add Selected'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </Button>\n                                    <VerticalDivider />\n                                    <Button\n                                        onClick={() => addSelectedResourcesToTree(true)}\n                                        onKeyDown={() => addSelectedResourcesToTree(true)}\n                                        id='add-all-resources-btn'\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.toolbar.\n                                                add.all'\n                                                defaultMessage='Add All'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </Button>\n                                </div>\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame'>\n                                        <List dense id='resource-wrapper'>\n                                            {Object.keys(selectedApiPaths).map((key) => {\n                                                const path = selectedApiPaths[key];\n                                                const labelId = `checkbox-list-label_${key}`;\n                                                return Object.keys(path).map((innerKey) => {\n                                                    const methodObj = path[innerKey];\n                                                    return (\n                                                        CONSTS.HTTP_METHODS.includes(innerKey) && (\n                                                            <ListItem\n                                                                key={`${innerKey} - ${key}`}\n                                                                role={undefined}\n                                                                dense\n                                                            >\n                                                                <ListItemIcon style={{ minWidth: 35 }}>\n                                                                    <Checkbox\n                                                                        edge='start'\n                                                                        checked={methodObj.checked}\n                                                                        tabIndex={-1}\n                                                                        disableRipple\n                                                                        onChange={() => updateCheckBox(key, innerKey)}\n                                                                        color='primary'\n                                                                        disabled={methodObj.allreadyAdded}\n                                                                        inputProps={\n                                                                            {\n                                                                                'aria-label': 'Select API resource',\n                                                                            }\n                                                                        }\n                                                                    />\n                                                                </ListItemIcon>\n                                                                <ListItemText\n                                                                    id={labelId + innerKey}\n                                                                    primary={(\n                                                                        <div>\n                                                                            <MethodView\n                                                                                method={innerKey}\n                                                                                className={classes.methodView}\n                                                                            />\n                                                                            <span>{key}</span>\n                                                                        </div>\n                                                                    )}\n                                                                    secondary={\n                                                                        methodObj['x-auth-type']\n                                                                    && methodObj['x-throttling-tier']\n                                                                    && `${methodObj['x-auth-type']} - ${\n                                                                        methodObj['x-throttling-tier']\n                                                                    }`\n                                                                    }\n                                                                    onClick={() => updateResourceTree(\n                                                                        {\n                                                                            target: key,\n                                                                            verb: innerKey,\n                                                                            apiId: selectedApi.id,\n                                                                            name: selectedApi.name,\n                                                                            version: selectedApi.version,\n                                                                        },\n                                                                        'add',\n                                                                    )}\n                                                                    className={classes.middleText}\n                                                                />\n                                                                <ListItemSecondaryAction>\n                                                                    {methodObj.allreadyAdded && (\n                                                                        <Icon className={classes.inactiveIcon}>\n                                                                            chevron_right\n                                                                        </Icon>\n                                                                    )}\n                                                                    {!methodObj.allreadyAdded && (\n                                                                        <IconButton\n                                                                            edge='end'\n                                                                            aria-label='comments'\n                                                                            onClick={() => updateResourceTree(\n                                                                                {\n                                                                                    target: key,\n                                                                                    verb: innerKey,\n                                                                                    apiId: selectedApi.id,\n                                                                                    name: selectedApi.name,\n                                                                                    version: selectedApi.version,\n                                                                                },\n                                                                                'add',\n                                                                            )}\n                                                                        >\n                                                                            <Icon>chevron_right</Icon>\n                                                                        </IconButton>\n                                                                    )}\n                                                                </ListItemSecondaryAction>\n                                                            </ListItem>\n                                                        )\n                                                    );\n                                                });\n                                            })}\n                                        </List>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* Third column with  selected resources            */}\n                        {/* ************************************************ */}\n                        <Grid item xs={4}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle} />\n                                {api.name && (\n                                    <>\n                                        <Typography variant='h5' component='h2' className={classes.selectedTitle}>\n                                            {api.name}\n                                        </Typography>\n                                    </>\n                                )}\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame rightFrame'>\n                                        {allApis.length > 0 && apiResources && apiResources.length === 0 && (\n                                            <div className={classes.messageWrapper}>\n                                                <Typography component='p'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                                    empty.title'\n                                                        defaultMessage='Use the left side panel to add resources'\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        )}\n                                        {apiResources\n                                        && apiResources.length > 0\n                                        && Object.keys(apiResources).map((key) => {\n                                            const apiResource = apiResources[key];\n                                            return (\n                                                <div key={apiResource.name}>\n                                                    <div className={classes.treeItemMain}>\n                                                        <Typography component='p'>\n                                                            {apiResource.name}\n                                                            {' - '}\n                                                            {apiResource.version}\n                                                        </Typography>\n                                                    </div>\n                                                    <div className={classes.treeItemMainWrapper}>\n                                                        {Object.keys(apiResource.operations).map((innerKey) => {\n                                                            const operation = apiResource.operations[innerKey];\n                                                            const { target, verb } = operation;\n                                                            return (\n                                                                <div\n                                                                    key={`${apiResource.apiId}_${verb}_${target}`}\n                                                                    className={classes.treeItem}\n                                                                >\n                                                                    <MethodView\n                                                                        method={verb}\n                                                                        className={classes.methodView}\n                                                                    />\n                                                                    <Typography variant='body2'>{target}</Typography>\n                                                                    <hr className={classes.hr} />\n                                                                    <IconButton\n                                                                        onClick={() => updateResourceTree(\n                                                                            {\n                                                                                target,\n                                                                                verb,\n                                                                                apiId: apiResource.apiId,\n                                                                                name: apiResource.name,\n                                                                                version: apiResource.version,\n                                                                            },\n                                                                            'remove',\n                                                                        )}\n                                                                        aria-label={\n                                                                            'delete resource ' + apiResource.name\n                                                                        }\n                                                                    >\n                                                                        <Icon>\n                                                                            delete\n                                                                        </Icon>\n                                                                    </IconButton>\n                                                                </div>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </>\n    );\n}\nProductResourcesEdit.propTypes = {\n    apiResources: PropTypes.instanceOf(Array).isRequired,\n    setApiResources: PropTypes.func.isRequired,\n    isStateCreate: PropTypes.isRequired,\n    api: PropTypes.isRequired,\n    resourceNotFountMessage: PropTypes.string.isRequired,\n};\nexport default ProductResourcesEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\nimport Configurations from 'Config';\n\nfunction MethodView(props) {\n    console.info(Configurations.app);\n    const theme = useTheme();\n    const { method, className } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method.toLowerCase()] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method.toLowerCase()]);\n    }\n    return (\n        <Chip\n            label={method}\n            className={className || ''}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, width: 65,\n            }}\n        />\n    );\n}\nMethodView.propTypes = {\n    className: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n};\n\nexport default MethodView;\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable */\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * An abstract representation of an Comments\n */\nclass Comments extends Resource {\n    constructor(parentId, content, category, kwargs) {\n        super();\n        let properties = kwargs;\n        if (parentId instanceof Object) {\n            properties = parentId;\n            Utils.deepFreeze(properties);\n            this._data = properties;\n            for (const key in properties) {\n                if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                    this[key] = properties[key];\n                }\n            }\n        } else {\n            this.parentId = parentId;\n            this.content = content;\n            this.category = category;\n            this.id = null;\n            this.replies = [];\n        }\n\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    /**\n     * Add new comment to an existing API\n     * @param apiId apiId of the api to which the comment is added\n     * @param commentInfo comment text\n     * * TODO: remove\n     */\n    static add(apiId, comment, replyTo) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(),\n            Utils.CONST.API_CLIENT).client;\n        return apiClient.then(client => {\n            return client.apis.Comments.addCommentToAPI(\n                { apiId, replyTo },\n                { requestBody: comment }, Resource._requestMetaData()\n            );\n        })\n    }\n\n    /**\n     * Get all comments for a particular API\n     * @param apiId api id of the api to which the comment is added\n     * * TODO: remove\n     */\n     static all(apiId, limit, offset) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(),\n            Utils.CONST.API_CLIENT).client;\n        return apiClient.then(client => {\n            return client.apis.Comments.getAllCommentsOfAPI({ apiId , limit, offset });\n        })\n    }\n\n    /**\n     * Delete a comment belongs to a particular API\n     * @param apiId api id of the api to which the comment belongs to\n     * @param commentId comment id of the comment which has to be deleted\n     * * TODO: remove\n     */\n    deleteComment(apiId, commentId, callback = null) {\n        let promise = this.client\n            .then(client => {\n                return client.apis.Comments.deleteComment(\n                    { apiId: apiId, commentId: commentId },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n    /**\n     * Update a comment belongs to a particular API\n     * @param apiId apiId of the api to which the comment is added\n     * @param commentId comment id of the comment which has to be updated\n     * @param commentInfo comment text\n     * TODO: remove\n     */\n    updateComment(apiId, commentId, commentInfo, callback = null) {\n        let promise = this.client\n            .then(client => {\n                return client.apis['Comment (Individual)'].put_apis__apiId__comments__commentId_(\n                    { apiId: apiId, commentId: commentId, body: commentInfo },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n}\n\n\nComments.CONSTS = {\n\n};\n\nObject.freeze(Comments.CONSTS);\n\nexport default Comments;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport APIValidation from 'AppData/APIValidation';\nimport Wsdl from 'AppData/Wsdl';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using WSDL UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using WSDL wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideWSDL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const isGenerateRESTAPI = apiInputs.type === 'SOAPTOREST';\n    const classes = useStyles();\n    const [isError, setValidity] = useState(); // If valid value is `null` else an error object will be there\n    const [isValidating, setIsValidating] = useState(false);\n    const isCreateMode = apiInputs.mode === 'create';\n\n    /**\n     * Handles WSDL validation response and returns the state.\n     *\n     * @param {*} response WSDL validation response\n     * @param {string} type of the input; file or url\n     * @returns {boolean} validation status\n     */\n    function handleWSDLValidationResponse(response, type) {\n        const isWSDLValid = response.body.isValid;\n        let success = false;\n        if (isWSDLValid) {\n            if (type === 'file') {\n                setValidity({ ...isError, file: null });\n            } else {\n                setValidity({ ...isError, url: null });\n            }\n            success = true;\n        } else if (type === 'file') {\n            setValidity({ ...isError, file: { message: 'WSDL content validation failed!' } });\n        } else {\n            setValidity({ ...isError, url: { message: 'Invalid WSDL URL!' } });\n        }\n        onValidate(isWSDLValid);\n        setIsValidating(false);\n        return success;\n    }\n\n    /**\n     * Handles WSDL validation error response.\n     *\n     * @param error {*} error object\n     * @param type {string} file/url type\n     */\n    function handleWSDLValidationErrorResponse(error, type) {\n        let message = 'Error occurred during validation';\n        if (error.response && error.response.body.description) {\n            message = error.response.body.description;\n        }\n        if (type === 'file') {\n            setValidity({ ...isError, file: { message } });\n        } else {\n            setValidity({ ...isError, url: { message } });\n        }\n        setIsValidating(false);\n    }\n\n    /**\n     * Trigger the onValidate call back after validating WSDL url from the state.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object\n     */\n    function validateUrl(state) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateUrl(apiInputs.inputValue).then((response) => {\n                handleWSDLValidationResponse(response, 'url');\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'url');\n            });\n        } else {\n            setValidity({ ...isError, url: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate callback after validating the provided WSDL file.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {*} file WSDL file or archive\n     * @param {Object} state Validation state object\n     */\n    function validateFileOrArchive(file, state = null) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateFileOrArchive(file).then((response) => {\n                if (handleWSDLValidationResponse(response, 'file')) {\n                    inputsDispatcher({ action: 'inputValue', value: file });\n                }\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'file');\n            });\n        } else {\n            setValidity({ ...isError, file: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        // Why `files[0]` below is , We only handle one wsdl file at a time, So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        validateFileOrArchive(files[0]);\n    }\n\n    /**\n     *  Render uploaded WSDL schema list\n     */\n    function renderUploadedList() {\n        return (\n            <List>\n                <ListItem key={apiInputs.inputValue.path}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <InsertDriveFile />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={`${apiInputs.inputValue.path} - ${humanFileSize(apiInputs.inputValue.size)}`}\n                    />\n                    <ListItemSecondaryAction>\n                        <IconButton\n                            edge='end'\n                            aria-label='delete'\n                            onClick={() => {\n                                inputsDispatcher({ action: 'inputValue', value: null });\n                                inputsDispatcher({ action: 'isFormValid', value: false });\n                            }}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        );\n    }\n\n    const dropBoxControlLabel = isGenerateRESTAPI ? (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.dropzone'\n            defaultMessage='Drag & Drop WSDL file {break} -or-'\n            values={{ break: <br /> }}\n        />\n    ) : (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.archive.dropzone'\n            defaultMessage='Drag & Drop WSDL file/archive {break} -or-'\n            values={{ break: <br /> }}\n        />\n    );\n\n    /**\n     * Render file upload UI.\n     *\n     */\n    function renderFileUpload() {\n        if (apiInputs.inputValue) {\n            return renderUploadedList();\n        }\n        // TODO: Pass message saying accepting only one file ~tmkb\n        return (\n            <DropZoneLocal\n                error={isError && isError.file}\n                onDrop={onDrop}\n                files={apiInputs.inputValue}\n                accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.wsdl'\n            >\n                {isValidating ? (<CircularProgress />)\n                    : (\n                        <>\n                            { dropBoxControlLabel }\n                            <Button\n                                color='primary'\n                                variant='contained'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.upload'\n                                    defaultMessage='Browse File to Upload'\n                                />\n                            </Button>\n                        </>\n                    )}\n            </DropZoneLocal>\n        );\n    }\n\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isError && isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <ErrorOutlineIcon fontSize='large' color='error' />\n            </InputAdornment>\n        );\n    } else if (isError && !isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CheckIcon fontSize='large' color='primary' />\n            </InputAdornment>\n        );\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                {isCreateMode\n                && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.implementation.type'\n                                        defaultMessage='Implementation Type'\n                                    />\n                                </>\n                            </FormLabel>\n                            <RadioGroup\n                                aria-label='Implementation type'\n                                value={apiInputs.type ? apiInputs.type : 'SOAP'}\n                                onChange={\n                                    (event) => {\n                                        inputsDispatcher({ action: 'type', value: event.target.value });\n                                        inputsDispatcher({ action: 'isFormValid', value: false });\n                                        inputsDispatcher({ action: 'inputValue', value: null });\n                                        inputsDispatcher({ action: 'inputType', value: 'url' });\n                                    }\n                                }\n                            >\n                                <FormControlLabel\n                                    value='SOAP'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.passthrough.label'\n                                            defaultMessage='Pass Through'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='SOAPTOREST'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.SOAPtoREST.label'\n                                            defaultMessage='Generate REST APIs'\n                                        />\n                                    )}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                )}\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value='url'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.url.label'\n                                        defaultMessage='WSDL URL'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='file'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.file.label.wsdl.file.archive'\n                                        defaultMessage='WSDL File/Archive'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isError && isError.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isError.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {isFileInput ? renderFileUpload()\n                        : (\n                            <TextField\n                                autoFocus\n                                id='outlined-full-width'\n                                label='WSDL URL'\n                                placeholder='Enter WSDL URL'\n                                fullWidth\n                                margin='normal'\n                                variant='outlined'\n                                onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                                value={apiInputs.inputValue}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    onBlur: ({ target: { value } }) => {\n                                        validateUrl(APIValidation.url.required().validate(value).error);\n                                    },\n                                    endAdornment: urlStateEndAdornment,\n                                }}\n                                helperText={\n                                    (isError && isError.url && isError.url.message) || 'Click away to validate the URL'\n                                }\n                                error={isError && Boolean(isError.url)}\n                                disabled={isValidating}\n                            />\n                        )}\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideWSDL.defaultProps = {\n    onValidate: () => { },\n};\nProvideWSDL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        mode: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Banner from 'AppComponents/Shared/Banner';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using AsyncAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using AsyncAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideAsyncAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [isValidating, setIsValidating] = useState(false);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [gatewayVendor, setGatewayVendor] = useState('wso2');\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one AsyncAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateAsyncAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info, errors },\n                } = response;\n                setGatewayVendor(info.gatewayVendor);\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    // eslint-disable-next-line max-len\n                    setValidity({ ...isValid, file: { message: 'AsyncAPI content validation failed! ' } });\n                    setValidationErrors(errors);\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'AsyncAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only in valid URLs\n        if (state === null) {\n            setIsValidating(true);\n            API.validateAsyncAPIByUrl(apiInputs.inputValue, { returnContent: true }).then((response) => {\n                const {\n                    body: {\n                        isValid: isValidURL, info, content, errors,\n                    },\n                } = response;\n                if (isValidURL) {\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'AsyncAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            }).catch((error) => {\n                setValidity({ url: { message: error.message } });\n                onValidate(false);\n                setIsValidating(false);\n                console.error(error);\n            });\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideAsyncAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideAsyncAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                data-testid='input-asyncapi-url'\n                                value={ProvideAsyncAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='AsyncAPI URL'\n                            />\n                            <FormControlLabel\n                                data-testid='input-asyncapi-file'\n                                value={ProvideAsyncAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='AsyncAPI File'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isValid.file\n                && (\n                    <Grid item md={11}>\n                        <Banner\n                            onClose={() => setValidity({ file: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={isValid.file.message}\n                            errors={validationErrors}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={() => {\n                                                    inputsDispatcher({ action: 'inputValue', value: null });\n                                                    inputsDispatcher({ action: 'isFormValid', value: false });\n                                                }}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.json,application/json,.yaml,.yml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.file.dropzone'\n                                                defaultMessage={'Drag & Drop AsyncAPI File '\n                                                + 'here {break} or {break} Browse files'}\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                data-testid='upload-api-file'\n                                                color='primary'\n                                                variant='contained'\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.AsyncAPI.Steps.ProvideAsyncAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='AsyncAPI URL'\n                            placeholder='Enter AsyncAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of AsyncAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                        />\n                    )}\n                </Grid>\n                { gatewayVendor === 'solace' && (\n                    <Grid item xs={10} md={11}>\n                        <Chip\n                            data-testid='solace-api-label'\n                            label='Identified as Solace Event Portal API'\n                            icon={<CheckCircleSharpIcon style={{ color: 'green' }} />}\n                            variant='outlined'\n                            style={{ color: 'green' }}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideAsyncAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideAsyncAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideAsyncAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport debounce from 'lodash.debounce'; // WARNING: This is coming from mui-datatable as a transitive dependency\nimport YAML from 'js-yaml';\n\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport {  \n    getLinterResultsFromContent } from \"../../../Details/APIDefinition/Linting/Linting\";\nimport ValidationResults from './ValidationResults';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using OpenAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideOpenAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate, onLinterLineSelect } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [linterResults, setLinterResults] = useState ([]);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [isValidating, setIsValidating] = useState(false);\n    const [isLinting, setIsLinting] = useState(false);\n    \n    function lint(content) {\n        // Validate and linting\n        setIsLinting(true);\n        getLinterResultsFromContent(content).then((results)=>{\n            if (results) {\n                setLinterResults(results);\n            } else {\n                setLinterResults([]);\n            }\n        }).finally(()=>{setIsLinting(false);});\n    }\n\n    function reset() {\n        setIsLinting(false);\n        setLinterResults([]);\n        setValidationErrors([]);\n        inputsDispatcher({ action: 'importingContent', value: null });\n        inputsDispatcher({ action: 'inputValue', value: null });\n        inputsDispatcher({ action: 'isFormValid', value: false });\n    }\n\n    function hasJSONStructure (definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            console.log(\"API definition is in not in JSON format\");\n            return false;\n        }\n    }\n\n    const validateURLDebounced = useCallback(\n        debounce((newURL) => { // Example: https://codesandbox.io/s/debounce-example-l7fq3?file=/src/App.js\n            API.validateOpenAPIByUrl(newURL, { returnContent: true }).then((response) => {\n                const {\n                    body: {\n                        isValid: isValidURL, info, content, errors,\n                    },\n                } = response;\n                if (isValidURL) {\n                    let formattedContent;\n                    if (hasJSONStructure(content)) {\n                        formattedContent = JSON.stringify(JSON.parse(content), null, 2);\n                    } else {\n                        formattedContent = JSON.stringify(YAML.load(content), null, 2);\n                    }\n                    lint(formattedContent);\n                    inputsDispatcher({ action: 'importingContent', value: formattedContent});\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'OpenAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            }).catch((error) => {\n                setValidity({ url: { message: error.message } });\n                onValidate(false);\n                setIsValidating(false);\n                console.error(error);\n                \n            });\n        }, 750),\n        [],\n    );\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one OpenAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateOpenAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info, errors },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                    setValidationErrors(errors);\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: file });\n            });\n\n        if (!file.path.endsWith(\".zip\")){\n            const read = new FileReader();\n            read.readAsText(file);\n            read.onloadend = function(){\n                const content = read.result?.toString();\n                inputsDispatcher({ action: 'importingContent', value: content });\n                lint(content);\n            }\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only if it's a valid URL\n        if (state === null) {\n            setIsValidating(true);\n            validateURLDebounced(apiInputs.inputValue);\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        reset();\n    }, [inputType]);\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideOpenAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideOpenAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end' id='url-validated'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input Source'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', \n                                value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                disabled={isLinting || isValidating}\n                                value={ProvideOpenAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI URL'\n                                id='open-api-url-select-radio'\n                            />\n                            <FormControlLabel\n                                disabled={isLinting || isValidating}\n                                value={ProvideOpenAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI File/Archive'\n                                aria-label='OpenAPI File/Archive'\n                                id='open-api-file-select-radio'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={reset}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.json,application/json,.yaml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.dropzone'\n                                                defaultMessage={'Drag & Drop Open API File/Archive '\n                                                 + 'here {break} or {break} Browse files'}\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                color='primary'\n                                                variant='contained'\n                                                id='browse-to-upload-btn'\n                                                onClick={ reset }\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='OpenAPI URL'\n                            placeholder='Enter OpenAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of OpenAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                            data-testid='swagger-url-endpoint'\n                        />\n                    )}\n                </Grid>\n                <ValidationResults \n                    inputValue={inputValue} \n                    isValidating={isValidating}\n                    isLinting={isLinting}\n                    validationErrors={validationErrors}\n                    linterResults={linterResults}\n                    onLinterLineSelect={onLinterLineSelect}\n                />\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideOpenAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideOpenAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideOpenAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CircularProgress, Grid, List, ListItem, \n    ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport { FormattedMessage } from \"react-intl\";\nimport LinterUI from \"AppComponents/Apis/Details/APIDefinition/LinterUI/LinterUI\";\nimport APILintingSummary from \"AppComponents/Apis/Details/APIDefinition/Linting/APILintingSummary\";\nimport {  \n    spectralSeverityMap as severityMap } from \"../../../Details/APIDefinition/Linting/Linting\"\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: 600,\n    }\n}));\n\ntype APILintingProps = {\n    inputValue: any,\n    isValidating: boolean,\n    isLinting: boolean,\n    linterResults: any,\n    validationErrors: any,\n    onLinterLineSelect: Function,\n};\n\nexport default function ValidationResults(props: APILintingProps) {\n    const {inputValue, isValidating, isLinting, linterResults, validationErrors, onLinterLineSelect} = props;\n    const [expandValidationErrors, setExpandValidationErrors] = useState(true);\n    const [expandLinterResults, setExpandLinterResults] = useState(false);\n    const [linterSelectedSeverity, setLinterSelectedSeverity] = useState(-1);\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={10} md={11}>\n                <List>\n                    {inputValue && isValidating && (\n                        <ListItem>\n                            <ListItemIcon><CircularProgress /></ListItemIcon>\n                            <ListItemText>\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ValidationResults.validating'\n                                    defaultMessage='Validating API definition'\n                                />\n                            </ListItemText>\n                        </ListItem>\n                    )}\n                    {inputValue && !isValidating && isLinting && (\n                        <ListItem>\n                            <ListItemIcon><CircularProgress /></ListItemIcon>\n                            <ListItemText>\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ValidationResults.linting'\n                                    defaultMessage='Generating Linter Results'\n                                />\n                            </ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n            </Grid>\n            {!isValidating && validationErrors.length>0 && (\n                <Grid item xs={10} md={11}>\n                    <Accordion\n                        expanded={expandValidationErrors}\n                        onChange={()=>{setExpandValidationErrors(!expandValidationErrors)}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore/>}\n                            aria-controls='panel1bh-content'\n                            id='panel1bh-header'>\n                            <Grid container direction='row' \n                                justifyContent='space-between' alignItems='center'>\n                                <Typography className={classes.importDefinitionDialogHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ValidationResults.validation.errros'\n                                        defaultMessage='Validation Errors'\n                                    />\n                                </Typography>\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <List>\n                                {validationErrors.map((error:any)=>(\n                                    <ListItem>\n                                        <ListItemIcon>\n                                            {severityMap[0]}\n                                        </ListItemIcon>\n                                        <ListItemText>\n                                            <Typography>\n                                                <Box sx={{ fontWeight: 'bold' }}>{error.message}</Box>\n                                            </Typography>\n                                            <Typography>{error.description}</Typography>\n                                        </ListItemText>\n                                    </ListItem>\n                                    \n                                ))}\n                            </List>\n                            \n                        </AccordionDetails>\n                        \n                    </Accordion>\n                </Grid>\n            )}\n            {!isLinting && linterResults.length>0 && (\n                <Grid item xs={10} md={11}\n                    data-testid='itest-id-linter-results'>\n                    <Accordion\n                        expanded={expandLinterResults}\n                        onChange={()=>{setExpandLinterResults(!expandLinterResults)}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore />}\n                            aria-controls='panel1bh-content'\n                            id='panel1bh-header'>\n                            <Grid container direction='row' \n                                justifyContent='space-between' alignItems='center'>\n                                <Typography className={classes.importDefinitionDialogHeader}>\n                                    <FormattedMessage\n                                        id='Apis.Create.OpenAPI.Steps.ValidationResults.linter.results'\n                                        defaultMessage='Linter Results'\n                                    />\n                                </Typography>\n                                <APILintingSummary\n                                    linterResults={ linterResults }\n                                    handleChange = { (event:any, value:any)=>{\n                                        event.stopPropagation();\n                                        setLinterSelectedSeverity(value);\n                                        setExpandLinterResults(true);\n                                    } }\n                                />\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails\n                            style={{padding:0}}>\n                                <LinterUI\n                                    linterResults={ linterResults.filter(\n                                        (item: any)=> linterSelectedSeverity===-1||\n                                            item.severity===Number(linterSelectedSeverity))\n                                    }\n                                    severityMap={ severityMap }\n                                    handleRowClick={ (line: any) => { \n                                        if(onLinterLineSelect) onLinterLineSelect(line);\n                                    } }\n                                />\n                        </AccordionDetails>\n                        \n                    </Accordion>\n                </Grid>\n            )}\n        </>\n    );\n}","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using GraphQL UI, This is handling the taking input of GraphQL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideGraphQL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const { inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({ file: null });\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one graphQL file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateGraphQLFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, graphQLInfo },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'graphQLInfo', value: graphQLInfo });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            onDrop([inputValue]);\n        }\n    }, [inputValue]);\n    const accept = '.graphql,text/plain';\n    return (\n        <>\n            <Grid container spacing={5}>\n                {!apiInputs.inputValue && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.type'\n                                        defaultMessage='Provide GraphQL File'\n                                    />\n                                </>\n                            </FormLabel>\n                        </FormControl>\n                    </Grid>\n                )}\n                {isValid.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isValid.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {apiInputs.inputValue ? (\n                        <List data-testid='uploaded-list-graphql'>\n                            <ListItem key={apiInputs.inputValue.path} data-testid='uploaded-list-content-graphql' >\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <InsertDriveFile />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={`${apiInputs.inputValue.path} - \n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                    data-testid={'file-input-'+apiInputs.inputValue.path}\n                                />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        edge='end'\n                                        aria-label='delete'\n                                        onClick={() => {\n                                            inputsDispatcher({ action: 'inputValue', value: null });\n                                            inputsDispatcher({ action: 'isFormValid', value: false });\n                                        }}\n                                        data-testid='btn-delete-imported-file'\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    ) : (\n                        <DropZoneLocal\n                            error={isValid.file}\n                            onDrop={onDrop}\n                            files={apiInputs.inputValue}\n                            accept={accept}\n                            ariaLabel='GraphQL file upload'\n                        >\n                            {isValidating ? (<CircularProgress />)\n                                : ([\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.dropzone'\n                                        defaultMessage={'Drag & Drop files here {break} or {break} '\n                                        + 'Browse files{break}({accept})'}\n                                        values={{ break: <br />, accept }}\n                                    />,\n                                    <Button\n                                        color='primary'\n                                        variant='contained'\n                                        data-testid='browse-to-upload-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.upload'\n                                            defaultMessage='Browse File to Upload'\n                                        />\n                                    </Button>,\n                                ]\n                                )}\n                        </DropZoneLocal>\n                    )}\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideGraphQL.defaultProps = {\n    onValidate: () => {},\n};\nProvideGraphQL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/styles';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\n\nconst useStyles = makeStyles((theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontSize: theme.typography.body1.fontSize,\n        fontWeight: 250,\n        whiteSpace: 'nowrap',\n    },\n    leftLInkTextHead: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: 800,\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        height: '18px',\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n    leftLInkOverview: {\n        paddingTop: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        height: '18px',\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        fontSize: theme.custom.leftMenuIconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        diplay: 'none',\n    },\n    selectedMenu: {\n        backgroundColor: theme.palette.background.appBarSelected,\n    },\n\n}));\n\n/**\n * NOTE: Incase displaying menu text is not equal to associated path segment should use `route` prop\n *\n * @param {*} props\n * @returns\n */\nfunction LeftMenuItem(props) {\n    const {\n        Icon, to, text, route, head, id,\n    } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n    const iconSize = theme.custom.leftMenuIconSize;\n    const { pathname } = useLocation();\n    // Incase displaying menu text is not equal to associated path segment should use `route` prop\n    const routeToCheck = route || text;\n    const menuPathPattern = new RegExp('/' + routeToCheck + '($|/)', 'g');\n    const isSelected = pathname.match(menuPathPattern);\n    return (\n        <Link\n            className={classNames(\n                head !== 'valueOnly' ? (\n                    classes.leftLInk) : (classes.leftLInkOverview),\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                },\n                'leftLInk',\n                isSelected && classes.selectedMenu,\n            )}\n            to={to}\n            id={id}\n        >\n            {// If the icon pro ( which is coming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={props.iconText}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                )\n            }\n            {head === 'valueOnly' ? (\n                <Typography\n                    className={classNames(\n                        classes.leftLInkTextHead,\n                    )}\n                >\n                    {text}\n                </Typography>\n            )\n                : (\n                    <Typography\n                        className={classNames(\n                            classes.leftLInkText,\n                            {\n                                [classes.leftLInkText_IconLeft]: leftMenu === 'icon left',\n                                [classes.leftLInkText_NoText]: leftMenu === 'no text',\n                            },\n                            'leftLInkText',\n                        )}\n                    >\n                        {text}\n                    </Typography>\n                )}\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({\n        divider: PropTypes.string,\n        leftLInk: PropTypes.string,\n        leftLink_IconLeft: PropTypes.string,\n        noIcon: PropTypes.string,\n        leftLink_Icon: PropTypes.string,\n        leftLInkText: PropTypes.string,\n        leftLInkTextHead: PropTypes.string,\n        leftLInkText_IconLeft: PropTypes.string,\n        leftLInkText_NoText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenu: PropTypes.string,\n            leftMenuIconSize: PropTypes.number,\n        }),\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                leftMenu: PropTypes.string,\n                appBar: PropTypes.string,\n            }),\n            leftMenu: PropTypes.string,\n        }),\n    }).isRequired,\n    Icon: PropTypes.element.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n    head: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    history: PropTypes.shape({\n        listen: PropTypes.func.isRequired,\n        location: PropTypes.string.isRequired,\n    }).isRequired,\n    iconText: PropTypes.string,\n};\nexport default LeftMenuItem;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport MaterialIcons from 'MaterialIcons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Configurations from 'Config';\n\nimport BaseThumbnail from './BaseThumbnail';\n\nconst windowURL = window.URL || window.webkitURL;\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 10em)',\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 100,\n            color: theme.palette.primary.main,\n        },\n    },\n    preview: {\n        height: theme.spacing(25),\n    },\n    rejectDrop: {\n        backgroundColor: red[50],\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '0 0 0 20px',\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    iconView: {\n        width: 30,\n        margin: 10,\n        cursor: 'pointer',\n    },\n    subtitle: {\n        marginRight: 20,\n    },\n    subtitleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    body: {\n        marginBottom: 10,\n    },\n    imageGenWrapper: {\n        '& > div': {\n            position: 'fixed',\n            marginTop: 20,\n        },\n    },\n    backgroundSelection: {\n        cursor: 'pointer',\n        marginRight: 10,\n        display: 'inline-block',\n        border: 'solid 1px #ccc',\n    },\n    actionBox: {\n        boxShadow:\n            '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        justifyContent: 'flex-start',\n        padding: '10px 0 10px 10px',\n    },\n    imageContainer: {\n        paddingTop: 10,\n    },\n});\n\n/**\n * Slide up transition for modal\n *\n * @param {any} props Properties\n * @returns {Slide} Slide up transition\n */\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n/**\n * Provides a view for the API Thumbnail image.\n * This can be either user defined image uploaded earlier or a generated Image.\n */\nclass ThumbnailView extends Component {\n    /**\n     * Initializes the ThumbnailView Component\n     *\n     * @param {any} props Component properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            file: null,\n            thumbnail: null,\n            selectedTab: 'upload',\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            selectedIconUpdate: null,\n            color: null,\n            colorUpdate: null,\n            backgroundIndex: null,\n            backgroundIndexUpdate: null,\n            uploading: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.thumbnail);\n        }\n    }\n\n    /**\n     * Event listener for file drop on the dropzone\n     *\n     * @param {File} acceptedFile dropped file\n     */\n    onDrop(acceptedFile) {\n        this.setState({ file: acceptedFile });\n    }\n\n    selectIcon = (selectedIconUpdate) => {\n        this.setState({ selectedIconUpdate });\n    };\n\n    selectBackground = (backgroundIndexUpdate) => {\n        this.setState({ backgroundIndexUpdate });\n    };\n\n    /**\n     * @param {SyntheticEvent} e React event object\n     */\n    handleClick = (action, intl) => () => {\n        if (action === 'btnEditAPIThumb') {\n            this.setState({ open: true });\n        } else if (action === 'btnUploadAPIThumb') {\n            const { api } = this.props;\n            const {\n                selectedTab, selectedIconUpdate, category, colorUpdate, backgroundIndexUpdate, file,\n            } = this.state;\n            let fileObj;\n            if (selectedTab === 'upload') {\n                if (!api.id && !file) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.validation.error',\n                        defaultMessage: 'Invalid file or API information is not set correctly.',\n                    }));\n                    return;\n                }\n                /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: true}}] */\n                fileObj = file[0];\n            } else if (selectedTab === 'remove') {\n                fileObj = new File([], 'FileName.jpg', { type: 'application/json' });\n            } else {\n                if (!selectedIconUpdate && !colorUpdate && !backgroundIndexUpdate) {\n                    Alert.error(intl.formatMessage({\n                        id: 'the.icon.is.not.modified',\n                        defaultMessage: 'The icon is not modified',\n                    }));\n                    return;\n                }\n                const newIconJson = {\n                    key: selectedIconUpdate,\n                    category,\n                    color: colorUpdate,\n                    backgroundIndex: backgroundIndexUpdate,\n                };\n                const blob = new Blob([JSON.stringify(newIconJson)], { type: 'application/json' });\n                fileObj = new File([blob], 'FileName.json', { type: 'application/json' });\n            }\n\n            this.uploadThumbnail(selectedTab, api.id, fileObj, intl);\n        }\n    };\n\n    handleChange = (event, selectedTab) => {\n        this.setState({ selectedTab });\n    };\n\n    handleSelectionChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleChangeComplete = (colorUpdate) => {\n        this.setState({ colorUpdate: colorUpdate.hex });\n    };\n\n    /**\n     * Handle modal close event\n     */\n    handleClose() {\n        const { file, preview } = this.state;\n        if (file) {\n            windowURL.revokeObjectURL(preview);\n        }\n        this.setState((cState) => ({\n            open: false,\n            file: null,\n            colorUpdate: cState.color,\n            backgroundIndexUpdate: cState.background,\n            selectedIconUpdate: cState.selectedIcon,\n        }));\n    }\n\n    /**\n     * Add new thumbnail image to an API\n     *\n     * @param {String} apiId ID of the API to be updated\n     * @param {File} file new thumbnail image file\n     */\n    uploadThumbnail(selectedTab, apiId, file, intl) {\n        this.setState({ uploading: true });\n        const {\n            api: { apiType, id },\n            setImageUpdate,\n        } = this.props;\n        const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n            ? new APIProduct().addAPIProductThumbnail(id, file)\n            : new Api().addAPIThumbnail(id, file);\n\n        promisedThumbnail\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.success',\n                    defaultMessage: 'Thumbnail uploaded successfully',\n                }));\n                if (selectedTab === 'upload') {\n                    this.props.updateAPI({hasThumbnail: true});\n                    this.setState({ open: false, thumbnail: windowURL.createObjectURL(file) });\n                } else {\n                    this.setState((cState) => ({\n                        open: false,\n                        thumbnail: file.preview,\n                        selectedIcon: cState.selectedIconUpdate,\n                        color: cState.colorUpdate,\n                        backgroundIndex: cState.backgroundIndexUpdate,\n                    }));\n                }\n                setImageUpdate();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.error',\n                    defaultMessage: 'Error occurred while uploading new thumbnail. Please try again.',\n                }));\n            })\n            .finally(() => {\n                this.setState({ uploading: false });\n            });\n    }\n\n    saveDisableEnable() {\n        const {\n            file, selectedTab, selectedIconUpdate, colorUpdate, backgroundIndexUpdate, uploading,\n        } = this.state;\n        if (selectedTab === 'upload') {\n            return !(file && file[0]) || uploading; // If no files is uploaded retrun true\n        } else if (selectedTab === 'remove') {\n            return false;\n        } else {\n            // If one of them is selected we return false\n            return !(selectedIconUpdate || backgroundIndexUpdate || colorUpdate) || uploading;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            api, classes, width, height, isEditable, intl, imageUpdate,\n        } = this.props;\n        const maxSize = 1000000;\n        const {\n            file,\n            thumbnail,\n            selectedTab,\n            selectedIcon,\n            color,\n            backgroundIndex,\n            uploading,\n        } = this.state;\n        let { category } = this.state;\n        if (!category) category = MaterialIcons.categories[0].name;\n\n        return (\n            <>\n                <BaseThumbnail\n                    isEditable={isEditable}\n                    onClick={this.handleClick('btnEditAPIThumb', intl)}\n                    thumbnail={thumbnail}\n                    selectedIcon={selectedIcon}\n                    color={color}\n                    backgroundIndex={backgroundIndex}\n                    category={category}\n                    api={api}\n                    width={width}\n                    height={height}\n                    imageUpdate={imageUpdate}\n                />\n\n                <Dialog\n                    TransitionComponent={Transition}\n                    aria-labelledby='thumb-dialog-title'\n                    disableBackdropClick\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth='true'\n                    maxWidth='lg'\n                    fullScreen\n                >\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton color='inherit' onClick={this.handleClose} aria-label='Close'>\n                            <Icon>close</Icon>\n                        </IconButton>\n                        <RadioGroup\n                            aria-label='APIThumbnail'\n                            name='apiThumbnail'\n                            className={classes.group}\n                            value={this.state.selectedTab}\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value='upload'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload'\n                                        defaultMessage='Upload'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='remove'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.remove'\n                                        defaultMessage='Remove'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </Paper>\n\n                    <DialogContent>\n                        {selectedTab === 'upload' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3}>\n                                    <div className={classes.imageContainer}>\n                                        <img\n                                            className={classes.preview}\n                                            src={\n                                                file && file.length > 0\n                                                    ? windowURL.createObjectURL(file[0])\n                                                    : Configurations.app.context\n                                                      + '/site/public/images/api/api-default.png'\n                                            }\n                                            alt='Thumbnail Preview'\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={9} id='edit-api-thumbnail-upload'>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept='image/*'\n                                        maxSize={maxSize}\n                                        className={classes.dropzone}\n                                        activeClassName={classes.acceptDrop}\n                                        rejectClassName={classes.rejectDrop}\n                                        onDrop={(dropFile) => {\n                                            this.onDrop(dropFile);\n                                        }}\n                                    >\n                                        {({ getRootProps, getInputProps, rejectedFiles }) => {\n                                            const isFileTooLarge = rejectedFiles && rejectedFiles.length > 0\n                                                && rejectedFiles[0].size > maxSize;\n                                            return (\n                                                <div {...getRootProps({ style: dropzoneStyles })}>\n                                                    <input {...getInputProps()} />\n                                                    {isFileTooLarge && (\n                                                        <Typography color='error'>\n                                                            <FormattedMessage\n                                                                id='upload.image.size.error'\n                                                                defaultMessage='Uploaded File is too large.\n                                                                Maximum file size limit to 1MB'\n                                                            />\n                                                        </Typography>\n                                                    )}\n                                                    <div className={classes.dropZoneWrapper}>\n                                                        <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                                        <Typography>\n                                                            <FormattedMessage\n                                                                id='upload.image'\n                                                                defaultMessage='Click or drag the image to upload.'\n                                                            />\n                                                        </Typography>\n                                                    </div>\n                                                </div>\n                                            );\n                                        }}\n                                    </Dropzone>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='upload.image.size.info'\n                                            defaultMessage='Maximum file size limit to 1MB'\n                                        />\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        )}\n                    </DialogContent>\n                    <DialogActions className={classes.actionBox}>\n                        <Button\n                            disabled={this.saveDisableEnable()}\n                            variant='contained'\n                            color='primary'\n                            size='small'\n                            onClick={this.handleClick('btnUploadAPIThumb', intl)}\n                            id='edit-api-thumbnail-upload-btn'\n                        >\n                            {selectedTab === 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.saving.btn'\n                                        defaultMessage='Saving'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab === 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.save.btn'\n                                    defaultMessage='Save'\n                                />\n                            )}\n\n                            {selectedTab !== 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.uploading.btn'\n                                        defaultMessage='Uploading'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab === 'upload' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload.btn'\n                                    defaultMessage='Upload'\n                                />\n                            )}\n                            {selectedTab === 'remove' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.remove.btn'\n                                    defaultMessage='Remove'\n                                />\n                            )}\n                        </Button>\n\n                        <Button variant='contained' size='small' onClick={this.handleClose}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.ThumbnailView.cancel.btn'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nThumbnailView.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n    setImageUpdate: () => {},\n};\n\nThumbnailView.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    setImageUpdate: PropTypes.shape({}),\n    imageUpdate: PropTypes.number.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    intl: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles, { withTheme: true })(ThumbnailView)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst showEndpoint = function (api, type) {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    textTrim: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    externalLink: {\n        color: theme.palette.primary.dark,\n    },\n}));\n\n/**\n *\n *X\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { api } = props;\n    const classes = useStyles();\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    /**\n     * Check whether the endpoint configuration is dynamic\n     *\n     * @param {object} endpointConfig The endpoint configuration of the api.\n     * @return {boolean} True if the endpoint config is dynamic.\n     * */\n    const isDynamicEndpoints = (endpointConfig) => {\n        if (!endpointConfig) {\n            return false;\n        }\n        if (endpointConfig.production_endpoints && !Array.isArray(endpointConfig.production_endpoints)) {\n            return endpointConfig.production_endpoints.url === 'default';\n        }\n        return false;\n    };\n\n    return (\n        <>\n            <WrappedExpansionPanel className={classes.expansionPanel} defaultExpanded id='endpoints'>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6' component='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Endpoints.endpoints'\n                            defaultMessage='Endpoints'\n                        />\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    {isDynamicEndpoints(api.endpointConfig)\n                        ? (\n                            <Box pb={2}>\n                                <Typography component='p' variant='body1' className={classes.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.Endpoints.dynamic'\n                                        defaultMessage='Dynamic'\n                                    />\n                                </Typography>\n                            </Box>\n                        )\n                        : (\n                            <>\n                                <Box pb={2}>\n                                    {/* Production Endpoint (TODO) fix the endpoint\n                                                    info when it's available with the api object */}\n\n                                    { !isPrototypedAvailable ? (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.production'\n                                                defaultMessage='Production'\n                                            />\n                                        </Typography>\n                                    ) : (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.prototype'\n                                                defaultMessage='Prototype'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {showEndpoint(api, 'prod')\n                                && (\n                                    <Tooltip\n                                        title={showEndpoint(api, 'prod')}\n                                        interactive\n                                    >\n                                        <Typography component='p' variant='body1' className={classes.textTrim}>\n                                            <>\n                                                {showEndpoint(api, 'prod')}\n                                            </>\n                                        </Typography>\n                                    </Tooltip>\n                                )}\n                                    <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                        {!showEndpoint(api, 'prod') && (\n                                            <>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Configuration.'\n                                                    + 'components.Endpoints.not.set'}\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Box>\n                                {!isPrototypedAvailable && (\n                                    <Box pb={2}>\n                                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.sandbox'\n                                                defaultMessage='Sandbox'\n                                            />\n                                        </Typography>\n                                        {showEndpoint(api, 'sand')\n                                    && (\n                                        <Tooltip\n                                            title={showEndpoint(api, 'sand')}\n                                            interactive\n                                        >\n                                            <Typography component='p' variant='body1' className={classes.textTrim}>\n                                                <>\n                                                    {showEndpoint(api, 'sand')}\n                                                </>\n                                            </Typography>\n                                        </Tooltip>\n                                    )}\n                                        <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                            {!showEndpoint(api, 'sand') && (\n                                                <>\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Configuration.components.Endpoints.sandbox.'\n                                                        + 'not.set'}\n                                                        defaultMessage='-'\n                                                    />\n                                                </>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                )}\n                            </>\n                        )}\n                    <Box width='100%' textAlign='right' m={1}>\n                        <Link to={'/apis/' + api.id + '/endpoints'}>\n                            <Typography className={classes.externalLink} variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.Endpoints.edit.api.endpoints'\n                                    defaultMessage='Edit API Endpoints'\n                                />\n                                <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                            </Typography>\n                        </Link>\n                    </Box>\n                </ExpansionPanelDetails>\n            </WrappedExpansionPanel>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport API from 'AppData/api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    keyManagerSelect: {\n        minWidth: 180,\n    },\n}));\n\n/**\n *\n * KeyManager configuration\n * @param {*} props\n * @returns\n */\nexport default function KeyManager(props) {\n    const [keyManagersConfigured, setKeyManagersConfigured] = useState([]);\n    const {\n        configDispatcher,\n        api: { keyManagers, securityScheme },\n    } = props;\n    const classes = useStyles();\n    const handleChange = (event) => {\n        const newKeyManagers = [...keyManagers];\n        const { target: { checked, name } } = event;\n        if (newKeyManagers.indexOf(name) === -1 && checked) {\n            newKeyManagers.push(name);\n        } else if (newKeyManagers.indexOf(name) !== -1 && !checked) {\n            newKeyManagers.splice(newKeyManagers.indexOf(name), 1);\n        }\n        configDispatcher({\n            action: 'keymanagers',\n            value: newKeyManagers,\n        });\n    };\n    const { api } = useContext(APIContext);\n    useEffect(() => {\n        if (!isRestricted(['apim:api_create'], api)) {\n            API.keyManagers().then((response) => setKeyManagersConfigured(response.body.list));\n        }\n    }, []);\n    if (!securityScheme.includes('oauth2')) {\n        return (\n            <>\n                <Typography className={classes.subHeading} variant='subtitle2' component='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.KeyManager.configuration'\n                        defaultMessage='Key Manager Configuration'\n                    />\n                </Typography>\n                <Box ml={1} mb={2}>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.oauth.disabled'\n                            defaultMessage='Key Manager configuration only valid when OAuth2 security is enabled.'\n                        />\n                    </Typography>\n                </Box>\n            </>\n        );\n    }\n    return (\n        <>\n            <Typography className={classes.subHeading} variant='subtitle2' component='h5'>\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.KeyManager.configuration'\n                    defaultMessage='Key Manager Configuration'\n                />\n            </Typography>\n            <Box ml={1}>\n                <RadioGroup\n                    value={keyManagers.includes('all') ? 'all' : 'selected'}\n                    onChange={({ target: { value } }) => configDispatcher({\n                        action: 'allKeyManagersEnabled',\n                        value: value === 'all',\n                    })}\n                    style={{ flexDirection: 'row' }}\n                >\n                    <FormControlLabel\n                        value='all'\n                        control={<Radio disabled={isRestricted(['apim:api_create'], api)} />}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.KeyManager.allow.all'\n                                defaultMessage='Allow all'\n                            />\n                        )}\n                    />\n                    <FormControlLabel\n                        value='selected'\n                        control={<Radio disabled={isRestricted(['apim:api_create'], api)} />}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.KeyManager.allow.selected'\n                                defaultMessage='Allow selected'\n                            />\n                        )}\n                    />\n                </RadioGroup>\n                {!keyManagers.includes('all') && (\n                    <Box display='flex' flexDirection='column' m={2}>\n                        <FormControl\n                            required\n                            error={!keyManagers || (keyManagers && keyManagers.length === 0)}\n                            component='fieldset'\n                            className={classes.formControl}\n                        >\n                            <FormLabel component='legend'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.KeyManager.more.than.one.info'\n                                    defaultMessage='Select one or more Key Managers'\n                                />\n                            </FormLabel>\n                            <FormGroup\n                                style={{ flexDirection: 'row' }}\n\n                            >\n                                {keyManagersConfigured.map((key) => (\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                color='primary'\n                                                checked={keyManagers.includes(key.name)}\n                                                disabled={!key.enabled}\n                                                onChange={handleChange}\n                                                name={key.name}\n                                            />\n                                        )}\n                                        label={key.displayName || key.name}\n                                    />\n                                ))}\n                            </FormGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.KeyManager.more.than.one.error'\n                                    defaultMessage='Select at least one Key Manager'\n                                />\n                            </FormHelperText>\n\n                        </FormControl>\n                    </Box>\n                )}\n            </Box>\n        </>\n    );\n}\n\nKeyManager.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UploadCertificate from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate';\nimport CertificateUsage from \"AppComponents/Apis/Details/Endpoints/GeneralConfiguration/CertificateUsage.tsx\";\nimport API from '../../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: theme.spacing(1),\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'auto',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n    alertWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    warningIcon: {\n        marginRight: 13,\n        color: theme.custom.warningColor,\n        '& .material-icons': {\n            fontSize: 30,\n        },\n    },\n    deleteIcon: {\n        color: theme.palette.error.dark,\n        cursor: 'pointer',\n    },\n    deleteIconDisable: {\n        color: theme.palette.disabled,\n    },\n}));\n/**\n * TODO: Generalize this component to work in Configuration page , upload mutual SSL certificates action\n * in source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx ~tmkb\n * The base component for advanced endpoint configurations.\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nfunction Certificates(props) {\n    const {\n        certificates, uploadCertificate, deleteCertificate, isMutualSSLEnabled, apiId, endpoints, aliasList,\n    } = props;\n    const [certificateList, setCertificateList] = useState([]);\n    const [openCertificateDetails, setOpenCertificateDetails] = useState({ open: false, anchor: null, details: {} });\n    const [certificateToDelete, setCertificateToDelete] = useState({ open: false, alias: '' });\n    const [certificateUsageDetails, setCertificateUsageDetails] = useState({ count: 0, apiList: [] });\n    const [isDeleting, setDeleting] = useState(false);\n    const [uploadCertificateOpen, setUploadCertificateOpen] = useState(false);\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    /**\n     * Show the selected certificate details in a popover.\n     *\n     * @param {any} event The button click event.\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const showCertificateDetails = (event, certAlias) => {\n        if (!isMutualSSLEnabled) {\n            API.getCertificateStatus(certAlias)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((err) => {\n                    console.error(err);\n                });\n        } else {\n            API.getClientCertificateStatus(certAlias, apiId)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    /**\n     * Delete certificate represented by the alias.\n     *\n     * @param {string} certificateAlias The alias of the certificate that is needed to be deleted.\n     * */\n    const deleteCertificateByAlias = (certificateAlias) => {\n        setDeleting(true);\n        deleteCertificate(certificateAlias)\n            .then(() => { \n                setCertificateToDelete({ open: false, alias: '' })\n                // Remove certificateAlias from aliasList.\n                const index = aliasList.indexOf(certificateAlias);\n                if (index > -1) {\n                    aliasList.splice(index, 1);\n                }\n            })\n            .finally(() => setDeleting(false));\n        \n    };\n\n    /**\n     * Retrieve certificate usage details by alias.\n     *\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const getCertificateUsage = async (certAlias) => {\n        try {\n            const response = await API.getEndpointCertificateUsage(certAlias);\n            setCertificateUsageDetails({count: response.body.count, apiList: response.body.list});\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    /**\n     * Show certificate deletion dialog box.\n     *\n     * @param {any} event The button click event.\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const showCertificateDeleteDialog = async (event, certAlias) => {\n        setCertificateToDelete({ open: false, alias: '' });\n        await getCertificateUsage(certAlias);\n        setCertificateToDelete({ open: true, alias: certAlias });\n    };\n\n    const getWarningMessage = () => {\n        return certificateToDelete.alias + ' is used by ' +\n            certificateUsageDetails.count + ' other APIs. ';\n    }\n\n    useEffect(() => {\n        setCertificateList(certificates);\n    }, [certificates]);\n\n    return (\n        <Grid container direction='column'>\n            {/* TODO: Add list of existing certificates */}\n            <Grid>\n                <Typography className={classes.certificatesHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificates'\n                        defaultMessage='Certificates'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item>\n                <List>\n                    <ListItem\n                        button\n                        disabled={(isRestricted(['apim:api_create'], apiFromContext))}\n                        className={classes.addCertificateBtn}\n                        onClick={() => setUploadCertificateOpen(true)}\n                        id='certs-add-btn'\n                    >\n                        <ListItemAvatar>\n                            <IconButton>\n                                <Icon>add</Icon>\n                            </IconButton>\n                        </ListItemAvatar>\n                        <ListItemText primary='Add Certificate' />\n                    </ListItem>\n                </List>\n                <List className={classes.certificateList}>\n                    {certificateList.length > 0 ? (\n                        certificateList.map((cert) => {\n                            return (\n                                <ListItem id='endpoint-cert-list'>\n                                    <ListItemAvatar>\n                                        <Icon>lock</Icon>\n                                    </ListItemAvatar>\n                                    {isMutualSSLEnabled\n                                        ? (<ListItemText primary={cert.alias} secondary={cert.tier} />)\n                                        : <ListItemText primary={cert.alias} secondary={cert.endpoint} />}\n\n                                    <ListItemSecondaryAction>\n                                        <IconButton edge='end'>\n                                            <CertificateUsage certAlias={cert.alias}/>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={(event) => showCertificateDetails(event, cert.alias)}\n                                        >\n                                            <Icon>info</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                            onClick={(event) => showCertificateDeleteDialog(event, cert.alias)}\n                                            id='delete-cert-btn'\n                                        >\n                                            <Icon className={isRestricted(['apim:api_create'], apiFromContext)\n                                                ? classes.deleteIconDisable : classes.deleteIcon}\n                                            >\n                                                {' '}\n                                                delete\n                                            </Icon>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })\n                    ) : (\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Icon color='primary'>info</Icon>\n                            </ListItemAvatar>\n                            <ListItemText>You do not have any certificates uploaded</ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n            </Grid>\n            <Dialog open={certificateToDelete.open}>\n                <DialogTitle>\n                    <Typography className={classes.uploadCertDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.deleteCertificate'\n                            defaultMessage='Delete with caution!'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent className={classes.alertWrapper}>\n                    <div id='warning-message'>\n                        <Typography>\n                            { certificateUsageDetails.count > 1 ? getWarningMessage() : ''}\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.confirm.certificate.delete'\n                                defaultMessage='Are you sure you want to delete '\n                            />\n                            {' '}\n                            { certificateToDelete.alias + '?'}\n                        </Typography>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => deleteCertificateByAlias(certificateToDelete.alias)}\n                        variant='contained'\n                        color='primary'\n                        disabled={isDeleting}\n                        autoFocus\n                        id='delete-cert-confirm-btn'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.ok.button'\n                            defaultMessage='OK'\n                        />\n                        {isDeleting && <CircularProgress size={24} />}\n\n                    </Button>\n                    <Button onClick={() => setCertificateToDelete({ open: false, alias: '' })}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={openCertificateDetails.open}>\n                <DialogTitle>\n                    <Typography className={classes.certDetailsHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.details.of'\n                            defaultMessage='Details of'\n                        />\n                        {' ' + openCertificateDetails.alias}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.status'\n                            defaultMessage='Status'\n                        />\n                        {' : ' + openCertificateDetails.details.status}\n                    </Typography>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.subject'\n                            defaultMessage='Subject'\n                        />\n                        {' : ' + openCertificateDetails.details.subject}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setOpenCertificateDetails({ open: false, anchor: null, details: {} })}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.details.close.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <UploadCertificate\n                endpoints={endpoints}\n                certificates={certificates}\n                uploadCertificate={uploadCertificate}\n                isMutualSSLEnabled={isMutualSSLEnabled}\n                setUploadCertificateOpen={setUploadCertificateOpen}\n                uploadCertificateOpen={uploadCertificateOpen}\n                aliasList={aliasList}\n            />\n        </Grid>\n    );\n}\n\nCertificates.defaultProps = {\n    isMutualSSLEnabled: false,\n    apiId: '',\n};\n\nCertificates.propTypes = {\n    classes: PropTypes.shape({\n        fileinput: PropTypes.shape({}),\n        button: PropTypes.shape({}),\n    }).isRequired,\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    deleteCertificate: PropTypes.func.isRequired,\n    apiId: PropTypes.string,\n    isMutualSSLEnabled: PropTypes.bool,\n    endpoints: PropTypes.shape([]).isRequired,\n    aliasList: PropTypes.shape([]).isRequired,\n};\nexport default injectIntl((Certificates));\n","import { FormattedMessage, useIntl } from 'react-intl';\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer,\n    useRef,\n    useState,\n} from 'react';\n\nimport APIValidation from 'AppData/APIValidation';\nimport AddIcon from '@material-ui/icons/Add';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Badge from '@material-ui/core/Badge';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    paper: {\n        paddingLeft: theme.spacing(4),\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(0.5),\n        marginTop: '12px',\n    },\n}));\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction VerbElement(props) {\n    const {\n        verb, onClick, isButton, checked,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customMenu: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                color: theme.palette.getContrastText(backgroundColor),\n                minWidth: theme.spacing(9),\n            },\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                marginLeft: theme.spacing(1),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    if (isButton) {\n        return (\n            <Button disableFocusRipple variant='contained' className={classes.customButton} size='small'>\n                {verb}\n            </Button>\n        );\n    } else {\n        return (\n            <ListItem onClick={onClick} key={verb} button>\n                <Chip className={classes.customMenu} size='small' label={verb} />\n                <ListItemSecondaryAction>\n                    <Checkbox\n                        onClick={onClick}\n                        edge='end'\n                        checked={checked}\n                        inputProps={{\n                            'aria-labelledby': verb,\n                            id : `add-operation-${verb.toLowerCase()}`,\n                        }}\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst SUPPORTED_VERBS = {\n    REST: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'],\n    WEBSUB: ['SUB'],\n    SSE: ['SUB'],\n    WS: ['PUB', 'SUB'],\n};\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddOperation(props) {\n    const { operationsDispatcher, isAsyncAPI, api } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const intl = useIntl();\n    const isWebSub = api && api.type === 'WEBSUB';\n\n    function getSupportedVerbs() {\n        return isAsyncAPI ? SUPPORTED_VERBS[api.type] : SUPPORTED_VERBS.REST;\n    }\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newOperationsReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'target':\n            case 'verbs':\n                return { ...state, [type]: value };\n            case 'clear':\n                return { verbs: [], target: '' };\n            case 'error':\n                return { ...state, error: value };\n            default:\n                return state;\n        }\n    }\n    const [newOperations, newOperationsDispatcher] = useReducer(newOperationsReducer, { verbs: [] });\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newOperationsDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addOperation() {\n        if (\n            APIValidation.operationTarget.validate(newOperations.target).error !== null\n            || APIValidation.operationVerbs.validate(newOperations.verbs).error !== null\n        ) {\n            if (isAsyncAPI) {\n                Alert.warning(intl.formatMessage({\n                    id: 'Apis.Details.Topics.components.AddOperation.operation.topic.or.type.cannot.be.empty.warning',\n                    defaultMessage: \"Topic name or topic type(s) can't be empty\",\n                }));\n                return;\n            }\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.target.or.verb.cannot.be.empty.warning',\n                defaultMessage: \"Operation target or operation verb(s) can't be empty\",\n            }));\n            return;\n        }\n        if (api && api.type && api.type.toLowerCase() === 'websub'\n            && APIValidation.websubOperationTarget.validate(newOperations.target).error !== null) {\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.topic.cannot.have.path.params.warning',\n                defaultMessage: \"WebSub topic can't have path parameters\",\n            }));\n            return;\n        }\n        if (newOperations.target.indexOf(' ') >= 0) {\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.target.cannot.contains.white.spaces',\n                defaultMessage: 'Operation target cannot contains white spaces',\n            }));\n            return;\n        }\n        operationsDispatcher({ action: 'add', data: newOperations });\n        clearInputs();\n    }\n    return (\n        <Paper className={classes.paper}>\n            <Grid container direction='row' spacing={0} justify='center' alignItems='center'>\n                <Grid item md={5} xs={12}>\n                    <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                        <InputLabel ref={inputLabel} htmlFor='operation-verb'>\n                            {isAsyncAPI && (\n                                <FormattedMessage\n                                    id='Apis.Details.Topics.components.AddOperation.op.type'\n                                    defaultMessage='Type'\n                                />\n                            )}\n                            {!isAsyncAPI && (\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.AddOperation.http.verb'\n                                    defaultMessage='HTTP Verb'\n                                />\n                            )}\n                        </InputLabel>\n\n                        <Select\n                            id='add-operation-selection-dropdown'\n                            multiple\n                            renderValue={(verbs) => {\n                                const remaining = [];\n                                const verbElements = verbs.map((verb, index) => {\n                                    if (index < 2) {\n                                        return <VerbElement isButton verb={verb} />;\n                                    }\n                                    remaining.push(verb.toUpperCase());\n                                    return null;\n                                });\n                                const allSelected = getSupportedVerbs().length === newOperations.verbs.length;\n                                return (\n                                    <>\n                                        {verbElements}\n                                        {remaining.length > 0 && (\n                                            <Tooltip title={remaining.join(', ')} placement='top'>\n                                                <Box display='inline' color='text.hint' m={1} fontSize='subtitle1'>\n                                                    {allSelected ? 'All selected' : `${verbs.length - 2} more`}\n                                                </Box>\n                                            </Tooltip>\n                                        )}\n                                    </>\n                                );\n                            }}\n                            value={newOperations.verbs}\n                            onChange={({ target: { name, value } }) => newOperationsDispatcher({ type: name, value })}\n                            labelWidth={labelWidth}\n                            inputProps={{\n                                name: 'verbs',\n                                id: 'operation-verb',\n                            }}\n                            MenuProps={{\n                                getContentAnchorEl: null,\n                                anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                },\n                            }}\n                        >\n                            {getSupportedVerbs().map((verb) => (\n                                <VerbElement\n                                    checked={newOperations.verbs.includes(verb.toLowerCase())}\n                                    value={verb.toLowerCase()}\n                                    verb={verb}\n                                />\n                            ))}\n                        </Select>\n\n                        <FormHelperText id='my-helper-text'>\n                            {newOperations.verbs.includes('options') && (\n                                // TODO: Add i18n to tooltip text ~tmkb\n                                <Tooltip\n                                    title={\n                                        'Select the OPTIONS method to send OPTIONS calls to the backend.'\n                                        + ' If the OPTIONS method is not selected, OPTIONS calls will be returned '\n                                        + 'from the Gateway with allowed methods.'\n                                    }\n                                    placement='bottom'\n                                >\n                                    <Badge color='error' variant='dot'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.AddOperation.option'\n                                            defaultMessage='OPTIONS'\n                                        />\n                                    </Badge>\n                                </Tooltip>\n                            )}\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item md={5} xs={8}>\n                    <TextField\n                        id='operation-target'\n                        label={isAsyncAPI ? 'Topic Name' : 'URI Pattern'}\n                        error={Boolean(newOperations.error)}\n                        autoFocus\n                        name='target'\n                        value={newOperations.target}\n                        onChange={({ target: { name, value } }) => newOperationsDispatcher({\n                            type: name,\n                            value: !isWebSub && !value.startsWith('/') ? `/${value}` : value,\n                        })}\n                        placeholder={isAsyncAPI ? 'Enter topic name' : 'Enter URI pattern'}\n                        helperText={newOperations.error || (isAsyncAPI ? 'Enter topic name' : 'Enter URI pattern')}\n                        fullWidth\n                        margin='dense'\n                        variant='outlined'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === 'Enter') {\n                                // key code 13 is for `Enter` key\n                                event.preventDefault(); // To prevent form submissions\n                                addOperation();\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item md={2} xs={4}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.add.tooltip'\n                                defaultMessage='Add new operation'\n                            />\n                        )}\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <Fab\n                                style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                                size='small'\n                                color='primary'\n                                aria-label='Add new operation'\n                                onClick={addOperation}\n                                id='add-operation-button'\n                            >\n                                <AddIcon />\n                            </Fab>\n                        </span>\n                    </Tooltip>\n                    <sup>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.AddOperation.clear.inputs.tooltip'\n                                    defaultMessage='Clear inputs'\n                                />\n                            )}\n                            placement='bottom'\n                            interactive\n                        >\n                            <span>\n                                <IconButton onClick={clearInputs} size='small' aria-label='clear-inputs'>\n                                    <ClearIcon />\n                                </IconButton>\n                            </span>\n                        </Tooltip>\n                    </sup>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nAddOperation.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddOperation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SaveOperations(props) {\n    const {\n        updateOpenAPI, updateAsyncAPI, operationsDispatcher, api,\n    } = props;\n    const [isUpdating, setIsSaving] = useState(false);\n    const history = useHistory();\n    const [isOpen, setIsOpen] = useState(false);\n    function handleSaveAndDeploy() {\n        setIsSaving(true);\n        if (updateAsyncAPI) {\n            updateAsyncAPI('save')\n                .finally(() => history.push({\n                    pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                        : `/apis/${api.id}/deployments`,\n                    state: 'deploy',\n                }));\n        } else {\n            updateOpenAPI('save')\n                .finally(() => history.push({\n                    pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                        : `/apis/${api.id}/deployments`,\n                    state: 'deploy',\n                }));\n        }\n    }\n\n    /**\n     * Handle the Save button event,\n     *\n     */\n    function handleSave() {\n        setIsSaving(true);\n        if (updateAsyncAPI) {\n            updateAsyncAPI('save').finally(() => setIsSaving(false));\n        } else {\n            updateOpenAPI('save').finally(() => setIsSaving(false));\n        }\n    }\n\n    return (\n        <>\n            <Grid container direction='row' spacing={1} style={{ marginTop: 20 }}>\n                <Grid item>\n                    {api.isRevision\n                        || isRestricted(['apim:api_create'], api) ? (\n                            <Button\n                                disabled\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Resources.save'\n                                    defaultMessage='Save'\n                                />\n                            </Button>\n                        ) : (\n                            <CustomSplitButton\n                                advertiseInfo={api.advertiseInfo}\n                                api={api}\n                                handleSave={handleSave}\n                                handleSaveAndDeploy={handleSaveAndDeploy}\n                                isUpdating={isUpdating}\n                                id='resources-save-operations'\n                            />\n                        )}\n                </Grid>\n                <Grid item>\n                    <Button onClick={() => setIsOpen(true)}>Reset</Button>\n                </Grid>\n            </Grid>\n            <Dialog\n                open={isOpen}\n                aria-labelledby='bulk-delete-dialog-title'\n                aria-describedby='bulk-delete-dialog-description'\n                onBackdropClick={() => setIsOpen(false)}\n            >\n                <DialogTitle id='bulk-delete-dialog-title'>Discard changes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='bulk-delete-dialog-description'>\n                        Please confirm the discard all changes action\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setIsOpen(false)}>CLOSE</Button>\n                    <Box ml={1}>\n                        <Button\n                            onClick={() => {\n                                operationsDispatcher({ action: 'init' });\n                                setIsOpen(false);\n                            }}\n                            color='error'\n                        >\n                            RESET\n                        </Button>\n                    </Box>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nSaveOperations.propTypes = {\n    updateOpenAPI: PropTypes.func,\n    updateAsyncAPI: PropTypes.func,\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n\nSaveOperations.defaultProps = {\n    updateOpenAPI: undefined,\n    updateAsyncAPI: undefined,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useContext, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport CreateEditForm from './CreateEditForm';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport GoToEdit from './GoToEdit';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    mainTitle: {\n        color: theme.palette.primary.dark,\n    },\n});\n\nfunction Create(props) {\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [newDoc, setNewDoc] = useState(null);\n    const [saveDisabled, setSaveDisabled] = useState(true);\n    const { classes, intl, history } = props;\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    const restAPI = api.apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n    let createEditForm = useRef(null);\n\n    const addDocument = (apiId) => {\n        const promiseWrapper = createEditForm.addDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Create.successful.file.upload.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            history.push(listingPath);\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Create.markdown.editor.upload.error',\n                                    defaultMessage: 'Error uploading the file',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${doc.body.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.success',\n                        defaultMessage: ' added successfully.',\n                    })}`);\n                    setNewDoc(doc);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.add.error',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={listingPath} className={classes.titleLink}>\n                                    <Typography variant='h5' component='h2' align='left' className={classes.mainTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.heading'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h5' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Create.title'\n                                        defaultMessage='Add New Document'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0}>\n                                <CreateEditForm\n                                    innerRef={(node) => {\n                                        createEditForm = node;\n                                    }}\n                                    apiType={api.apiType}\n                                    apiId={api.id}\n                                    saveDisabled={saveDisabled}\n                                    setSaveDisabled={setSaveDisabled}\n                                />\n                                <Divider />\n\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        id='add-document-btn'\n                                        data-testid='add-document-btn'\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => addDocument(api.id)}\n                                        disabled={saveDisabled}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.button'\n                                            defaultMessage='Add Document'\n                                        />\n                                    </Button>\n                                    <Button className={classes.button} onClick={() => history.push(listingPath)}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.cancel.button'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {newDoc && <GoToEdit doc={newDoc} />}\n        </React.Fragment>\n    );\n}\n\nCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Create)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dropzone from 'react-dropzone';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIValidation from 'AppData/APIValidation';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Configurations from 'Config';\n\nconst styles = theme => ({\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControlFirst: {\n        display: 'block',\n    },\n    formControl: {\n        display: 'block',\n        marginTop: 20,\n    },\n    formControlLabel: {\n        background: '#efefef',\n        borderRadius: 5,\n        paddingRight: 10,\n        marginLeft: 0,\n        marginTop: 10,\n    },\n    typeTextWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 75,\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        cursor: 'pointer',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n});\n\nclass CreateEditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: 'HOWTO',\n            sourceType: 'INLINE',\n            name: '',\n            summary: '',\n            sourceUrl: '',\n            file: null,\n            disableName: false,\n            otherTypeName: null,\n            nameNotDuplicate: true,\n            nameMaxLengthExceeds: false,\n            invalidUrl: false,\n            nameEmpty: false,\n            summeryEmpty: false,\n            urlEmpty: false,\n            invalidDocName: false,\n            visibility: 'API_LEVEL'\n        };\n    }\n\n    changeType = (e) => {\n        const { value } = e.target;\n        if (value === 'PUBLIC_FORUM' || value === 'SUPPORT_FORUM') {\n            this.setState({ sourceType: 'URL' });\n        }\n        this.setState({ type: value });\n    };\n    changeSource = (e) => {\n        const { value } = e.target;\n        this.validate();\n        this.setState({ sourceType: value });\n    };\n    setDisable = (item) => {\n        const { type } = this.state;\n        if (item === 'INLINE' || item === 'MARKDOWN' || item === 'FILE') {\n            if (type === 'PUBLIC_FORUM' || type === 'SUPPORT_FORUM') {\n                return true;\n            }\n        }\n    };\n    handleChange = name => (e) => {\n        const { value } = e.target;\n        if (name === 'name') {\n            this.setState({ name: value });\n        } else if (name === 'summary') {\n            this.setState({ summary: value });\n        } else if (name === 'sourceUrl') {\n            this.setState({ sourceUrl: value });\n        } else if (name === 'otherTypeName') {\n            this.setState({ otherTypeName: value });\n        }else if (name === 'visibility') {\n            this.setState({ visibility: value });\n        }\n    };\n\n    onDrop = (acceptedFile) => {\n        const { intl } = this.props;\n        var specialChars = /[`!@#%^*()+\\={};'\"\\\\|,<>\\/~]/;\n        if (specialChars.test(acceptedFile[0].name)) {\n            this.setState({ file: null });\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Documents.CreateEditForm.source.file.name.error.invalid',\n                defaultMessage: 'Document source file name cannot contain spaces or special characters',\n            }));\n        } else {\n            this.setState({ file: acceptedFile });\n        }\n    };\n\n    addDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName, visibility,\n        } = this.state;\n        const docPromise = restAPI.addDocument(apiId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility,\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    updateDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName, visibility,\n        } = this.state;\n        const { docId } = this.props;\n        const docPromise = restAPI.updateDocument(apiId, docId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility,\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    getDocument() {\n        const { apiId, docId, apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        if (docId && apiId) {\n            const docPromise = restAPI.getDocument(apiId, docId);\n            docPromise\n                .then((doc) => {\n                    const {\n                        name, type, summary, sourceType, sourceUrl, otherTypeName, visibility,\n                    } = doc.body;\n                    this.setState({\n                        name,\n                        type,\n                        summary,\n                        sourceType,\n                        sourceUrl,\n                        otherTypeName,\n                        visibility,\n                    });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    }\n                });\n        }\n    }\n    validate(field=null, value=null) {\n        let invalidUrl = false;\n        if (field === 'url') {\n            invalidUrl = value ? APIValidation.url.validate(value).error : false;\n            this.setState({ invalidUrl });\n            if (value === '') {\n                this.setState({ urlEmpty: true });\n            } else {\n                this.setState({ urlEmpty: false });\n            }\n        } else if (field === 'name') {\n            if (value) {\n                const nameValidity = APIValidation.documentName.required().validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    this.setState({ invalidDocName: false });\n                    const promise = APIValidation.apiDocument.validate({ id: this.props.apiId, name: value });\n                        promise\n                            .then((isDocumentPresent) => {\n                                this.setState({ nameNotDuplicate: !isDocumentPresent });\n                            })\n                            .catch((error) => {\n                                if (error.status === 404) {\n                                    this.setState({ nameNotDuplicate: true });\n                                } else {\n                                    Alert.error('Error when validating document name');\n                                }\n                            });\n                } else {\n                    this.setState({ invalidDocName: true });\n                }\n            } else {\n                this.setState({ nameNotDuplicate: true });\n            }\n\n            if (value === '') {\n                this.setState({ nameEmpty: true, nameMaxLengthExceeds: false });\n            } else if (value && value.length > 60) {\n                this.setState({ nameEmpty: false, nameMaxLengthExceeds: true });\n            } else {\n                this.setState({ nameEmpty: false, nameMaxLengthExceeds: false });\n            }\n        } else if (field === 'summary') {\n            if (value === '') {\n                this.setState({ summeryEmpty: true });\n            } else {\n                this.setState({ summeryEmpty: false });\n            }\n        }\n    }\n    componentDidMount() {\n        this.getDocument();\n        const { apiId, docId } = this.props;\n        if (apiId && docId) {\n            this.setState({ disableName: true });\n        }\n    }\n    showNameHelper() {\n        const { nameEmpty, nameNotDuplicate, nameMaxLengthExceeds, invalidDocName } = this.state;\n        if (nameMaxLengthExceeds) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.exceeds.document.name.length.helper.text'\n                    defaultMessage='Document name exceeds the maximum length of 60 characters'\n                />\n            );\n        } else if (nameNotDuplicate && !nameEmpty && !invalidDocName) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.document.name.helper.text'\n                    defaultMessage='Provide the name for the document'\n                />\n            );\n        } else if (nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.empty.document.name.helper.text'\n                    defaultMessage='Document name cannot be empty'\n                />\n            );\n        } else if (invalidDocName) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.invalid.document.name.helper.text'\n                    defaultMessage='Document name cannot contain spaces or special characters'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.duplicate.document.name.helper.text'\n                    defaultMessage='Duplicate document name'\n                />\n            );\n        }\n    }\n    getUrlHelperText() {\n        const { invalidUrl, urlEmpty} = this.state;\n\n        if (invalidUrl) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.invalid'\n                    defaultMessage='Enter a valid URL to the source'\n                />\n            );\n        } else if (urlEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.empty'\n                    defaultMessage='URL Field cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text'\n                    defaultMessage='Provide the URL to the source'\n                />\n            );\n        }\n    }\n    render() {\n        const {\n            name,\n            type,\n            summary,\n            sourceType,\n            sourceUrl,\n            file,\n            disableName,\n            otherTypeName,\n            invalidUrl,\n            nameNotDuplicate,\n            nameMaxLengthExceeds,\n            nameEmpty,\n            invalidDocName,\n            summeryEmpty,\n            urlEmpty,\n            visibility\n        } = this.state;\n        const { classes, setSaveDisabled } = this.props;\n        const { settings: settingsContext } = this.context;\n        if (\n            name !== '' &&\n            summary !== '' &&\n            nameNotDuplicate &&\n            !nameMaxLengthExceeds &&\n            !invalidDocName &&\n            ((!invalidUrl && sourceUrl !== '') || sourceType !== 'URL')\n        ) {\n            setSaveDisabled(false);\n        } else {\n            setSaveDisabled(true);\n        }\n        return (\n            <div className={classes.addNewOther}>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('name', value);\n                            },\n                        }}\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.name'\n                                defaultMessage='Name *'\n                            />\n                        }\n                        helperText={this.showNameHelper()}\n                        type='text'\n                        id='doc-name'\n                        variant='outlined'\n                        name='name'\n                        margin='normal'\n                        value={name}\n                        onChange={this.handleChange('name')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        autoFocus\n                        disabled={disableName}\n                        error={!nameNotDuplicate || nameEmpty || nameMaxLengthExceeds || invalidDocName}\n                    />\n                </FormControl>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        multiline\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                            onKeyUp: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                        }}\n                        id='doc-summary'\n                        margin='normal'\n                        variant='outlined'\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary'\n                                defaultMessage='Summary *'\n                            />\n                        }\n                        helperText={\n                            summeryEmpty ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                    defaultMessage='Document summary can not be empty'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                    defaultMessage='Provide a brief description for the document'\n                                />\n                            )\n                        }\n                        type='text'\n                        name='summary'\n                        value={summary}\n                        onChange={this.handleChange('summary')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        error={summeryEmpty}\n                    />\n                </FormControl>\n                {settingsContext.docVisibilityEnabled && \n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                <TextField\n                    fullWidth\n                    id='docVisibility-selector'\n                    select\n                    variant='outlined'\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility'\n                            defaultMessage='Document Visibility'\n                        />\n                    }\n                    helperText={\n                        summeryEmpty ? (\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                defaultMessage='Document summary can not be empty'\n                            />\n                        ) : (\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                defaultMessage='Provide a brief description for the document'\n                            />\n                        )\n                    }\n                    type='text'\n                    name='visibility'\n                    margin='normal'\n                    value={visibility}\n                    onChange={this.handleChange('visibility')}\n                    error={summeryEmpty}\n                >\n                    <MenuItem value='API_LEVEL'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.public'\n                            defaultMessage='Same as API Visibility'\n                        />\n                    </MenuItem>\n                    <MenuItem value='PRIVATE'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.private'\n                            defaultMessage='Private'\n                        />\n                    </MenuItem>\n                    <MenuItem value='OWNER_ONLY'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.ownerOnly'\n                            defaultMessage='Owner Only'\n                        />\n                    </MenuItem>\n                </TextField>\n            </FormControl>}\n                <FormControl component='fieldset' className={classes.formControlFirst}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.create.type'\n                            defaultMessage='Type'\n                        />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Type'\n                        name='type'\n                        className={classes.group}\n                        value={type}\n                        onChange={this.changeType}\n                    >\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='HOWTO'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>help_outline</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.how.to'\n                                            defaultMessage='How To'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SAMPLES'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>code</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.sample'\n                                            defaultMessage='Sample and SDK'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='PUBLIC_FORUM'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.public.forum'\n                                            defaultMessage='Public Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SUPPORT_FORUM'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.Documents.CreateEditForm.document.create.type.support.' +\n                                                'forum'\n                                            }\n                                            defaultMessage='Support Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='OTHER'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>video_label</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.other'\n                                            defaultMessage='Other'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {type === 'OTHER' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            label={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category'\n                                    }\n                                    defaultMessage='Other Document Type *'\n                                />\n                            }\n                            helperText={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category.helper.text'\n                                    }\n                                    defaultMessage='Provide the document type'\n                                />\n                            }\n                            type='text'\n                            id='other-doc-type'\n                            name='otherTypeName'\n                            margin='normal'\n                            value={otherTypeName}\n                            variant='outlined'\n                            onChange={this.handleChange('otherTypeName')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </FormControl>\n                )}\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage id='Apis.Details.Documents.CreateEditForm.source' defaultMessage='Source' />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Source'\n                        name='sourceType'\n                        className={classes.group}\n                        value={sourceType}\n                        onChange={this.changeSource}\n                    >\n                        <FormControlLabel\n                            disabled={this.setDisable('INLINE')}\n                            value='INLINE'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.inline'\n                                    defaultMessage='Inline'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('MARKDOWN')}\n                            value='MARKDOWN'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.markdown'\n                                    defaultMessage='Markdown'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('URL')}\n                            value='URL'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('FILE')}\n                            value='FILE'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.file'\n                                    defaultMessage='File'\n                                />\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {sourceType === 'URL' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                                onKeyUp: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                            }}\n                            id='url'\n                            margin='normal'\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                            helperText={this.getUrlHelperText()}\n                            type='text'\n                            name='sourceUrl'\n                            value={sourceUrl}\n                            onChange={this.handleChange('sourceUrl')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            error={invalidUrl || urlEmpty}\n                            variant='outlined'\n                        />\n                    </FormControl>\n                )}\n                {sourceType === 'FILE' && (\n                    <Dropzone\n                        multiple={false}\n                        accept={Configurations.app.supportedDocTypes}\n                        className={classes.dropzone}\n                        activeClassName={classes.acceptDrop}\n                        rejectClassName={classes.rejectDrop}\n                        onDrop={(dropFile) => {\n                            this.onDrop(dropFile);\n                        }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <div className={classes.dropZoneWrapper}>\n                                    <Icon className={classes.dropIcon} style={{ fontSize: 56 }}>\n                                        cloud_upload\n                                    </Icon>\n                                    {file && file.length > 0 && (\n                                        <div className={classes.uploadedFile}>\n                                            <Icon>file</Icon> {file[0].name}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                    </Dropzone>\n                )}\n                {(sourceType === 'INLINE' || sourceType === 'MARKDOWN') && (\n                    <InlineMessage type='info' height={60}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.content.info'\n                                    defaultMessage={\n                                        'Please save the document. The content can be edited in the next ' + 'step.'\n                                    }\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n            </div>\n        );\n    }\n}\nCreateEditForm.contextType = AppContext;\nCreateEditForm.defaultProps = {\n    apiId: null,\n    docId: null,\n};\nCreateEditForm.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}),\n    apiId: PropTypes.shape({}),\n    saveDisabled: PropTypes.bool.isRequired,\n    setSaveDisabled: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(CreateEditForm));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus , vs } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Configurations from 'Config';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"MDMonacoEditor\" */));\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    markdownViewWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nfunction MarkdownEditor(props) {\n    const skipHtml = Configurations.app.markdown ? Configurations.app.markdown.skipHtml : true;\n    const markdownSyntaxHighlighterProps = Configurations.app.markdown ?\n        Configurations.app.markdown.syntaxHighlighterProps: {};\n    const syntaxHighlighterDarkTheme = Configurations.app.markdown ? \n        Configurations.app.markdown.syntaxHighlighterDarkTheme: false;\n    const { intl, showAtOnce, history } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [open, setOpen] = useState(showAtOnce);\n    const [docContent, setDocContent] = useState(\n        intl.formatMessage({\n            id: 'documents.markdown.editor.default',\n            defaultMessage: '#Enter your markdown content',\n        }),\n    );\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const editorDidMount = (editor, monaco) => {\n        editor.focus();\n    };\n    const addContentToDoc = () => {\n        const restAPI = new Api();\n        setIsUpdating(true);\n        const docPromise = restAPI.addInlineContentToDocument(api.id, props.docId, 'MARKDOWN', docContent);\n        docPromise\n            .then(doc => {\n                Alert.info(\n                    `${doc.obj.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.MarkdownEditor.update.success.message',\n                        defaultMessage: 'updated successfully.',\n                    })}`,\n                );\n                toggleOpen();\n                setIsUpdating(false);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n                setIsUpdating(false);\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, props.docId);\n        docPromise\n            .then(doc => {\n                setDocContent(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n    const addApiContent = (originalMarkdown) => {\n        if(originalMarkdown) {\n            let newMarkdown = originalMarkdown;\n            Object.keys(api).forEach((fieldName) => {\n                const regex = new RegExp('___' + fieldName + '___', 'g');\n                newMarkdown = newMarkdown.replace(regex, api[fieldName]);\n            });\n            return newMarkdown;\n        } else {\n            return '';\n        }\n    }\n\n    const markdownWithApiData = addApiContent(docContent);\n\n    const { classes, docName } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={api.isRevision}  aria-label={'Edit Content of ' + docName}>\n                <Icon>code</Icon>\n                <FormattedMessage\n                    id=\"Apis.Details.Documents.MarkdownEditor.edit.content\"\n                    defaultMessage=\"Edit Content\"\n                />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color=\"inherit\" onClick={toggleOpen} aria-label=\"Close\">\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant=\"h4\" className={classes.docName}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.edit.content.of\"\n                            defaultMessage=\"Edit Content of\"\n                        />{' '}\n                        \"{docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" disabled={isUpdating} color=\"primary\" onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.update.content.button\"\n                            defaultMessage=\"Update Content\"\n                        />\n                        {isUpdating && <CircularProgress size={24} />}\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.cancel.button\"\n                            defaultMessage=\"Cancel\"\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Grid container spacing={7}>\n                        <Grid item xs={6} className='markdown-content-wrapper'>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    width=\"100%\"\n                                    height=\"100vh\"\n                                    language=\"markdown\"\n                                    theme=\"vs-dark\"\n                                    value={docContent}\n                                    options={{ selectOnLineNumbers: true }}\n                                    onChange={setDocContent}\n                                    editorDidMount={editorDidMount}\n                                />\n                            </Suspense>\n                        </Grid>\n                        <Grid item xs={6} className='markdown-content-wrapper'>\n                            <div className={classes.markdownViewWrapper}>\n                                <Suspense fallback={<CircularProgress />}>\n                                    <ReactMarkdown\n                                        skipHtml={skipHtml}\n                                        children={markdownWithApiData}\n                                        remarkPlugins={[remarkGfm]}\n                                        components={{\n                                            code({ node, inline, className, children, ...props }) {\n                                                const match = /language-(\\w+)/.exec(className || '')\n                                                return !inline && match ? (\n                                                    <SyntaxHighlighter\n                                                        children={String(children).replace(/\\n$/, '')}\n                                                        style={syntaxHighlighterDarkTheme ? vscDarkPlus : vs}\n                                                        language={match[1]}\n                                                        PreTag=\"div\"\n                                                        {...props}\n                                                        {...markdownSyntaxHighlighterProps}\n                                                    />\n                                                ) : (\n                                                    <code className={className} {...props}>\n                                                        {children}\n                                                    </code>\n                                                )\n                                            }\n                                        }}\n                                    />                                \n                                </Suspense>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nMarkdownEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(MarkdownEditor)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useRef, useContext} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CreateEditForm from './CreateEditForm';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n    editMetaButton: {\n        whiteSpace: 'nowrap',\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction Edit(props) {\n    const restAPI = new Api();\n\n    const { intl, apiType } = props;\n    const [open, setOpen] = useState(false);\n    const [saveDisabled, setSaveDisabled] = useState(false);\n    let createEditForm = useRef(null);\n    const { api } = useContext(APIContext);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const updateDoc = () => {\n        const { apiId } = props;\n        const promiseWrapper = createEditForm.updateDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Edit.markdown.editor.upload.success.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            props.getDocumentsList();\n                            toggleOpen();\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Edit.markdown.editor.upload.error.message',\n                                    defaultMessage: 'Error uploading the file.',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.success.message',\n                        defaultMessage: 'Updated successfully.',\n                    })}`);\n                    props.getDocumentsList();\n                    toggleOpen();\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.error.message',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n\n    const { classes, docId, apiId, docName } = props;\n    return (\n        <div>\n            <Button\n                onClick={toggleOpen}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || api.isRevision}\n                className={classes.editMetaButton}\n                aria-label={'Edit Meta Data of ' + docName}\n            >\n                <Icon>edit</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                    defaultMessage='Edit Meta Data'\n                />\n            </Button>\n            <Dialog open={open} onClose={toggleOpen} TransitionComponent={Transition} fullScreen>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.edit.content'\n                            defaultMessage='Edit '\n                        />\n                        {` ${props.docName}`}\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={updateDoc} disabled={saveDisabled}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.update.content'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <CreateEditForm\n                        innerRef={(node) => {\n                            createEditForm = node;\n                        }}\n                        docId={docId}\n                        apiId={apiId}\n                        apiType={apiType}\n                        saveDisabled={saveDisabled}\n                        setSaveDisabled={setSaveDisabled}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\nEdit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Edit));\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { API } from '@stoplight/elements';\n// Manually imported from stoplightio/elements and wrapped in 'apim_elements' id\nimport './elements.css';\n// import '@stoplight/elements/styles.min.css';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport YAML from 'js-yaml';\n\nfunction GenerateDocument(){\n    const [api, updateAPI] = useAPI();\n    const [swagger, updateSwagger] = useState('');\n\n    useEffect(() => {\n        let promisedApi = api.getSwagger(api.id);\n        promisedApi\n            .then((response) => {\n                updateSwagger(YAML.safeDump(YAML.safeLoad(response.data)));\n            })\n            .catch((error) => {\n                if(process.env.NODE_ENV !== 'production'){\n                    console.error(error);\n                }\n                const {status} = error;\n                if(status === 404){\n                    this.setState({notFound:true});\n                }else if(status === 401){\n                    doRedirectToLogin();\n                }\n            });\n    }, [api.id]);\n    return(\n        <div id='apim_elements'>\n            <API\n                apiDescriptionDocument={swagger}\n                hideTryIt='true'\n                router='memory'\n                layout='sidebar'\n            />\n        </div>\n    );\n}\n\nexport default GenerateDocument;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash/isEmpty';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\nimport API from 'AppData/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SwaggerParser from '@apidevtools/swagger-parser';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CONSTS from 'AppData/Constants';\nimport Configurations from 'Config';\nimport Operation from './components/Operation';\nimport GroupOfOperations from './components/GroupOfOperations';\nimport SpecErrors from './components/SpecErrors';\nimport AddOperation from './components/AddOperation';\nimport GoToDefinitionLink from './components/GoToDefinitionLink';\nimport APIRateLimiting from './components/APIRateLimiting';\nimport {\n    extractPathParameters, isSelectAll, mapAPIOperations, getVersion, VERSIONS,\n} from './operationUtils';\nimport OperationsSelector from './components/OperationsSelector';\nimport SaveOperations from './components/SaveOperations';\n\n/**\n * This component handles the Resource page in API details though it's written in a sharable way\n * that anyone could use this to render resources in anywhere else if needed.\n *\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function Resources(props) {\n    const {\n        operationProps,\n        disableRateLimiting,\n        hideAPIDefinitionLink,\n        disableMultiSelect,\n        disableUpdate,\n        disableAddOperation,\n    } = props;\n\n    const [api, updateAPI] = useAPI();\n    const [pageError, setPageError] = useState(false);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [markedOperations, setSelectedOperation] = useState({});\n    const [sharedScopes, setSharedScopes] = useState();\n    const [sharedScopesByName, setSharedScopesByName] = useState();\n    const [openAPISpec, setOpenAPISpec] = useState({});\n    const [securityDefScopes, setSecurityDefScopes] = useState({});\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [arns, setArns] = useState([]);\n    const [resolvedSpec, setResolvedSpec] = useState({ spec: {}, errors: [] });\n    const [focusOperationLevel, setFocusOperationLevel] = useState(false);\n    const [expandedResource, setExpandedResource] = useState(false);\n\n    /**\n     *\n     *\n     * @param {*} currentPolicies\n     * @param {*} policyAction\n     * @returns\n     */\n    function resourcePoliciesReducer(currentPolicies, policyAction) {\n        const { action, data } = policyAction;\n        const { value } = data || {}; // target, verb,\n        let nextResourcePolicies = { ...currentPolicies };\n        switch (action) {\n            case 'init':\n                nextResourcePolicies = value;\n                break;\n            case 'update':\n                nextResourcePolicies[value.resourcePath][value.httpVerb][data.direction] = value;\n                break;\n            default:\n                break;\n        }\n        return nextResourcePolicies;\n    }\n    const [resourcePolicies, resourcePoliciesDispatcher] = useReducer(resourcePoliciesReducer, null);\n\n\n    /**\n     *\n     * **** NOTE: This reducer function needs to be a pure JS function, Mean we cant refer to external states, or\n     * variables within the `operationsReducer` function. Please avoid making external references.\n     * We need to remove already used `openAPISpec`,`setSecurityDefScopes` etc.\n     * Source : https://github.com/facebook/react/issues/16295#issuecomment-610098654\n     * @param {Object} currentOperations Current state\n     * @param {Object} operationAction action and payload\n     * @return {Object} next next state\n     */\n    function operationsReducer(currentOperations, operationAction) {\n        // Please read the note above before updating the reducer\n        const { action, data } = operationAction;\n        const { target, verb, value } = data || {};\n        let updatedOperation;\n        let addedOperations;\n        if (target && verb) {\n            updatedOperation = cloneDeep(currentOperations[target][verb]);\n        } else {\n            addedOperations = cloneDeep(currentOperations);\n        }\n        let newData = {};\n        if (action === 'removeAllSecurity') {\n            newData = cloneDeep(openAPISpec.paths);\n        }\n        if (action === 'init') {\n            newData = data || openAPISpec.paths;\n        }\n        switch (action) {\n            case 'init':\n                setSelectedOperation({});\n                return data || openAPISpec.paths;\n            case 'removeAllSecurity':\n                setSelectedOperation({});\n                return Object.entries(newData).reduce((resourceAcc, [resourceKey, verbObj]) => {\n                    const verbList = Object.entries(verbObj).reduce((verbListAcc, [verbKey, operation]) => {\n                        const newOperation = { ...operation };\n                        newOperation['x-auth-type'] = data.disable ? 'None' : 'Any';\n                        const newVerbListAcc = { ...verbListAcc };\n                        newVerbListAcc[verbKey] = newOperation;\n                        return newVerbListAcc;\n                    }, {});\n                    const newResourceListAcc = { ...resourceAcc };\n                    newResourceListAcc[resourceKey] = verbList;\n                    return newResourceListAcc;\n                }, {});\n            case 'description':\n            case 'summary':\n                updatedOperation[action] = value;\n                break;\n            case 'authType':\n                updatedOperation['x-auth-type'] = value ? 'Any' : 'None';\n                break;\n            case 'parameter':\n                if (updatedOperation.parameters) {\n                    // Get the index to check whether the same parameter exists.\n                    const index = updatedOperation.parameters.findIndex(\n                        (e) => e.in === value.in && e.name === value.name,\n                    );\n                    if (index === -1) { // Parameter with name and in does not exists.\n                        if (value.in === 'body') {\n                            // Get the index of existing body param.\n                            // This replaces if a new body parameter is added when another one exists.\n                            const bodyIndex = updatedOperation.parameters.findIndex((parameter) => {\n                                return parameter.in === 'body';\n                            });\n                            if (bodyIndex !== -1) {\n                                updatedOperation.parameters[bodyIndex] = value;\n                            } else {\n                                updatedOperation.parameters.push(value);\n                            }\n                        } else {\n                            updatedOperation.parameters.push(value);\n                        }\n                    } else {\n                        updatedOperation.parameters[index] = value;\n                    }\n                } else {\n                    updatedOperation.parameters = [value];\n                }\n                break;\n            case 'requestBody':\n                updatedOperation[action] = value;\n                break;\n            case 'deleteParameter':\n                updatedOperation.parameters = updatedOperation.parameters.filter((parameter) => {\n                    return !(parameter.in === value.in && parameter.name === value.name);\n                });\n                break;\n            case 'throttlingPolicy':\n                updatedOperation['x-throttling-tier'] = value;\n                break;\n            case 'amznResourceName':\n                updatedOperation['x-amzn-resource-name'] = value;\n                break;\n            case 'amznResourceTimeout':\n                updatedOperation['x-amzn-resource-timeout'] = value;\n                break;\n            case 'scopes': {\n                if (!updatedOperation.security) {\n                    updatedOperation.security = [{ default: [] }];\n                } else if (!updatedOperation.security.find((item) => item.default)) {\n                    updatedOperation.security.push({ default: [] });\n                }\n                const defValue = value[0];\n                updatedOperation.security.find((item) => item.default).default = defValue;\n                for (const selectedScope of defValue) {\n                    if (selectedScope\n                        && !securityDefScopes[selectedScope]\n                        && securityDefScopes[selectedScope] !== '') {\n                        let scopeDescription = '';\n                        if (selectedScope in sharedScopesByName) {\n                            if (sharedScopesByName[selectedScope].scope.description !== null) {\n                                scopeDescription = sharedScopesByName[selectedScope].scope.description;\n                            }\n                            securityDefScopes[selectedScope] = scopeDescription;\n                        }\n                        setSecurityDefScopes(securityDefScopes);\n                    }\n                }\n                break;\n            }\n            case 'add': {\n                const parameters = extractPathParameters(data.target, openAPISpec);\n                if (!addedOperations[data.target]) {\n                    // If target is not there add an empty object\n                    addedOperations[data.target] = {};\n                }\n                let alreadyExistCount = 0;\n                for (const currentVerb of data.verbs) {\n                    if (addedOperations[data.target][currentVerb]) {\n                        const message = `Operation already exist with ${data.target} and ${currentVerb}`;\n                        Alert.warning(message);\n                        console.warn(message);\n                        alreadyExistCount++;\n                    } else {\n                        // use else condition because continue is not allowed by es-lint rules\n                        addedOperations[data.target][currentVerb] = {\n                            'x-wso2-new': true, // This is to identify unsaved newly added operations, Remove when PUT\n                            'x-auth-type': 'Application & Application User', // By default security is enabled\n                            responses: { 200: { description: 'ok' } },\n                            parameters,\n                        };\n                    }\n                }\n                if (alreadyExistCount === data.verbs.length) {\n                    Alert.error('Operation(s) already exist!');\n                    return currentOperations;\n                }\n                return addedOperations;\n            }\n            default:\n                return currentOperations;\n        }\n        return { ...currentOperations, [target]: { ...currentOperations[target], [verb]: updatedOperation } };\n    }\n    const [operations, operationsDispatcher] = useReducer(operationsReducer, {});\n\n    const enableSecurity = () => {\n        operationsDispatcher({ action: 'removeAllSecurity', data: { disable: false } });\n    };\n    const disableSecurity = () => {\n        operationsDispatcher({ action: 'removeAllSecurity', data: { disable: true } });\n    };\n    /**\n     *\n     *\n     * @param {*} operation\n     * @param {*} checked\n     */\n    function onOperationSelectM(operation, checked) {\n        const { target, verb } = operation;\n        setSelectedOperation((currentSelections) => {\n            const nextSelectedOperations = cloneDeep(currentSelections);\n            if (!nextSelectedOperations[target]) {\n                nextSelectedOperations[target] = {};\n            }\n            if (checked) {\n                nextSelectedOperations[target][verb] = checked;\n            } else {\n                delete nextSelectedOperations[target][verb];\n            }\n            if (isEmpty(nextSelectedOperations[target])) {\n                delete nextSelectedOperations[target];\n            }\n            return nextSelectedOperations;\n        });\n    }\n    const onMarkAsDelete = useCallback(onOperationSelectM, [setSelectedOperation]);\n\n    // can't depends on API id because we need to consider the changes in operations in api object\n    // memoized (https://reactjs.org/docs/hooks-reference.html#usememo) to improve pref,\n    // localized to inject local apiThrottlingPolicy data\n    const localAPI = useMemo(\n        () => ({\n            id: api.id,\n            apiThrottlingPolicy,\n            scopes: api.scopes,\n            operations: api.isAPIProduct() ? {} : mapAPIOperations(api.operations),\n            endpointConfig: api.endpointConfig,\n        }),\n        [api, apiThrottlingPolicy],\n    );\n\n    /**\n     * This method sets the securityDefinitionScopes from the spec\n     * @param {Object} spec The original swagger content.\n     */\n    function setSecurityDefScopesFromSpec(spec) {\n        const openAPIVersion = getVersion(spec);\n        if (VERSIONS.V3.test(openAPIVersion)) {\n            if (spec.components && spec.components.securitySchemes && spec.components.securitySchemes.default) {\n                const { flows } = spec.components.securitySchemes.default;\n                if (flows.implicit.scopes) {\n                    setSecurityDefScopes(cloneDeep(flows.implicit.scopes));\n                }\n            }\n        } else if (VERSIONS.V2.test(openAPIVersion)) {\n            if (spec.securityDefinitions && spec.securityDefinitions.default) {\n                if (spec.securityDefinitions.default.scopes) {\n                    setSecurityDefScopes(cloneDeep(spec.securityDefinitions.default.scopes));\n                }\n            }\n        }\n    }\n\n    /**\n     * This method sets the scopes of the spec from the securityDefinitionScopes\n     */\n    function setSpecScopesFromSecurityDefScopes() {\n        const openAPIVersion = getVersion(openAPISpec);\n        if (VERSIONS.V3.test(openAPIVersion)) {\n            if (openAPISpec.components\n                && openAPISpec.components.securitySchemes\n                && openAPISpec.components.securitySchemes.default) {\n                openAPISpec.components.securitySchemes.default.flows.implicit.scopes = securityDefScopes;\n            }\n        } else if (VERSIONS.V2.test(openAPIVersion)) {\n            if (openAPISpec.securityDefinitions && openAPISpec.securityDefinitions.default) {\n                openAPISpec.securityDefinitions.default.scopes = securityDefScopes;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {*} rawSpec The original swagger content.\n     * @returns {null}\n     */\n    function resolveAndUpdateSpec(rawSpec) {\n        /*\n         * Deep copying the spec.\n         * Otherwise it will resolved to the original parameter passed (rawSpec) to the validate method.\n         * We will not alter the provided spec.\n         */\n        const specCopy = cloneDeep(rawSpec);\n        /*\n        * Used SwaggerParser.validate() because we can get the errors as well.\n        */\n        SwaggerParser.validate(specCopy, (err, result) => {\n            setResolvedSpec(() => {\n                const errors = err ? [err] : [];\n                return {\n                    spec: result,\n                    errors,\n                };\n            });\n        });\n        operationsDispatcher({ action: 'init', data: rawSpec.paths });\n        setOpenAPISpec(rawSpec);\n        setSecurityDefScopesFromSpec(rawSpec);\n    }\n\n    /**\n     *\n     * Update the swagger using /swagger PUT operation and then fetch the updated API Object doing a apis/{api-uuid} GET\n     * @param {JSON} spec Updated full OpenAPI spec ready to PUT\n     * @returns {Promise} Promise resolving to updated API object\n     */\n    function updateSwagger(spec) {\n        return api\n            .updateSwagger(spec)\n            .then((response) => resolveAndUpdateSpec(response.body))\n            .then(updateAPI)\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    setPageError(error.response.body);\n                } else {\n                    Alert.error('Error while updating the definition');\n                }\n            });\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    function updateSecurityDefinition(apiOperations) {\n        Object.keys(securityDefScopes).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const [, verbs] of Object.entries(apiOperations)) {\n                for (const [, verbInfo] of Object.entries(verbs)) {\n                    // Checking if the scope resides in the operation\n                    for (const secDef of verbInfo.security || []) {\n                        if (secDef\n                            && secDef.default\n                            && secDef.default.includes(key)) {\n                            isScopeExistsInOperation = true;\n                            break;\n                        }\n                    }\n\n                    if (isScopeExistsInOperation) {\n                        break;\n                    }\n                }\n                if (isScopeExistsInOperation) {\n                    break;\n                }\n            }\n            // Checking if the scope exists in operation and is a shared scope\n            if (!isScopeExistsInOperation && (key in sharedScopesByName)) {\n                delete securityDefScopes[key];\n            }\n        });\n        setSecurityDefScopes(securityDefScopes);\n    }\n\n    /**\n     *\n     * Save the OpenAPI changes using REST API, type parameter is required to\n     * identify the locally created data structured, i:e type `operation` will assume that `data` contains the\n     * object structure of locally created operation object which is a combination of REST API\n     * response `operations` field and OpenAPI spec operation information\n     * @param {String} type Type of data object\n     * @param {Object} data Data object\n     * @returns {Promise|null} A promise object which resolve to Swagger PUT response body.\n     */\n    function updateOpenAPI(type) {\n        const copyOfOperations = cloneDeep(operations);\n        switch (type) {\n            case 'save':\n                if (isSelectAll(markedOperations, copyOfOperations)) {\n                    const message = 'At least one operation is required for the API';\n                    Alert.warning(message);\n                    return Promise.reject(new Error(message));\n                }\n                for (const [target, verbs] of Object.entries(markedOperations)) {\n                    for (const verb of Object.keys(verbs)) {\n                        delete copyOfOperations[target][verb];\n                        if (isEmpty(copyOfOperations[target])) {\n                            delete copyOfOperations[target];\n                        }\n                    }\n                }\n                // TODO: use better alternative (optimize performance) to identify newly added operations ~tmkb\n                for (const [, verbs] of Object.entries(copyOfOperations)) {\n                    for (const [, verbInfo] of Object.entries(verbs)) {\n                        if (verbInfo['x-wso2-new']) {\n                            delete verbInfo['x-wso2-new'];\n                        }\n                    }\n                }\n                break;\n            default:\n                return Promise.reject(new Error('Unsupported resource operation!'));\n        }\n        updateSecurityDefinition(copyOfOperations);\n        setSpecScopesFromSecurityDefScopes();\n        if (apiThrottlingPolicy !== api.apiThrottlingPolicy) {\n            return updateAPI({ apiThrottlingPolicy })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error('Error while updating the API');\n                })\n                .then(() => updateSwagger({ ...openAPISpec, paths: copyOfOperations }));\n        } else {\n            return updateSwagger({ ...openAPISpec, paths: copyOfOperations });\n        }\n    }\n\n    useEffect(() => {\n        API.getAmznResourceNames(api.id)\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    setArns(response.body.list);\n                }\n            });\n    }, []);\n\n    useEffect(() => {\n        setApiThrottlingPolicy(api.apiThrottlingPolicy);\n    }, [api.apiThrottlingPolicy]);\n\n    useEffect(() => {\n        if (api.apitype !== 'APIProduct') {\n            API.getAllScopes()\n                .then((response) => {\n                    if (response.body && response.body.list) {\n                        const sharedScopesList = [];\n                        const sharedScopesByNameList = {};\n                        const shared = true;\n                        for (const scope of response.body.list) {\n                            const modifiedScope = {};\n                            modifiedScope.scope = scope;\n                            modifiedScope.shared = shared;\n                            sharedScopesList.push(modifiedScope);\n                            sharedScopesByNameList[scope.name] = modifiedScope;\n                        }\n                        setSharedScopes(sharedScopesList);\n                        setSharedScopesByName(sharedScopesByNameList);\n                    }\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        // Update the Swagger spec object when API object gets changed\n        api.getSwagger()\n            .then((response) => {\n                resolveAndUpdateSpec(response.body);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                }\n                console.error(error);\n            });\n        if (api.isSOAPToREST()) {\n            const promisedInPolicies = api.getResourcePolicies('in');\n            const promisedOutPolicies = api.getResourcePolicies('out');\n            Promise.all([promisedInPolicies, promisedOutPolicies])\n                .then(([inPolicies, outPolicies]) => {\n                    const mappedPolicies = {};\n                    for (const policy of inPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { in: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb] = { in: policy };\n                        }\n                    }\n                    for (const policy of outPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { out: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb].out = policy;\n                        }\n                    }\n                    resourcePoliciesDispatcher({ action: 'init', data: { value: mappedPolicies } });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    }\n                    setPageError(error.message);\n                    console.error(error);\n                });\n        }\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        const limit = Configurations.app.throttlingPolicyLimit;\n        API.policies('api', limit).then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, [api.id]);\n\n    // Note: Make sure not to use any hooks after/within this condition , because it returns conditionally\n    // If you do so, You will probably get `Rendered more hooks than during the previous render.` exception\n    if ((!pageError && isEmpty(openAPISpec)) || (resolvedSpec.errors.length === 0 && isEmpty(resolvedSpec.spec))) {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress disableShrink />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <Grid container direction='row' justify='flex-start' spacing={2} alignItems='stretch'>\n            {pageError && (\n                <Grid item md={12}>\n                    <Banner onClose={() => setPageError(null)} disableActions type='error' message={pageError} />\n                </Grid>\n            )}\n            {!disableRateLimiting && (\n                <Grid item md={12}>\n                    <APIRateLimiting\n                        operationRateLimits={operationRateLimits}\n                        value={apiThrottlingPolicy}\n                        onChange={setApiThrottlingPolicy}\n                        isAPIProduct={api.isAPIProduct()}\n                        focusOperationLevel={focusOperationLevel}\n                        setFocusOperationLevel={setFocusOperationLevel}\n                    />\n                </Grid>\n            )}\n            {!isRestricted(['apim:api_create'], api) && !disableAddOperation && (\n                <Grid item md={12} xs={12}>\n                    <AddOperation operationsDispatcher={operationsDispatcher} />\n                </Grid>\n            )}\n            {resolvedSpec.errors.length > 0 && <SpecErrors specErrors={resolvedSpec.errors} />}\n            <Grid item md={12}>\n                <Paper>\n                    {!disableMultiSelect && (\n                        <OperationsSelector\n                            operations={operations}\n                            selectedOperations={markedOperations}\n                            setSelectedOperation={setSelectedOperation}\n                            enableSecurity={enableSecurity}\n                            disableSecurity={disableSecurity}\n                        />\n                    )}\n                    {Object.entries(operations).map(([target, verbObject]) => (\n                        <Grid key={target} item md={12}>\n                            <GroupOfOperations openAPI={openAPISpec} tag={target}>\n                                <Grid\n                                    container\n                                    direction='column'\n                                    justify='flex-start'\n                                    spacing={1}\n                                    alignItems='stretch'\n                                >\n                                    {Object.entries(verbObject).map(([verb, operation]) => {\n                                        return CONSTS.HTTP_METHODS.includes(verb) ? (\n                                            <Grid key={`${target}/${verb}`} item>\n                                                <Operation\n                                                    target={target}\n                                                    verb={verb}\n                                                    highlight\n                                                    resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                                    resourcePolicy={\n                                                        resourcePolicies\n                                                        && resourcePolicies[target.slice(1)]\n                                                        && resourcePolicies[target.slice(1)][verb]\n                                                    }\n                                                    operationsDispatcher={operationsDispatcher}\n                                                    spec={openAPISpec}\n                                                    operation={operation}\n                                                    operationRateLimits={operationRateLimits}\n                                                    api={localAPI}\n                                                    markAsDelete={Boolean(markedOperations[target]\n                                                        && markedOperations[target][verb])}\n                                                    onMarkAsDelete={onMarkAsDelete}\n                                                    disableUpdate={\n                                                        disableUpdate || isRestricted(['apim:api_create'], api)\n                                                    }\n                                                    disableMultiSelect={disableMultiSelect}\n                                                    arns={arns}\n                                                    {...operationProps}\n                                                    resolvedSpec={resolvedSpec.spec}\n                                                    sharedScopes={sharedScopes}\n                                                    setFocusOperationLevel={setFocusOperationLevel}\n                                                    expandedResource={expandedResource}\n                                                    setExpandedResource={setExpandedResource}\n                                                />\n                                            </Grid>\n                                        ) : null;\n                                    })}\n                                </Grid>\n                            </GroupOfOperations>\n                        </Grid>\n                    ))}\n                </Paper>\n                <Grid\n                    style={{ marginTop: '25px' }}\n                    container\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    <Grid item>\n                        {!disableUpdate && (\n                            <SaveOperations\n                                operationsDispatcher={operationsDispatcher}\n                                updateOpenAPI={updateOpenAPI}\n                                api={api}\n                            />\n                        )}\n                    </Grid>\n                    <Grid item>\n                        {!hideAPIDefinitionLink && <GoToDefinitionLink api={api} />}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nResources.defaultProps = {\n    operationProps: { disableDelete: false },\n    disableUpdate: false,\n    disableRateLimiting: false,\n    disableMultiSelect: false,\n    hideAPIDefinitionLink: false,\n    disableAddOperation: false,\n};\n\nResources.propTypes = {\n    disableRateLimiting: PropTypes.bool,\n    hideAPIDefinitionLink: PropTypes.bool,\n    disableMultiSelect: PropTypes.bool,\n    disableAddOperation: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    operationProps: PropTypes.shape({\n        disableDelete: PropTypes.bool,\n    }),\n};\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Defining the supported data types by the OAS spec versions.\n *\n * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n * */\nconst supportedDataTypes = {\n    '2.0': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        formData: ['integer', 'number', 'string', 'boolean', 'file'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n    },\n    '3.x': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n        cookie: ['integer', 'number', 'string', 'boolean'],\n    },\n};\n\n/**\n * Util method for checking conditions.\n *\n * @param {boolean} condition : The condition to be checked\n * @param {any} matched : The value to be returned if the condition is true\n * @param {any} otherwise : The value to be returned if the condition is false.\n * @return {object} If true -> matched, false -> otherwise\n * */\nexport function iff(condition, matched, otherwise) {\n    return condition ? matched : otherwise;\n}\n\n/**\n * Method to get the supported data types for the given parameter type.\n *\n * @param {string} specVersion : The OAS version\n * @param {string} paramType : The parameter type.\n * @return {array} The list of supported parameters.\n * */\nexport function getSupportedDataTypes(specVersion, paramType) {\n    return paramType ? supportedDataTypes[specVersion === '2.0' ? '2.0' : '3.x'][paramType] : [];\n}\n\n/**\n * Get the supported data formats by each data type.\n *\n * @param {string} dataType: THe data type.\n * @return {array} The list of supported data formats.\n * */\nexport function getDataFormats(dataType) {\n    switch (dataType) {\n        case 'integer':\n            return ['int64', 'int32'];\n        case 'number':\n            return ['float', 'double'];\n        case 'string':\n            return ['date', 'date-time', 'byte', 'binary', 'password'];\n        default:\n            return [];\n    }\n}\n\n/**\n * Method to get the parameter schema based on the spec version.\n * For more info about Data Models (Schemas) refer https://swagger.io/docs/specification/data-models/\n * @param {string} specVersion : The OAS version\n * @return {object} The default schema\n * */\nexport function getParameter(specVersion) {\n    return specVersion === '2.0'\n        ? {\n            in: '', name: '', type: '', required: '',\n        }\n        : {\n            in: '', name: '', schema: { type: '' }, required: '',\n        };\n}\n\n/**\n * Get parameter types supported by spec version.\n *\n * @param {string} specVersion : The OAS version\n * @return {array} The list of supported parameter types.\n * */\nexport function getParameterTypes(specVersion) {\n    return specVersion === '2.0' ? ['query', 'header', 'body', 'formData'] : ['query', 'header', 'cookie', 'body'];\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport PropTypes from 'prop-types';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    tagClass: {\n        maxWidth: 1000,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        [theme.breakpoints.down('md')]: {\n            maxWidth: 800,\n        },\n    },\n}\n));\n\n/**\n *\n * Return a group container , User should provide the operations list as the child component\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function GroupOfOperations(props) {\n    const classes = useStyles();\n    const { openAPI, children, tag } = props;\n    const currentTagInfo = openAPI.tags && openAPI.tags.find((tagInfo) => tagInfo.name === tag);\n    return (\n        <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} id={tag}>\n                <Typography\n                    variant='h4'\n                    className={classes.tagClass}\n                    title={tag}\n                >\n                    {tag}\n                </Typography>\n                {currentTagInfo && (\n                    <Typography style={{ margin: '0px 30px' }} variant='caption'>\n                        {currentTagInfo.description}\n                    </Typography>\n                )}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nGroupOfOperations.propTypes = {\n    children: PropTypes.element.isRequired,\n    openAPI: PropTypes.shape({ tags: PropTypes.arrayOf(PropTypes.string) }).isRequired,\n    tag: PropTypes.string.isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    Divider,\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n    divider: {\n        width: 1,\n        height: 28,\n        margin: 4,\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n});\n/**\n * This component represents a single endpoint view of the endpoints listing. This component holds the actions that\n * affect the endpont. Eg: Delete, advance configuration.\n *\n * @param {any} props The input props\n * @returns {any} The HTML representation of the component.\n * */\nfunction GenericEndpoint(props) {\n    const {\n        category,\n        endpointURL,\n        editEndpoint,\n        classes,\n        type,\n        setAdvancedConfigOpen,\n        esCategory,\n        setESConfigOpen,\n        deleteEndpoint,\n        index,\n        readOnly,\n        autoFocus,\n        name,\n        id,\n        apiId,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState(endpointURL);\n    const { api } = useContext(APIContext);\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    useEffect(() => {\n        setServiceUrl(endpointURL);\n    }, [endpointURL]);\n\n    function testEndpoint(endpoint, apiID) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint, apiID)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                disabled={isRestricted(['apim:api_create'], api)}\n                label={name}\n                id={id}\n                className={classes.textField}\n                value={serviceUrl}\n                placeholder={!serviceUrl ? 'http://appserver/resource' : ''}\n                onChange={(event) => setServiceUrl(event.target.value)}\n                onBlur={() => {\n                    editEndpoint(index, category, serviceUrl);\n                }}\n                error={!serviceUrl}\n                helperText={!serviceUrl\n                    ? (\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GenericEndpoint.no.ep.error'\n                            defaultMessage='Endpoint URL should not be empty'\n                        />\n                    ) : ''}\n                variant='outlined'\n                margin='normal'\n                required\n                InputProps={{\n                    readOnly,\n                    autoFocus,\n                    id: category,\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            {statusCode && (\n                                <Chip\n                                    id={category + '-endpoint-test-status'}\n                                    label={statusCode}\n                                    className={isEndpointValid ? classes.endpointValidChip : iff(\n                                        isErrorCode,\n                                        classes.endpointErrorChip, classes.endpointInvalidChip,\n                                    )}\n                                    variant='outlined'\n                                />\n                            )}\n                            {!api.isWebSocket() && (\n                                <IconButton\n                                    className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                    aria-label='TestEndpoint'\n                                    onClick={() => testEndpoint(serviceUrl, apiId)}\n                                    disabled={(isRestricted(['apim:api_create'], api)) || isUpdating}\n                                    id={category + '-endpoint-test-icon-btn'}\n                                >\n                                    {isUpdating\n                                        ? <CircularProgress size={20} />\n                                        : (\n                                            <Tooltip\n                                                placement='top-start'\n                                                interactive\n                                                title={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Endpoints.GenericEndpoint.check.endpoint'\n                                                        defaultMessage='Check endpoint status'\n                                                    />\n                                                )}\n                                            >\n                                                <Icon>\n                                                    check_circle\n                                                </Icon>\n                                            </Tooltip>\n\n                                        )}\n                                </IconButton>\n                            )}\n                            {type === 'prototyped'\n                                ? <div />\n                                : (\n                                    <>\n                                        <IconButton\n                                            className={classes.iconButton}\n                                            aria-label='Settings'\n                                            onClick={() => setAdvancedConfigOpen(index, type, category)}\n                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                        >\n                                            <Tooltip\n                                                placement='top-start'\n                                                interactive\n                                                title={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Endpoints.GenericEndpoint.config.endpoint'\n                                                        defaultMessage='Endpoint configurations'\n                                                    />\n                                                )}\n                                            >\n                                                <Icon>\n                                                    settings\n                                                </Icon>\n                                            </Tooltip>\n                                        </IconButton>\n                                        {(type === 'load_balance' || type === 'failover') ? (<div />) : (\n                                            <IconButton\n                                                className={classes.iconButton}\n                                                aria-label='Security'\n                                                onClick={() => setESConfigOpen(type, esCategory)}\n                                                disabled={(isRestricted(['apim:api_create'], api))}\n                                                id={category + '-endpoint-security-icon-btn'}\n                                            >\n                                                <Tooltip\n                                                    placement='top-start'\n                                                    interactive\n                                                    title={(\n                                                        <FormattedMessage\n                                                            // eslint-disable-next-line max-len\n                                                            id='Apis.Details.Endpoints.GenericEndpoint.security.endpoint'\n                                                            defaultMessage='Endpoint security'\n                                                        />\n                                                    )}\n                                                >\n                                                    <Icon>\n                                                        security\n                                                    </Icon>\n                                                </Tooltip>\n                                            </IconButton>\n                                        )}\n                                    </>\n                                )}\n                            {(index > 0) ? <Divider className={classes.divider} /> : <div />}\n                            {(type === 'load_balance' || type === 'failover') ? (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Delete'\n                                    color='secondary'\n                                    onClick={() => deleteEndpoint(index, type, category)}\n                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                >\n                                    <Icon>\n                                        delete\n                                    </Icon>\n                                </IconButton>\n                            ) : (<div />)}\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpoint.defaultProps = {\n    readOnly: false,\n    autoFocus: false,\n    name: 'Service URL',\n    id: '',\n};\n\nGenericEndpoint.propTypes = {\n    endpointURL: PropTypes.string.isRequired,\n    deleteEndpoint: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    setESConfigOpen: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    category: PropTypes.string.isRequired,\n    readOnly: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    name: PropTypes.string,\n    apiId: PropTypes.string.isRequired,\n    id: PropTypes.string,\n};\n\nexport default withStyles(styles)(GenericEndpoint);\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport {\n    setRef,\n    useEventCallback,\n    useControlled,\n    unstable_useId as useId,\n} from '@material-ui/core/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\nfunction stripDiacritics(string) {\n    return typeof string.normalize !== 'undefined'\n        ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n        : string;\n}\n\nexport function createFilterOptions(config = {}) {\n    const {\n        ignoreAccents = true,\n        ignoreCase = true,\n        limit,\n        matchFrom = 'any',\n        stringify,\n        trim = false,\n    } = config;\n\n    return (options, { inputValue, getOptionLabel }) => {\n        let input = trim ? inputValue.trim() : inputValue;\n        if (ignoreCase) {\n            input = input.toLowerCase();\n        }\n        if (ignoreAccents) {\n            input = stripDiacritics(input);\n        }\n\n        const filteredOptions = options.filter((option) => {\n            let candidate = (stringify || getOptionLabel)(option);\n            if (ignoreCase) {\n                candidate = candidate.toLowerCase();\n            }\n            if (ignoreAccents) {\n                candidate = stripDiacritics(candidate);\n            }\n\n            return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n        });\n\n        return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n    };\n}\n\n// To replace with .findIndex() once we stop IE 11 support.\nfunction findIndex(array, comp) {\n    for (let i = 0; i < array.length; i += 1) {\n        if (comp(array[i])) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when pageup and pagedown keys are used.\nconst pageSize = 5;\n\nexport default function useAutocomplete(props) {\n    const {\n        autoComplete = false,\n        autoHighlight = false,\n        autoSelect = false,\n        blurOnSelect = false,\n        clearOnBlur = !props.freeSolo,\n        clearOnEscape = false,\n        componentName = 'useAutocomplete',\n        debug = false,\n        defaultValue = props.multiple ? [] : null,\n        disableClearable = false,\n        disableCloseOnSelect = false,\n        disabledItemsFocusable = false,\n        disableListWrap = false,\n        filterOptions = defaultFilterOptions,\n        filterSelectedOptions = false,\n        freeSolo = false,\n        getOptionDisabled,\n        getOptionLabel: getOptionLabelProp = (option) => option,\n        getOptionSelected = (option, value) => option === value,\n        groupBy,\n        handleHomeEndKeys = !props.freeSolo,\n        id: idProp,\n        includeInputInList = false,\n        inputValue: inputValueProp,\n        multiple = false,\n        onChange,\n        onClose,\n        onHighlightChange,\n        onInputChange,\n        onOpen,\n        open: openProp,\n        openOnFocus = false,\n        options,\n        selectOnFocus = !props.freeSolo,\n        value: valueProp,\n    } = props;\n\n    const id = useId(idProp);\n\n    let getOptionLabel = getOptionLabelProp;\n\n    if (process.env.NODE_ENV !== 'production') {\n        getOptionLabel = (option) => {\n            const optionLabel = getOptionLabelProp(option);\n            if (typeof optionLabel !== 'string') {\n                const erroneousReturn =\n                    optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n                console.error(\n                    `Material-UI: The \\`getOptionLabel\\` method of\n                    ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(\n    option,\n)}.`,\n                );\n            }\n            return optionLabel;\n        };\n    }\n\n    const ignoreFocus = React.useRef(false);\n    const firstFocus = React.useRef(true);\n    const inputRef = React.useRef(null);\n    const listboxRef = React.useRef(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const [focusedTag, setFocusedTag] = React.useState(-1);\n    const defaultHighlighted = autoHighlight ? 0 : -1;\n    const highlightedIndexRef = React.useRef(defaultHighlighted);\n\n    const [value, setValue] = useControlled({\n        controlled: valueProp,\n        default: defaultValue,\n        name: componentName,\n    });\n    const [inputValue, setInputValue] = useControlled({\n        controlled: inputValueProp,\n        default: '',\n        name: componentName,\n        state: 'inputValue',\n    });\n\n    const [focused, setFocused] = React.useState(false);\n\n    const resetInputValue = useEventCallback((event, newValue) => {\n        let newInputValue;\n        if (multiple) {\n            newInputValue = '';\n        } else if (newValue == null) {\n            newInputValue = '';\n        } else {\n            const optionLabel = getOptionLabel(newValue);\n            newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n        }\n\n        if (inputValue === newInputValue) {\n            return;\n        }\n\n        setInputValue(newInputValue);\n\n        if (onInputChange) {\n            onInputChange(event, newInputValue, 'reset');\n        }\n    });\n\n    React.useEffect(() => {\n        resetInputValue(null, value);\n    }, [value, resetInputValue]);\n\n    const [open, setOpenState] = useControlled({\n        controlled: openProp,\n        default: false,\n        name: componentName,\n        state: 'open',\n    });\n\n    const inputValueIsSelectedValue =\n        !multiple && value != null && inputValue === getOptionLabel(value);\n\n    const popupOpen = open;\n\n    const filteredOptions = popupOpen\n        ? filterOptions(\n            options.filter((option) => {\n                if (\n                    filterSelectedOptions &&\n                    (multiple ? value : [value]).some(\n                        (value2) => value2 !== null && getOptionSelected(option, value2),\n                    )\n                ) {\n                    return false;\n                }\n                return true;\n            }),\n            // we use the empty string to manipulate `filterOptions` to not filter any options\n            // i.e. the filter predicate always returns true\n            { inputValue: inputValueIsSelectedValue ? '' : inputValue, getOptionLabel },\n        )\n        : [];\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (value !== null && !freeSolo && options.length > 0) {\n            const missingValue = (multiple ? value : [value]).filter(\n                (value2) => !options.some((option) => getOptionSelected(option, value2)),\n            );\n\n            if (missingValue.length > 0) {\n                console.warn(\n                    [\n                        `Material-UI: The value provided to ${componentName} is invalid.`,\n                        `None of the options match with \\`${missingValue.length > 1\n                            ? JSON.stringify(missingValue)\n                            : JSON.stringify(missingValue[0])\n                        }\\`.`,\n                        'You can use the `getOptionSelected` prop to customize the equality test.',\n                    ].join('\\n'),\n                );\n            }\n        }\n    }\n\n    const focusTag = useEventCallback((tagToFocus) => {\n        if (tagToFocus === -1) {\n            inputRef.current.focus();\n        } else {\n            anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n        }\n    });\n\n    // Ensure the focusedTag is never inconsistent\n    React.useEffect(() => {\n        if (multiple && focusedTag > value.length - 1) {\n            setFocusedTag(-1);\n            focusTag(-1);\n        }\n    }, [value, multiple, focusedTag, focusTag]);\n\n    function validOptionIndex(index, direction) {\n        if (!listboxRef.current || index === -1) {\n            return -1;\n        }\n\n        let nextFocus = index;\n\n        while (true) {\n            // Out of range\n            if (\n                (direction === 'next' && nextFocus === filteredOptions.length) ||\n                (direction === 'previous' && nextFocus === -1)\n            ) {\n                return -1;\n            }\n\n            const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n            // Same logic as MenuList.js\n            const nextFocusDisabled = disabledItemsFocusable\n                ? false\n                : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n            if ((option && !option.hasAttribute('tabindex')) || nextFocusDisabled) {\n                // Move to the next element.\n                nextFocus += direction === 'next' ? 1 : -1;\n            } else {\n                return nextFocus;\n            }\n        }\n    }\n\n    const setHighlightedIndex = useEventCallback(({ event, index, reason = 'auto' }) => {\n        highlightedIndexRef.current = index;\n\n        // does the index exist?\n        if (index === -1) {\n            inputRef.current.removeAttribute('aria-activedescendant');\n        } else {\n            inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n        }\n\n        if (onHighlightChange) {\n            onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n        }\n\n        if (!listboxRef.current) {\n            return;\n        }\n\n        const prev = listboxRef.current.querySelector('[data-focus]');\n        if (prev) {\n            prev.removeAttribute('data-focus');\n        }\n\n        const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n        // \"No results\"\n        if (!listboxNode) {\n            return;\n        }\n\n        if (index === -1) {\n            listboxNode.scrollTop = 0;\n            return;\n        }\n\n        const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n        if (!option) {\n            return;\n        }\n\n        option.setAttribute('data-focus', 'true');\n\n        // Scroll active descendant into view.\n        // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n        //\n        // Consider this API instead once it has a better browser support:\n        // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n        if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n            const element = option;\n\n            const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n            const elementBottom = element.offsetTop + element.offsetHeight;\n            if (elementBottom > scrollBottom) {\n                listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n            } else if (\n                element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) <\n                listboxNode.scrollTop\n            ) {\n                listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n            }\n        }\n    });\n\n    const changeHighlightedIndex = useEventCallback(\n        ({ event, diff, direction = 'next', reason = 'auto' }) => {\n            if (!popupOpen) {\n                return;\n            }\n\n            const getNextIndex = () => {\n                const maxIndex = filteredOptions.length - 1;\n\n                if (diff === 'reset') {\n                    return defaultHighlighted;\n                }\n\n                if (diff === 'start') {\n                    return 0;\n                }\n\n                if (diff === 'end') {\n                    return maxIndex;\n                }\n\n                const newIndex = highlightedIndexRef.current + diff;\n\n                if (newIndex < 0) {\n                    if (newIndex === -1 && includeInputInList) {\n                        return -1;\n                    }\n\n                    if ((disableListWrap && highlightedIndexRef.current !== -1) || Math.abs(diff) > 1) {\n                        return 0;\n                    }\n\n                    return maxIndex;\n                }\n\n                if (newIndex > maxIndex) {\n                    if (newIndex === maxIndex + 1 && includeInputInList) {\n                        return -1;\n                    }\n\n                    if (disableListWrap || Math.abs(diff) > 1) {\n                        return maxIndex;\n                    }\n\n                    return 0;\n                }\n\n                return newIndex;\n            };\n\n            const nextIndex = validOptionIndex(getNextIndex(), direction);\n            setHighlightedIndex({ index: nextIndex, reason, event });\n\n            // Sync the content of the input with the highlighted option.\n            if (autoComplete && diff !== 'reset') {\n                if (nextIndex === -1) {\n                    inputRef.current.value = inputValue;\n                } else {\n                    const option = getOptionLabel(filteredOptions[nextIndex]);\n                    inputRef.current.value = option;\n\n                    // The portion of the selected suggestion that has not been typed by the user,\n                    // a completion string, appears inline after the input cursor in the textbox.\n                    const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n                    if (index === 0 && inputValue.length > 0) {\n                        inputRef.current.setSelectionRange(inputValue.length, option.length);\n                    }\n                }\n            }\n        },\n    );\n\n    const syncHighlightedIndex = React.useCallback(() => {\n        if (!popupOpen) {\n            return;\n        }\n\n        const valueItem = multiple ? value[0] : value;\n\n        // The popup is empty, reset\n        if (filteredOptions.length === 0 || valueItem == null) {\n            changeHighlightedIndex({ diff: 'reset' });\n            return;\n        }\n\n        if (!listboxRef.current) {\n            return;\n        }\n\n        // Synchronize the value with the highlighted index\n        if (!filterSelectedOptions && valueItem != null) {\n            const currentOption = filteredOptions[highlightedIndexRef.current];\n\n            // Keep the current highlighted index if possible\n            if (\n                multiple &&\n                currentOption &&\n                findIndex(value, (val) => getOptionSelected(currentOption, val)) !== -1\n            ) {\n                return;\n            }\n\n            const itemIndex = findIndex(filteredOptions, (optionItem) =>\n                getOptionSelected(optionItem, valueItem),\n            );\n            if (itemIndex === -1) {\n                changeHighlightedIndex({ diff: 'reset' });\n            } else {\n                setHighlightedIndex({ index: itemIndex });\n            }\n            return;\n        }\n\n        // Prevent the highlighted index to leak outside the boundaries.\n        if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n            setHighlightedIndex({ index: filteredOptions.length - 1 });\n            return;\n        }\n\n        // Restore the focus to the previous index.\n        setHighlightedIndex({ index: highlightedIndexRef.current });\n        // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    }, [\n        // Only sync the highlighted index when the option switch between empty and not\n        filteredOptions.length === 0,\n        // Don't sync the highlighted index with the value when multiple\n        multiple ? false : value,\n        filterSelectedOptions,\n        changeHighlightedIndex,\n        setHighlightedIndex,\n        popupOpen,\n        inputValue,\n        multiple,\n    ]);\n\n    const handleListboxRef = useEventCallback((node) => {\n        setRef(listboxRef, node);\n\n        if (!node) {\n            return;\n        }\n\n        syncHighlightedIndex();\n    });\n\n    React.useEffect(() => {\n        syncHighlightedIndex();\n    }, [syncHighlightedIndex]);\n\n    const handleOpen = (event) => {\n        if (open) {\n            return;\n        }\n\n        setOpenState(true);\n\n        if (onOpen) {\n            onOpen(event);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (!open) {\n            return;\n        }\n\n        setOpenState(false);\n\n        if (onClose) {\n            onClose(event, reason);\n        }\n    };\n\n    const handleValue = (event, newValue, reason, details) => {\n        if (value === newValue) {\n            return;\n        }\n\n        if (onChange) {\n            onChange(event, newValue, reason, details);\n        }\n\n        setValue(newValue);\n    };\n\n    const isTouch = React.useRef(false);\n\n    const selectNewValue = (event, option, reasonProp = 'select-option', origin = 'options') => {\n        let reason = reasonProp;\n        let newValue = option;\n\n        if (multiple) {\n            newValue = Array.isArray(value) ? value.slice() : [];\n\n            if (process.env.NODE_ENV !== 'production') {\n                const matches = newValue.filter((val) => getOptionSelected(option, val));\n\n                if (matches.length > 1) {\n                    console.error(\n                        [\n                            `Material-UI: The \\`getOptionSelected\\` method of ${componentName} `,\n                            `do not handle the arguments correctly.`,\n                            `The component expects a single value to match a `,\n                            `given option but found ${matches.length} matches.`,\n                        ].join('\\n'),\n                    );\n                }\n            }\n\n            const itemIndex = findIndex(newValue, (valueItem) => getOptionSelected(option, valueItem));\n\n            if (itemIndex === -1) {\n                newValue.push(option);\n            } else if (origin !== 'freeSolo') {\n                newValue.splice(itemIndex, 1);\n                reason = 'remove-option';\n            }\n        }\n\n        resetInputValue(event, newValue);\n\n        handleValue(event, newValue, reason, { option });\n        if (!disableCloseOnSelect) {\n            handleClose(event, reason);\n        }\n\n        if (\n            blurOnSelect === true ||\n            (blurOnSelect === 'touch' && isTouch.current) ||\n            (blurOnSelect === 'mouse' && !isTouch.current)\n        ) {\n            inputRef.current.blur();\n        }\n    };\n\n    function validTagIndex(index, direction) {\n        if (index === -1) {\n            return -1;\n        }\n\n        let nextFocus = index;\n\n        while (true) {\n            // Out of range\n            if (\n                (direction === 'next' && nextFocus === value.length) ||\n                (direction === 'previous' && nextFocus === -1)\n            ) {\n                return -1;\n            }\n\n            const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n            // Same logic as MenuList.js\n            if (\n                option &&\n                (!option.hasAttribute('tabindex') ||\n                    option.disabled ||\n                    option.getAttribute('aria-disabled') === 'true')\n            ) {\n                nextFocus += direction === 'next' ? 1 : -1;\n            } else {\n                return nextFocus;\n            }\n        }\n    }\n\n    const handleFocusTag = (event, direction) => {\n        if (!multiple) {\n            return;\n        }\n\n        handleClose(event, 'toggleInput');\n\n        let nextTag = focusedTag;\n\n        if (focusedTag === -1) {\n            if (inputValue === '' && direction === 'previous') {\n                nextTag = value.length - 1;\n            }\n        } else {\n            nextTag += direction === 'next' ? 1 : -1;\n\n            if (nextTag < 0) {\n                nextTag = 0;\n            }\n\n            if (nextTag === value.length) {\n                nextTag = -1;\n            }\n        }\n\n        nextTag = validTagIndex(nextTag, direction);\n\n        setFocusedTag(nextTag);\n        focusTag(nextTag);\n    };\n\n    const handleClear = (event) => {\n        ignoreFocus.current = true;\n        setInputValue('');\n\n        if (onInputChange) {\n            onInputChange(event, '', 'clear');\n        }\n\n        handleValue(event, multiple ? [] : null, 'clear');\n    };\n\n    const handleKeyDown = (other) => (event) => {\n        if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n            setFocusedTag(-1);\n            focusTag(-1);\n        }\n\n        switch (event.key) {\n            case 'Home':\n                if (popupOpen && handleHomeEndKeys) {\n                    // Prevent scroll of the page\n                    event.preventDefault();\n                    changeHighlightedIndex({ diff: 'start', direction: 'next', reason: 'keyboard', event });\n                }\n                break;\n            case 'End':\n                if (popupOpen && handleHomeEndKeys) {\n                    // Prevent scroll of the page\n                    event.preventDefault();\n                    changeHighlightedIndex({ diff: 'end', direction: 'previous', reason: 'keyboard', event });\n                }\n                break;\n            case 'PageUp':\n                // Prevent scroll of the page\n                event.preventDefault();\n                changeHighlightedIndex({\n                    diff: -pageSize,\n                    direction: 'previous',\n                    reason: 'keyboard',\n                    event,\n                });\n                handleOpen(event);\n                break;\n            case 'PageDown':\n                // Prevent scroll of the page\n                event.preventDefault();\n                changeHighlightedIndex({ diff: pageSize, direction: 'next', reason: 'keyboard', event });\n                handleOpen(event);\n                break;\n            case 'ArrowDown':\n                // Prevent cursor move\n                event.preventDefault();\n                changeHighlightedIndex({ diff: 1, direction: 'next', reason: 'keyboard', event });\n                handleOpen(event);\n                break;\n            case 'ArrowUp':\n                // Prevent cursor move\n                event.preventDefault();\n                changeHighlightedIndex({ diff: -1, direction: 'previous', reason: 'keyboard', event });\n                handleOpen(event);\n                break;\n            case 'ArrowLeft':\n                handleFocusTag(event, 'previous');\n                break;\n            case 'ArrowRight':\n                handleFocusTag(event, 'next');\n                break;\n            case 'Enter':\n                // Wait until IME is settled.\n                if (event.which === 229) {\n                    break;\n                }\n                if (highlightedIndexRef.current !== -1 && popupOpen) {\n                    const option = filteredOptions[highlightedIndexRef.current];\n                    const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n                    // We don't want to validate the form.\n                    event.preventDefault();\n\n                    if (disabled) {\n                        return;\n                    }\n\n                    selectNewValue(event, option, 'select-option');\n\n                    // Move the selection to the end.\n                    if (autoComplete) {\n                        inputRef.current.setSelectionRange(\n                            inputRef.current.value.length,\n                            inputRef.current.value.length,\n                        );\n                    }\n                } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n                    if (multiple) {\n                        // Allow people to add new values before they submit the form.\n                        event.preventDefault();\n                    }\n                    selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n                }\n                break;\n            case 'Escape':\n                if (popupOpen) {\n                    // Avoid Opera to exit fullscreen mode.\n                    event.preventDefault();\n                    // Avoid the Modal to handle the event.\n                    event.stopPropagation();\n                    handleClose(event, 'escape');\n                } else if (clearOnEscape && (inputValue !== '' || (multiple && value.length > 0))) {\n                    // Avoid Opera to exit fullscreen mode.\n                    event.preventDefault();\n                    // Avoid the Modal to handle the event.\n                    event.stopPropagation();\n                    handleClear(event);\n                }\n                break;\n            case 'Backspace':\n                if (multiple && inputValue === '' && value.length > 0) {\n                    const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n                    const newValue = value.slice();\n                    newValue.splice(index, 1);\n                    handleValue(event, newValue, 'remove-option', {\n                        option: value[index],\n                    });\n                }\n                break;\n            default:\n        }\n\n        if (other.onKeyDown) {\n            other.onKeyDown(event);\n        }\n    };\n\n    const handleFocus = (event) => {\n        setFocused(true);\n\n        if (openOnFocus && !ignoreFocus.current) {\n            handleOpen(event);\n        }\n    };\n\n    const handleBlur = (event) => {\n        // Ignore the event when using the scrollbar with IE 11\n        if (\n            listboxRef.current !== null &&\n            document.activeElement === listboxRef.current.parentElement\n        ) {\n            inputRef.current.focus();\n            return;\n        }\n\n        setFocused(false);\n        firstFocus.current = true;\n        ignoreFocus.current = false;\n\n        if (debug && inputValue !== '') {\n            return;\n        }\n\n        if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n        } else if (autoSelect && freeSolo && inputValue !== '') {\n            selectNewValue(event, inputValue, 'blur', 'freeSolo');\n        } else if (clearOnBlur) {\n            resetInputValue(event, value);\n        }\n\n        handleClose(event, 'blur');\n    };\n\n    const handleInputChange = (event) => {\n        const newValue = event.target.value;\n\n        if (inputValue !== newValue) {\n            setInputValue(newValue);\n\n            if (onInputChange) {\n                onInputChange(event, newValue, 'input');\n            }\n        }\n\n        if (newValue === '') {\n            if (!disableClearable && !multiple) {\n                handleValue(event, null, 'clear');\n            }\n        } else {\n            handleOpen(event);\n        }\n    };\n\n    const handleOptionMouseOver = (event) => {\n        setHighlightedIndex({\n            event,\n            index: Number(event.currentTarget.getAttribute('data-option-index')),\n            reason: 'mouse',\n        });\n    };\n\n    const handleOptionTouchStart = () => {\n        isTouch.current = true;\n    };\n\n    const handleOptionClick = (event) => {\n        const index = Number(event.currentTarget.getAttribute('data-option-index'));\n        selectNewValue(event, filteredOptions[index], 'select-option');\n\n        isTouch.current = false;\n    };\n\n    const handleTagDelete = (index) => (event) => {\n        const newValue = value.slice();\n        newValue.splice(index, 1);\n        handleValue(event, newValue, 'remove-option', {\n            option: value[index],\n        });\n    };\n\n    const handlePopupIndicator = (event) => {\n        if (open) {\n            handleClose(event, 'toggleInput');\n        } else {\n            handleOpen(event);\n        }\n    };\n\n    // Prevent input blur when interacting with the combobox\n    const handleMouseDown = (event) => {\n        if (event.target.getAttribute('id') !== id) {\n            event.preventDefault();\n        }\n    };\n\n    // Focus the input when interacting with the combobox\n    const handleClick = () => {\n        inputRef.current.focus();\n\n        if (\n            selectOnFocus &&\n            firstFocus.current &&\n            inputRef.current.selectionEnd - inputRef.current.selectionStart === 0\n        ) {\n            inputRef.current.select();\n        }\n\n        firstFocus.current = false;\n    };\n\n    const handleInputMouseDown = (event) => {\n        if (inputValue === '' || !open) {\n            handlePopupIndicator(event);\n        }\n    };\n\n    let dirty = freeSolo && inputValue.length > 0;\n    dirty = dirty || (multiple ? value.length > 0 : value !== null);\n\n    let groupedOptions = filteredOptions;\n    if (groupBy) {\n        // used to keep track of key and indexes in the result array\n        const indexBy = new Map();\n        let warn = false;\n\n        groupedOptions = filteredOptions.reduce((acc, option, index) => {\n            const group = groupBy(option);\n\n            if (acc.length > 0 && acc[acc.length - 1].group === group) {\n                acc[acc.length - 1].options.push(option);\n            } else {\n                if (process.env.NODE_ENV !== 'production') {\n                    if (indexBy.get(group) && !warn) {\n                        console.warn(\n                            `Material-UI: The options provided combined with `,\n                            `the \\`groupBy\\` method of ${componentName} returns duplicated headers.`,\n                            'You can solve the issue by sorting the options with the output of `groupBy`.',\n                        );\n                        warn = true;\n                    }\n                    indexBy.set(group, true);\n                }\n\n                acc.push({\n                    key: index,\n                    index,\n                    group,\n                    options: [option],\n                });\n            }\n\n            return acc;\n        }, []);\n    }\n\n    return {\n        getRootProps: (other = {}) => ({\n            'aria-owns': popupOpen ? `${id}-popup` : null,\n            role: 'combobox',\n            'aria-expanded': popupOpen,\n            ...other,\n            onKeyDown: handleKeyDown(other),\n            onMouseDown: handleMouseDown,\n            onClick: handleClick,\n        }),\n        getInputLabelProps: () => ({\n            id: `${id}-label`,\n            htmlFor: id,\n        }),\n        getInputProps: () => ({\n            id,\n            value: inputValue,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onChange: handleInputChange,\n            onMouseDown: handleInputMouseDown,\n            // if open then this is handled imperativeley so don't let react override\n            // only have an opinion about this when closed\n            'aria-activedescendant': popupOpen ? '' : null,\n            'aria-autocomplete': autoComplete ? 'both' : 'list',\n            'aria-controls': popupOpen ? `${id}-popup` : null,\n            // Disable browser's suggestion that might overlap with the popup.\n            // Handle autocomplete but not autofill.\n            autoComplete: 'off',\n            ref: inputRef,\n            autoCapitalize: 'none',\n            spellCheck: 'false',\n        }),\n        getClearProps: () => ({\n            tabIndex: -1,\n            onClick: handleClear,\n        }),\n        getPopupIndicatorProps: () => ({\n            tabIndex: -1,\n            onClick: handlePopupIndicator,\n        }),\n        getTagProps: ({ index }) => ({\n            key: index,\n            'data-tag-index': index,\n            tabIndex: -1,\n            onDelete: handleTagDelete(index),\n        }),\n        getListboxProps: () => ({\n            role: 'listbox',\n            id: `${id}-popup`,\n            'aria-labelledby': `${id}-label`,\n            ref: handleListboxRef,\n            onMouseDown: (event) => {\n                // Prevent blur\n                event.preventDefault();\n            },\n        }),\n        getOptionProps: ({ index, option }) => {\n            const selected = (multiple ? value : [value]).some(\n                (value2) => value2 != null && getOptionSelected(option, value2),\n            );\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            return {\n                key: index,\n                tabIndex: -1,\n                role: 'option',\n                id: `${id}-option-${index}`,\n                onMouseOver: handleOptionMouseOver,\n                onClick: handleOptionClick,\n                onTouchStart: handleOptionTouchStart,\n                'data-option-index': index,\n                'aria-disabled': disabled,\n                'aria-selected': selected,\n            };\n        },\n        id,\n        inputValue,\n        value,\n        dirty,\n        popupOpen,\n        focused: focused || focusedTag !== -1,\n        anchorEl,\n        setAnchorEl,\n        focusedTag,\n        groupedOptions,\n    };\n}\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    TextField, Button, Typography, InputLabel,\n} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CommentsAPI from 'AppData/Comments';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    content: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    textField: {\n        marginTop: 0,\n        marginRight: 5,\n        width: '100%',\n    },\n    commentAddWrapper: {\n        display: 'flex',\n        alignItems: 'top',\n        flexFlow: 'column',\n        '& label': {\n            marginBottom: theme.spacing(1),\n        },\n    },\n    commentAddButton: {\n        '& > span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main) + '! important',\n        },\n    },\n});\n\n/**\n   * Display a component to add a new comment\n   * @class CommmentAdd\n   * @extends {React.Component}\n   */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ content: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        this.setState({ content: '' });\n        const { handleShowReply } = this.props;\n        handleShowReply();\n    }\n\n    /**\n     * Filters the comment to add the reply\n     * @memberof CommentAdd\n     */\n    filterCommentToAddReply(commentToFilter) {\n        const { replyTo } = this.props;\n        return commentToFilter.id === replyTo;\n    }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     * * */\n    handleClickAddComment() {\n        const {\n            api: { id: apiId }, replyTo, handleShowReply, addComment, addReply,\n        } = this.props;\n        const { content } = this.state;\n        const comment = {\n            content: content.trim(), category: 'general',\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.content.replace(/\\s/g, '').length) {\n            CommentsAPI.add(apiId, comment, replyTo)\n                .then((newComment) => {\n                    this.setState({ content: '' });\n                    if (replyTo === null) {\n                        if (addComment) {\n                            addComment(newComment.body);\n                        }\n                    } else if (addReply) {\n                        addReply(newComment.body);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n        this.setState({ currentLength: 0 });\n        if (replyTo !== null) {\n            handleShowReply();\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const {\n            classes, cancelButton, theme, intl, api,\n        } = this.props;\n        const { content, currentLength } = this.state;\n        return (\n            <Grid container spacing={2} className={classes.contentWrapper}>\n                <Grid item xs zeroMinWidth>\n                    <div className={classes.commentAddWrapper}>\n                        <InputLabel htmlFor='standard-multiline-flexible'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentAdd.write.comment.label'\n                                defaultMessage='Write a comment'\n                            />\n                        </InputLabel>\n                        <TextField\n                            id='standard-multiline-flexible'\n                            data-testid='new-comment-field'\n                            autoFocus\n                            multiline\n                            disabled={api.isRevision \n                            || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                            className={classes.textField}\n                            margin='normal'\n                            placeholder={intl.formatMessage({\n                                defaultMessage: 'Write a comment',\n                                id: 'Apis.Details.Comments.CommentAdd.write.comment.help',\n                            })}\n                            inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                            value={content}\n                            onChange={this.inputChange}\n                            variant='outlined'\n                        />\n                        <Typography className={classes.content} align='right'>\n                            {currentLength + '/' + theme.custom.maxCommentLength}\n                        </Typography>\n                    </div>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={api.isRevision ||\n                                isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                || currentLength === 0}\n                                onClick={() => this.handleClickAddComment()}\n                                className={classes.commentAddButton}\n                                id='add-comment-btn'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentAdd.btn.add.comment'\n                                    defaultMessage='Comment'\n                                />\n                            </Button>\n                        </Grid>\n                        {cancelButton && (\n                            <Grid item>\n                                <Button onClick={() => this.handleClickCancel(-1)} className={classes.button}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Comments.CommentAdd.btn.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    replyTo: null,\n    handleShowReply: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    replyTo: PropTypes.string,\n    handleShowReply: PropTypes.func,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentAdd));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport CloudUploadRounded from '@material-ui/icons/CloudUploadRounded';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ProvideWSDL from 'AppComponents/Apis/Create/WSDL/Steps/ProvideWSDL';\nimport ProvideAsyncAPI from 'AppComponents/Apis/Create/AsyncAPI/Steps/ProvideAsyncAPI';\nimport ProvideOpenAPI from '../../Create/OpenAPI/Steps/ProvideOpenAPI';\nimport ProvideGraphQL from '../../Create/GraphQL/Steps/ProvideGraphQL';\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: '600',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ImportDefinition(props) {\n    const { setSchemaDefinition, editAndImport } = props;\n    const classes = useStyles();\n    const [openAPIDefinitionImport, setOpenAPIDefinitionImport] = useState(false);\n    const [isImporting, setIsImporting] = useState(false);\n    const [api, updateAPI] = useAPI();\n    const intl = useIntl();\n    const isGraphQL = api.isGraphql();\n    const isSOAP = api.isSOAP();\n    // const isWebSocket = api.isWebSocket();\n    // const isWebSub = api.isWebSub();\n    const isAsyncAPI = api && (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE');\n    const [asyncAPIDefinitionImport, setAsyncAPIDefinitionImport] = useState(false);\n\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'inputValue':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    content: value.content,\n                };\n            case 'importingContent':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: '',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'update',\n        importingContent: null\n    });\n\n    const handleAPIDefinitionImportOpen = () => {\n        // eslint-disable-next-line no-unused-expressions\n        isAsyncAPI ? setAsyncAPIDefinitionImport(true) : setOpenAPIDefinitionImport(true);\n        // isWebSocket || isWebSub ? setAsyncAPIDefinitionImport(true) : setOpenAPIDefinitionImport(true);\n    };\n\n    const handleAPIDefinitionImportCancel = () => {\n        // eslint-disable-next-line no-unused-expressions\n        isAsyncAPI ? setAsyncAPIDefinitionImport(false) : setOpenAPIDefinitionImport(false);\n        inputsDispatcher({ action: 'inputValue', value: null });\n        // isWebSocket || isWebSub ? setAsyncAPIDefinitionImport(false) : setOpenAPIDefinitionImport(false);\n    };\n\n    const handleAPIDefinitionEditAndImport = () => {\n        const {\n            importingContent,\n        } = apiInputs;\n        editAndImport(importingContent, null);\n    };\n\n    const handleAPIDefinitionEditAndImportGotoLine = (line) => {\n        const {\n            importingContent,\n        } = apiInputs;\n        editAndImport(importingContent, line);\n    }\n\n    /**\n     * Updates OpenAPI definition\n     */\n    function updateOASDefinition() {\n        setIsImporting(true);\n        const {\n            inputValue, inputType, content,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        if (isFileInput) {\n            const reader = new FileReader();\n            const contentType = inputValue.type.includes('yaml') ? 'yaml' : 'json';\n            reader.onloadend = (event) => {\n                setSchemaDefinition(event.currentTarget.result, contentType);\n            };\n            reader.readAsText(inputValue);\n        }\n        const newAPI = new API();\n        const promisedResponse = isFileInput ? newAPI.updateAPIDefinitionByFile(api.id, inputValue)\n            : newAPI.updateAPIDefinitionByUrl(api.id, inputValue);\n        promisedResponse\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.oas.updated.successfully',\n                    defaultMessage: 'API Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                if (!isFileInput) {\n                    // Test to starting the content with'{' character ignoring white spaces\n                    const isJSONRegex = RegExp(/^\\s*{/); // TODO: not a solid test need to support from REST API ~tmkb\n                    const contentType = isJSONRegex.test(content) ? 'json' : 'yaml';\n                    setSchemaDefinition(content, contentType);\n                }\n                updateAPI();\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.import.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n            }).finally(() => setIsImporting(false));\n    }\n\n    /**\n     * Updates AsyncAPI definition\n     */\n    function updateAsyncAPIDefinition() {\n        setIsImporting(true);\n        const {\n            inputValue, inputType, content,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        if (isFileInput) {\n            const reader = new FileReader();\n            // eslint-disable-next-line no-nested-ternary\n            const contentType = inputValue.type.includes('yaml') ? 'yaml'\n                : inputValue.type.includes('yml') ? 'yml' : 'json';\n            reader.onloadend = (event) => {\n                setSchemaDefinition(event.currentTarget.result, contentType);\n            };\n            reader.readAsText(inputValue);\n        }\n        const newAPI = new API();\n        const promisedResponse = isFileInput ? newAPI.updateAsyncAPIDefinitionByFile(api.id, inputValue)\n            : newAPI.updateAsyncAPIDefinitionByUrl(api.id, inputValue);\n        promisedResponse\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.async.api.import.definition.updated.successfully',\n                    defaultMessage: 'API Definition Updated Successfully',\n                }));\n                setAsyncAPIDefinitionImport(false);\n                if (!isFileInput) {\n                    // Test to starting the content with'{' character ignoring white spaces\n                    const isJSONRegex = RegExp(/^\\s*{/); // TODO: not a solid test need to support from REST API ~tmkb\n                    const contentType = isJSONRegex.test(content) ? 'json' : 'yaml';\n                    setSchemaDefinition(content, contentType);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.import.async.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n            }).finally(() => setIsImporting(false));\n    }\n\n    /**\n     * Update the graphQL api with its operation\n     * @param {*}  api\n     * @param {*}  graphQLInfo\n     */\n    function updateGraphQLAPIDefinition(graphQLSchema) {\n        const promisedAPI = api.updateGraphQLAPIDefinition(api.id, graphQLSchema);\n        promisedAPI\n            .then((response) => {\n                api.operations = response.obj;\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.graphQLDefinition.updated.successfully',\n                    defaultMessage: 'Schema Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(graphQLSchema);\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.updating.graphQL.schema',\n                    defaultMessage: 'Error while updating GraphQL schema',\n                }));\n            });\n    }\n\n    /**\n     * Updates GraphQL schema definition\n     */\n    function updateGraphQLSchema() {\n        const {\n            inputValue,\n        } = apiInputs;\n\n        const promisedValidation = API.validateGraphQLFile(inputValue);\n        promisedValidation\n            .then((response) => {\n                const { isValid, graphQLInfo } = response.obj;\n                if (isValid === true) {\n                    updateGraphQLAPIDefinition(graphQLInfo.graphQLSchema.schemaDefinition);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Error.while.validating.the.imported.graphQLSchema',\n                    defaultMessage: 'Error while validating the imported schema',\n                }));\n            });\n    }\n\n    /**\n     * Updates WSDL definition\n     */\n    function updateWSDL() {\n        const {\n            inputType, inputValue,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        let promisedAPI;\n        if (isFileInput) {\n            promisedAPI = api.updateWSDLByFileOrArchive(api.id, inputValue);\n        } else {\n            promisedAPI = api.updateWSDLByUrl(api.id, inputValue);\n        }\n        promisedAPI\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.WSDL.updated.successfully',\n                    defaultMessage: 'WSDL Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(isFileInput && inputValue.type === 'application/zip');\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.error.updating.WSDL',\n                    defaultMessage: 'Error while updating WSDL',\n                }));\n            });\n    }\n\n    /**\n     * Handles API definition import\n     */\n    function importDefinition() {\n        if (isGraphQL) {\n            updateGraphQLSchema();\n        } else if (isSOAP) {\n            updateWSDL();\n        // } else if (isWebSocket || isWebSub) {\n        } else if (isAsyncAPI) {\n            updateAsyncAPIDefinition();\n        } else {\n            updateOASDefinition();\n        }\n    }\n    /**\n     *\n     * Set the validity of the API definition imports\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    let dialogTitle = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition.oas'\n            defaultMessage='Import OpenAPI Definition'\n        />\n    );\n    let dialogContent = (\n        <ProvideOpenAPI\n            onValidate={handleOnValidate}\n            apiInputs={apiInputs}\n            inputsDispatcher={inputsDispatcher}\n            onLinterLineSelect={handleAPIDefinitionEditAndImportGotoLine}\n        />\n    );\n    let btnText = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition'\n            defaultMessage='Import Definition'\n        />\n    );\n    if (isGraphQL) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.graphql'\n                defaultMessage='Import GraphQL Schema Definition'\n            />\n        );\n        dialogContent = (\n            <ProvideGraphQL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n                data-testid='import-graphql-schema-dialog-content-root'\n            />\n        );\n    }\n    if (isSOAP) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n        dialogContent = (\n            <ProvideWSDL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n        btnText = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n    }\n    // if (isWebSocket || isWebSub) {\n    if (isAsyncAPI) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.asyncApi'\n                defaultMessage='Import AsyncAPI Definition'\n            />\n        );\n        dialogContent = (\n            <ProvideAsyncAPI\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n        btnText = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.import.asyncAPI'\n                defaultMessage='Import AsyncAPI'\n            />\n        );\n    }\n\n    return (\n        <>\n            {!isAsyncAPI && (\n                <Button\n                    size='small'\n                    className={classes.button}\n                    onClick={handleAPIDefinitionImportOpen}\n                    disabled={isRestricted(['apim:api_create'], api) || api.isRevision}\n                    id='import-definition-btn'\n                >\n                    <CloudUploadRounded className={classes.buttonIcon} />\n                    {btnText}\n                </Button>\n            )}\n            <Dialog\n                onBackdropClick={isAsyncAPI ? setAsyncAPIDefinitionImport : setOpenAPIDefinitionImport}\n                open={isAsyncAPI ? asyncAPIDefinitionImport : openAPIDefinitionImport}\n            >\n                <DialogTitle>\n                    <Typography className={classes.importDefinitionDialogHeader}>\n                        {dialogTitle}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {dialogContent}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAPIDefinitionImportCancel}>\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button \n                        onClick={handleAPIDefinitionEditAndImport}\n                        id='import-before-edit-btn'\n                        variant='contained'\n                        color='primary'\n                        disabled={apiInputs.importingContent==null}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.edit'\n                            defaultMessage='Edit and Import'\n                        />\n                    </Button>\n                    <Button\n                        onClick={importDefinition}\n                        variant='contained'\n                        color='primary'\n                        disabled={!apiInputs.isFormValid || isImporting || api.isRevision}\n                        id='import-open-api-btn'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.import'\n                            defaultMessage='Import'\n                        />\n                        {isImporting && <CircularProgress size={20} />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nImportDefinition.propTypes = {\n    setSchemaDefinition: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useContext } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport PropTypes from 'prop-types';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ReactDiffViewer from 'react-diff-viewer';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ServiceCatalog from 'AppData/ServiceCatalog';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport API from 'AppData/api.js';\nimport { FormattedMessage } from 'react-intl';\nimport beautify from 'xml-beautifier';\n\n/**\n * This component hosts the Swagger Editor component.\n * Known Issue: The cursor jumps back to the start of the first line when updating the swagger-ui based on the\n * modification done via the editor.\n * https://github.com/wso2/product-apim/issues/5071\n * */\n/**\n * Renders an Environments list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function DefinitionOutdated(props) {\n    const {\n        api,\n        classes,\n    } = props;\n    const [openImport, setOpenImport] = useState(false);\n    const [showDiff, setShowDiff] = useState(false);\n    const [newDefinition, setNewDefinition] = useState('');\n    const [oldDefinition, setOldDefinition] = useState('');\n    const [isRendering, setIsRendering] = useState(false);\n    const { updateAPI } = useContext(APIContext);\n\n    /**\n     * Re import service definition\n     */\n    function reimportService() {\n        const promisedReimportService = API.reimportService(api.id);\n        promisedReimportService.then(() => {\n            Alert.info(\n                <FormattedMessage\n                    id='Apis.Details.APIDefinition.DefinitionOutdated.import.success'\n                    defaultMessage='Re-imported API definition successfully!'\n                />,\n            );\n            setOpenImport(false);\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(\n                    <FormattedMessage\n                        id='Apis.Details.APIDefinition.DefinitionOutdated.import.error'\n                        defaultMessage='Error while re-importing API definition'\n                    />,\n                );\n            }\n        }).finally(() => {\n            updateAPI();\n        });\n    }\n\n    /**\n     * Show diff between old service definition and new service definition\n     */\n    function showdiff() {\n        setIsRendering(true);\n        const promisedNewServiceDef = ServiceCatalog.searchServiceByKey(api.serviceInfo.key);\n        const promisedOldServiceDef = (api.type === 'SOAP') ? api.getWSDL(api.id) : api.getSwagger(api.id);\n        Promise.all([promisedNewServiceDef, promisedOldServiceDef])\n            .then((response) => {\n                const newServiceDef = response[0];\n                const oldServiceDef = response[1];\n                return ServiceCatalog.getServiceDefinition(newServiceDef.body.list[0].id).then((file) => {\n                    if (newServiceDef.body.list[0].definitionType === 'WSDL1') {\n                        setNewDefinition(beautify(file));\n                        oldServiceDef.data.text().then((text) => {\n                            setOldDefinition(beautify(text));\n                        });\n                    } else {\n                        setNewDefinition(JSON.stringify(file, null, 2));\n                        setOldDefinition(JSON.stringify(oldServiceDef.obj, null, 2));\n                    }\n                }).catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error(\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.DefinitionOutdated.new.api.definition.error'\n                                defaultMessage='Something went wrong while retrieving new API definition.'\n                            />,\n                        );\n                    }\n                    console.error(error);\n                });\n            }).catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.DefinitionOutdated.service.retrieve.error'\n                            defaultMessage='Something went wrong while rendering diff for API Definition'\n                        />,\n                    );\n                }\n                console.error(error);\n            }).finally(() => {\n                setShowDiff(true);\n                setIsRendering(false);\n            });\n    }\n\n    const hideDiff = () => {\n        setShowDiff(false);\n    };\n\n    const handleOpen = () => {\n        setOpenImport(true);\n    };\n\n    const handleClose = () => {\n        setOpenImport(false);\n    };\n\n    return (\n        <>\n            <div>\n                <Button\n                    size='small'\n                    className={classes.button}\n                    onClick={handleOpen}\n                >\n                    <WarningIcon className={classes.buttonWarningColor} />\n                    <FormattedMessage\n                        id='Apis.Details.APIDefinition.DefinitionOutdated.outdated.definition.heading'\n                        defaultMessage='Outdated Definition'\n                    />\n                </Button>\n                <Dialog\n                    open={openImport}\n                    onClose={handleClose}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                    fullWidth\n                    maxWidth='md'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <Typography align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.DefinitionOutdated.outdated.definition'\n                                defaultMessage='Outdated Definition'\n                            />\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.DefinitionOutdated.api.outdated.definition'\n                                defaultMessage='Current API definition is outdated.\n                                You can either re-import the new definition or create a new version of this API.'\n                            />\n                        </DialogContentText>\n                        {showDiff && !isRendering && (\n                            <ReactDiffViewer\n                                oldValue={oldDefinition}\n                                newValue={newDefinition}\n                                splitView\n                                disableWordDiff\n                                leftTitle='Outdated Definition from API'\n                                rightTitle='New Service Definition'\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.DefinitionOutdated.btn.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        {!showDiff ? (\n                            <Button onClick={showdiff} color='primary'>\n                                {isRendering ? (<CircularProgress size={24} />) : (\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.DefinitionOutdated.btn.show.diff'\n                                        defaultMessage='Show Diff'\n                                    />\n                                )}\n                            </Button>\n                        ) : (\n                            <Button onClick={hideDiff} color='primary'>\n                                {isRendering ? (<CircularProgress size={24} />) : (\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.DefinitionOutdated.btn.hide.diff'\n                                        defaultMessage='Hide Diff'\n                                    />\n                                )}\n                            </Button>\n                        )}\n                        <Button\n                            onClick={reimportService}\n                            color='primary'\n                            autoFocus\n                            variant='contained'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.DefinitionOutdated.btn.reimport'\n                                defaultMessage='Re-import'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        </>\n    );\n}\n\nDefinitionOutdated.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isRestricted } from 'AppData/AuthManager';\nimport LifeCycleIcon from '@material-ui/icons/Autorenew';\nimport StoreIcon from '@material-ui/icons/Store';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PersonPinCircleOutlinedIcon from '@material-ui/icons/PersonPinCircleOutlined';\nimport ResourcesIcon from '@material-ui/icons/VerticalSplit';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport {\n    Redirect, Route, Switch, Link, matchPath,\n} from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Utils from 'AppData/Utils';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport AuthorizedError from 'AppComponents/Base/Errors/AuthorizedError';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport AppContext, { withSettings } from 'AppComponents/Shared/AppContext';\nimport LastUpdatedTime from 'AppComponents/Apis/Details/components/LastUpdatedTime';\nimport Divider from '@material-ui/core/Divider';\nimport { RevisionContextProvider } from 'AppComponents/Shared/RevisionContext';\nimport DevelopSectionMenu from 'AppComponents/Apis/Details/components/leftMenu/DevelopSectionMenu';\nimport { PROPERTIES as UserProperties } from 'AppData/User';\nimport Overview from './NewOverview/Overview';\nimport DesignConfigurations from './Configuration/DesignConfigurations';\nimport RuntimeConfiguration from './Configuration/RuntimeConfiguration';\nimport Topics from './Configuration/Topics';\nimport RuntimeConfigurationWebSocket from './Configuration/RuntimeConfigurationWebSocket';\nimport LifeCycle from './LifeCycle/LifeCycle';\nimport Documents from './Documents';\nimport Operations from './Operations/Operations';\nimport APIOperations from './Resources/APIOperations';\nimport APIProductOperations from './ProductResources/APIProductOperations';\nimport ProductResourcesEdit from './ProductResources/ProductResourcesEdit';\nimport Endpoints from './Endpoints/Endpoints';\nimport Environments from './Environments/Environments';\nimport Subscriptions from './Subscriptions/Subscriptions';\nimport Comments from './Comments/Comments';\nimport Scope from './Scopes';\nimport Security from './Security';\nimport APIDefinition from './APIDefinition/APIDefinition';\nimport WSDL from './APIDefinition/WSDL';\nimport APIDetailsTopMenu from './components/APIDetailsTopMenu';\nimport BusinessInformation from './BusinessInformation/BusinessInformation';\nimport Properties from './Properties/Properties';\nimport Monetization from './Monetization';\nimport Policies from './Policies/Policies';\nimport ExternalStores from './ExternalStores/ExternalStores';\nimport { APIProvider } from './components/ApiContext';\nimport CreateNewVersion from './NewVersion/NewVersion';\nimport TryOutConsole from './TryOut/TryOutConsole';\n\nconst styles = (theme) => ({\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        minHeight: `calc(100vh - ${64 + theme.custom.footer.height}px)`,\n    },\n    leftLInkMain: {\n        cursor: 'pointer',\n        backgroundColor: theme.palette.background.leftMenuActive,\n        textAlign: 'center',\n        height: theme.custom.apis.topMenu.height,\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n        overflow: 'auto',\n    },\n    contentInside: {\n        width: 'calc(100% - 56px)',\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n    },\n    footeremaillink: {\n        marginLeft: theme.custom.leftMenuWidth, /* 4px */\n    },\n    root: {\n        backgroundColor: theme.palette.background.leftMenu,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: '0',\n        paddingBottom: '0',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    expanded: {\n        '&$expanded': {\n            margin: 0,\n            backgroundColor: theme.palette.background.leftMenu,\n            minHeight: 40,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n        },\n    },\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontSize: theme.typography.body1.fontSize,\n        fontWeight: 250,\n        whiteSpace: 'nowrap',\n    },\n    expandIconColor: {\n        color: '#ffffff',\n    },\n    headingText: {\n        marginTop: '10px',\n        fontWeight: 800,\n        color: '#ffffff',\n        textAlign: 'left',\n        marginLeft: '8px',\n    },\n    customIcon: {\n        marginTop: (theme.custom.apis.topMenu.height - theme.custom.leftMenuIconMainSize) / 2,\n    },\n});\n\n/**\n * Base component for API specific Details page,\n * What this component do is, Handle all the request coming under `/apis/:api_uuid` path, If the :api_uuid or\n *  the later part of the URL is not valid , This will return a `PageNotFound` component.\n * For valid API request , This component will fetch the API and pass the API response data to below components in `api`\n * prop name.\n * Note: If you want to add new route or new page under APIs detail, add the desired path to `PATHS` constant mapping.\n * This mapping will be used in parent component to directly return `PageNotFound` component, If user making a request\n * to an undefined path segment.\n */\nclass Details extends Component {\n    /**\n     * Return boolean , whether provided URL has a valid Route under the Details page.\n     * Check https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/NavLink.js\n     * code for the usage of public matchPath method\n     * @static\n     * @param {String} pathname location URL of an incoming request\n     * @memberof Details\n     * @returns {Boolean} whether URL matched with defined sub paths or not\n     */\n    static isValidURL(pathname) {\n        for (const [subPathKey, subPath] of Object.entries(Details.subPaths)) {\n            // Skip the BASE path , because it will match for any `/apis/:apiUUID/*` values\n            if ((subPathKey !== 'BASE') && (subPathKey !== 'BASE_PRODUCT')) {\n                const matched = matchPath(pathname, subPath);\n                if (matched) {\n                    return matched;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Creates an instance of Details.\n     * @param {any} props @inheritDoc\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        const isAPIProduct = null;\n        this.state = {\n            api: null,\n            apiNotFound: false,\n            // updateAPI: this.updateAPI,\n            isAPIProduct,\n            imageUpdate: 0,\n            allRevisions: null,\n            allEnvRevision: null,\n            authorizedAPI: false,\n            openPageSearch: false,\n        };\n        this.setAPI = this.setAPI.bind(this);\n        this.setOpenPageSearch = this.setOpenPageSearch.bind(this);\n        this.setAPIProduct = this.setAPIProduct.bind(this);\n        this.updateAPI = this.updateAPI.bind(this);\n        this.setImageUpdate = this.setImageUpdate.bind(this);\n        this.getRevision = this.getRevision.bind(this);\n        this.getDeployedEnv = this.getDeployedEnv.bind(this);\n        this.handleAccordionState = this.handleAccordionState.bind(this);\n        this.getLeftMenuItemForResourcesByType = this.getLeftMenuItemForResourcesByType.bind(this);\n        this.getLeftMenuItemForDefinitionByType = this.getLeftMenuItemForDefinitionByType.bind(this);\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Details\n     */\n    componentDidMount() {\n        const {\n            location: { pathname },\n            isAPIProduct,\n        } = this.props;\n        // Load API data iff request page is valid\n        if (Details.isValidURL(pathname)) {\n            if (isAPIProduct) {\n                this.setAPIProduct();\n            } else {\n                this.setAPI();\n            }\n            const api = new API();\n            api.getTenantsByState('active')\n                .then((response) => {\n                    const { list } = response.body;\n                    this.setState({ tenantList: list });\n                }).catch((error) => {\n                    console.error('error when getting tenants ' + error);\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    componentDidUpdate(prevProps) {\n        const { api } = this.state;\n        const { settings: prevSettings } = prevProps;\n\n        const { match, isAPIProduct, settings } = this.props;\n        const { apiUUID } = match.params;\n        const { apiProdUUID } = match.params;\n        if (prevSettings !== settings) {\n            this.props.updateSettings(settings);\n        }\n        if (!api || (api.id === apiUUID || api.id === apiProdUUID)) {\n            return;\n        }\n        if (isAPIProduct) {\n            this.setAPIProduct();\n        } else {\n            this.setAPI();\n        }\n    }\n\n    /**\n     *\n     * This method is a hack to update the image in the toolbar when a new image is uploaded\n     * @memberof Details\n     */\n    setImageUpdate() {\n        this.setState((previousState) => ({\n            imageUpdate: previousState.imageUpdate + 1,\n        }));\n        console.info(this.state.imageUpdate);\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPI(newAPI) {\n        if (newAPI) {\n            this.setState({ api: newAPI });\n        } else {\n            const { match } = this.props;\n            const { apiUUID } = match.params;\n            const promisedApi = API.get(apiUUID);\n            promisedApi\n                .then((api) => {\n                    this.setState({ api });\n                    this.getRevision();\n                    this.getDeployedEnv();\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    } else if (status === 403) {\n                        this.setState({ authorizedAPI: true });\n                    } else if (status === 401) {\n                        doRedirectToLogin();\n                    }\n                });\n        }\n    }\n\n    /**\n     * Set open state for page search\n     * @param {*} status\n     */\n    setOpenPageSearch(status) {\n        const { openPageSearch } = this.state;\n        if (status !== openPageSearch) {\n            this.setState({ openPageSearch: status });\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPIProduct() {\n        const { match } = this.props;\n        const { apiProdUUID } = match.params;\n        const { isAPIProduct } = this.props;\n        const promisedApi = APIProduct.get(apiProdUUID);\n        promisedApi\n            .then((api) => {\n                this.setState({ isAPIProduct });\n                this.setState({ api });\n                this.getRevision();\n                this.getDeployedEnv();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                } else if (status === 403) {\n                    this.setState({ authorizedAPI: true });\n                }\n            });\n    }\n\n    /**\n     *\n     * @returns\n     * @memberof Details\n     */\n    getLeftMenuItemForDefinitionByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const apiDefinitionMenuItem = (\n            <LeftMenuItem\n                text={intl.formatMessage({\n                    id: 'Apis.Details.index.api.definition2',\n                    defaultMessage: 'API definition',\n                })}\n                route='api definition'\n                to={pathPrefix + 'api definition'}\n                Icon={<CodeIcon />}\n                id='left-menu-itemAPIdefinition'\n            />\n        );\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.schema.definition',\n                                defaultMessage: 'Schema Definition',\n                            })}\n                            route='schema definition'\n                            to={pathPrefix + 'schema definition'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n            case 'WEBSUB':\n            case 'SSE':\n            case 'ASYNC':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.asyncApi.definition',\n                                defaultMessage: 'AsyncAPI Definition',\n                            })}\n                            route='asyncApi definition'\n                            to={pathPrefix + 'asyncApi definition'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            case 'SOAP':\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.wsdl.definition',\n                                defaultMessage: 'WSDL Definition',\n                            })}\n                            route='wsdl'\n                            to={pathPrefix + 'wsdl'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            default:\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                    </>\n                );\n        }\n    }\n\n    getLeftMenuItemForResourcesByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.operations',\n                                defaultMessage: 'operations',\n                            })}\n                            to={pathPrefix + 'operations'}\n                            Icon={<ResourcesIcon />}\n                            id='left-menu-operations'\n                        />\n                    </>\n                );\n            case 'WS':\n            case 'WEBSUB':\n            case 'SSE':\n            case 'ASYNC':\n                return (\n                    <>\n                        <LeftMenuItem\n                            id='left-menu-itemtopics'\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.topics',\n                                defaultMessage: 'topics',\n                            })}\n                            to={pathPrefix + 'topics'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n            default:\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.resources',\n                                defaultMessage: 'resources',\n                            })}\n                            to={pathPrefix + 'resources'}\n                            Icon={<ResourcesIcon />}\n                            id='left-menu-itemresources'\n                        />\n                    </>\n                );\n        }\n    }\n\n    /**\n     * Get Revisions\n     */\n    getRevision() {\n        const { api } = this.state;\n        const restApi = new API();\n        const restApiProduct = new APIProduct();\n        let isAPIProduct = false;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            isAPIProduct = true;\n        }\n\n        let promisedUpdate;\n        let apiId = null;\n        if (!isAPIProduct) {\n            apiId = api.isRevision ? api.revisionedApiId : api.id;\n            promisedUpdate = restApi.getRevisions(apiId);\n        } else if (isAPIProduct) {\n            apiId = api.isRevision ? api.revisionedApiProductId : api.id;\n            promisedUpdate = restApiProduct.getProductRevisions(apiId);\n        }\n        return promisedUpdate\n            .then((result) => {\n                this.setState({ allRevisions: result.body.list });\n            })\n            .catch(() => {\n                Alert.error('Something went wrong while getting the revisions!');\n            });\n    }\n\n    /**\n     * Get Depolyed environment\n     */\n    getDeployedEnv() {\n        const { api } = this.state;\n        const restApi = new API();\n        const restApiProduct = new APIProduct();\n        let isAPIProduct = false;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            isAPIProduct = true;\n        }\n\n        let promisedUpdate;\n        if (!isAPIProduct) {\n            promisedUpdate = restApi.getRevisionsWithEnv(api.isRevision ? api.revisionedApiId : api.id);\n        } else if (isAPIProduct) {\n            promisedUpdate = restApiProduct.getProductRevisionsWithEnv(api.isRevision\n                ? api.revisionedApiProductId : api.id);\n        }\n        return promisedUpdate\n            .then((result) => {\n                this.setState({ allEnvRevision: result.body.list });\n            })\n            .catch(() => {\n                Alert.error('Something went wrong while getting the revisions!');\n            });\n    }\n\n    /**\n     * update ls\n     * @param {String} name event triggered\n     * @param {Boolean} isExpanded state\n     */\n    handleAccordionState(name, isExpanded) {\n        const { user } = this.context;\n        this.setState({ [name]: isExpanded });\n        if (name === 'portalConfigsExpanded') {\n            user.setProperty(UserProperties.PORTAL_CONFIG_OPEN, isExpanded);\n        } else {\n            user.setProperty(UserProperties.API_CONFIG_OPEN, isExpanded);\n        }\n    }\n\n    /**\n     * This method is similar to ReactJS `setState` method, In this `updateAPI()` method, we accept partially updated\n     * API object or comple API object. When updating , the provided updatedAPI object will be merged with the existing\n     * API object in the state and use it as the payload in the /apis PUT operation.\n     *\n     * Partially updated API object means: {description: \"Here is my new description..\"} kind of object. It should have\n     * a key in API object and value contains the updated value of that property\n     * @param {Object} [_updatedProperties={}] Partially updated API object or complete API object\n     * (even an instance of API class is accepted here)\n     * @param {Boolean} isAPIProduct Whether the update operation should execute on an API or API Product\n     * @returns {Promise} promise object that resolve to update (/apis PUT operation) response\n     */\n    updateAPI(_updatedProperties = {}) {\n        const { api } = this.state;\n        let isAPIProduct = false;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            isAPIProduct = true;\n        }\n\n        const updatedProperties = _updatedProperties instanceof API ? _updatedProperties.toJson() : _updatedProperties;\n        let promisedUpdate;\n        // TODO: Ideally, The state should hold the corresponding API object\n        // which we could call it's `update` method safely ~tmkb\n        if (!isEmpty(updatedProperties)) {\n            // newApi object has to be provided as the updatedProperties. Then api will be updated.\n            promisedUpdate = api.update(updatedProperties);\n        } else if (!isAPIProduct) {\n            // Just like calling noArg `setState()` will just trigger a re-render without modifying the state,\n            // Calling `updateAPI()` without args wil return the API without any update.\n            // Just sync-up the api state with backend\n            promisedUpdate = API.get(api.id);\n        } else if (isAPIProduct) {\n            promisedUpdate = APIProduct.get(api.id);\n        }\n        return promisedUpdate\n            .then((updatedAPI) => {\n                if (isAPIProduct) {\n                    Alert.info(`${updatedAPI.name} API Product updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                } else {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                }\n            })\n            .catch((error) => {\n                // TODO: Should log and handle the error case by the original callee ~tmkb\n                console.error(error);\n                Alert.error(`Something went wrong while updating the ${api.name} API!!`);\n                // Kinda force render,Resting API object to old one\n                this.setState({ api });\n                throw error;\n            });\n    }\n\n    /**\n     * Renders Grid container layout with NavBar place static in LHS, Components which coming as children for\n     * Details page\n     * should wrap it's content with <Grid item > element\n     * @returns {Component} Render API Details page\n     */\n    render() {\n        const {\n            api, apiNotFound, isAPIProduct, imageUpdate, tenantList, allRevisions, allEnvRevision, openPageSearch,\n            authorizedAPI,\n        } = this.state;\n        const {\n            classes,\n            theme,\n            match,\n            intl,\n            settings,\n            isSettingsLoading,\n            location: pageLocation,\n            location: { pathname }, // nested destructuring\n        } = this.props;\n\n        // pageLocation renaming is to prevent es-lint errors saying can't use global name location\n        if (!Details.isValidURL(pathname)) {\n            return <ResourceNotFound location={pageLocation} />;\n        }\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const redirectUrl = pathPrefix;\n        const isAsyncAPI = api && (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE'\n            || api.type === 'ASYNC');\n        if (apiNotFound) {\n            const { apiUUID } = match.params;\n            const resourceNotFoundMessageText = defineMessages({\n                titleMessage: {\n                    id: 'Apis.Details.index.api.not.found.title',\n                    defaultMessage: 'API is not found in the {environmentLabel} Environment',\n                },\n                bodyMessage: {\n                    id: 'Apis.Details.index.api.not.found.body',\n                    defaultMessage: 'Cannot find the API with the given id',\n                },\n            });\n            const resourceNotFountMessage = {\n                title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                    environmentLabel: `${Utils.getCurrentEnvironment().label}`,\n                }),\n                body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage, { apiUUID: `${apiUUID}` }),\n            };\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n        if (authorizedAPI) {\n            return (\n                <>\n                    <AuthorizedError />\n                </>\n            );\n        }\n\n        if (!api) {\n            return <Progress per={70} message='Loading API data ...' />;\n        } else if (isSettingsLoading) {\n            return <Progress per={80} message='Loading portal settings ...' />;\n        }\n        const { leftMenuIconMainSize } = theme.custom;\n        return (\n            <Box display='flex' alignItems='stretch' flexDirection='row'>\n                <APIProvider\n                    value={{\n                        api,\n                        updateAPI: this.updateAPI,\n                        isAPIProduct,\n                        setAPI: this.setAPI,\n                        setImageUpdate: this.setImageUpdate,\n                        imageUpdate,\n                        tenantList,\n                    }}\n                >\n                    <Box className={classes.LeftMenu}>\n                        <nav name='secondaryNavigation' aria-label='secondary navigation'>\n                            <Link to={'/' + (isAPIProduct ? 'api-products' : 'apis') + '/'} aria-label='ALL APIs'>\n                                <div className={classes.leftLInkMain}>\n                                    <CustomIcon\n                                        className={classes.customIcon}\n                                        width={leftMenuIconMainSize}\n                                        height={leftMenuIconMainSize}\n                                        icon={isAPIProduct ? 'api-product' : 'apis'}\n                                    />\n                                </div>\n                            </Link>\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.overview',\n                                    defaultMessage: 'overview',\n                                })}\n                                to={pathPrefix + 'overview'}\n                                Icon={<DashboardIcon />}\n                                head='valueOnly'\n                                id='left-menu-overview'\n                            />\n                            <Typography className={classes.headingText}>\n                                Develop\n                            </Typography>\n                            <DevelopSectionMenu\n                                pathPrefix={pathPrefix}\n                                isAPIProduct={isAPIProduct}\n                                api={api}\n                                getLeftMenuItemForResourcesByType={this.getLeftMenuItemForResourcesByType}\n                                getLeftMenuItemForDefinitionByType={this.getLeftMenuItemForDefinitionByType}\n                            />\n                            <Divider />\n                            {!isAPIProduct && (\n                                <>\n                                    <Typography className={classes.headingText}>Deploy</Typography>\n                                    <LeftMenuItem\n                                        text={intl.formatMessage({\n                                            id: 'Apis.Details.index.environments',\n                                            defaultMessage: 'Deployments',\n                                        })}\n                                        route='deployments'\n                                        to={pathPrefix + 'deployments'}\n                                        Icon={<PersonPinCircleOutlinedIcon />}\n                                        id='left-menu-itemdeployments'\n                                    />\n                                </>\n                            )}\n                            {isAPIProduct && (\n                                <>\n                                    <Typography className={classes.headingText}>Deploy</Typography>\n                                    <LeftMenuItem\n                                        text={intl.formatMessage({\n                                            id: 'Apis.Details.index.environments',\n                                            defaultMessage: 'Deployments',\n                                        })}\n                                        route='deployments'\n                                        to={pathPrefix + 'deployments'}\n                                        Icon={<PersonPinCircleOutlinedIcon />}\n                                        id='left-menu-itemdeployments'\n                                    />\n                                </>\n                            )}\n                            {(isAPIProduct || (!isAPIProduct && !api.isWebSocket() && !api.isGraphql()\n                                && !isAsyncAPI)) && (\n                                <div>\n                                    <Divider />\n                                    <Typography className={classes.headingText}>Test</Typography>\n                                    <LeftMenuItem\n                                        route='test-console'\n                                        text={intl.formatMessage({\n                                            id: 'Apis.Details.index.Tryout.menu.name',\n                                            defaultMessage: 'Try Out',\n                                        })}\n                                        to={pathPrefix + 'test-console'}\n                                        iconText='test'\n                                        id='left-menu-itemTestConsole'\n                                    />\n                                </div>\n                            )}\n                            {!isRestricted(['apim:api_publish'], api) && (\n                                <div>\n                                    <Divider />\n                                    <Typography className={classes.headingText}>Publish</Typography>\n                                    <LeftMenuItem\n                                        text={intl.formatMessage({\n                                            id: 'Apis.Details.index.lifecycle',\n                                            defaultMessage: 'lifecycle',\n                                        })}\n                                        to={pathPrefix + 'lifecycle'}\n                                        Icon={<LifeCycleIcon />}\n                                        id='left-menu-itemlifecycle'\n                                    />\n                                </div>\n                            )}\n                            {!isAPIProduct && settings && settings.externalStoresEnabled && (\n                                <>\n                                    <Divider />\n                                    <LeftMenuItem\n                                        text={intl.formatMessage({\n                                            id: 'Apis.Details.index.external-stores',\n                                            defaultMessage: 'external dev portals',\n                                        })}\n                                        to={pathPrefix + 'external-devportals'}\n                                        Icon={<StoreIcon />}\n                                        id='left-menu-itemstores'\n                                    />\n                                </>\n                            )}\n                            <Divider />\n                        </nav>\n                    </Box>\n                    <Box className={classes.content}>\n                        <RevisionContextProvider\n                            value={{\n                                allRevisions,\n                                getRevision: this.getRevision,\n                                allEnvRevision,\n                                getDeployedEnv: this.getDeployedEnv,\n                            }}\n                        >\n                            <APIDetailsTopMenu\n                                setOpenPageSearch={this.setOpenPageSearch}\n                                openPageSearch={openPageSearch}\n                                api={api}\n                                isAPIProduct={isAPIProduct}\n                                imageUpdate={imageUpdate}\n                                updateAPI={this.updateAPI}\n                            />\n                            <div className={classes.contentInside}>\n                                <LastUpdatedTime lastUpdatedTime={api.lastUpdatedTimestamp} />\n                                <Switch>\n                                    <Redirect exact from={Details.subPaths.BASE} to={redirectUrl} />\n                                    <Route\n                                        path={Details.subPaths.OVERVIEW_PRODUCT}\n                                        key={Details.subPaths.OVERVIEW_PRODUCT}\n                                        component={() => (\n                                            <Overview\n                                                setOpenPageSearch={this.setOpenPageSearch}\n                                                api={api}\n                                            />\n                                        )}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.OVERVIEW}\n                                        component={() => (\n                                            <Overview\n                                                setOpenPageSearch={this.setOpenPageSearch}\n                                                api={api}\n                                            />\n                                        )}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.API_DEFINITION}\n                                        component={() => <APIDefinition api={api} updateAPI={this.updateAPI} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.WSDL}\n                                        component={() => <WSDL api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.API_DEFINITION_PRODUCT}\n                                        component={() => <APIDefinition api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.SCHEMA_DEFINITION}\n                                        component={() => <APIDefinition api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.ASYNCAPI_DEFINITION}\n                                        component={() => <APIDefinition api={api} updateAPI={this.updateAPI} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.LIFE_CYCLE}\n                                        component={() => <LifeCycle api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.LIFE_CYCLE_PRODUCT}\n                                        component={() => <LifeCycle api={api} isAPIProduct={isAPIProduct} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.CONFIGURATION}\n                                        component={() => <DesignConfigurations api={api} updateAPI={this.updateAPI}/>}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.RUNTIME_CONFIGURATION}\n                                        component={() => <RuntimeConfiguration api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.RUNTIME_CONFIGURATION_WEBSOCKET}\n                                        component={() => <RuntimeConfigurationWebSocket api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.TOPICS}\n                                        component={() => <Topics api={api} updateAPI={this.updateAPI} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.CONFIGURATION_PRODUCT}\n                                        component={() => <DesignConfigurations api={api} updateAPI={this.updateAPI}/>}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.RUNTIME_CONFIGURATION_PRODUCT}\n                                        component={() => <RuntimeConfiguration api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.ENDPOINTS}\n                                        component={() => <Endpoints api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.ENVIRONMENTS}\n                                        component={() => <Environments api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.ENVIRONMENTS_PRODUCT}\n                                        component={() => <Environments api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.OPERATIONS}\n                                        component={() => <Operations api={api} updateAPI={this.updateAPI} />}\n                                    />\n                                    <Route\n                                        exact\n                                        path={Details.subPaths.RESOURCES_PRODUCT}\n                                        component={APIProductOperations}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.RESOURCES_PRODUCT_EDIT}\n                                        component={ProductResourcesEdit}\n                                    />\n\n                                    <Route\n                                        path={Details.subPaths.RESOURCES}\n                                        key={Details.subPaths.RESOURCES}\n                                        component={APIOperations}\n                                    />\n\n                                    <Route path={Details.subPaths.SCOPES} component={() => <Scope api={api} />} />\n                                    <Route\n                                        path={Details.subPaths.DOCUMENTS}\n                                        component={() => <Documents api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.DOCUMENTS_PRODUCT}\n                                        component={() => <Documents api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.SUBSCRIPTIONS}\n                                        component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.SUBSCRIPTIONS_PRODUCT}\n                                        component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                    />\n                                    <Route path={Details.subPaths.SECURITY} component={() => <Security api={api} />} />\n                                    <Route path={Details.subPaths.COMMENTS} component={() => <Comments api={api} />} />\n                                    <Route\n                                        path={Details.subPaths.BUSINESS_INFO}\n                                        component={() => <BusinessInformation api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.BUSINESS_INFO_PRODUCT}\n                                        component={() => <BusinessInformation api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.PROPERTIES}\n                                        component={() => <Properties api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.PROPERTIES_PRODUCT}\n                                        component={() => <Properties api={api} />}\n                                    />\n                                    <Route path={Details.subPaths.NEW_VERSION} component={() => <CreateNewVersion />} />\n                                    <Route path={Details.subPaths.SUBSCRIPTIONS} component={() => <Subscriptions />} />\n                                    <Route\n                                        path={Details.subPaths.MONETIZATION}\n                                        component={() => <Monetization api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.MONETIZATION_PRODUCT}\n                                        component={() => <Monetization api={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.TRYOUT}\n                                        component={() => <TryOutConsole apiObj={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.TRYOUT_PRODUCT}\n                                        component={() => <TryOutConsole apiObj={api} />}\n                                    />\n                                    <Route path={Details.subPaths.EXTERNAL_STORES} component={ExternalStores} />\n                                    <Route\n                                        path={Details.subPaths.COMMENTS}\n                                        component={() => <Comments apiObj={api} />}\n                                    />\n                                    <Route\n                                        path={Details.subPaths.POLICIES}\n                                        component={() => <Policies api={api} />}\n                                    />\n                                </Switch>\n                            </div>\n                        </RevisionContextProvider>\n                    </Box>\n                </APIProvider>\n            </Box>\n        );\n    }\n}\n\nDetails.contextType = AppContext;\n// Add your path here and refer it in above <Route /> component,\n// Paths that are not defined here will be returned with Not Found error\n// key name doesn't matter here, Use an appropriate name as the key\nDetails.subPaths = {\n    BASE: '/apis/:api_uuid',\n    BASE_PRODUCT: '/api-products/:apiprod_uuid',\n    OVERVIEW: '/apis/:api_uuid/overview',\n    OVERVIEW_PRODUCT: '/api-products/:apiprod_uuid/overview',\n    API_DEFINITION: '/apis/:api_uuid/api definition',\n    WSDL: '/apis/:api_uuid/wsdl',\n    API_DEFINITION_PRODUCT: '/api-products/:apiprod_uuid/api definition',\n    SCHEMA_DEFINITION: '/apis/:api_uuid/schema definition',\n    LIFE_CYCLE: '/apis/:api_uuid/lifecycle',\n    LIFE_CYCLE_PRODUCT: '/api-products/:apiprod_uuid/lifecycle',\n    CONFIGURATION: '/apis/:api_uuid/configuration',\n    RUNTIME_CONFIGURATION: '/apis/:api_uuid/runtime-configuration',\n    CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/configuration',\n    RUNTIME_CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/runtime-configuration',\n    RUNTIME_CONFIGURATION_WEBSOCKET: '/apis/:api_uuid/runtime-configuration-websocket',\n    ENDPOINTS: '/apis/:api_uuid/endpoints',\n    ENVIRONMENTS: '/apis/:api_uuid/deployments',\n    ENVIRONMENTS_PRODUCT: '/api-products/:apiprod_uuid/deployments',\n    OPERATIONS: '/apis/:api_uuid/operations',\n    RESOURCES: '/apis/:api_uuid/resources',\n    RESOURCES_PRODUCT: '/api-products/:apiprod_uuid/resources',\n    RESOURCES_PRODUCT_EDIT: '/api-products/:apiprod_uuid/resources/edit',\n    SCOPES: '/apis/:api_uuid/scopes',\n    DOCUMENTS: '/apis/:api_uuid/documents',\n    DOCUMENTS_PRODUCT: '/api-products/:apiprod_uuid/documents',\n    SUBSCRIPTIONS_PRODUCT: '/api-products/:apiprod_uuid/subscriptions',\n    SUBSCRIPTIONS: '/apis/:api_uuid/subscriptions',\n    SECURITY: '/apis/:api_uuid/security',\n    COMMENTS: '/apis/:api_uuid/comments',\n    BUSINESS_INFO: '/apis/:api_uuid/business info',\n    BUSINESS_INFO_PRODUCT: '/api-products/:apiprod_uuid/business info',\n    PROPERTIES: '/apis/:api_uuid/properties',\n    PROPERTIES_PRODUCT: '/api-products/:apiprod_uuid/properties',\n    NEW_VERSION: '/apis/:api_uuid/new_version',\n    MONETIZATION: '/apis/:api_uuid/monetization',\n    MONETIZATION_PRODUCT: '/api-products/:apiprod_uuid/monetization',\n    EXTERNAL_STORES: '/apis/:api_uuid/external-devportals',\n    TRYOUT: '/apis/:api_uuid/test-console',\n    TRYOUT_PRODUCT: '/api-products/:apiprod_uuid/test-console',\n    QUERYANALYSIS: '/apis/:api_uuid/queryanalysis',\n    TOPICS: '/apis/:api_uuid/topics',\n    ASYNCAPI_DEFINITION: '/apis/:api_uuid/asyncApi definition',\n    POLICIES: '/apis/:api_uuid/policies',\n};\n\n// To make sure that paths will not change by outsiders, Basically an enum\nObject.freeze(Details.paths);\n\nDetails.propTypes = {\n    classes: PropTypes.shape({\n        LeftMenu: PropTypes.string,\n        content: PropTypes.string,\n        leftLInkMain: PropTypes.string,\n        contentInside: PropTypes.string,\n        footeremaillink: PropTypes.string,\n    }).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenuIconMainSize: PropTypes.number,\n        }),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Image404 from './Custom404Image';\n\nconst AuthorizedError = (props) => {\n    const { response } = props;\n    const { message = {} } = props;\n\n    return (\n        <>\n            <Container maxWidth='md'>\n                <Box padding={4}>\n                    <Paper elevation={0}>\n                        <Box padding={4}>\n                            <Grid container alignItems='center' justify='center' style={{ height: '100%' }}>\n                                <Grid item xs={12} md={6}>\n                                    <Typography variant='h5' gutterBottom>\n                                        {message.title}\n                                    </Typography>\n                                    <Typography variant='subtitle1' gutterBottom>\n                                        {message.body}\n                                        <span style={{ color: 'green' }}>\n                                            {' '}\n                                            {response ? response.statusText : ''}\n                                            {' '}\n                                        </span>\n                                    </Typography>\n                                    {message.more}\n                                    <Box py={5}>\n                                        <Box pb={2}>\n                                            <Typography variant='subtitle1'>\n                                                <FormattedMessage\n                                                    id='Base.Errors.ResourceNotFound.more.links'\n                                                    defaultMessage='You may check the links below'\n                                                />\n                                            </Typography>\n                                        </Box>\n                                        <Link to='/apis/' style={{ marginRight: 8 }}>\n                                            <Button variant='contained' color='primary'>\n                                                <FormattedMessage\n                                                    id='Base.Errors.ResourceNotFound.api.list'\n                                                    defaultMessage='API List'\n                                                />\n                                            </Button>\n                                        </Link>\n                                        <Link to='/api-products/'>\n                                            <Button variant='contained' color='primary'>\n                                                <FormattedMessage\n                                                    id='Base.Errors.ResourceNotFound.api.product.list'\n                                                    defaultMessage='API Product List'\n                                                />\n                                            </Button>\n                                        </Link>\n                                    </Box>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    {/* Image */}\n                                    <Image404 style={{ fontSize: 400, fill: '#ccc' }} />\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </Paper>\n                </Box>\n            </Container>\n        </>\n    );\n};\n\nAuthorizedError.defaultProps = {\n    message: {\n        title: <FormattedMessage\n            id='Base.Errors.AuthorizedError.default_tittle'\n            defaultMessage='Authorized Error'\n        />,\n        body: <FormattedMessage\n            id='Base.Errors.AuthorizedError.default_body'\n            defaultMessage='User is not authorized to access the API'\n        />,\n    },\n};\n\nAuthorizedError.propTypes = {\n    response: PropTypes.shape({\n        statusText: PropTypes.string,\n    }).isRequired,\n    message: PropTypes.shape({\n        title: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.instanceOf(FormattedMessage),\n        ]),\n        body: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.instanceOf(FormattedMessage),\n        ]),\n    }),\n};\n\nexport default AuthorizedError;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * API/Product last updated time.\n * @param {Parameter} props last updated time.\n * @returns {Property} The sum of the two numbers.\n */\nfunction LastUpdatedTime(props) {\n    const { lastUpdatedTime } = props;\n    return (\n        <div style={{ float: 'right' }}>\n            <Tooltip\n                title={moment(parseInt(lastUpdatedTime, 10)).calendar()}\n                interactive\n            >\n                <Typography variant='caption' display='block'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.last.updated.time'\n                        defaultMessage='Last updated:'\n                    />\n                    {' '}\n                    {moment(parseInt(lastUpdatedTime, 10)).fromNow()}\n                </Typography>\n            </Tooltip>\n        </div>\n    );\n}\n\nLastUpdatedTime.propTypes = {\n    lastUpdatedTime: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default (LastUpdatedTime);\n","var map = {\n\t\"./af\": 1937,\n\t\"./af.js\": 1937,\n\t\"./ar\": 1938,\n\t\"./ar-dz\": 1939,\n\t\"./ar-dz.js\": 1939,\n\t\"./ar-kw\": 1940,\n\t\"./ar-kw.js\": 1940,\n\t\"./ar-ly\": 1941,\n\t\"./ar-ly.js\": 1941,\n\t\"./ar-ma\": 1942,\n\t\"./ar-ma.js\": 1942,\n\t\"./ar-sa\": 1943,\n\t\"./ar-sa.js\": 1943,\n\t\"./ar-tn\": 1944,\n\t\"./ar-tn.js\": 1944,\n\t\"./ar.js\": 1938,\n\t\"./az\": 1945,\n\t\"./az.js\": 1945,\n\t\"./be\": 1946,\n\t\"./be.js\": 1946,\n\t\"./bg\": 1947,\n\t\"./bg.js\": 1947,\n\t\"./bm\": 1948,\n\t\"./bm.js\": 1948,\n\t\"./bn\": 1949,\n\t\"./bn-bd\": 1950,\n\t\"./bn-bd.js\": 1950,\n\t\"./bn.js\": 1949,\n\t\"./bo\": 1951,\n\t\"./bo.js\": 1951,\n\t\"./br\": 1952,\n\t\"./br.js\": 1952,\n\t\"./bs\": 1953,\n\t\"./bs.js\": 1953,\n\t\"./ca\": 1954,\n\t\"./ca.js\": 1954,\n\t\"./cs\": 1955,\n\t\"./cs.js\": 1955,\n\t\"./cv\": 1956,\n\t\"./cv.js\": 1956,\n\t\"./cy\": 1957,\n\t\"./cy.js\": 1957,\n\t\"./da\": 1958,\n\t\"./da.js\": 1958,\n\t\"./de\": 1959,\n\t\"./de-at\": 1960,\n\t\"./de-at.js\": 1960,\n\t\"./de-ch\": 1961,\n\t\"./de-ch.js\": 1961,\n\t\"./de.js\": 1959,\n\t\"./dv\": 1962,\n\t\"./dv.js\": 1962,\n\t\"./el\": 1963,\n\t\"./el.js\": 1963,\n\t\"./en-au\": 1964,\n\t\"./en-au.js\": 1964,\n\t\"./en-ca\": 1965,\n\t\"./en-ca.js\": 1965,\n\t\"./en-gb\": 1966,\n\t\"./en-gb.js\": 1966,\n\t\"./en-ie\": 1967,\n\t\"./en-ie.js\": 1967,\n\t\"./en-il\": 1968,\n\t\"./en-il.js\": 1968,\n\t\"./en-in\": 1969,\n\t\"./en-in.js\": 1969,\n\t\"./en-nz\": 1970,\n\t\"./en-nz.js\": 1970,\n\t\"./en-sg\": 1971,\n\t\"./en-sg.js\": 1971,\n\t\"./eo\": 1972,\n\t\"./eo.js\": 1972,\n\t\"./es\": 1973,\n\t\"./es-do\": 1974,\n\t\"./es-do.js\": 1974,\n\t\"./es-mx\": 1975,\n\t\"./es-mx.js\": 1975,\n\t\"./es-us\": 1976,\n\t\"./es-us.js\": 1976,\n\t\"./es.js\": 1973,\n\t\"./et\": 1977,\n\t\"./et.js\": 1977,\n\t\"./eu\": 1978,\n\t\"./eu.js\": 1978,\n\t\"./fa\": 1979,\n\t\"./fa.js\": 1979,\n\t\"./fi\": 1980,\n\t\"./fi.js\": 1980,\n\t\"./fil\": 1981,\n\t\"./fil.js\": 1981,\n\t\"./fo\": 1982,\n\t\"./fo.js\": 1982,\n\t\"./fr\": 1983,\n\t\"./fr-ca\": 1984,\n\t\"./fr-ca.js\": 1984,\n\t\"./fr-ch\": 1985,\n\t\"./fr-ch.js\": 1985,\n\t\"./fr.js\": 1983,\n\t\"./fy\": 1986,\n\t\"./fy.js\": 1986,\n\t\"./ga\": 1987,\n\t\"./ga.js\": 1987,\n\t\"./gd\": 1988,\n\t\"./gd.js\": 1988,\n\t\"./gl\": 1989,\n\t\"./gl.js\": 1989,\n\t\"./gom-deva\": 1990,\n\t\"./gom-deva.js\": 1990,\n\t\"./gom-latn\": 1991,\n\t\"./gom-latn.js\": 1991,\n\t\"./gu\": 1992,\n\t\"./gu.js\": 1992,\n\t\"./he\": 1993,\n\t\"./he.js\": 1993,\n\t\"./hi\": 1994,\n\t\"./hi.js\": 1994,\n\t\"./hr\": 1995,\n\t\"./hr.js\": 1995,\n\t\"./hu\": 1996,\n\t\"./hu.js\": 1996,\n\t\"./hy-am\": 1997,\n\t\"./hy-am.js\": 1997,\n\t\"./id\": 1998,\n\t\"./id.js\": 1998,\n\t\"./is\": 1999,\n\t\"./is.js\": 1999,\n\t\"./it\": 2000,\n\t\"./it-ch\": 2001,\n\t\"./it-ch.js\": 2001,\n\t\"./it.js\": 2000,\n\t\"./ja\": 2002,\n\t\"./ja.js\": 2002,\n\t\"./jv\": 2003,\n\t\"./jv.js\": 2003,\n\t\"./ka\": 2004,\n\t\"./ka.js\": 2004,\n\t\"./kk\": 2005,\n\t\"./kk.js\": 2005,\n\t\"./km\": 2006,\n\t\"./km.js\": 2006,\n\t\"./kn\": 2007,\n\t\"./kn.js\": 2007,\n\t\"./ko\": 2008,\n\t\"./ko.js\": 2008,\n\t\"./ku\": 2009,\n\t\"./ku.js\": 2009,\n\t\"./ky\": 2010,\n\t\"./ky.js\": 2010,\n\t\"./lb\": 2011,\n\t\"./lb.js\": 2011,\n\t\"./lo\": 2012,\n\t\"./lo.js\": 2012,\n\t\"./lt\": 2013,\n\t\"./lt.js\": 2013,\n\t\"./lv\": 2014,\n\t\"./lv.js\": 2014,\n\t\"./me\": 2015,\n\t\"./me.js\": 2015,\n\t\"./mi\": 2016,\n\t\"./mi.js\": 2016,\n\t\"./mk\": 2017,\n\t\"./mk.js\": 2017,\n\t\"./ml\": 2018,\n\t\"./ml.js\": 2018,\n\t\"./mn\": 2019,\n\t\"./mn.js\": 2019,\n\t\"./mr\": 2020,\n\t\"./mr.js\": 2020,\n\t\"./ms\": 2021,\n\t\"./ms-my\": 2022,\n\t\"./ms-my.js\": 2022,\n\t\"./ms.js\": 2021,\n\t\"./mt\": 2023,\n\t\"./mt.js\": 2023,\n\t\"./my\": 2024,\n\t\"./my.js\": 2024,\n\t\"./nb\": 2025,\n\t\"./nb.js\": 2025,\n\t\"./ne\": 2026,\n\t\"./ne.js\": 2026,\n\t\"./nl\": 2027,\n\t\"./nl-be\": 2028,\n\t\"./nl-be.js\": 2028,\n\t\"./nl.js\": 2027,\n\t\"./nn\": 2029,\n\t\"./nn.js\": 2029,\n\t\"./oc-lnc\": 2030,\n\t\"./oc-lnc.js\": 2030,\n\t\"./pa-in\": 2031,\n\t\"./pa-in.js\": 2031,\n\t\"./pl\": 2032,\n\t\"./pl.js\": 2032,\n\t\"./pt\": 2033,\n\t\"./pt-br\": 2034,\n\t\"./pt-br.js\": 2034,\n\t\"./pt.js\": 2033,\n\t\"./ro\": 2035,\n\t\"./ro.js\": 2035,\n\t\"./ru\": 2036,\n\t\"./ru.js\": 2036,\n\t\"./sd\": 2037,\n\t\"./sd.js\": 2037,\n\t\"./se\": 2038,\n\t\"./se.js\": 2038,\n\t\"./si\": 2039,\n\t\"./si.js\": 2039,\n\t\"./sk\": 2040,\n\t\"./sk.js\": 2040,\n\t\"./sl\": 2041,\n\t\"./sl.js\": 2041,\n\t\"./sq\": 2042,\n\t\"./sq.js\": 2042,\n\t\"./sr\": 2043,\n\t\"./sr-cyrl\": 2044,\n\t\"./sr-cyrl.js\": 2044,\n\t\"./sr.js\": 2043,\n\t\"./ss\": 2045,\n\t\"./ss.js\": 2045,\n\t\"./sv\": 2046,\n\t\"./sv.js\": 2046,\n\t\"./sw\": 2047,\n\t\"./sw.js\": 2047,\n\t\"./ta\": 2048,\n\t\"./ta.js\": 2048,\n\t\"./te\": 2049,\n\t\"./te.js\": 2049,\n\t\"./tet\": 2050,\n\t\"./tet.js\": 2050,\n\t\"./tg\": 2051,\n\t\"./tg.js\": 2051,\n\t\"./th\": 2052,\n\t\"./th.js\": 2052,\n\t\"./tk\": 2053,\n\t\"./tk.js\": 2053,\n\t\"./tl-ph\": 2054,\n\t\"./tl-ph.js\": 2054,\n\t\"./tlh\": 2055,\n\t\"./tlh.js\": 2055,\n\t\"./tr\": 2056,\n\t\"./tr.js\": 2056,\n\t\"./tzl\": 2057,\n\t\"./tzl.js\": 2057,\n\t\"./tzm\": 2058,\n\t\"./tzm-latn\": 2059,\n\t\"./tzm-latn.js\": 2059,\n\t\"./tzm.js\": 2058,\n\t\"./ug-cn\": 2060,\n\t\"./ug-cn.js\": 2060,\n\t\"./uk\": 2061,\n\t\"./uk.js\": 2061,\n\t\"./ur\": 2062,\n\t\"./ur.js\": 2062,\n\t\"./uz\": 2063,\n\t\"./uz-latn\": 2064,\n\t\"./uz-latn.js\": 2064,\n\t\"./uz.js\": 2063,\n\t\"./vi\": 2065,\n\t\"./vi.js\": 2065,\n\t\"./x-pseudo\": 2066,\n\t\"./x-pseudo.js\": 2066,\n\t\"./yo\": 2067,\n\t\"./yo.js\": 2067,\n\t\"./zh-cn\": 2068,\n\t\"./zh-cn.js\": 2068,\n\t\"./zh-hk\": 2069,\n\t\"./zh-hk.js\": 2069,\n\t\"./zh-mo\": 2070,\n\t\"./zh-mo.js\": 2070,\n\t\"./zh-tw\": 2071,\n\t\"./zh-tw.js\": 2071\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3762;","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport EndpointIcon from '@material-ui/icons/GamesOutlined';\nimport ScopesIcon from '@material-ui/icons/VpnKey';\nimport PoliciesIcon from '@material-ui/icons/SyncAlt';\nimport DocumentsIcon from '@material-ui/icons/LibraryBooks';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ConfigurationIcon from '@material-ui/icons/Build';\nimport PropertiesIcon from '@material-ui/icons/List';\nimport SubscriptionsIcon from '@material-ui/icons/RssFeed';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport RuntimeConfigurationIcon from '@material-ui/icons/Settings';\nimport MonetizationIcon from '@material-ui/icons/LocalAtm';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { PROPERTIES as UserProperties } from 'AppData/User';\nimport { useUser } from 'AppComponents/Shared/AppContext';\nimport { useIntl } from 'react-intl';\n\n\nconst AccordianSummary = withStyles({\n    root: {\n        backgroundColor: '#1a1f2f',\n        paddingLeft: '8px',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        minHeight: 40,\n        '&$expanded': {\n            minHeight: 40,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {\n        backgroundColor: '#1a1f2f',\n    },\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n    root: {\n        backgroundColor: '#1a1f2f',\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(2),\n        paddingTop: '0',\n        paddingBottom: '0',\n    },\n}))(MuiAccordionDetails);\n\n\nconst useStyles = makeStyles((theme) => ({\n    footeremaillink: {\n        marginLeft: theme.custom.leftMenuWidth, /* 4px */\n    },\n    root: {\n        backgroundColor: theme.palette.background.leftMenu,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: '0',\n        paddingBottom: '0',\n    },\n    expanded: {\n        '&$expanded': {\n            margin: 0,\n            backgroundColor: theme.palette.background.leftMenu,\n            minHeight: 40,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n        },\n    },\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontSize: theme.typography.body1.fontSize,\n        fontWeight: 250,\n        whiteSpace: 'nowrap',\n    },\n    expandIconColor: {\n        color: '#ffffff',\n    },\n}));\n\n/**\n *\n * @param {*} props\n * @returns\n */\nexport default function DevelopSectionMenu(props) {\n    const {\n        pathPrefix, isAPIProduct, api, getLeftMenuItemForResourcesByType, getLeftMenuItemForDefinitionByType,\n    } = props;\n    const user = useUser();\n    const [portalConfigsExpanded, setPortalConfigsExpanded] = useState(user\n        .getProperty(UserProperties.PORTAL_CONFIG_OPEN));\n    const [apiConfigsExpanded, setApiConfigsExpanded] = useState(user.getProperty(UserProperties.API_CONFIG_OPEN));\n    const handleAccordionState = (section, isExpanded) => {\n        if (section === 'portalConfigsExpanded') {\n            setPortalConfigsExpanded(isExpanded);\n            user.setProperty(UserProperties.PORTAL_CONFIG_OPEN, isExpanded);\n        } else {\n            setApiConfigsExpanded(isExpanded);\n            user.setProperty(UserProperties.API_CONFIG_OPEN, isExpanded);\n        }\n    };\n    const classes = useStyles();\n    const intl = useIntl();\n\n    return (\n        <div className={classes.root}>\n            <Accordion\n                id='itest-api-details-portal-config-acc'\n                defaultExpanded={portalConfigsExpanded}\n                elevation={0}\n                onChange={(e, isExpanded) => handleAccordionState('portalConfigsExpanded',\n                    isExpanded)}\n                classes={{ expanded: classes.expanded }}\n            >\n                <AccordianSummary\n                    expandIcon={<ExpandMoreIcon className={classes.expandIconColor} />}\n                >\n                    <Typography className={classes.leftLInkText}>\n                        Portal Configurations\n                    </Typography>\n                </AccordianSummary>\n                <AccordionDetails>\n                    <div>\n                        <LeftMenuItem\n                            className={classes.footeremaillink}\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.design.configs',\n                                defaultMessage: 'Basic info',\n                            })}\n                            route='configuration'\n                            to={pathPrefix + 'configuration'}\n                            Icon={<ConfigurationIcon />}\n                            id='left-menu-itemDesignConfigurations'\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.business.info',\n                                defaultMessage: 'business info',\n                            })}\n                            to={pathPrefix + 'business info'}\n                            Icon={<BusinessIcon />}\n                            id='left-menu-itembusinessinfo'\n                        />\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.subscriptions',\n                                    defaultMessage: 'subscriptions',\n                                })}\n                                to={pathPrefix + 'subscriptions'}\n                                Icon={<SubscriptionsIcon />}\n                                id='left-menu-itemsubscriptions'\n                            />\n                        )}\n                        {isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.subscriptions',\n                                    defaultMessage: 'subscriptions',\n                                })}\n                                to={pathPrefix + 'subscriptions'}\n                                Icon={<SubscriptionsIcon />}\n                                id='left-menu-itemsubscriptions'\n                            />\n                        )}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.documents',\n                                defaultMessage: 'documents',\n                            })}\n                            to={pathPrefix + 'documents'}\n                            Icon={<DocumentsIcon />}\n                            id='left-menu-itemdocuments'\n                        />\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.comments',\n                                    defaultMessage: 'Comments',\n                                })}\n                                route='comments'\n                                to={pathPrefix + 'comments'}\n                                Icon={<CommentIcon />}\n                                id='left-menu-itemcomments'\n                            />\n                        )}\n                    </div>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion\n                id='itest-api-details-api-config-acc'\n                defaultExpanded={apiConfigsExpanded}\n                elevation={0}\n                onChange={(e, isExpanded) => handleAccordionState('apiConfigsExpanded',\n                    isExpanded)}\n                classes={{ expanded: classes.expanded }}\n            >\n                <AccordianSummary\n                    expandIcon={<ExpandMoreIcon className={classes.expandIconColor} />}\n                >\n                    <Typography \n                        className={classes.leftLInkText} \n                        data-testid='itest-api-config'>\n                        API Configurations\n                    </Typography>\n                    <Tooltip\n                        title={'If you make any changes to the API configuration, you need to redeploy'\n                            + ' the API to see updates in the API Gateway.'}\n                        placement='bottom'\n                    >\n                        <IconButton color='primary' size='small' aria-label='delete'>\n                            <InfoOutlinedIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                </AccordianSummary>\n                <AccordionDetails>\n                    <div>\n                        {!isAPIProduct && !api.isWebSocket() && (api.gatewayVendor === 'wso2') && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.runtime.configs',\n                                    defaultMessage: 'Runtime',\n                                })}\n                                route='runtime-configuration'\n                                to={pathPrefix + 'runtime-configuration'}\n                                Icon={<RuntimeConfigurationIcon />}\n                                id='left-menu-itemRuntimeConfigurations'\n                            />\n                        )}\n                        {isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.runtime.configs',\n                                    defaultMessage: 'Runtime',\n                                })}\n                                route='runtime-configuration'\n                                to={pathPrefix + 'runtime-configuration'}\n                                Icon={<RuntimeConfigurationIcon />}\n                                id='left-menu-itemRuntimeConfigurations'\n                            />\n                        )}\n                        {api.isWebSocket() && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.runtime.configs',\n                                    defaultMessage: 'Runtime',\n                                })}\n                                route='runtime-configuration'\n                                to={pathPrefix + 'runtime-configuration-websocket'}\n                                Icon={<RuntimeConfigurationIcon />}\n                                id='left-menu-itemRuntimeConfigurations'\n                            />\n                        )}\n                        {getLeftMenuItemForResourcesByType(api.type)}\n                        {getLeftMenuItemForDefinitionByType(api.type)}\n                        {(!api.advertiseInfo || !api.advertiseInfo.advertised) && !isAPIProduct\n                            && api.type !== 'WEBSUB' && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.endpoints',\n                                    defaultMessage: 'endpoints',\n                                })}\n                                to={pathPrefix + 'endpoints'}\n                                Icon={<EndpointIcon />}\n                                id='left-menu-itemendpoints'\n                            />\n                        )}\n                        {!isAPIProduct && (api.gatewayVendor === 'wso2') && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.left.menu.scope',\n                                    defaultMessage: 'Local Scopes',\n                                })}\n                                route='scopes'\n                                to={pathPrefix + 'scopes'}\n                                Icon={<ScopesIcon />}\n                                id='left-menu-itemLocalScopes'\n                            />\n                        )}\n                        {api.advertiseInfo && !api.advertiseInfo.advertised && !isAPIProduct\n                            && (api.type === 'HTTP' || api.type === 'SOAP' || api.type === 'SOAPTOREST') && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.policies',\n                                    defaultMessage: 'Policies',\n                                })}\n                                route='policies'\n                                to={pathPrefix + 'policies'}\n                                Icon={<PoliciesIcon />}\n                                data-testid='left-menu-policies'\n                                id='left-menu-policies'\n                            />\n                        )}\n\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.properties',\n                                defaultMessage: 'properties',\n                            })}\n                            to={pathPrefix + 'properties'}\n                            Icon={<PropertiesIcon />}\n                            id='left-menu-itemproperties'\n                        />\n\n                        {!api.isWebSocket() && !isRestricted(['apim:api_publish'], api) && (\n                            <>\n                                {!isAPIProduct && (api.gatewayVendor === 'wso2') && (\n                                    <LeftMenuItem\n                                        text={intl.formatMessage({\n                                            id: 'Apis.Details.index.monetization',\n                                            defaultMessage: 'monetization',\n                                        })}\n                                        to={pathPrefix + 'monetization'}\n                                        Icon={<MonetizationIcon />}\n                                        id='left-menu-itemMonetization'\n                                    />\n                                )}\n                            </>\n                        )}\n                        {isAPIProduct && !api.isWebSocket()\n                            && !isRestricted(['apim:api_publish'], api) && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.monetization',\n                                    defaultMessage: 'monetization',\n                                })}\n                                to={pathPrefix + 'monetization'}\n                                Icon={<MonetizationIcon />}\n                                id='left-menu-monetization-prod'\n                            />\n                        )}\n                    </div>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Resources from './Resources';\nimport Operations from './Operations';\nimport ProductResources from './ProductResources';\nimport Configuration from './Configuration';\nimport CustomizedStepper from './CustomizedStepper';\nimport MetaData from './MetaData';\nimport Endpoints from './Endpoints';\nimport Topics from './Topics';\n\nconst styles = (theme) => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    checkItem: {\n        textAlign: 'center',\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        padding: 0,\n        height: 'auto',\n        '& span': {\n            padding: '0 5px',\n        },\n    },\n    imageContainer: {\n        display: 'flex',\n    },\n    imageWrapper: {\n        marginRight: theme.spacing(3),\n    },\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    specialGap: {\n        marginTop: theme.spacing(3),\n    },\n    resourceTitle: {\n        marginBottom: theme.spacing(3),\n    },\n    ListRoot: {\n        padding: 0,\n        margin: 0,\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    title: {\n        flex: 1,\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    lifecycleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    lifecycleIcon: {\n        fontSize: 36,\n        color: 'green',\n        marginRight: theme.spacing(1),\n    },\n    leftSideWrapper: {\n        paddingRight: theme.spacing(2),\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    url: {\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * API Overview page\n *\n * @param {*} props\n * @returns\n */\nfunction Overview(props) {\n    const { classes, api: newApi, setOpenPageSearch } = props; // TODO <tmkasun>: Remove newApi prop & merge to api\n    const { api } = useContext(ApiContext);\n    let loadEndpoints;\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === 's') {\n                const { target } = event;\n                // prevent opening page search when typing `s` in header API search input\n                if (target.id !== 'searchQuery') {\n                    setOpenPageSearch(true);\n                }\n                // TO prevent overlapping the event handlers in header search and page search itself\n                if (target.id !== 'page-search-input' && target.id !== 'searchQuery') {\n                    event.preventDefault(); // To prevent form submissions\n                }\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [setOpenPageSearch]);\n    if (api.apiType === API.CONSTS.API) {\n        loadEndpoints = <Endpoints parentClasses={classes} api={api} />;\n    }\n    function getResourcesClassForAPIs(apiType) {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <Operations parentClasses={classes} api={api} />;\n            case 'APIPRODUCT':\n                return <ProductResources parentClasses={classes} api={api} />;\n            case 'WS':\n            case 'WEBSUB':\n            case 'ASYNC':\n            case 'SSE':\n                return <Topics parentClasses={classes} api={api} />;\n            default:\n                return <Resources parentClasses={classes} api={api} />;\n        }\n    }\n\n    if (newApi.apiType === API.CONSTS.APIProduct) {\n        api.type = API.CONSTS.APIProduct;\n    }\n    return (\n        <>\n            <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Overview.Overview.topic.header'\n                    defaultMessage='Overview'\n                />\n            </Typography>\n            {(api.apiType !== API.CONSTS.API || !api.advertiseInfo.advertised) && (\n                <Grid container spacing={12}>\n                    <Grid item xs={12} s={12} md={12} lg={12}>\n                        <CustomizedStepper />\n                    </Grid>\n                </Grid>\n            )}\n            <div className={classes.contentWrapper}>\n                <Paper className={classes.root}>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <MetaData parentClasses={classes} />\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <Configuration parentClasses={classes} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <div className={classes.specialGap}>\n                                <Grid container spacing={4}>\n                                    {\n                                        api.type === 'WEBSUB' ? (\n                                            <Grid item xs={12} md={12} lg={12}>\n                                                <Grid item xs={12} md={12} lg={12}>\n                                                    {getResourcesClassForAPIs(api.type)}\n                                                </Grid>\n                                            </Grid>\n                                        ) : (\n                                            <>\n                                                <Grid item xs={12} md={6} lg={6}>\n                                                    <Grid item xs={12} md={8} lg={8}>\n                                                        {getResourcesClassForAPIs(api.type)}\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={12} md={6} lg={6}>\n                                                    {loadEndpoints}\n                                                </Grid>\n                                            </>\n                                        )\n                                    }\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        </>\n    );\n}\n\nOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(Overview);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport Typography from '@material-ui/core/Typography';\nimport Api from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, marginRight: 5,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n    contentWrapper: {\n        maxHeight: '125px',\n        overflowY: 'auto',\n    },\n    subHeading: {\n        color: theme.palette.primary.dark,\n    },\n});\n\nclass Resources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n        };\n        this.restApi = new Api();\n    }\n\n    componentDidMount() {\n        const { id } = this.props.api;\n        const promisedAPI = this.restApi.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    render() {\n        const { paths } = this.state;\n        if (this.state.notFound) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.resource.not.found'\n                        defaultMessage='resource not found...'\n                    />\n                </div>\n            );\n        }\n        if (!paths) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.loading'\n                        defaultMessage='loading...'\n                    />\n                </div>\n            );\n        }\n        const { classes, parentClasses, api } = this.props;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper}>\n                    { api.type === 'GraphQL' ? (\n                        <Typography id='resources' variant='h5' component='h2' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operations'\n                                defaultMessage='Operation'\n                            />\n                        </Typography>\n                    )\n                        : (\n                            <Typography id='resources' variant='h5' component='h2' className={parentClasses.title}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Resources.resources'\n                                    defaultMessage='Resources'\n                                />\n                            </Typography>\n                        )}\n                </div>\n                <Box p={1}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(paths).map((key) => {\n                            const path = paths[key];\n                            return (\n                                <div key={key} className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {key}\n                                    </Typography>\n                                    {Object.keys(path).map((innerKey) => {\n                                        return CONSTS.HTTP_METHODS.includes(innerKey)\n                                            ? <RenderMethod method={innerKey} /> : null;\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <Link\n                        to={'/apis/' + api.id + '/resources'}\n                        id='resource-more'\n                        aria-labelledby='resource-more resources'\n                    >\n                        <Typography\n                            className={classes.subHeading}\n                            color='primary'\n                            display='inline'\n                            variant='caption'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.ShowMore'\n                                defaultMessage='Show More'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                </Box>\n            </>\n        );\n    }\n}\nResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(Resources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport ApiContext from '../components/ApiContext';\n\nconst styles = (theme) => ({\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n        maxHeight: '250px',\n        overflowY: 'auto',\n    },\n});\n\n/**\n *\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.operationChipColor\n        ? theme.custom.operationChipColor[methodLower]\n        : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.operationChipColor[methodLower]);\n    }\n    return (\n        <Chip\n            label={method}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, fontSize: 9, width: 95,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n/**\n *\n * @param {*} props\n */\nfunction Operations(props) {\n    const { classes, parentClasses } = props;\n    return (\n        <ApiContext.Consumer>\n            {({ api }) => (\n                <>\n                    <div className={parentClasses.titleWrapper}>\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operation'\n                                defaultMessage='Operations'\n                            />\n                        </Typography>\n                    </div>\n                    <div>\n                        <div className={classes.contentWrapper}>\n                            <Table style={{ padding: 20 }}>\n                                {api.operations\n                            && api.operations.length !== 0\n                            && api.operations.map((item) => (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <Typography className={parentClasses.heading} component='p' variant='body1'>\n                                            {item.target}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <RenderMethod method={item.verb} />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </Table>\n                        </div>\n                        <Box py={2}>\n                            <Link to={'/apis/' + api.id + '/operations'} data-testid='show-more-navigate-to-operation'>\n                                <Typography\n                                    className={classes.subHeading}\n                                    color='primary'\n                                    display='inline'\n                                    variant='caption'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Operations.ShowMore'\n                                        defaultMessage='Show More'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </div>\n                </>\n            )}\n        </ApiContext.Consumer>\n    );\n}\n\nOperations.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Operations);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Render method base.\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[methodLower] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[methodLower]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'left',\n        marginBottom: 10,\n        padding: 5,\n    },\n    heading: {\n        marginRight: 20,\n        paddingBottom: 10,\n    },\n    resourceRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 10,\n    },\n};\n\n/**\n * Component to show api product resources in overview tab\n */\nclass ProductResources extends React.PureComponent {\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, parentClasses, api } = this.props;\n        const apiResources = api.apis;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper} style={{ margin: '20px 0 0' }}>\n                    <Typography variant='h5' component='h3' className={parentClasses.title}>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.ProductResources.resources'\n                            defaultMessage='Resources'\n                        />\n                    </Typography>\n                </div>\n                <div className={classes.root}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(apiResources).map((key) => {\n                            const resource = apiResources[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {resource.name + ' : ' + resource.version}\n                                    </Typography>\n                                    {Object.keys(resource.operations).map((innerKey) => {\n                                        const operation = (resource.operations)[innerKey];\n                                        return (\n                                            <div className={classes.resourceRow}>\n                                                <Typography className={classes.heading} variant='body1'>\n                                                    {operation.target}\n                                                </Typography>\n                                                <RenderMethod method={operation.verb} />\n\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\nProductResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ProductResources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter, upperCaseString, lowerCaseString } from 'AppData/stringFormatter';\nimport APIContext from '../components/ApiContext';\nimport Policies from './Policies';\n\nconst HUMAN_READABLE_SCHEMES = {\n    oauth2: 'OAuth2',\n    basic_auth: 'Basic Auth',\n    mutualssl: 'Mutual TLS',\n    api_key: 'API Key',\n};\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Configuration(props) {\n    const { parentClasses } = props;\n    const { api } = useContext(APIContext);\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h3' className={parentClasses.title}>\n                    <FormattedMessage id='Apis.Details.NewOverview.MetaData.config' defaultMessage='Configuration' />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n\n                    {(api.gatewayVendor === 'wso2') && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                {/* Transports */}\n                                <Typography\n                                    id='transports'\n                                    component='p'\n                                    variant='subtitle2'\n                                    className={parentClasses.subtitle}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.transports'\n                                        defaultMessage='Transports'\n                                    />\n                                    <Tooltip\n                                        interactive\n                                        placement='top'\n                                        aria-label='helper text for transports'\n                                        classes={{\n                                            tooltip: parentClasses.htmlTooltip,\n                                        }}\n                                        title={(\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.MetaData.transport.tooltip'\n                                                    defaultMessage={\n                                                        'HTTP is less secure than HTTPS and '\n                                                        + 'makes your API vulnerable to security threats.'\n                                                    }\n                                                />\n                                            </>\n                                        )}\n                                    >\n                                        <Button className={parentClasses.helpButton}>\n                                            <HelpOutline className={parentClasses.helpIcon} />\n                                        </Button>\n                                    </Tooltip>\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.transport && api.transport.length !== 0 && (\n                                        api.transport.map((item, index) => (\n                                            <span key={item}>\n                                                {upperCaseString(item)}\n                                                {api.transport.length !== index + 1 && ', '}\n                                            </span>\n                                        ))\n                                    )}\n                                    {!api.transport && (\n                                        <>\n                                            <Typography\n                                                component='p'\n                                                variant='body1'\n                                                className={parentClasses.notConfigured}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.MetaData.transports.not.set'\n                                                    defaultMessage='-'\n                                                />\n                                            </Typography>\n                                        </>\n                                    )}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    { (api.gatewayVendor === 'solace') && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.solace.transports'\n                                        defaultMessage='Available Protocols'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                {api.solaceTransportProtocols\n                                && api.solaceTransportProtocols.map((protocol) => (\n                                    <Chip\n                                        key={protocol}\n                                        label={upperCaseString(protocol)}\n                                        style={{\n                                            'font-size': 13,\n                                            height: 20,\n                                            marginRight: 5,\n                                        }}\n                                    />\n\n                                )) }\n                            </Grid>\n                        </>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* API Security */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.securityScheme'\n                                defaultMessage='API Security'\n                            />\n                            <Tooltip\n                                interactive\n                                placement='top'\n                                aria-label='helper text for API Security'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.tooltip'\n                                            defaultMessage='OAuth2 is used as the default security schema.'\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.securityScheme && api.securityScheme.length !== 0 && (\n                                <>\n                                    {api.securityScheme\n                                        .filter((item) => !item.includes('mandatory'))\n                                        .map((filteredItem) => HUMAN_READABLE_SCHEMES[filteredItem])\n                                        .join(' , ')}\n                                </>\n                            )}\n                            {!api.securityScheme && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Access Control */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.access.control'\n                                defaultMessage='Access Control'\n                            />\n                            <Tooltip\n                                interactive\n                                placement='top'\n                                aria-label='helper text for Access Control'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.all.tooltip'\n                                            defaultMessage={\n                                                'All : The API is viewable, '\n                                                + 'modifiable by all the publishers and creators.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles : The API can be viewable and'\n                                                + ' modifiable by only specific publishers and creators '\n                                                + 'with the roles that you specify'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.accessControl && (\n                                <>\n                                    {capitalizeFirstLetter(lowerCaseString(api.accessControl))}\n                                </>\n                            )}\n                            {api.accessControl === 'RESTRICTED' && ' ( Visible to '}\n                            {api.accessControl === 'RESTRICTED' && api.accessControlRoles.join()}\n                            {api.accessControl === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* workflowStatus */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.workflow.status'\n                                defaultMessage='Workflow Status'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.workflowStatus && <>{api.workflowStatus}</>}\n                            {!api.workflowStatus && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.workflowStatus.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Visibility */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.visibility.store'\n                                defaultMessage='Visibility on Developer Portal'\n                            />\n                            <Tooltip\n                                placement='top'\n                                interactive\n                                aria-label='helper text for Visibility on Developer Portal'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.all.tooltip'\n                                            defaultMessage={\n                                                'Public: The API is accessible to everyone and can be advertised '\n                                                + 'in multiple developer portals - a central developer portal '\n                                                + 'and/or non-WSO2 developer portals.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.res.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles: The API is visible only to '\n                                                + 'specific user roles in the tenant Developer Portal that you specify.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {(api.visibility && api.visibility === 'PRIVATE')\n                                ? (\n                                    <>\n                                        Visible to my domain\n                                    </>\n                                )\n                                : (\n                                    <>\n                                        {capitalizeFirstLetter(lowerCaseString(api.visibility))}\n                                    </>\n                                )}\n                            {api.visibility === 'RESTRICTED' && ' ( Visible to '}\n                            {api.visibility === 'RESTRICTED' && api.visibleRoles.join()}\n                            {api.visibility === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    {(api.gatewayVendor === 'wso2') && (<Policies parentClasses={parentClasses} />)}\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.tags'\n                                        defaultMessage='Tags'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                {api.tags\n                                    && api.tags.map((tag) => (\n                                        <Chip\n                                            key={tag}\n                                            label={tag}\n                                            style={{\n                                                'font-size': 13,\n                                                height: 20,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                    ))}\n                                {api.tags.length === 0 && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.tags.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nConfiguration.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default Configuration;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Policies(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Policies.business.plans'\n                        defaultMessage='Business Plans:'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                {/* Throttling Policies */}\n                <Typography component='p' variant='body1'>\n                    {api.policies\n                    && api.policies.length !== 0\n                    && api.policies.map((item, index) => (\n                        <span>\n                            {item}\n                            {api.policies.length !== index + 1 && ', '}\n                            {' '}\n                        </span>\n                    ))}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nPolicies.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Policies);\n","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext, usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport grey from '@material-ui/core/colors/grey';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport AuthManager from 'AppData/AuthManager';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\nimport API from 'AppData/api';\n\nconst ColorlibConnector = withStyles((theme) => {\n    const completedColor = theme.custom.apis.overview.stepper.completed || theme.palette.success.main;\n    const activeColor = theme.custom.apis.overview.stepper.active || theme.palette.info.main;\n    return {\n        alternativeLabel: {\n            top: 22,\n        },\n        active: {\n            '& $line': {\n                backgroundImage:\n                    `linear-gradient(to left, ${activeColor} 50%, ${completedColor} 50%)`,\n            },\n        },\n        completed: {\n            '& $line': {\n                backgroundImage:\n                    `linear-gradient( ${completedColor}, ${completedColor})`,\n            },\n        },\n        line: {\n            height: 3,\n            border: 0,\n            backgroundColor: '#eaeaf0',\n            borderRadius: 1,\n        },\n        viewInStoreLauncher: {\n            color: theme.palette.primary.dark,\n        },\n    };\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 56,\n        height: 56,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        border: '6px solid #E2E2E2',\n    },\n    active: {\n        backgroundColor: theme.custom.apis.overview.stepper.active || theme.palette.info.main,\n        border: '6px solid #E2E2E2',\n    },\n    completed: {\n        backgroundColor: theme.custom.apis.overview.stepper.completed || theme.palette.success.main,\n        border: '6px solid #E2E2E2',\n    },\n}));\n\n/**\n *\n * @param {*} props\n * @returns\n */\nfunction ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const {\n        active, completed, forceComplete, icon: step,\n    } = props;\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n                [classes.completed]: completed || forceComplete.includes(step),\n            })}\n        />\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    iconTrue: {\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        backgroundColor: theme.custom.apis.overview.stepper.completed || theme.palette.success.main,\n        zIndex: 1,\n        color: '#fff',\n        width: 15,\n        height: 15,\n        borderRadius: '50%',\n    },\n    iconFalse: {\n        color: '#fff',\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        backgroundColor: grey[500],\n        zIndex: 1,\n        width: 15,\n        height: 15,\n        borderRadius: '50%',\n    },\n    pageLinks: {\n        display: 'flex',\n    },\n    disabledLink: {\n        pointerEvents: 'none',\n        color: theme.palette.text.primary,\n    },\n    textLink: {\n        color: '#0060B6',\n        textDecoration: 'none',\n    },\n}));\n\n/**\n *\n * @returns\n */\nexport default function CustomizedStepper() {\n    const classes = useStyles();\n    const [api, updateAPI] = useAPI();\n    const [isUpdating, setUpdating] = useState(false);\n    const [deploymentsAvailable, setDeploymentsAvailable] = useState(false);\n    const isPrototypedAvailable = api.apiType !== API.CONSTS.APIProduct && api.endpointConfig !== null\n    && api.endpointConfig.implementation_status === 'prototyped';\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n    const lifecycleState = api.isAPIProduct() ? api.state : api.lifeCycleStatus;\n    const isPublished = lifecycleState === 'PUBLISHED';\n    const { tenantList } = useContext(ApiContext);\n    const { user } = useAppContext();\n    const { data: settings } = usePublisherSettings();\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    const securityScheme = [...api.securityScheme];\n    const isMutualSslOnly = securityScheme.length === 2 && securityScheme.includes('mutualssl')\n    && securityScheme.includes('mutualssl_mandatory');\n    let devportalUrl = settings ? `${settings.devportalUrl}/apis/${api.id}/overview` : '';\n    const intl = useIntl();\n    // TODO: tmkasun need to handle is loading\n    if (tenantList && tenantList.length > 0) {\n        // TODO: tmkasun need to handle is loading\n        devportalUrl = settings ? `${settings.devportalUrl}/apis/${api.id}/overview?tenant=${tenantDomain}` : '';\n    }\n    const steps = (api.isWebSocket() || api.isGraphql() || api.isAsyncAPI())\n        ? ['Develop', 'Deploy', 'Publish'] : ['Develop', 'Deploy', 'Test', 'Publish'];\n    const forceComplete = [];\n    if (isPublished) {\n        forceComplete.push(steps.indexOf('Publish') + 1);\n    }\n    let activeStep = 0;\n    if (api && (api.type === 'WEBSUB' || isEndpointAvailable)\n        && (isTierAvailable || isMutualSslOnly) && !deploymentsAvailable) {\n        activeStep = 1;\n    } else if ((api && !isEndpointAvailable && api.type !== 'WEBSUB')\n        || (api && !isMutualSslOnly && !isTierAvailable)) {\n        activeStep = 0;\n    } else if (api && (isEndpointAvailable || api.type === 'WEBSUB') && (isTierAvailable || isMutualSslOnly)\n        && deploymentsAvailable && (!isPublished && lifecycleState !== 'PROTOTYPED')) {\n        activeStep = steps.length - 1;\n    } else if ((isPublished || lifecycleState === 'PROTOTYPED') && api\n        && (isEndpointAvailable || api.type === 'WEBSUB' || isPrototypedAvailable)\n        && (isTierAvailable || isMutualSslOnly) && deploymentsAvailable) {\n        activeStep = steps.length;\n    }\n\n    useEffect(() => {\n        api.getRevisionsWithEnv(api.isRevision ? api.revisionedApiId : api.id).then((result) => {\n            setDeploymentsAvailable(result.body.count > 0);\n        });\n    }, []);\n\n    /**\n * Update the LifeCycle state of the API\n *\n */\n    function updateLCStateOfAPI(apiId, state) {\n        setUpdating(true);\n        const promisedUpdate = api.updateLcState(apiId, state);\n        promisedUpdate\n            .then(() => {\n                updateAPI()\n                    .then()\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error('Something went wrong while updating the API');\n                        }\n                        console.error(error);\n                    });\n                Alert.info('Lifecycle state updated successfully');\n            })\n            .finally(() => setUpdating(false))\n            .catch((errorResponse) => {\n                console.log(errorResponse);\n                Alert.error(JSON.stringify(errorResponse.message));\n            });\n    }\n\n    /**\n     * This function renders the final lifecycle state\n     * @param {*} state\n     */\n    function finalLifecycleState(state) {\n        switch (state) {\n            case 'PUBLISHED':\n                return (\n                    <>\n                        <Grid\n                            container\n                            direction='row'\n                            alignItems='center'\n                            justify='center'\n                        >\n                            <Grid item>\n                                <CheckIcon className={classes.iconTrue} />\n                            </Grid>\n                            <Box ml={1}>\n                                <Grid item>\n                                    <Typography variant='h6' component='div'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.CustomizedStepper.publish'\n                                            defaultMessage=' Published'\n                                        />\n                                        <Box display='inline' pl={0.4} color='text.secondary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.publish.current.api'\n                                                defaultMessage=' (Current API)'\n                                            />\n                                        </Box>\n                                    </Typography>\n                                </Grid>\n                            </Box>\n                        </Grid>\n                        <Box mt={1} ml={2}>\n                            <a\n                                target='_blank'\n                                className={classes.textLink}\n                                rel='noopener noreferrer'\n                                href={devportalUrl}\n                            >\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='center'\n                                    justify='center'\n                                >\n                                    <Grid item>\n                                        <Typography variant='h6' display='inline'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.view.devportal'\n                                                defaultMessage='View in devportal'\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Box ml={1}>\n                                            <LaunchIcon\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                            </a>\n                        </Box>\n                    </>\n                );\n            case 'PROTOTYPED':\n                return (\n                    <Typography variant='h6' component='div'>\n                        <b>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.CustomizedStepper.prototyped'\n                                defaultMessage='Pre-Released'\n                            />\n                        </b>\n                    </Typography>\n                );\n            case 'BLOCKED':\n                return (\n                    <Typography variant='h6' component='div'>\n                        <b>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.CustomizedStepper.blocked'\n                                defaultMessage='Blocked'\n                            />\n                        </b>\n                    </Typography>\n                );\n            case 'DEPRECATED':\n                return (\n                    <Typography variant='h6' component='div'>\n                        <b>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.CustomizedStepper.deprecated'\n                                defaultMessage='Deprecated'\n                            />\n                        </b>\n                    </Typography>\n                );\n            case 'RETIRED':\n                return (\n                    <Typography variant='h6' component='div'>\n                        <b>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.CustomizedStepper.retired'\n                                defaultMessage='Retired'\n                            />\n                        </b>\n                    </Typography>\n                );\n            default:\n                return (\n                    <>\n                        {isPrototypedAvailable ? (\n                            <Button\n                                size='small'\n                                variant='contained'\n                                color='primary'\n                                onClick={() => updateLCStateOfAPI(api.id, 'Deploy as a Prototype')}\n                                disabled={api.workflowStatus === 'CREATED'\n                                    || AuthManager.isNotPublisher()\n                                    || !deploymentsAvailable}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.CustomizedStepper.btn.prototyped'\n                                    defaultMessage='Pre-Released'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        ) : (\n                            <Button\n                                size='small'\n                                variant='contained'\n                                color='primary'\n                                data-testid='publish-state-button'\n                                onClick={() => updateLCStateOfAPI(api.id, 'Publish')}\n                                disabled={((api.type !== 'WEBSUB' && !isEndpointAvailable)\n                                    || (!isMutualSslOnly && !isTierAvailable))\n                                    || !deploymentsAvailable\n                                    || api.isRevision || AuthManager.isNotPublisher()\n                                    || api.workflowStatus === 'CREATED'}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.CustomizedStepper.btn.publish'\n                                    defaultMessage='Publish'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        )}\n                        {api.workflowStatus === 'CREATED' && (\n                            <Typography variant='caption' color='error'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.CustomizedStepper.pending'\n                                    defaultMessage='The request is pending'\n                                />\n                            </Typography>\n                        )}\n                    </>\n                );\n        }\n    }\n    const isTestLinkDisabled = lifecycleState === 'RETIERD' || !deploymentsAvailable\n    || (!api.isAPIProduct() && !isEndpointAvailable)\n    || (!isMutualSslOnly && !isTierAvailable)\n    || (api.type !== 'HTTP' && api.type !== 'SOAP' && api.type !== 'APIPRODUCT');\n    const isDeployLinkDisabled = (((api.type !== 'WEBSUB' && !isEndpointAvailable))\n    || (!isMutualSslOnly && !isTierAvailable)\n    || api.workflowStatus === 'CREATED' || lifecycleState === 'RETIRED');\n    let deployLinkToolTipTitle = '';\n    if (lifecycleState === 'RETIRED') {\n        deployLinkToolTipTitle = intl.formatMessage({\n            id: 'Apis.Details.Overview.CustomizedStepper.ToolTip.DeploymentAvailable',\n            defaultMessage: 'Cannot deploy retired APIs',\n        });\n    } else if (!deploymentsAvailable) { \n        deployLinkToolTipTitle = intl.formatMessage({\n            id: 'Apis.Details.Overview.CustomizedStepper.ToolTip.DeploymentUnavailable',\n            defaultMessage: 'Deploy a revision of this API to the Gateway',\n        });\n    }\n\n    return (\n        <div id='itest-overview-api-flow' className={classes.root}>\n            <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel StepIconComponent={(props) => (\n                            <ColorlibStepIcon\n                                {...props}\n                                forceComplete={forceComplete}\n                            />\n                        )}\n                        >\n                            {label === 'Develop' && (\n                                <div>\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        justify='center'\n                                    >\n                                        <Grid item>\n                                            {api ? (\n                                                <CheckIcon className={classes.iconTrue} />\n                                            ) : (\n                                                <CloseIcon className={classes.iconFalse} />\n                                            )}\n                                        </Grid>\n                                        <Box ml={1} mb={1}>\n                                            <Grid>\n                                                <Typography variant='h6'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Overview.CustomizedStepper.Develop'\n                                                        defaultMessage=' Develop'\n                                                    />\n                                                </Typography>\n                                            </Grid>\n                                        </Box>\n                                    </Grid>\n                                    {api.type !== 'WEBSUB' && api.type !== 'APIPRODUCT' && (\n                                        <Box ml={3}>\n                                            <Grid\n                                                container\n                                                direction='row'\n                                                justify='center'\n                                                style={{ marginLeft: '2px' }}\n                                            >\n                                                <Grid item>\n                                                    {isEndpointAvailable ? (\n                                                        <CheckIcon className={classes.iconTrue} />\n                                                    ) : (\n                                                        <CloseIcon className={classes.iconFalse} />\n                                                    )}\n                                                </Grid>\n                                                <Box ml={1} mb={1}>\n                                                    <Grid item>\n                                                        <Link\n                                                            underline='none'\n                                                            className={classes.pageLinks}\n                                                            component={RouterLink}\n                                                            to={'/apis/' + api.id + '/endpoints'}\n                                                        >\n                                                            <Typography variant='h6'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Overview.\n                                                                    CustomizedStepper.Endpoint'\n                                                                    defaultMessage=' Endpoint'\n                                                                />\n                                                            </Typography>\n                                                            <Box ml={1}>\n                                                                <LinkIcon\n                                                                    color='primary'\n                                                                    fontSize='small'\n                                                                />\n                                                            </Box>\n                                                        </Link>\n                                                    </Grid>\n                                                </Box>\n                                            </Grid>\n                                        </Box>\n                                    )}\n                                    {(api.gatewayVendor === 'wso2') && (\n                                        <Box ml={6}>\n                                            <Grid\n                                                container\n                                                direction='row'\n                                                justify='center'\n                                                style={{ marginLeft: '2px' }}\n                                            >\n                                                <Grid item>\n                                                    {isTierAvailable ? (\n                                                        <CheckIcon className={classes.iconTrue} />\n                                                    ) : (\n                                                        <CloseIcon className={classes.iconFalse} />\n                                                    )}\n                                                </Grid>\n                                                <Box ml={1}>\n                                                    <Grid item>\n                                                        <Link\n                                                            underline='none'\n                                                            component={RouterLink}\n                                                            className={classes.pageLinks}\n                                                            to={api.isAPIProduct()\n                                                                ? '/api-products/' + api.id + '/subscriptions'\n                                                                : '/apis/' + api.id + '/subscriptions'}\n                                                        >\n                                                            <Typography variant='h6'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Overview.CustomizedStepper.Tier'\n                                                                    defaultMessage=' Business Plan'\n                                                                />\n                                                            </Typography>\n                                                            <Box ml={1}>\n                                                                <LinkIcon\n                                                                    color='primary'\n                                                                    fontSize='small'\n                                                                />\n                                                            </Box>\n                                                        </Link>\n                                                    </Grid>\n                                                </Box>\n                                            </Grid>\n                                        </Box>\n                                    )}\n                                </div>\n                            )}\n                            {label === 'Deploy' && (\n                                <Tooltip\n                                    title={deployLinkToolTipTitle}\n                                    placement='bottom'\n                                >\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        alignItems='center'\n                                        justify='center'\n                                    >\n                                        <Box mb={1}>\n                                            <Grid item>\n                                                {deploymentsAvailable ? (\n                                                    <CheckIcon className={classes.iconTrue} />\n                                                ) : (\n                                                    <CloseIcon className={classes.iconFalse} />\n                                                )}\n                                            </Grid>\n                                        </Box>\n                                        <Box ml={1} mb={1}>\n                                            <Grid item>\n                                                <Link\n                                                    underline='none'\n                                                    className={clsx(classes.pageLinks, {\n                                                        [classes.disabledLink]: isDeployLinkDisabled,\n                                                    })}\n                                                    component={RouterLink}\n                                                    to={api.isAPIProduct()\n                                                        ? '/api-products/' + api.id + '/deployments'\n                                                        : '/apis/' + api.id + '/deployments'}\n                                                >\n                                                    <Typography variant='h6'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Overview.CustomizedStepper.Deploy'\n                                                            defaultMessage=' Deploy'\n                                                        />\n                                                    </Typography>\n                                                    <Box ml={1}>\n                                                        <LinkIcon\n                                                            color='default'\n                                                            fontSize='small'\n                                                        />\n                                                    </Box>\n                                                </Link>\n                                            </Grid>\n                                        </Box>\n                                    </Grid>\n                                </Tooltip>\n                            )}\n                            {label === 'Test' && (\n                                <Tooltip\n                                    title={lifecycleState === 'RETIRED' ? 'Cannot use test option while API'\n                                        + ' is in retired state' : ''}\n                                    placement='bottom'\n                                >\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        alignItems='center'\n                                        justify='center'\n                                    >\n                                        <Box ml={1} mb={1}>\n                                            <Grid item>\n                                                <Link\n                                                    className={clsx(classes.pageLinks, {\n                                                        [classes.disabledLink]: isTestLinkDisabled,\n                                                    })}\n                                                    underline='none'\n                                                    component={RouterLink}\n                                                    to={api.isAPIProduct()\n                                                        ? '/api-products/' + api.id + '/test-console'\n                                                        : '/apis/' + api.id + '/test-console'}\n                                                >\n                                                    <Typography variant='h6'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Overview.CustomizedStepper.Test'\n                                                            defaultMessage=' Test'\n                                                        />\n                                                    </Typography>\n                                                    <Box ml={1}>\n                                                        <LinkIcon\n                                                            color='default'\n                                                            fontSize='small'\n                                                        />\n                                                    </Box>\n                                                </Link>\n                                            </Grid>\n                                        </Box>\n                                    </Grid>\n                                </Tooltip>\n                            )}\n                            {label === 'Publish' && (\n                                <>\n                                    {finalLifecycleState(lifecycleState)}\n                                </>\n                            )}\n                        </StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport ReactMarkdown from 'react-markdown';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport BusinessInformation from './BusinessInformation';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction MetaData(props) {\n    const { parentClasses } = props;\n    const [api] = useAPI();\n\n    return (\n        <>\n            <Typography variant='h5' component='h2' className={parentClasses.title}>\n                {api.type === 'WS' ? (\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.MetaData.metadata'\n                        defaultMessage='Metadata'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.MetaData.context:'\n                        defaultMessage='Context:'\n                    />\n                )}\n            </Typography>\n            <Box p={1}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.description'\n                                defaultMessage='Description'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.description\n                            && (\n                                <ReactMarkdown>{capitalizeFirstLetter(api.description)}</ReactMarkdown>\n                            )}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.description\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.description.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Provider */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.provider'\n                                defaultMessage='Provider'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.provider && <>{api.provider}</>}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.context:'\n                                defaultMessage='Context:'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8} style={{ wordBreak: 'break-all' }}>\n                        <Typography component='p' variant='body1'>\n                            {api.context && <>{api.context}</>}\n                        </Typography>\n                    </Grid>\n                    {/* Version */}\n                    {api.apiType === API.CONSTS.API && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.version'\n                                        defaultMessage='Version'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.version && <>{api.version}</>}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    {/* Type */}\n                    {api.apiType === API.CONSTS.APIProduct ? null : (api.gatewayVendor === 'wso2') && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <>\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                        className={parentClasses.subtitle}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.type:'\n                                            defaultMessage='Type:'\n                                        />\n                                    </Typography>\n                                </>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.type && <>{api.type === 'WS' ? 'WebSocket' : api.type}</>}\n                                    {!api.type\n                                        && (\n                                            <>\n                                                <Typography\n                                                    component='p'\n                                                    variant='body1'\n                                                    className={parentClasses.notConfigured}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewOverview.MetaData.type.not.set'\n                                                        defaultMessage='-'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Created Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.created.time'\n                                defaultMessage='Created Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.createdTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        // eslint-disable-next-line\n                                        title={moment(parseInt(api.createdTime)).calendar()}\n                                        interactive\n                                        placement='top-start'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {// eslint-disable-next-line\n                                            capitalizeFirstLetter(moment(parseInt(api.createdTime)).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.createdTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.createdTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Last Updated Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.last.updated.time'\n                                defaultMessage='Last Updated Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.lastUpdatedTimestamp\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(parseInt(api.lastUpdatedTimestamp, 10)).calendar()}\n                                        interactive\n                                        placement='top-start'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter\n                                            (moment(parseInt(api.lastUpdatedTimestamp, 10)).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.lastUpdatedTimestamp\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.lastUpdatedTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <BusinessInformation parentClasses={parentClasses} />\n                    {/* Original developer portal URL for third party APIs */}\n                    {api.apiType === API.CONSTS.API && api.advertiseInfo.advertised && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.originalDevPortalUrl'\n                                        defaultMessage='Original Developer Portal URL'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.advertiseInfo.originalDevPortalUrl\n                                        && <>{api.advertiseInfo.originalDevPortalUrl}</>}\n                                </Typography>\n                                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                    {!api.advertiseInfo.originalDevPortalUrl && (\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.originalDevPortalUrl.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    )}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nMetaData.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default MetaData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction BusinessInformation(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Business Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.business.owner'\n                        defaultMessage='Business Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.businessOwner && (\n                        <>{api.businessInformation.businessOwner}</>\n                    )}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.businessOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.business.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Technical Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.technical.owner'\n                        defaultMessage='Technical Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.technicalOwner\n                        && <>{api.businessInformation.technicalOwner}</>}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.technicalOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.technical.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nBusinessInformation.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(BusinessInformation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst showEndpoint = (api, type) => {\n    if (api.advertiseInfo && api.advertiseInfo.advertised) {\n        if (type === 'prod') {\n            return api.advertiseInfo.apiExternalProductionEndpoint;\n        }\n        if (type === 'sand') {\n            return api.advertiseInfo.apiExternalSandboxEndpoint;\n        }\n    } else if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { parentClasses, api } = props;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n    const productionEndpointSecurity = api.endpointConfig && api.endpointConfig.endpoint_security\n        && api.endpointConfig.endpoint_security.production.type;\n    const sandboxEndpointSecurity = api.endpointConfig && api.endpointConfig.endpoint_security\n        && api.endpointConfig.endpoint_security.sandbox.type;\n    const authTypes = {\n        NONE: 'None',\n        BASIC: 'Basic Auth',\n        DIGEST: 'Digest Auth',\n        OAUTH: 'OAuth2',\n    };\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h2' className={parentClasses.title} data-testid='endpoints'>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Endpoints.endpoints'\n                        defaultMessage='Endpoints'\n                    />\n                </Typography>\n            </div>\n            <Box p={1}>\n                {(!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Production Endpoint (TODO) fix the endpoint\n                                                info when it's available with the api object */}\n                            { !isPrototypedAvailable ? (\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.production.endpoint'\n                                        defaultMessage='Production Endpoint'\n                                        data-testid='production-endpoint'\n                                    />\n                                </Typography>\n                            )\n                                : (\n                                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.prototype.endpoint'\n                                            defaultMessage='Prototype Endpoint'\n                                        />\n                                    </Typography>\n                                )}\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Tooltip\n                                placement='top'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                interactive\n                                title={\n                                    showEndpoint(api, 'prod')\n                                    && <>{showEndpoint(api, 'prod')}</>\n                                }\n                            >\n                                <Typography component='p' variant='body1' className={parentClasses.url}>\n                                    {showEndpoint(api, 'prod')\n                                    && <>{showEndpoint(api, 'prod')}</>}\n                                </Typography>\n                            </Tooltip>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!showEndpoint(api, 'prod') && (\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </>\n                                )}\n                            </Typography>\n                        </Grid>\n                        {!isPrototypedAvailable && (\n                            <Grid item xs={12} md={6} lg={4}>\n                                {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                    it's available with the api object */}\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.sandbox.endpoint'\n                                        defaultMessage='Sandbox Endpoint'\n                                        data-testid='sandbox-endpoint'\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n\n                        {!isPrototypedAvailable && (\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Tooltip\n                                    placement='top'\n                                    classes={{\n                                        tooltip: parentClasses.htmlTooltip,\n                                    }}\n                                    interactive\n                                    title={\n                                        showEndpoint(api, 'sand')\n                                        && <>{showEndpoint(api, 'sand')}</>\n                                    }\n                                >\n                                    <Typography component='p' variant='body1' className={parentClasses.url}>\n                                        {showEndpoint(api, 'sand')\n                                        && <>{showEndpoint(api, 'sand')}</>}\n                                    </Typography>\n                                </Tooltip>\n                                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                    {!showEndpoint(api, 'sand') && (\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.Endpoints.sandbox.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </>\n                                    )}\n                                </Typography>\n                            </Grid>\n                        )}\n                        {isPrototypedAvailable ? (\n                            <>\n                                <Grid item xs={12} md={6} lg={4}>\n                                    {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                        it's available with the api object */}\n                                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.endpoint.security'\n                                            defaultMessage='Endpoint Security'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={8}>\n                                    <Typography component='p' variant='body1'>\n                                        {productionEndpointSecurity && <>{authTypes[productionEndpointSecurity]}</>}\n                                    </Typography>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        {!productionEndpointSecurity\n                                        && (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.security.not.set'\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Grid>\n                            </>\n                        ) : (\n                            <>\n                                <Grid item xs={12} md={6} lg={4}>\n                                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.production.endpoint.security'\n                                            defaultMessage='Production Endpoint Security'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={8}>\n                                    <Typography component='p' variant='body1'>\n                                        {productionEndpointSecurity && <>{authTypes[productionEndpointSecurity]}</>}\n                                    </Typography>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        {!productionEndpointSecurity\n                                        && (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.production.security.not.set'\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={4}>\n                                    <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.sandbox.endpoint.security'\n                                            defaultMessage='Sandbox Endpoint Security'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={8}>\n                                    <Typography component='p' variant='body1'>\n                                        {sandboxEndpointSecurity && <>{authTypes[sandboxEndpointSecurity]}</>}\n                                    </Typography>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        {!sandboxEndpointSecurity\n                                        && (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.sandbox.security.not.set'\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Grid>\n                            </>\n                        )}\n                    </Grid>\n                )}\n                {api.advertiseInfo && api.advertiseInfo.advertised && (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6} lg={4}>\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.external.production.endpoint'\n                                    defaultMessage='External Production Endpoint'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Tooltip\n                                placement='top'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                interactive\n                                title={\n                                    showEndpoint(api, 'prod')\n                                    && <>{showEndpoint(api, 'prod')}</>\n                                }\n                            >\n                                <Typography component='p' variant='body1' className={parentClasses.url}>\n                                    {showEndpoint(api, 'prod')\n                                    && <>{showEndpoint(api, 'prod')}</>}\n                                </Typography>\n                            </Tooltip>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!showEndpoint(api, 'prod') && (\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.sandbox.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </>\n                                )}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={4}>\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.external.sandbox.endpoint'\n                                    defaultMessage='External Sandbox Endpoint'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Tooltip\n                                placement='top'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                interactive\n                                title={\n                                    showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>\n                                }\n                            >\n                                <Typography component='p' variant='body1' className={parentClasses.url}>\n                                    {showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>}\n                                </Typography>\n                            </Tooltip>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!showEndpoint(api, 'sand') && (\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.sandbox.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </>\n                                )}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                )}\n            </Box>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport Api from 'AppData/api';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n    contentWrapper: {\n        maxHeight: '125px',\n        overflowY: 'auto',\n    },\n};\n\nfunction VerbElement(props) {\n    const {\n        verb,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customButton: {\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    return (\n        <Button disableFocusRipple variant='outlined' className={classes.customButton} size='small'>\n            {verb.toUpperCase()}\n        </Button>\n    );\n}\n\n/**\n * Topics component\n */\nclass Topics extends React.Component {\n    /**\n     *\n     * @param {*} props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            topics: [],\n        };\n        this.restApi = new Api();\n    }\n\n    /**\n     *\n     */\n    componentDidMount() {\n        this.restApi.getAsyncAPIDefinition(this.props.api.id)\n            .then((response) => {\n                const topics = [];\n                Object.entries(response.body.channels).forEach(([name, topic]) => {\n                    if (topic.subscribe) {\n                        topics.push({ name, type: 'subscribe' });\n                    }\n\n                    if (topic.publish) {\n                        topics.push({ name, type: 'publish' });\n                    }\n                });\n                this.setState({ topics });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    /**\n     *\n     */\n    render() {\n        if (this.state.notFound) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.resource.not.found'\n                        defaultMessage='resource not found...'\n                    />\n                </div>\n            );\n        }\n        const { classes, parentClasses, api } = this.props;\n\n        return (\n            <>\n                <div className={parentClasses.titleWrapper}>\n                    <Typography variant='h5' component='h3' className={parentClasses.title}>\n                        <FormattedMessage\n                            id='Apis.Details.NewOverview.async.api.topics'\n                            defaultMessage='Topics'\n                        />\n                    </Typography>\n                </div>\n                <Box p={1}>\n                    <div>\n                        {\n                            this.state.topics.map((topic) => {\n                                return (\n                                    <div className={classes.root}>\n                                        <Grid container spacing={1}>\n                                            <Grid item xs={12}>\n                                                <Grid container direction='row' spacing={1}>\n                                                    <Grid item>\n                                                        <VerbElement verb={topic.type.substr(0, 3)} />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.heading} variant='body1'>\n                                                            {topic.name}\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                    <Link to={'/apis/' + api.id + '/topics'}>\n                        <Typography\n                            className={classes.subHeading}\n                            color='primary'\n                            display='inline'\n                            variant='caption'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.ShowMore'\n                                defaultMessage='Show More'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                </Box>\n            </>\n        );\n    }\n}\nTopics.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(Topics);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer,\n    useContext,\n    useState,\n    useMemo,\n    useEffect,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CONSTS from 'AppData/Constants';\nimport Alert from 'AppComponents/Shared/Alert';\n\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport UpdateWithoutDetails from 'AppComponents/Apis/Details/Configuration/components/UpdateWithoutDetails';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport { isRestricted } from 'AppData/AuthManager';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport DefaultVersion from './components/DefaultVersion';\nimport DescriptionEditor from './components/DescriptionEditor';\nimport AccessControl from './components/AccessControl';\nimport AdvertiseInfo from './components/AdvertiseInfo';\nimport StoreVisibility from './components/StoreVisibility';\nimport Tags from './components/Tags';\nimport Social from './components/Social';\nimport APICategories from './components/APICategories';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    btnSpacing: {\n        marginRight: theme.spacing(1),\n    },\n    tierList: {\n        marginLeft: theme.spacing(1),\n        fontFamily: theme.typography.fontFamily,\n    },\n    dialogTitle: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const copiedConfig = {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        transport: [...api.transport],\n        wsdlUrl: api.wsdlUrl,\n        securityScheme: [...api.securityScheme],\n        categories: [...api.categories],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n        additionalProperties: [...api.additionalProperties],\n        type: api.type,\n        policies: [...api.policies],\n        endpointConfig: api.endpointConfig,\n    };\n    if (api.advertiseInfo) {\n        copiedConfig.advertiseInfo = {\n            advertised: api.advertiseInfo.advertised,\n            apiExternalProductionEndpoint: api.advertiseInfo.apiExternalProductionEndpoint,\n            apiExternalSandboxEndpoint: api.advertiseInfo.apiExternalSandboxEndpoint,\n            originalDevPortalUrl: api.advertiseInfo.originalDevPortalUrl,\n            apiOwner: api.advertiseInfo.apiOwner,\n            vendor: api.advertiseInfo.vendor,\n        }\n    }\n    return copiedConfig;\n}\n\n/**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\nfunction configReducer(state, configAction) {\n    const { action, value } = configAction;\n    const nextState = copyAPIConfig(state);\n    switch (action) {\n        case 'description':\n        case 'isDefaultVersion':\n        case 'authorizationHeader':\n        case 'responseCachingEnabled':\n        case 'cacheTimeout':\n        case 'enableSchemaValidation':\n        case 'maxTps':\n        case 'categories':\n        case 'tags':\n            nextState[action] = value;\n            return nextState;\n        case 'accessControl':\n            nextState[action] = value;\n            if (value === 'NONE') {\n                nextState.accessControlRoles = [];\n            }\n            return nextState;\n        case 'accessControlRoles':\n            return { ...copyAPIConfig(state), [action]: value };\n        case 'visibleRoles':\n            return { ...copyAPIConfig(state), [action]: value };\n        case 'github_repo':\n        case 'slack_url': {\n            const targetProperty = nextState.additionalProperties.find((property) => property.name === action);\n            const updatedProperty = {\n                name: action,\n                value,\n                display: true,\n            };\n            if (targetProperty) {\n                nextState.additionalProperties = [\n                    ...nextState.additionalProperties.filter((property) => property.name !== action), updatedProperty];\n            } else {\n                nextState.additionalProperties.push(updatedProperty);\n            }\n            return nextState;\n        }\n        case 'advertised':\n        case 'apiExternalProductionEndpoint':\n        case 'apiExternalSandboxEndpoint':\n        case 'originalDevPortalUrl':\n            if (nextState.advertiseInfo) {\n                nextState.advertiseInfo[action] = value;\n            }\n            return nextState;\n        case 'endpointConfig':\n            return { ...state, [action]: value };\n        case 'policies':\n            return { ...state, [action]: value };\n        case 'visibility':\n            if (nextState[action] !== value && value !== 'RESTRICTED') {\n                nextState.visibleRoles = [];\n            }\n            nextState[action] = value;\n            return nextState;\n        default:\n            return state;\n    }\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DesignConfigurations() {\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [errorInAccessRoles, setErrorInAccessRoles] = useState(false);\n    const [errorInRoleVisibility, setErrorInRoleVisibility] = useState(false);\n    const [errorInTags, setErrorInTags] = useState(false);\n    const [errorInExternalEndpoints, setErrorInExternalEndpoints] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n    const [descriptionType, setDescriptionType] = useState('');\n    const [overview, setOverview] = useState('');\n    const [overviewDocument, setOverviewDocument] = useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const [slackURLProperty, githubURLProperty] = useMemo(() => [\n        apiConfig.additionalProperties.find((prop) => prop.name === 'slack_url'),\n        apiConfig.additionalProperties.find((prop) => prop.name === 'github_repo'),\n    ],\n    [apiConfig.additionalProperties]);\n    const invalidTagsExist = apiConfig.tags.find((tag) => {\n        return (/([~!@#;%^&*+=|\\\\<>\"'/,])/.test(tag)) || (tag.length > 30);\n    });\n    const handleChange = (event) => {\n        const type = event.target.value;\n        if (type === CONSTS.DESCRIPTION_TYPES.DESCRIPTION) {\n            if (apiConfig.description === null) {\n                configDispatcher({ action: CONSTS.DESCRIPTION_TYPES.DESCRIPTION, value: overview });\n            }\n        } else if (type === CONSTS.DESCRIPTION_TYPES.OVERVIEW) {\n            if (overviewDocument === null) {\n                setOverview(apiConfig.description);\n            }\n        }\n        setDescriptionType(type);\n    };\n    const updateContent = (content) => {\n        if (descriptionType === CONSTS.DESCRIPTION_TYPES.DESCRIPTION) {\n            configDispatcher({ action: CONSTS.DESCRIPTION_TYPES.DESCRIPTION, value: content });\n        } else if (descriptionType === CONSTS.DESCRIPTION_TYPES.OVERVIEW) {\n            configDispatcher({ action: CONSTS.DESCRIPTION_TYPES.DESCRIPTION, value: null });\n            setOverview(content);\n        }\n    };\n    const loadContentForDoc = (documentId) => {\n        const { apiType } = api.apiType;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.getInlineContentOfDocument(api.id, documentId);\n        docPromise\n            .then((doc) => {\n                const { text } = doc;\n                setOverview(text);\n            });\n    };\n    const addDocument = async () => {\n        const { apiType } = api.apiType;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = await restApi.addDocument(api.id, {\n            name: 'overview',\n            type: 'OTHER',\n            summary: 'overview',\n            sourceType: 'MARKDOWN',\n            visibility: 'API_LEVEL',\n            sourceUrl: '',\n            otherTypeName: CONSTS.DESCRIPTION_TYPES.OVERVIEW,\n            inlineContent: '',\n        }).then((response) => {\n            return response.body;\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n        });\n        return docPromise;\n    };\n\n    const addDocumentContent = (document) => {\n        const { apiType } = api.apiType;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.addInlineContentToDocument(api.id, document.documentId, 'MARKDOWN', overview);\n        docPromise\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    console.log(error);\n                }\n            });\n    };\n\n    const deleteOverviewDocument = () => {\n        const { apiType } = api.apiType;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.deleteDocument(api.id, overviewDocument.documentId);\n        docPromise\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    useEffect(() => {\n        const { apiType } = api.apiType;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const promisedApi = restApi.getDocuments(api.id);\n        promisedApi\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    const doc = overviewDoc[0];\n                    setOverviewDocument(doc);\n                    loadContentForDoc(doc.documentId);\n                    setDescriptionType(CONSTS.DESCRIPTION_TYPES.OVERVIEW); // Only one doc we can render\n                } else {\n                    setDescriptionType(CONSTS.DESCRIPTION_TYPES.DESCRIPTION);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error('Error occurred');\n                }\n            });\n    }, []);\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    async function handleSave() {\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            });\n        if (descriptionType === CONSTS.DESCRIPTION_TYPES.DESCRIPTION) {\n            if (overviewDocument) {\n                deleteOverviewDocument();\n            }\n        }\n\n        if (descriptionType === CONSTS.DESCRIPTION_TYPES.OVERVIEW) {\n            let document = overviewDocument;\n            if (document === null) {\n                document = await addDocument();\n            }\n            addDocumentContent(document);\n        }\n        setIsUpdating(false);\n    }\n\n    const handleClick = (availableTiers, endpointUrl, endpointType) => {\n        configDispatcher({ action: 'policies', value: availableTiers });\n        // create endpoint config\n        let updatedEndpointConfig;\n        if (apiConfig.endpointConfig) {\n            updatedEndpointConfig = { ...apiConfig.endpointConfig };\n            if (endpointType === 'PRODUCTION') {\n                updatedEndpointConfig = {\n                    ...apiConfig.endpointConfig,\n                    production_endpoints: { url: endpointUrl, ...apiConfig.endpointConfig.production_endpoints },\n                };\n            } else {\n                updatedEndpointConfig = {\n                    ...apiConfig.endpointConfig,\n                    sandbox_endpoints: { url: endpointUrl, ...apiConfig.endpointConfig.sandbox_endpoints },\n                };\n            }\n        } else {\n            let endpointTypeForApi = 'http';\n            if (apiConfig.type === 'WS') {\n                endpointTypeForApi = 'ws';\n            }\n            updatedEndpointConfig = {\n                endpoint_type: endpointTypeForApi,\n            };\n            if (endpointType === 'PRODUCTION') {\n                updatedEndpointConfig.production_endpoints = {\n                    url: endpointUrl,\n                };\n            } else {\n                updatedEndpointConfig.sandbox_endpoints = {\n                    url: endpointUrl,\n                };\n            }\n        }\n        if (api.type !== 'WEBSUB') {\n            configDispatcher({ action: 'endpointConfig', value: updatedEndpointConfig });\n        }\n        setIsOpen(false);\n    };\n\n    const handleClose = () => {\n        configDispatcher({ action: 'advertised', value: api.advertiseInfo.advertised });\n        setIsOpen(false);\n    };\n    const restricted = isRestricted(['apim:api_publish', 'apim:api_create'], api\n    || isUpdating || api.isRevision || invalidTagsExist\n    || (apiConfig.visibility === 'RESTRICTED'\n    && apiConfig.visibleRoles.length === 0));\n\n    return (\n        <>\n            <Container maxWidth='md'>\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <Typography id='itest-api-details-design-config-head' variant='h5' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.Design.topic.header'\n                                defaultMessage='Design Configurations'\n                            />\n                        </Typography>\n                        <Box color='text.secondary'>\n                            {api.apiType === API.CONSTS.APIProduct\n                                ? (\n                                    <Typography variant='caption'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.Design.APIProduct.sub.heading'\n                                            defaultMessage='Configure basic API Product meta information'\n                                        />\n                                    </Typography>\n                                )\n                                : (\n                                    <Typography variant='caption'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.Design.sub.heading'\n                                            defaultMessage='Configure basic API meta information'\n                                        />\n                                    </Typography>\n                                )}\n                        </Box>\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>\n                            <div>\n                                <Box px={8} py={5}>\n                                    <Box py={1}>\n                                        <Grid container spacing={0}>\n                                            <Grid item xs={12} md={2} id='edit-api-thumbnail-btn'>\n                                                <ThumbnailView\n                                                    api={api}\n                                                    width={100}\n                                                    height={100}\n                                                    updateAPI={updateAPI}\n                                                    isEditable={!isRestricted(['apim:api_publish',\n                                                        'apim:api_create'], api)}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={10}>\n                                                <DescriptionEditor\n                                                    api={apiConfig}\n                                                    updateContent={updateContent}\n                                                    descriptionType={descriptionType}\n                                                    handleChange={handleChange}\n                                                    overview={overview}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                    <Box py={1}>\n                                        <AccessControl api={apiConfig} configDispatcher={configDispatcher}  \n                                            setIsDisabled={setErrorInAccessRoles} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <StoreVisibility api={apiConfig} configDispatcher={configDispatcher}\n                                            setIsDisabled={setErrorInRoleVisibility} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <Tags api={apiConfig} configDispatcher={configDispatcher}\n                                            setIsDisabled={setErrorInTags} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <APICategories\n                                            api={apiConfig}\n                                            configDispatcher={configDispatcher}\n                                            categories={api.categories}\n                                        />\n                                    </Box>\n                                    <Box py={1}>\n                                        <Social\n                                            slackURL={slackURLProperty && slackURLProperty.value}\n                                            githubURL={githubURLProperty && githubURLProperty.value}\n                                            configDispatcher={configDispatcher}\n                                        />\n                                    </Box>\n                                    <Box py={1}>\n                                        {api.apiType !== API.CONSTS.APIProduct && (\n                                            <AdvertiseInfo\n                                                oldApi={api}\n                                                api={apiConfig}\n                                                setIsOpen={setIsOpen}\n                                                configDispatcher={configDispatcher}\n                                                setIsDisabled={setErrorInExternalEndpoints}\n                                            />\n                                        )}\n                                    </Box>\n                                    <Box py={1}>\n                                        {api.apiType !== API.CONSTS.APIProduct && (\n                                            <DefaultVersion api={apiConfig} configDispatcher={configDispatcher} />\n                                        )}\n                                    </Box>\n                                    <Box pt={2}>\n                                        <Button\n                                            disabled={errorInAccessRoles || \n                                                errorInRoleVisibility || \n                                                restricted || \n                                                errorInTags ||\n                                                errorInExternalEndpoints}\n                                            type='submit'\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.btnSpacing}\n                                            onClick={handleSave}\n                                            id='design-config-save-btn'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.Configuration.save'\n                                                defaultMessage='Save'\n                                            />\n                                            {isUpdating && <CircularProgress size={15} />}\n                                        </Button>\n                                        <Button\n                                            component={Link}\n                                            to={'/apis/' + api.id + '/overview'}\n                                            aria-label='Cancel'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.Configuration.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Box>\n                                </Box>\n                            </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <UpdateWithoutDetails\n                    classes={classes}\n                    api={api}\n                    apiConfig={apiConfig}\n                    handleClick={handleClick}\n                    handleClose={handleClose}\n                    open={isOpen}\n                />\n            </Container>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport API from 'AppData/api';\nimport Joi from '@hapi/joi';\n\n/**\n *\n * @returns\n */\nexport default function UpdateWithoutDetails(props) {\n    const {\n        classes,\n        api,\n        apiConfig: {\n            endpointConfig,\n            policies,\n        },\n        handleClick,\n        open,\n        handleClose,\n    } = props;\n\n    let availableEndpoint = '';\n    let endpointType = 'PRODUCTION';\n    if (endpointConfig) {\n        if (endpointConfig.production_endpoints) {\n            availableEndpoint = endpointConfig.production_endpoints.url;\n            endpointType = 'PRODUCTION';\n        } else if (endpointConfig.sandbox_endpoints) {\n            availableEndpoint = endpointConfig.sandbox_endpoints.url;\n            endpointType = 'SANDBOX';\n        }\n    } else if (api.advertiseInfo && api.advertiseInfo.apiExternalProductionEndpoint) {\n        availableEndpoint = api.advertiseInfo.apiExternalProductionEndpoint;\n        endpointType = 'PRODUCTION';\n    } else if (api.advertiseInfo && api.advertiseInfo.apiExternalSandboxEndpoint) {\n        availableEndpoint = api.advertiseInfo.apiExternalSandboxEndpoint;\n        endpointType = 'SANDBOX';\n    }\n\n    const [endpointUrl, setEndpointUrl] = useState(availableEndpoint);\n    const [isValidEndpoint, setValidEndpoint] = useState(availableEndpoint !== '');\n    const [availableTiers, setAvailableTiers] = useState([]);\n\n    useEffect(() => {\n        if (policies.length > 0) {\n            setAvailableTiers(policies);\n        } else {\n            const isAsyncAPI = (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE'\n                || api.type === 'ASYNC');\n            if (isAsyncAPI) {\n                API.asyncAPIPolicies().then((response) => {\n                    if (response.body.list && response.body.list.length > 0) {\n                        setAvailableTiers([response.body.list[0].policyName]);\n                    }\n                });\n            } else {\n                API.policies('subscription').then((response) => {\n                    if (response.body.list && response.body.list.length > 0) {\n                        setAvailableTiers([response.body.list[0].name]);\n                    }\n                });\n            }\n        }\n    }, [endpointConfig, policies]);\n\n    /**\n     * Validate external endpoint\n     *\n     * @param event\n     */\n    const handleOnChangeEndpoint = (event) => {\n        const { value } = event.target;\n        setEndpointUrl(value);\n        const urlSchema = Joi.string().uri().empty();\n        setValidEndpoint(!urlSchema.validate(value).error);\n    };\n\n    const handleSave = () => {\n        handleClick(availableTiers, endpointUrl, endpointType);\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby='update-api-confirmation' \n            data-testid='itest-update-api-confirmation' open={open}>\n            <MuiDialogTitle disableTypography className={classes.dialogTitle}>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.UpdateWithoutDetails.dialog.title'\n                        defaultMessage='Restore to a Regular API'\n                    />\n                </Typography>\n                {handleClose ? (\n                    <IconButton aria-label='close' className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                ) : null}\n            </MuiDialogTitle>\n            <Divider light />\n            <MuiDialogContent>\n                <Box my={1}>\n                    <DialogContentText id='itest-confirm-update-text'>\n                        <Typography variant='subtitle1' display='block' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.UpdateWithoutDetails.confirm.update.message'\n                                defaultMessage={'This API is currently published and by changing to a regular API, '\n                                + 'it will not be available for consumption since it has no active deployments.'}\n                            />\n                        </Typography>\n                    </DialogContentText>\n                </Box>\n                {availableTiers.length > 0 && (\n                    <Box my={1}>\n                        <Grid container direction='row'>\n                            <Grid>\n                                <Typography variant='subtitle1' display='block' gutterBottom>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.UpdateWithoutDetails.tier.message'\n                                        defaultMessage='Business Plans: '\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid>\n                                <div className={classes.tierList}>\n                                    {availableTiers.map((tierName) => (\n                                        <Chip label={tierName} />\n                                    ))}\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                )}\n                <Box my={1}>\n                    <TextField\n                        fullWidth\n                        id='itest-id-api-endpoint-input'\n                        label={(\n                            <>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.UpdateWithoutDetails.endpoint'\n                                    defaultMessage='Endpoint'\n                                />\n                                <sup className={classes.mandatoryStar}>*</sup>\n                            </>\n                        )}\n                        name='endpoint'\n                        value={endpointUrl}\n                        onChange={handleOnChangeEndpoint}\n                        helperText={\n                            !isValidEndpoint && (\n                                <div style={{ marginTop: '10px' }}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.UpdateWithoutDetails.endpoint.error'\n                                        defaultMessage='Invalid Endpoint URL'\n                                    />\n                                </div>\n                            )\n                        }\n                        error={!isValidEndpoint}\n                        margin='normal'\n                        variant='outlined'\n                    />\n                </Box>\n            </MuiDialogContent>\n            <MuiDialogActions>\n                <Button\n                    disabled={!isValidEndpoint}\n                    variant='contained'\n                    color='primary'\n                    className={classes.btnSpacing}\n                    onClick={handleSave}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.UpdateWithoutDetails.continue'\n                        defaultMessage='Continue'\n                    />\n                </Button>\n                <Button\n                    onClick={handleClose}\n                    aria-label='Cancel'\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.UpdateWithoutDetails.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n            </MuiDialogActions>\n        </Dialog>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport Box from '@material-ui/core/Box';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultVersion(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    return (\n        <Grid container spacing={1} alignItems='flex-start' xs={11}>\n            <Grid item>\n                <Box>\n                    <FormControl component='fieldset' style={{ display: 'flex' }}>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.isdefault.label'\n                                defaultMessage='Make this the default version'\n                            />\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Make this the default version'\n                            name='defaultVersion'\n                            value={api.isDefaultVersion}\n                            onChange={({\n                                target: { value },\n                            }) => configDispatcher({\n                                action: 'isDefaultVersion', value: value === 'true',\n                            })}\n                            style={{ display: 'flow-root' }}\n                        >\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.yes'\n                                        defaultMessage='Yes'\n                                    />\n                                )}\n                                id='default-version-yes'\n                            />\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.no'\n                                        defaultMessage='No'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </Grid>\n            <Grid item xs={1}>\n                <Box>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.defaultversion.tooltip'\n                                defaultMessage={\n                                    'Indicates if this is the default version of the API. If an '\n                                    + 'API is invoked without specifying a version, the API Gateway will '\n                                    + 'route the request to the default version of the API.'\n                                }\n                            />\n                        )}\n                        aria-label='add'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultVersion.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-undef */\n/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, Suspense, lazy } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CONSTS from 'AppData/Constants';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus , vs } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Configurations from 'Config';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"MDMonacoEditor\" */));\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\nconst useStyles = makeStyles(() => ({\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    editorHeader: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    markdownViewWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    appBar: {\n        position: 'relative',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n}));\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\n/**\n * DescriptionEditor for API Description / Overview\n * @param {*} props properties\n * @returns {*} DescriptionEditor component\n */\nexport default function DescriptionEditor(props) {\n    const skipHtml = Configurations.app.markdown ? Configurations.app.markdown.skipHtml : true;\n    const markdownSyntaxHighlighterProps = Configurations.app.markdown ?\n        Configurations.app.markdown.syntaxHighlighterProps: {};\n    const syntaxHighlighterDarkTheme = Configurations.app.markdown ? \n        Configurations.app.markdown.syntaxHighlighterDarkTheme: false;\n    const classes = useStyles();\n    const {\n        api,\n        updateContent,\n        descriptionType,\n        overview,\n        handleChange,\n    } = props;\n    const [open, setOpen] = useState(false);\n    const [content, setContent] = useState(null);\n    const [apiFromContext] = useAPI();\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    const toggleOpen = () => {\n        if (!open) {\n            if (descriptionType === CONSTS.DESCRIPTION_TYPES.DESCRIPTION) {\n                setContent(api.description);\n            } else if (descriptionType === CONSTS.DESCRIPTION_TYPES.OVERVIEW) {\n                setContent(overview);\n            }\n        }\n        setOpen(!open);\n    };\n    const setNewContent = (newContent) => {\n        setContent(newContent);\n    };\n    const handleTextChange = (event) => {\n        const { value } = event.currentTarget;\n        setContent(value);\n    };\n    const modifyContent = () => {\n        setIsUpdating(true);\n        updateContent(content);\n        toggleOpen();\n        setIsUpdating(false);\n    };\n    const editorDidMount = (editor) => {\n        editor.focus();\n    };\n\n    const addApiContent = (originalMarkdown) => {\n        if(originalMarkdown) {\n            let newMarkdown = originalMarkdown;\n            Object.keys(api).forEach((fieldName) => {\n                const regex = new RegExp('___' + fieldName + '___', 'g');\n                newMarkdown = newMarkdown.replace(regex, api[fieldName]);\n            });\n            return newMarkdown;\n        } else {\n            return '';\n        }\n    }\n\n    const markdownWithApiData = addApiContent(content);\n\n    return (\n        <>\n            <Button\n                variant='outlined'\n                color='primary'\n                disabled={api.isRevision || isRestricted(['apim:api_create'], apiFromContext)}\n                onClick={toggleOpen}\n            >\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.DescriptionEditor.edit.content.button'\n                    defaultMessage='Edit description'\n                />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <AppBar color='inherit' className={classes.appBar}>\n                    <Toolbar variant='dense'>\n                        <Grid\n                            container\n                            direction='row'\n                            justify='space-between'\n                            alignItems='center'\n                        >\n                            <Grid item xs={8}>\n                                <Box display='flex'>\n                                    <IconButton edge='start' color='inherit' onClick={toggleOpen} aria-label='close'>\n                                        <CloseIcon />\n                                    </IconButton>\n                                    <Box\n                                        display='flex'\n                                        alignItems='center'\n                                        mx={1}\n                                        fontFamily='fontFamily'\n                                        fontSize='h4.fontSize'\n                                        color='primary.main'\n                                    >\n                                        {api.name}\n                                    </Box>\n                                    <Typography variant='h5' className={classes.editorHeader}>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Configuration.components.DescriptionEditor'\n                                                + '.edit.description.of'}\n                                            defaultMessage='Description :'\n                                        />\n                                    </Typography>\n                                    <Box ml={2}>\n                                        <FormControl component='fieldset'>\n                                            <RadioGroup\n                                                row\n                                                aria-label='description-type'\n                                                value={descriptionType}\n                                                onChange={handleChange}\n                                            >\n                                                <FormControlLabel\n                                                    value={CONSTS.DESCRIPTION_TYPES.DESCRIPTION}\n                                                    control={<Radio />}\n                                                    label='Text'\n                                                />\n                                                <FormControlLabel\n                                                    value={CONSTS.DESCRIPTION_TYPES.OVERVIEW}\n                                                    control={<Radio />}\n                                                    label='Markdown'\n                                                />\n                                            </RadioGroup>\n                                        </FormControl>\n                                        <Box>\n                                            { descriptionType !== CONSTS.DESCRIPTION_TYPES.DESCRIPTION && (\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                    // eslint-disable-next-line max-len\n                                                        id='Apis.Details.Configuration.components.DescriptionEditor.markdown.help'\n                                                        // eslint-disable-next-line max-len\n                                                        defaultMessage='The Markdown option allows you to replace the content of the Overview page in devportal with the content given below.'\n                                                    />\n                                                </Typography>)}\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    className={classes.button}\n                                    variant='contained'\n                                    disabled={isUpdating}\n                                    color='primary'\n                                    onClick={modifyContent}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.DescriptionEditor.update.cont.button'\n                                        defaultMessage='Update Content'\n                                    />\n                                    {isUpdating && <CircularProgress size={24} />}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n                <div className={classes.splitWrapper}>\n                    <Grid container spacing={7}>\n                        { descriptionType === CONSTS.DESCRIPTION_TYPES.DESCRIPTION\n                            ? (\n                                <Grid item xs={12}>\n                                    <Box display='flex' m={2}>\n                                        <TextField\n                                            id='itest-description-textfield'\n                                            multiline\n                                            fullWidth\n                                            rows={4}\n                                            variant='outlined'\n                                            onChange={handleTextChange}\n                                            value={content}\n                                        />\n                                    </Box>\n                                </Grid>\n                            ) : (\n                                <>\n                                    <Grid item xs={6}>\n                                        <Suspense fallback={<CircularProgress />}>\n                                            <MonacoEditor\n                                                width='100%'\n                                                language='markdown'\n                                                theme='vs-dark'\n                                                value={content}\n                                                options={{ selectOnLineNumbers: true }}\n                                                onChange={setNewContent}\n                                                editorDidMount={editorDidMount}\n                                            />\n                                        </Suspense>\n                                    </Grid>\n                                    <Grid item xs={6} className='markdown-content-wrapper'>\n                                        <div className={classes.markdownViewWrapper}>\n                                            <Suspense fallback={<CircularProgress />}>\n                                                <ReactMarkdown\n                                                    skipHtml={skipHtml}\n                                                    // eslint-disable-next-line react/no-children-prop\n                                                    children={markdownWithApiData}\n                                                    remarkPlugins={[remarkGfm]}\n                                                    components={{\n                                                        code({ node, inline, className, children, ...propsInner }) {\n                                                            const match = /language-(\\w+)/.exec(className || '')\n                                                            return !inline && match ? (\n                                                                <SyntaxHighlighter\n                                                                    // eslint-disable-next-line react/no-children-prop\n                                                                    children={String(children).replace(/\\n$/, '')}\n                                                                    style={syntaxHighlighterDarkTheme ? \n                                                                        vscDarkPlus : vs}\n                                                                    language={match[1]}\n                                                                    PreTag='div'\n                                                                    {...propsInner}\n                                                                    {...markdownSyntaxHighlighterProps}\n                                                                />\n                                                            ) : (\n                                                                <code className={className} {...propsInner}>\n                                                                    {children}\n                                                                </code>\n                                                            )\n                                                        }\n                                                    }}\n                                                />                                                \n                                            </Suspense>\n                                        </div>\n                                    </Grid>\n                                </>\n                            )}\n                    </Grid>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n\nDescriptionEditor.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    updateContent: PropTypes.func.isRequired,\n    descriptionType: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ChipInput from 'material-ui-chip-input'; // DEPRECATED: Do not COPY and use this component.\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AccessControl(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [userRoleValidity, setUserRoleValidity] = useState(true);\n    const { api, configDispatcher, setIsDisabled } = props;\n    const isNone = api.accessControl === 'NONE';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const [otherValidSystemRoles, setOtherValidSystemRoles] = useState([]);\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n    }, [invalidRoles]);\n    useEffect(() => {\n        if (otherValidSystemRoles.length === api.accessControlRoles.length && otherValidSystemRoles.length !== 0\n            && (otherValidSystemRoles.every((val) => api.accessControlRoles.includes(val)))) {\n            setUserRoleValidity(false);\n        } else {\n            setUserRoleValidity(true);\n        }\n    }, [otherValidSystemRoles]);\n    const handleRoleAddition = (role) => {\n        const systemRolePromise = APIValidation.role.validate(base64url.encode(role));\n        const userRolePromise = APIValidation.userRole.validate(base64url.encode(role));\n        systemRolePromise.then(() => {\n            setRoleValidity(true);\n            userRolePromise.then(() => {\n                setUserRoleValidity(true);\n                configDispatcher({\n                    action: 'accessControlRoles',\n                    value: [...api.accessControlRoles, role],\n                });\n            }).catch((error) => {\n                if (error.status === 404) {\n                    configDispatcher({\n                        action: 'accessControlRoles',\n                        value: [...api.accessControlRoles, role],\n                    });\n                    setOtherValidSystemRoles([...otherValidSystemRoles, role]);\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating user roles ' + error);\n                }\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        setOtherValidSystemRoles(otherValidSystemRoles.filter((existingRole) => existingRole !== role));\n        setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        configDispatcher({\n            action: 'accessControlRoles',\n            value: api.accessControlRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    const handleRoleValidationFailure = () => {\n        if(!roleValidity || !userRoleValidity) {\n            setIsDisabled(true);\n        } else {\n            setIsDisabled(false);\n        }\n        if (!roleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.Invalid'\n                    defaultMessage='Role is invalid'\n                />\n            );\n        } else if (!userRoleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.User.Invalid'\n                    defaultMessage='At least one role must be associated with the API creator'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.AccessControl.roles.help'\n                    defaultMessage='Enter valid role and press enter'\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative', marginBottom: -12 }}>\n                <TextField\n                    fullWidth\n                    id='accessControl-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.head.topic'\n                            defaultMessage='Publisher Access Control'\n                        />\n                    )}\n                    value={api.accessControl}\n                    name='accessControl'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'accessControl', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.form.helper.text'\n                            defaultMessage='There are no access restrictions by default'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                >\n                    <MenuItem value='NONE'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.none'\n                            defaultMessage='All'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED' id='access-control-restricted-by-roles'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.restricted'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.all'\n                                        defaultMessage='All :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.all.desc'\n                                    defaultMessage='The API is viewable, modifiable by all the publishers and creators.'\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict'\n                                        defaultMessage='Restricted by roles :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict.\n                                    desc'\n                                    defaultMessage={'The API can be viewed and modified only by specific'\n                                    + ' publishers and creators with the roles that you specify'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Publisher Access Control'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {!isNone && (\n                <Box py={1} style={{ marginTop: 10 }}>\n                    <ChipInput\n                        data-testid='access-control-select-role'\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AccessControl.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                        value={api.accessControlRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: (!roleValidity || !userRoleValidity) && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !userRoleValidity}\n                        helperText={handleRoleValidationFailure()}\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nAccessControl.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport MuiAlert from 'AppComponents/Shared/MuiAlert';\nimport { useRevisionContext } from 'AppComponents/Shared/RevisionContext';\nimport Joi from '@hapi/joi';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControl from '@material-ui/core/FormControl';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n        paddingBottom: '20px',\n    },\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    alertGrid: {\n        width: '100%',\n    },\n    alertTitle: {\n        fontWeight: theme.typography.fontWeightMedium,\n        marginTop: -2,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nconst AdvertiseInfo = (props) => {\n    const {\n        configDispatcher,\n        oldApi: { policies: oldPolicies, endpointConfig: oldEndpointConfig },\n        api: {\n            advertiseInfo,\n            type,\n            policies,\n            lifeCycleStatus,\n            endpointConfig,\n        },\n        setIsOpen,\n        setIsDisabled,\n    } = props;\n    const {\n        allRevisions,\n    } = useRevisionContext();\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n    const isDeployed = useMemo(() => {\n        if (allRevisions) {\n            for (let i = 0; i < allRevisions.length; i++) {\n                if (allRevisions[i].deploymentInfo.length > 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }, [allRevisions]);\n\n    const validateUrl = (value, isEmptyAllowed=true) => {\n        let urlSchema = Joi.string().uri().empty();\n        if (isEmptyAllowed) {\n            urlSchema = Joi.string().uri().allow('', null);\n        }\n        return !urlSchema.validate(value).error;\n    };\n\n    const [isValidApiExternalProductionEndpoint, setValidApiExternalProductionEndpoint] = useState(\n        validateUrl(advertiseInfo.apiExternalProductionEndpoint, false),\n    );\n    const [isValidApiExternalSandboxEndpoint, setValidApiExternalSandboxEndpoint] = useState(\n        validateUrl(advertiseInfo.apiExternalSandboxEndpoint),\n    );\n    const [isValidOriginalDevPortalUrl, setValidOriginalDevPortalUrl] = useState(\n        validateUrl(advertiseInfo.originalDevPortalUrl)\n    );\n\n    const handleOnChange = (event) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case 'apiExternalProductionEndpoint':\n                setValidApiExternalProductionEndpoint(validateUrl(value, false));\n                setIsDisabled(!(validateUrl(value, false) && \n                    validateUrl(advertiseInfo.apiExternalSandboxEndpoint) && \n                    validateUrl(advertiseInfo.originalDevPortalUrl)));\n                break;\n            case 'apiExternalSandboxEndpoint':\n                setValidApiExternalSandboxEndpoint(validateUrl(value));\n                setIsDisabled(!(validateUrl(advertiseInfo.apiExternalProductionEndpoint, false) && \n                    validateUrl(value) && \n                    validateUrl(advertiseInfo.originalDevPortalUrl)));\n                break;\n            default:\n                setValidOriginalDevPortalUrl(validateUrl(value));\n                setIsDisabled(!(validateUrl(advertiseInfo.apiExternalProductionEndpoint, false) && \n                    validateUrl(advertiseInfo.apiExternalSandboxEndpoint) && \n                    validateUrl(value)));\n                break;\n        }\n        configDispatcher({ action: name, value });\n    };\n\n    const handleOnChangeAdvertised = ({ target: { value } }) => {\n        configDispatcher({ action: 'advertised', value: value === 'true' });\n        if (value === 'false' && lifeCycleStatus === 'PUBLISHED' && (policies.length === 0 || !endpointConfig)) {\n            setIsOpen(true);\n        } else if (value === 'true' && lifeCycleStatus === 'PUBLISHED') {\n            configDispatcher({ action: 'policies', value: oldPolicies });\n            configDispatcher({ action: 'endpointConfig', value: oldEndpointConfig });\n        }\n        if (value === 'true') {\n            setIsDisabled(!(validateUrl(advertiseInfo.apiExternalProductionEndpoint, false) && \n                validateUrl(advertiseInfo.apiExternalSandboxEndpoint) && \n                validateUrl(advertiseInfo.originalDevPortalUrl)));\n        } else {\n            setIsDisabled(false);\n        }\n    };\n\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <Box>\n                    <FormControl component='fieldset' style={{ display: 'flex' }}>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AdvertiseInfo.advertised.label'\n                                defaultMessage='Mark the API as third party'\n                            />\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Mark the API as third party'\n                            name='advertised'\n                            value={advertiseInfo.advertised}\n                            onChange={handleOnChangeAdvertised}\n                            style={{ display: 'flow-root' }}\n                        >\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)\n                                    || type === 'ASYNC' || isDeployed}\n                                value\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AdvertiseInfo.advertised.yes'\n                                        defaultMessage='Yes'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)\n                                    || type === 'ASYNC' || isDeployed}\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AdvertiseInfo.advertised.no'\n                                        defaultMessage='No'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </Grid>\n            <Grid item xs={1}>\n                <Box>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AdvertiseInfo.tooltip'\n                                defaultMessage={\n                                    'Indicates if an API is a third party API. You can use third party APIs to expose'\n                                    + ' an externally published API through API Manager.'\n                                }\n                            />\n                        )}\n                        aria-label='add'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Box>\n            </Grid>\n            <Grid className={classes.alertGrid}>\n                {type === 'ASYNC' && (\n                    <MuiAlert severity='info'>\n                        <Typography gutterBottom component='div' className={classes.alertTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AdvertiseInfo.async.api.warning.title'\n                                defaultMessage='The \"Other\" type streaming APIs will serve as third party APIs.'\n                            />\n                        </Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AdvertiseInfo.async.api.warning'\n                            defaultMessage={'If you want to deploy and API in the gateway, please create a WebSocket,'\n                            + ' SSE or WebSub type of a streaming API.'}\n                        />\n                    </MuiAlert>\n                )}\n                {isDeployed && (\n                    <MuiAlert severity='info' className={classes.alert}>\n                        <Typography gutterBottom component='div' className={classes.alertTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AdvertiseInfo.deployed.api.warning.title'\n                                defaultMessage='There are active deployments in the API.'\n                            />\n                        </Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AdvertiseInfo.deployed.api.warning'\n                            defaultMessage={'Please undeploy the revision before changing the API to a third party'\n                            + ' API.'}\n                        />\n                    </MuiAlert>\n                )}\n            </Grid>\n            <Grid>\n                {advertiseInfo.advertised && (\n                    <>\n                        <TextField\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Configuration.components.AdvertiseInfo'\n                                        + '.apiExternalProductionEndpoint'}\n                                        defaultMessage='API External Production Endpoint'\n                                    />\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                </>\n                            )}\n                            variant='outlined'\n                            name='apiExternalProductionEndpoint'\n                            value={advertiseInfo.apiExternalProductionEndpoint}\n                            fullWidth\n                            margin='normal'\n                            onChange={handleOnChange}\n                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                            error={!isValidApiExternalProductionEndpoint}\n                            helperText={isValidApiExternalProductionEndpoint ? (\n                                <FormattedMessage\n                                    id={'Apis.Details.Configuration.components.AdvertiseInfo'\n                                    + '.apiExternalProductionEndpoint.help'}\n                                    defaultMessage='This is the external production endpoint of the advertised API'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id={'Apis.Details.Configuration.components.AdvertiseInfo'\n                                    + '.apiExternalEndpoint.error'}\n                                    defaultMessage='Invalid Endpoint URL'\n                                />\n                            )}\n                        />\n                        <TextField\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Configuration.components.AdvertiseInfo'\n                                        + '.apiExternalSandboxEndpoint'}\n                                        defaultMessage='API External Sandbox Endpoint'\n                                    />\n                                </>\n                            )}\n                            variant='outlined'\n                            name='apiExternalSandboxEndpoint'\n                            value={advertiseInfo.apiExternalSandboxEndpoint}\n                            fullWidth\n                            margin='normal'\n                            onChange={handleOnChange}\n                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                            error={!isValidApiExternalSandboxEndpoint}\n                            helperText={isValidApiExternalSandboxEndpoint ? (\n                                <FormattedMessage\n                                    id={'Apis.Details.Configuration.components.AdvertiseInfo.apiExternalSandboxEndpoint'\n                                    + '.help'}\n                                    defaultMessage='This is the external sandbox endpoint of the advertised API'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id={'Apis.Details.Configuration.components.AdvertiseInfo'\n                                    + '.apiExternalEndpoint.error'}\n                                    defaultMessage='Invalid Endpoint URL'\n                                />\n                            )}\n                            style={{ marginTop: 0 }}\n                        />\n                        <TextField\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AdvertiseInfo.originalDevPortalUrl'\n                                    defaultMessage='Original Developer URL'\n                                />\n                            )}\n                            variant='outlined'\n                            name='originalDevPortalUrl'\n                            value={advertiseInfo.originalDevPortalUrl}\n                            fullWidth\n                            margin='normal'\n                            onChange={handleOnChange}\n                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                            error={!isValidOriginalDevPortalUrl}\n                            helperText={isValidOriginalDevPortalUrl ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AdvertiseInfo.originalDevPortalUrl.help'\n                                    defaultMessage='This is the original developer portal of the advertised API'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id={'Apis.Details.Configuration.components.AdvertiseInfo'\n                                    + '.originalDevPortalUrl.error'}\n                                    defaultMessage='Invalid Original Developer Portal URL'\n                                />\n                            )}\n                            style={{ marginTop: 0 }}\n                        />\n                    </>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\n\nAdvertiseInfo.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AdvertiseInfo);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ChipInput from 'material-ui-chip-input'; // DEPRECATED: Do not COPY and use this component.\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CONSTS from 'AppData/Constants';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function StoreVisibility(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [roleExists, setRoleExists] = useState(true);\n    const { api, configDispatcher, setIsDisabled } = props;\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const isRestrictedByRoles = api.visibility === 'RESTRICTED';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const restApi = new API();\n    const [tenants, setTenants] = useState([]);\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length !== 0) {\n            setRoleExists(true);\n        }\n    }, [invalidRoles]);\n    useEffect(() => {\n        setIsDisabled(!roleValidity || !roleExists);\n    }, [roleValidity, roleExists])\n    const handleRoleAddition = (role) => {\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise.then(() => {\n            setRoleExists(true);\n            setRoleValidity(true);\n            configDispatcher({\n                action: 'visibleRoles',\n                value: [...api.visibleRoles, role],\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        if (invalidRoles.includes(role)) {\n            setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length > 1) {\n            setRoleExists(true);\n        } else {\n            setRoleExists(false);\n        }\n        configDispatcher({\n            action: 'visibleRoles',\n            value: api.visibleRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative' }}>\n                <TextField\n                    fullWidth\n                    id='storeVisibility-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.head.topic'\n                            defaultMessage='Developer Portal Visibility'\n                        />\n                    )}\n                    value={api.visibility}\n                    name='storeVisibility'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'visibility', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.form.helper.text'\n                            defaultMessage='By default API is visible to all developer portal users'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                >\n                    <MenuItem value='PUBLIC'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.StoreVisibility.dropdown.public'\n                            defaultMessage='Public'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED' id='visibility-restricted-by-roles'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.dropdown.restrict'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                    {tenants !== 0\n                        && (\n                            <MenuItem value='PRIVATE'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.dropdown.private'\n                                    defaultMessage='Visible to my domain'\n                                />\n                            </MenuItem>\n                        )}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.public'\n                                        defaultMessage='Public :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.public.desc'\n                                    defaultMessage={\n                                        'The API is accessible to everyone and can be advertised '\n                                        + 'in multiple developer portals - a central developer portal '\n                                        + 'and/or non-WSO2 developer portals.'\n                                    }\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict'\n                                        defaultMessage='Restricted by roles(s) :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict.desc'\n                                    defaultMessage={\n                                        'The API is visible only to specific user'\n                                        + ' roles in the tenant developer portal that you specify.'\n                                    }\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Store Visibility'\n                    placement='right-end'\n                    className={classes.tooltip}\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {isRestrictedByRoles && (\n                <Box py={2} style={{ marginTop: -10, marginBottom: 10 }}>\n                    <ChipInput\n                        data-testid='visibility-select-role'\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.storeVisibility.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                        value={api.visibleRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: !roleValidity && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !roleExists}\n                        helperText={\n                            roleValidity ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.visibility.CreateScope.roles.help'\n                                    defaultMessage='Enter valid role and press enter'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                    defaultMessage='Role is invalid'\n                                />\n                            )\n                        }\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nStoreVisibility.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input'; // DEPRECATED: Do not COPY and use this component.\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Tags(props) {\n    const { api, configDispatcher, setIsDisabled } = props;\n    const [apiFromContext] = useAPI();\n    const [isTagValid, setIsTagValid] = useState(true);\n    const [invalidTags, setInvalidTags] = useState([]);\n    const [isTagWithinLimit, setIsTagWithinLimit] = useState(true);\n    const regexPattern = /([~!@#;%^&*+=|\\\\<>\"'/,])/;\n    const helperText = () => {\n        if(!isTagWithinLimit || !isTagValid) {\n            setIsDisabled(true);\n        } else {\n            setIsDisabled(false);\n        }\n        if (isTagValid && isTagWithinLimit) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.Tags.helper'\n                    defaultMessage='Press `Enter` after typing the tag name to add a new tag'\n                />\n            );\n        } else if (!isTagValid) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.Tags.error'\n                    defaultMessage={'The tag contains one or more illegal characters '\n                + '( ~ ! @ # ; % ^ & * + = | < > , \\' \" \\\\\\\\ / ) .'}\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.Tags.limit.error'\n                    defaultMessage='The tag exceeds the maximum length of 30 characters'\n                />\n            );\n        }\n    };\n    return (\n        <React.Fragment style={{ marginTop: 10 }}>\n            <ChipInput\n                fullWidth\n                variant='outlined'\n                id='tags'\n                InputProps={{\n                    name: 'tag-name',\n                }}\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.title'\n                        defaultMessage='Tags'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                value={api.tags}\n                error={!(isTagValid && isTagWithinLimit)}\n                helperText={helperText()}\n                onAdd={(tag) => {\n                    if (regexPattern.test(tag) || tag.length > 30) {\n                        if (regexPattern.test(tag)) {\n                            setIsTagValid(false);\n                        } else {\n                            setIsTagWithinLimit(false);\n                        }\n                        setInvalidTags([...invalidTags, tag]);\n                    }\n                    configDispatcher({ action: 'tags', value: [...api.tags, tag] });\n                }}\n                chipRenderer={({ value }, key) => (\n                    <Chip\n                        key={key}\n                        size='small'\n                        label={value}\n                        onDelete={() => {\n                            if (invalidTags.includes(value)) {\n                                const currentInvalidTags = invalidTags.filter((existingTag) => existingTag !== value);\n                                setInvalidTags(currentInvalidTags);\n                                if (currentInvalidTags.length === 0) {\n                                    setIsTagValid(true);\n                                }\n                            }\n                            configDispatcher({ action: 'tags', value: api.tags.filter((oldTag) => oldTag !== value) });\n                        }}\n                        style={{\n                            backgroundColor: (regexPattern.test(value) || value.length > 30) ? red[300] : null,\n                            margin: '0 8px 12px 0',\n                            float: 'left',\n                        }}\n                    />\n                )}\n                style={{ display: 'flex' }}\n            />\n        </React.Fragment>\n    );\n}\n\nTags.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport TextField from '@material-ui/core/TextField';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nconst Social = (props) => {\n    const { slackURL, githubURL, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    return (\n        <>\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.giturl'\n                        defaultMessage='GitHub URL'\n                    />\n                )}\n                id='github'\n                variant='outlined'\n                value={githubURL || ''}\n                fullWidth\n                margin='normal'\n                onChange={(e) => configDispatcher({ action: 'github_repo', value: e.target.value })}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.giturl.help'\n                        defaultMessage='This GitHub URL will be available in the API overview page in developer portal'\n                    />\n                )}\n                style={{ marginTop: 0 }}\n            />\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.slack'\n                        defaultMessage='Slack URL'\n                    />\n                )}\n                id='slack'\n                variant='outlined'\n                value={slackURL || ''}\n                fullWidth\n                margin='normal'\n                onChange={(e) => configDispatcher({ action: 'slack_url', value: e.target.value })}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.slack_url.help'\n                        defaultMessage={'This Slack Channel URL will be available in the'\n                        + ' API overview page in developer portal'}\n                    />\n                )}\n                style={{ marginTop: 0 }}\n            />\n        </>\n    );\n};\n\nSocial.propTypes = {\n    slackURL: PropTypes.string.isRequired,\n    githubURL: PropTypes.string.isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Social);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport API from 'AppData/api';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n    listItemText: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n/**\n * Render the categories drop down.\n * @param {JSON} props props passed from it's parents.\n * @returns {JSX} Render the categories drop down.\n */\nfunction APICategories(props) {\n    const [categories, setCategories] = useState({});\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    useEffect(() => {\n        API.apiCategories().then((response) => setCategories(response.body));\n    }, []);\n\n    if (!categories.list) {\n        return null;\n    } else if (categories.list.length === 0) {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    name='Categories'\n                    id='APICategories'\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled\n                    value='emptyMessage'\n                >\n                    <MenuItem\n                        dense\n                        disableGutters\n                        value='emptyMessage'\n                    >\n                        <ListItemText primary={(\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories.empty'\n                                defaultMessage='No API Categories defined.'\n                            />\n                        )}\n                        />\n                    </MenuItem>\n                </TextField>\n            </Box>\n        );\n    } else {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    id='APICategories'\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    name='categories'\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                    value={api.categories}\n                    SelectProps={{\n                        multiple: true,\n                        renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        MenuProps: {\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                            getContentAnchorEl: null,\n                            keepMounted: true,\n                            PaperProps: {\n                                style: {\n                                    maxHeight: 300,\n                                    maxWidth: 300,\n                                },\n                            },\n                        },\n                    }}\n                    onChange={(e) => configDispatcher({ action: 'categories', value: e.target.value })}\n                    InputProps={{\n                        id: 'itest-id-categories-input',\n                    }}\n                    helperText='Select API Categories for the API'\n                >\n                    { categories.list.map((category) => (\n                        <MenuItem\n                            dense\n                            disableGutters\n                            id={category.id}\n                            key={category.name}\n                            value={category.name}\n                        >\n                            <Checkbox color='primary' checked={api.categories.includes(category.name)} />\n                            <ListItemText\n                                primary={category.name}\n                                secondary={category.description}\n                                classes={{ primary: classes.listItemText }}\n                            />\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <FormattedMessage\n                                    id='Api.category.dropdown.tooltip'\n                                    defaultMessage={'Allow to group APIs that have similar attributes.'\n                                        + ' There has to be pre-defined API categories in the'\n                                        + ' environment in order to be attached to an API.'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='API Categories'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n        );\n    }\n}\n\nAPICategories.defaultProps = {\n    categories: [],\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport default APICategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useContext, useState, useEffect,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Api from 'AppData/api';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport ResponseCaching from './components/ResponseCaching';\nimport CORSConfiguration from './components/CORSConfiguration';\nimport SchemaValidation from './components/SchemaValidation';\nimport MaxBackendTps from './components/MaxBackendTps';\nimport Endpoints from './components/Endpoints';\nimport APISecurity from './components/APISecurity/APISecurity';\nimport QueryAnalysis from './components/QueryAnalysis';\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/APISecurity/components/apiSecurityConstants';\nimport WebSubConfiguration from './components/WebSubConfiguration';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const apiConfigJson = {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        enableSubscriberVerification: api.enableSubscriberVerification,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        keyManagers: [...(api.keyManagers || [])],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n    if (api.advertiseInfo) {\n        apiConfigJson.advertiseInfo = {\n            advertised: api.advertiseInfo.advertised,\n            apiExternalProductionEndpoint: api.advertiseInfo.apiExternalProductionEndpoint,\n            apiExternalSandboxEndpoint: api.advertiseInfo.apiExternalSandboxEndpoint,\n            originalDevPortalUrl: api.advertiseInfo.originalDevPortalUrl,\n            apiOwner: api.advertiseInfo.apiOwner,\n            vendor: api.advertiseInfo.vendor,\n        }\n    }\n    return apiConfigJson;\n}\n\n\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    const [keyManagersConfigured, setKeyManagersConfigured] = useState([]);\n    const [saveButtonDisabled, setSaveButtonDisabled] = useState(false);\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value, event } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'accessControl':\n            case 'visibility':\n            case 'maxTps':\n            case 'enableSubscriberVerification':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'securityScheme':\n                // If event came from mandatory selector of either Application level or Transport level\n                if (\n                    [API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY]\n                        .includes(event.name)\n                ) {\n                    // If user select not mandatory (optional) , Remove the respective schema, else add it\n                    if (event.value === 'optional') {\n                        return {\n                            ...copyAPIConfig(state),\n                            [action]: state[action].filter((schema) => schema !== event.name),\n                        };\n                    } else if (state[action].includes(event.name)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.name] };\n                    }\n                }\n                // User checked on one of api security schemas (either OAuth, Basic, ApiKey or Mutual SSL)\n                if (event.checked) {\n                    if (state[action].includes(event.value)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.value] };\n                    }\n                } else if (state[action].includes(event.value)) {\n                    // User has unchecked a security schema type\n                    const newState = {\n                        ...copyAPIConfig(state),\n                        [action]: state[action].filter((schema) => schema !== event.value),\n                    };\n                    if (\n                        !(\n                            newState[action].includes(DEFAULT_API_SECURITY_OAUTH2)\n                            || newState[action].includes(API_SECURITY_BASIC_AUTH)\n                            || newState[action].includes(API_SECURITY_API_KEY)\n                        )\n                    ) {\n                        const noMandatoryOAuthBasicAuth = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryOAuthBasicAuth,\n                        };\n                    } else if (!newState[action].includes(API_SECURITY_MUTUAL_SSL)) {\n                        const noMandatoryMutualSSL = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_MUTUAL_SSL_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryMutualSSL,\n                        };\n                    }\n\n                    return newState;\n                } else {\n                    return state; // Add for completeness, Ideally there couldn't exist this state\n                }\n            case 'transport':\n                if (event.checked) {\n                    return { ...copyAPIConfig(state), transport: [...state.transport, event.value] };\n                } else {\n                    return {\n                        ...copyAPIConfig(state),\n                        transport: state.transport.filter((transport) => transport !== event.value),\n                    };\n                }\n            case 'accessControlAllowHeaders':\n            case 'accessControlAllowMethods':\n            case 'accessControlAllowCredentials':\n            case 'corsConfigurationEnabled':\n                nextState.corsConfiguration[action] = value;\n                return nextState;\n            case 'accessControlAllowOrigins':\n                if (event.checked) {\n                    nextState.corsConfiguration[action] = [event.value];\n                } else {\n                    nextState.corsConfiguration[action] = event.checked === false ? [] : event.value;\n                }\n                return nextState;\n            case 'keymanagers':\n                nextState.keyManagers = value;\n                return nextState;\n            case 'allKeyManagersEnabled':\n                if (value) {\n                    nextState.keyManagers = ['all'];\n                } else {\n                    nextState.keyManagers = keyManagersConfigured;\n                }\n                return nextState;\n            case 'saveButtonDisabled':\n                setSaveButtonDisabled(value);\n                return state;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const history = useHistory();\n    const isAsyncAPI = api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC';\n    const isNonWebSubAsyncAPI = api.type === 'WS' || api.type === 'SSE' || api.type === 'ASYNC';\n    const isWebSub = api.type === 'WEBSUB';\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [updateComplexityList, setUpdateComplexityList] = useState(null);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n    const intl = useIntl();\n    useEffect(() => {\n        if (!isRestricted(['apim:api_create'], api)) {\n            Api.keyManagers().then((response) => {\n                const kmNameList = [];\n                if (response.body.list) {\n                    response.body.list.forEach((km) => kmNameList.push(km.name));\n                }\n                setKeyManagersConfigured(kmNameList);\n            })\n                .catch((error) => {\n                    const { response } = error;\n                    if (response.body) {\n                        const { description } = response.body;\n                        Alert.error(description);\n                    }\n                });\n        }\n    }, []);\n\n    /**\n     * Update the GraphQL Query Complexity Values\n     */\n    function updateComplexity() {\n        const apiId = apiConfig.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.updateGraphqlPoliciesComplexity(\n            apiId, {\n                list: updateComplexityList,\n            },\n        );\n        promisedComplexity\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        if (api.isAPIProduct()) {\n            delete apiConfig.keyManagers; // remove keyManagers property if API type is API Product\n        }\n        if (updateComplexityList !== null) {\n            updateComplexity();\n        }\n        // Validate the key managers\n        if (\n            !api.isAPIProduct()\n            && apiConfig.securityScheme.includes('oauth2')\n            && !apiConfig.keyManagers.includes('all')\n            && (apiConfig.keyManagers && apiConfig.keyManagers.length === 0)\n        ) {\n            Alert.error(\n                intl.formatMessage(\n                    {\n                        id: 'Apis.Details.Configuration.RuntimeConfiguration.no.km.error',\n                        defaultMessage: 'Select one or more Key Managers',\n                    },\n                ),\n            );\n            return;\n        }\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSaveAndDeploy() {\n        if (api.isAPIProduct()) {\n            delete apiConfig.keyManagers; // remove keyManagers property if API type is API Product\n        }\n        if (updateComplexityList !== null) {\n            updateComplexity();\n        }\n        // Validate the key managers\n        if (\n            !api.isAPIProduct()\n            && apiConfig.securityScheme.includes('oauth2')\n            && !apiConfig.keyManagers.includes('all')\n            && (apiConfig.keyManagers && apiConfig.keyManagers.length === 0)\n        ) {\n            Alert.error(\n                intl.formatMessage(\n                    {\n                        id: 'Apis.Details.Configuration.RuntimeConfiguration.no.km.error',\n                        defaultMessage: 'Select one or more Key Managers',\n                    },\n                ),\n            );\n            return;\n        }\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            }));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography id='itest-api-details-runtime-config-head' variant='h5' component='h2'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfiguration.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                {(apiConfig.advertiseInfo && apiConfig.advertiseInfo.advertised) ? (\n                    <Paper className={classes.paper} elevation={0}>\n                        <APISecurity api={apiConfig} configDispatcher={configDispatcher} />\n                    </Paper>\n                ) : (\n                    <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                        <Grid item xs={12} md={7}>\n                            <Typography className={classes.heading} variant='h6' component='h3'>\n                                { isAsyncAPI\n                                    ? (\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.section.initial.request'\n                                            defaultMessage='Initial Request'\n                                        />\n                                    ) : (\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.section.request'\n                                            defaultMessage='Request'\n                                        />\n                                    )}\n                            </Typography>\n                            <Grid\n                                direction=' column'\n                                justify='space-between'\n                                alignItems='stretch'\n                                spacing={6}\n                            >\n                                <Grid item xs={12} style={{ marginBottom: 30, position: 'relative' }}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <APISecurity api={apiConfig} configDispatcher={configDispatcher} />\n                                        { api.type !== 'WS' && (\n                                            <CORSConfiguration api={apiConfig} configDispatcher={configDispatcher} />\n                                        )}\n\n                                        {(api.type !== 'GRAPHQL' && !isAsyncAPI)\n                                            && <SchemaValidation api={apiConfig} configDispatcher={configDispatcher} />}\n                                        {api.type === 'GRAPHQL' && (\n                                            <Box mt={3}>\n                                                <QueryAnalysis\n                                                    api={apiConfig}\n                                                    setUpdateComplexityList={setUpdateComplexityList}\n                                                    isRestricted={isRestricted(['apim:api_create'], api)}\n                                                />\n                                            </Box>\n                                        )}\n                                    </Paper>\n                                    {!isWebSub && (\n                                        <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                                    )}\n                                </Grid>\n                                { !isNonWebSubAsyncAPI && (\n                                    <>\n                                        <Typography className={classes.heading} variant='h6' component='h3'>\n                                            {!isWebSub ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.section.response'\n                                                    defaultMessage='Response'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.section.events'\n                                                    defaultMessage='Events'\n                                                />\n                                            )}\n\n                                        </Typography>\n                                        <Grid item xs={12} style={{ marginBottom: 30, position: 'relative' }}>\n                                            <Paper className={classes.paper} elevation={0}>\n                                                {!isWebSub ? (\n                                                    <Grid item xs={12} style={{ position: 'relative' }}>\n                                                        <Box mb={3}>\n                                                            <Paper className={classes.paper} elevation={0}>\n                                                                {!isAsyncAPI && (\n                                                                    <ResponseCaching\n                                                                        api={apiConfig}\n                                                                        configDispatcher={configDispatcher}\n                                                                    />\n                                                                )}\n                                                            </Paper>\n                                                        </Box>\n                                                    </Grid>\n                                                ) : (\n                                                    <WebSubConfiguration \n                                                        api={apiConfig} \n                                                        configDispatcher={configDispatcher} \n                                                    />\n                                                )}\n                                            </Paper>\n                                            {!isWebSub && (\n                                                <ArrowBackIcon className={classes.arrowBackIcon} />\n                                            )}\n                                        </Grid>\n                                    </>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            {!isWebSub && (\n                                <>\n                                    <Typography className={classes.heading} variant='h6' component='h3'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.section.backend'\n                                            defaultMessage='Backend'\n                                        />\n                                    </Typography>\n                                    <Paper\n                                        className={classes.paper}\n                                        style={{ height: 'calc(100% - 75px)' }}\n                                        elevation={0}\n                                    >\n                                        {!api.isAPIProduct() && (\n                                            <>\n                                                {!isAsyncAPI && (\n                                                    <MaxBackendTps\n                                                        api={apiConfig}\n                                                        configDispatcher={configDispatcher}\n                                                    />\n                                                )}\n                                                { !isWebSub && (\n                                                    <Endpoints api={api} />\n                                                )}\n                                            </>\n                                        )}\n                                        {api.isAPIProduct() && (\n                                            <Box alignItems='center' justifyContent='center' className={classes.info}>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Configuration.RuntimeConfiguration.backend'\n                                                            + '.api.product.endpoint'}\n                                                        defaultMessage={'Please refer respective APIs for endpoint '\n                                                            + 'information'}\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )}\n                                    </Paper>\n                                </>\n                            )}\n                        </Grid>\n                    </Grid>\n                )}\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item id='save-runtime-configurations'>\n                            {api.isRevision\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                || isRestricted(['apim:api_create'], api)) || saveButtonDisabled ? (\n                                    <Button\n                                        disabled\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'                     \n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.save'\n                                            defaultMessage='Save'\n                                        />\n                                    </Button>\n                                ) : (\n                                    <CustomSplitButton\n                                        advertiseInfo={api.advertiseInfo}\n                                        api={api}\n                                        handleSave={handleSave}\n                                        handleSaveAndDeploy={handleSaveAndDeploy}\n                                        isUpdating={isUpdating}\n                                        id = 'runtime-config-save-button'\n                                    />\n                                )}\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                component={Link}\n                                to={'/apis/' + api.id + '/overview'}\n                                aria-label='Cancel'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ResponseCaching(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n    const isResponseCachingEnabled = api.responseCachingEnabled;\n\n    const generateElement = (isEnabled) => {\n        if (isEnabled) {\n            return (\n                <ExpandMoreIcon />\n            );\n        }\n        return (null);\n    };\n\n    return (\n        <>\n            <WrappedExpansionPanel className={classes.expansionPanel} id='responseCaching'>\n                <ExpansionPanelSummary expandIcon={generateElement(api.responseCachingEnabled)}>\n                    <Typography className={classes.subHeading} variant='h6' component='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.response.caching'\n                            defaultMessage='Response Caching'\n                        />\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.ResponseCaching.tooltip'\n                                    defaultMessage={\n                                        'If enabled, the API response will be cached at the gateway level'\n                                        + ' to improve the response time and minimize the backend load'\n                                    }\n                                />\n                            )}\n                            aria-label='Response caching helper text'\n                            placement='right-end'\n                            interactive\n                        >\n                            <HelpOutline className={classes.iconSpace} />\n                        </Tooltip>\n                    </Typography>\n                    <FormControlLabel\n                        className={classes.actionSpace}\n                        control={(\n                            <Switch\n                                id='response-caching-switch'\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                checked={api.responseCachingEnabled}\n                                onChange={({ target: { checked } }) => configDispatcher({\n                                    action: 'responseCachingEnabled',\n                                    value: checked,\n                                })}\n                                color='primary'\n                                inputProps={{\n                                    'aria-label': 'switch response caching',\n                                }}\n                            />\n                        )}\n                    />\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    <Grid container spacing={1} alignItems='flex-start'>\n                        <Grid item>\n                            {isResponseCachingEnabled && (\n                                <TextField\n                                    value={api.cacheTimeout}\n                                    onChange={({ target: { value } }) => configDispatcher({\n                                        action: 'cacheTimeout',\n                                        value,\n                                    })}\n                                    margin='normal'\n                                    helperText={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.cache.timeout'\n                                            defaultMessage='Cache Timeout (seconds)'\n                                        />\n                                    )}\n                                />\n                            )}\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </WrappedExpansionPanel>\n        </>\n    );\n}\n\nResponseCaching.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: Move to `User` class , drawback is updating new property require JSON parse, Stringify cycle ~tmkb\nimport Utils from 'AppData/Utils';\nimport User from 'AppData/User';\n\nconst environmentName = Utils.getCurrentEnvironment().label;\nconst userStorageKey = `${User.CONST.LOCAL_STORAGE_USER}_${environmentName}`;\n\nexport const updateUserLocalStorage = (key, newValue) => {\n    const userData = JSON.parse(localStorage.getItem(userStorageKey));\n    userData[key] = newValue;\n    localStorage.setItem(userStorageKey, JSON.stringify(userData));\n};\n\nexport const getUserLocalStorage = (key) => {\n    const userData = JSON.parse(localStorage.getItem(userStorageKey));\n    return userData[key];\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input'; // DEPRECATED: Do not COPY and use this component.\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        marginLeft: theme.spacing(20),\n        marginTop: '-7px',\n        marginBottom: '-7px',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n * api.corsConfiguration possible values true and false\n * @export\n * @param {*} props\n * @returns\n */\nexport default function CORSConfiguration(props) {\n    const [apiFromContext] = useAPI();\n    const {\n        configDispatcher,\n        api: { corsConfiguration },\n    } = props;\n    const isCorsEnabled = corsConfiguration.corsConfigurationEnabled;\n    const isAllowAllOrigins = corsConfiguration.accessControlAllowOrigins[0] === '*'\n        && corsConfiguration.accessControlAllowOrigins.length === 1;\n    const classes = useStyles();\n    const generateElement = (isEnabled) => {\n        if (isEnabled) {\n            return (\n                <ExpandMoreIcon />\n            );\n        }\n        return (null);\n    };\n    return (\n        <WrappedExpansionPanel className={classes.expansionPanel} id='corsConfiguration'>\n            <ExpansionPanelSummary expandIcon={generateElement(corsConfiguration.corsConfigurationEnabled)}>\n                <Typography className={classes.subHeading} variant='h6' component='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.CORSConfiguration.cors.configuration'\n                        defaultMessage='CORS Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.CORSConfiguration.tooltip'\n                                defaultMessage='If enabled, the CORS configuration for the API will be enabled.'\n                            />\n                        )}\n                        aria-label='CORS Configuration helper text'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={corsConfiguration.corsConfigurationEnabled}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'corsConfigurationEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                            inputProps={{\n                                'aria-label': 'CORS Configuration',\n                            }}\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container>\n                    <Grid item md={12}>\n                        {isCorsEnabled && (\n                            <Grid container>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    origins'\n                                            defaultMessage='Access Control Allow Origins'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Grid container>\n                                        <Grid item md={12}>\n                                            <FormControlLabel\n                                                style={{ display: 'flex' }}\n                                                control={(\n                                                    <Checkbox\n                                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                        checked={isAllowAllOrigins}\n                                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: { checked, value },\n                                                        })}\n                                                        value='*'\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label='Allow All Origins'\n                                            />\n                                        </Grid>\n                                        {!isAllowAllOrigins && (\n                                            <Grid item md={12}>\n                                                <ChipInput\n                                                    style={{ marginBottom: 40, display: 'flex' }}\n                                                    value={corsConfiguration.accessControlAllowOrigins}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            id={\n                                                                'Apis.Details.Configuration.components'\n                                                                + '.CORSConfigurations.origin.helper'\n                                                            }\n                                                            defaultMessage={\n                                                                'Press `Enter` after typing the origin name,'\n                                                                + 'to add a new origin'\n                                                            }\n                                                        />\n                                                    )}\n                                                    onAdd={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: [\n                                                                    ...corsConfiguration.accessControlAllowOrigins,\n                                                                    accessControlAllowOrigin,\n                                                                ],\n                                                            },\n                                                        });\n                                                    }}\n                                                    onDelete={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: corsConfiguration\n                                                                    .accessControlAllowOrigins\n                                                                    .filter(\n                                                                        (oldOrigin) => (\n                                                                            oldOrigin !== accessControlAllowOrigin),\n                                                                    ),\n                                                            },\n                                                        });\n                                                    }}\n                                                />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    headers'\n                                            defaultMessage='Access Control Allow Headers'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowHeaders}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components.'\n                                                    + 'CORSConfigurations.header.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the header name, '\n                                                    + 'to add a new header'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: [\n                                                    ...corsConfiguration.accessControlAllowHeaders,\n                                                    accessControlAllowHeader,\n                                                ],\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: corsConfiguration.accessControlAllowHeaders\n                                                    .filter((oldHeader) => oldHeader !== accessControlAllowHeader),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    methods'\n                                            defaultMessage='Access Control Allow Methods'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowMethods}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfigurations.method.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the method name,'\n                                                    + ' to add a new method'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(newValue) => {\n                                            let value = [...corsConfiguration.accessControlAllowMethods,\n                                                newValue.toUpperCase()];\n                                            if (\n                                                corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .find((method) => method === newValue.toUpperCase())\n                                            ) {\n                                                value = [...corsConfiguration.accessControlAllowMethods];\n                                            }\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value,\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowMethod) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value: corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .filter((oldMethod) => oldMethod !== accessControlAllowMethod),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                checked={corsConfiguration.accessControlAllowCredentials}\n                                                onChange={({ target: { checked } }) => configDispatcher({\n                                                    action: 'accessControlAllowCredentials',\n                                                    value: checked,\n                                                })}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfiguration.allow.credentials'\n                                                }\n                                                defaultMessage='Access Control Allow Credentials'\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </WrappedExpansionPanel>\n    );\n}\n\nCORSConfiguration.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = (theme) => ({\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 2.5,\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        marginLeft: theme.spacing(20),\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n        marginBottom: theme.spacing(3),\n    },\n});\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nclass SchemaValidation extends React.Component {\n    /**\n     *Creates an instance of SchemaValidation.\n     * @param {*} props\n     * @memberof SchemaValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.setIsOpen = this.setIsOpen.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {Object} prevProps\n     * @param {Object} prevState\n     * @memberof SchemaValidation\n     */\n    componentDidUpdate(prevProps) {\n        const { api } = this.props;\n        /*\n        This could have been done using hooks too, But at the moment it requires `useRef` hook to get the previous props\n        Hence using class component and its `componentDidUpdate` life cycle method to open the caution dialog box\n        For more info: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n         */\n        if (!prevProps.api.enableSchemaValidation && api.enableSchemaValidation) {\n            this.setIsOpen(true);\n        }\n    }\n\n    /**\n     *\n     * Set isOpen state of the dialog box which shows the caution message when enabling schema validation\n     * @param {Boolean} isOpen Should dialog box is open or not\n     * @memberof SchemaValidation\n     */\n    setIsOpen(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {*} props\n     * @returns\n     * @memberof SchemaValidation\n     */\n    render() {\n        const { api, configDispatcher, classes } = this.props;\n        const { isOpen } = this.state;\n        const { api: apiFromContext } = this.context;\n\n        return (\n            <Paper className={classes.paper}>\n                <Grid container spacing={1} alignItems='flex-start'>\n                    <Grid item md={12}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.schema.validation'\n                                defaultMessage='Schema Validation'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.schema.validation.tooltip'\n                                        defaultMessage={'Enable the request and response '\n                                        + 'validation against the OpenAPI definition'}\n                                    />\n                                )}\n                                aria-label='Schema Validation helper text'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                        <FormControlLabel\n                            className={classes.actionSpace}\n                            control={(\n                                <Switch\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={\n                                        api.enableSchemaValidation === undefined ? false : api.enableSchemaValidation\n                                    }\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'enableSchemaValidation',\n                                        value: checked,\n                                    })}\n                                    color='primary'\n                                    inputProps={{\n                                        'aria-label': 'switch Schema Validation',\n                                    }}\n                                    id='schema-validation-switch'\n                                />\n                            )}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog\n                    open={isOpen}\n                    onClose={() => this.setIsOpen(false)}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.SchemaValidation.title'\n                            defaultMessage='Caution!'\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <Typography variant='subtitle1' display='block' gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.SchemaValidation.description'\n                                    defaultMessage={\n                                        'Enabling JSON schema validation will cause to build the'\n                                        + ' payload in every request and response. This will impact'\n                                        + ' the round trip time of an API request!'\n                                    }\n                                />\n                            </Typography>\n                            <Typography variant='subtitle2' display='block' gutterBottom>\n                                <b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Configuration.components.SchemaValidation'\n                                        + '.description.question'}\n                                        defaultMessage='Do you want to enable schema validation?'\n                                    />\n                                </b>\n                            </Typography>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color='primary'\n                            variant='contained'\n                            onClick={() => this.setIsOpen(false)}\n                            id='schema-validation-yes-btn'\n                        >\n                            Yes\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                this.setIsOpen(false);\n                                configDispatcher({\n                                    action: 'enableSchemaValidation',\n                                    value: false,\n                                });\n                            }}\n                            color='primary'\n                        >\n                            No\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Paper>\n        );\n    }\n}\n\nSchemaValidation.propTypes = {\n    api: PropTypes.shape({ enableSchemaValidation: PropTypes.bool }).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nSchemaValidation.contextType = ApiContext;\n\nexport default withStyles(styles)(SchemaValidation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Collapse } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1), // TODO: replace with <Box /> element `mb`\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function MaxBackendTps(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <WrappedExpansionPanel className={classes.expansionPanel} defaultExpanded id='maxBackendTps'>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.MaxBackendTps.maximum.backend.throughput'\n                                defaultMessage='Backend Throughput'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.tooltip'\n                                        defaultMessage={'Limits the total number of calls the API Manager is allowed'\n                                        + ' to make to the backend'}\n                                    />\n                                )}\n                                aria-label='APISecurity'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>Maximum Throughput</FormLabel>\n                            <RadioGroup\n                                aria-label='change-max-TPS'\n                                value={api.maxTps === null ? 'unlimited' : 'specify'}\n                                onChange={(event) => {\n                                    configDispatcher({\n                                        action: 'maxTps',\n                                        value:\n                                            event.target.value === 'specify' ? { production: null, sandbox: null }\n                                                : null,\n                                    });\n                                }}\n                                row\n                            >\n                                <FormControlLabel\n                                    value='unlimited'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Unlimited'\n                                    labelPlacement='end'\n\n                                />\n                                <FormControlLabel\n                                    value='specify'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Specify'\n                                    labelPlacement='end'\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <Collapse in={api.maxTps !== null}>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Production TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, production: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.production : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Sandbox TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, sandbox: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.sandbox : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.formattedMessage'\n                                        defaultMessage='Maximum backend transactions per second in integers'\n                                    />\n                                </FormHelperText>\n                            </Grid>\n                        </Collapse>\n                    </ExpansionPanelDetails>\n                </WrappedExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nMaxBackendTps.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport {\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/apiSecurityConstants';\nimport ApplicationLevel from './components/ApplicationLevel';\nimport TransportLevel from './components/TransportLevel';\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APISecurity(props) {\n    const {\n        api: { securityScheme, id },\n        configDispatcher,\n        api,\n    } = props;\n    const apiContext = useContext(ApiContext);\n    const isAPIProduct = apiContext.api.apiType === API.CONSTS.APIProduct;\n    let isEndpointAvailable;\n    let isPrototyped;\n    if (isAPIProduct) {\n        isEndpointAvailable = false;\n        isPrototyped = false;\n    } else {\n        isEndpointAvailable = apiContext.api.endpointConfig !== null;\n        isPrototyped = apiContext.api.endpointConfig !== null\n             && apiContext.api.endpointConfig.implementation_status === 'prototyped';\n    }\n\n    const haveMultiLevelSecurity = securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n        && (securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(\n            DEFAULT_API_SECURITY_OAUTH2,\n        ) || securityScheme.includes(API_SECURITY_API_KEY));\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    // Check the validation conditions and return an error message\n    const Validate = () => {\n        let resourcesWithSecurity;\n        if (apiFromContext.apiType === API.CONSTS.APIProduct) {\n            const apiList = apiFromContext.apis;\n            for (const apiInProduct in apiList) {\n                if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                    resourcesWithSecurity = apiList[apiInProduct].operations.findIndex(\n                        (op) => op.authType !== 'None',\n                    ) > -1;\n                    if (resourcesWithSecurity) {\n                        break;\n                    }\n                }\n            }\n        } else {\n            resourcesWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n        }\n\n        if (\n            !securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n            && !securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            && !securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)\n            && !securityScheme.includes(API_SECURITY_API_KEY)\n            && resourcesWithSecurity\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.emptySchemas'\n                        defaultMessage='Please select at least one API security method!'\n                    />\n                </Typography>\n            );\n        } else if (\n            // User has enabled both security levels and set both levels as optional\n            haveMultiLevelSecurity\n            && !(\n                securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)\n                || securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)\n            )\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.allOptional'\n                        defaultMessage=\"Please select at least one API security level as 'Mandatory'!\"\n                    />\n                </Typography>\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <>\n            <Grid container spacing={2} alignItems='flex-start'>\n                {(isAPIProduct || (!isEndpointAvailable || (isEndpointAvailable && !isPrototyped)))\n                && (\n                    <>\n                        <TransportLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            configDispatcher={configDispatcher}\n                            api={api}\n                            id={id}\n                        />\n                        <ApplicationLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            api={api}\n                            configDispatcher={configDispatcher}\n                            id={id}\n                        />\n                        <Grid item>\n                            <span className={classes.error}>\n                                <Validate />\n                            </span>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n}\n\nAPISecurity.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AuthorizationHeader from 'AppComponents/Apis/Details/Configuration/components/AuthorizationHeader.jsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport KeyManager from 'AppComponents/Apis/Details/Configuration/components/KeyManager';\nimport API from 'AppData/api';\n\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApplicationLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, api,\n    } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    let mandatoryValue = null;\n    let hasResourceWithSecurity;\n    if (apiFromContext.apiType === API.CONSTS.APIProduct) {\n        const apiList = apiFromContext.apis;\n        for (const apiInProduct in apiList) {\n            if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                hasResourceWithSecurity = apiList[apiInProduct].operations.findIndex(\n                    (op) => op.authType !== 'None',\n                ) > -1;\n                if (hasResourceWithSecurity) {\n                    break;\n                }\n            }\n        }\n    } else {\n        hasResourceWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n    }\n\n    mandatoryValue = 'optional';\n    // If not Oauth2, Basic auth or ApiKey security is selected, no mandatory values should be pre-selected\n    if (!(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(API_SECURITY_API_KEY))) {\n        mandatoryValue = null;\n    } else if (!securityScheme.includes(API_SECURITY_MUTUAL_SSL)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <WrappedExpansionPanel className={classes.expansionPanel} id='applicationLevel'>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    ApplicationLevel.http'\n                                defaultMessage='Application Level Security'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.tooltip'\n                                        defaultMessage={\n                                            'This option determines the type of security'\n                                            + ' that will be used to secure this API. An API can be secured '\n                                            + 'with either OAuth2/Basic/ApiKey or it can be secured with all of them. '\n                                            + 'If OAuth2 option is selected, relevant API will require a valid '\n                                            + 'OAuth2 token for successful invocation.'\n                                        }\n                                    />\n                                )}\n                                aria-label='API Security helper text'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormGroup style={{ display: 'flow-root' }}>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        checked={securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={DEFAULT_API_SECURITY_OAUTH2}\n                                        color='primary'\n                                    />\n                                )}\n                                label='OAuth2'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        checked={securityScheme.includes(API_SECURITY_BASIC_AUTH)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_BASIC_AUTH}\n                                        color='primary'\n                                        id='api-security-basic-auth-checkbox'\n                                    />\n                                )}\n                                label='Basic'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={securityScheme.includes(API_SECURITY_API_KEY)}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_API_KEY}\n                                        color='primary'\n                                        id='api-security-api-key-checkbox'\n                                    />\n                                )}\n                                label='Api Key'\n                            />\n                        </FormGroup>\n                        <FormControl className={classes.bottomSpace} component='fieldset'>\n                            <RadioGroup\n                                aria-label='HTTP security HTTP mandatory selection'\n                                name={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                value={mandatoryValue}\n                                onChange={({ target: { name, value } }) => configDispatcher({\n                                    action: 'securityScheme',\n                                    event: { name, value },\n                                })}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Mandatory'\n                                    labelPlacement='end'\n                                />\n                                <FormControlLabel\n                                    value='optional'\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Optional'\n                                    labelPlacement='end'\n                                />\n                            </RadioGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.APISecurity.application.mandatory'\n                                    defaultMessage='Choose whether Application level security is mandatory or optional'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                        {(apiFromContext.apiType === API.CONSTS.API) && (\n                            <KeyManager\n                                api={api}\n                                configDispatcher={configDispatcher}\n                            />\n                        )}\n                        <AuthorizationHeader api={api} configDispatcher={configDispatcher} />\n                        <FormControl>\n                            {!hasResourceWithSecurity\n                            && (\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.api.unsecured'\n                                        defaultMessage='Application level security is not required since API\n                                        has no secured resources'\n                                    />\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                    </ExpansionPanelDetails>\n                </WrappedExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nApplicationLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport APIValidation from 'AppData/APIValidation';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\n\nexport default function AuthorizationHeader(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    const [isHeaderNameValid, setIsHeaderNameValid] = useState(true);\n    const { settings } = useAppContext();\n    let hasResourceWithSecurity;\n    const authorizationHeaderValue = api.authorizationHeader ? api.authorizationHeader : settings.authorizationHeader;\n    if (apiFromContext.apiType === API.CONSTS.APIProduct) {\n        const apiList = apiFromContext.apis;\n        for (const apiInProduct in apiList) {\n            if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                hasResourceWithSecurity = apiList[apiInProduct].operations.findIndex(\n                    (op) => op.authType !== 'None',\n                ) > -1;\n                if (hasResourceWithSecurity) {\n                    break;\n                }\n            }\n        }\n    } else {\n        hasResourceWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n    }\n    if (!hasResourceWithSecurity && api.authorizationHeader !== '') {\n        configDispatcher({ action: 'authorizationHeader', value: '' });\n    }\n\n    function validateHeader(value) {\n        const headerValidity = APIValidation.authorizationHeader.required()\n            .validate(value, { abortEarly: false }).error;\n        if (headerValidity === null) {\n            setIsHeaderNameValid(true);\n            configDispatcher({ action: 'saveButtonDisabled', value: false });\n        } else {\n            setIsHeaderNameValid(false);\n            configDispatcher({ action: 'saveButtonDisabled', value: true });\n        }\n    }\n\n    return (\n        <Grid container spacing={1} alignItems='center'>\n            <Grid item xs={11}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], apiFromContext) || !hasResourceWithSecurity}\n                    id='outlined-name'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.auth.header.label'\n                            defaultMessage='Authorization Header'\n                        />\n                    )}\n                    value={hasResourceWithSecurity ? authorizationHeaderValue : ' '}\n                    error={!isHeaderNameValid}\n                    helperText={\n                        (!isHeaderNameValid)\n                        && (\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.AuthHeader.helper.text'\n                                defaultMessage='Authorization header name cannot contain spaces or special characters'\n                            />\n                        )\n                    }\n                    InputProps={{\n                        id: 'itest-id-headerName-input',\n                        onBlur: ({ target: { value } }) => {\n                            validateHeader(value);\n                        },\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                    onChange={({ target: { value } }) => configDispatcher({\n                        action: 'authorizationHeader',\n                        value: value === '' ? 'Authorization' : value })}\n                    style={{ display: 'flex' }}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.AuthHeader.tooltip'\n                            defaultMessage={\n                                ' The header name that is used to send the authorization '\n                                + 'information. \"Authorization\" is the default header.'\n                            }\n                        />\n                    )}\n                    aria-label='Auth Header'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nAuthorizationHeader.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/Certificates';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport Transports from 'AppComponents/Apis/Details/Configuration/components/Transports.jsx';\n\nimport {\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction TransportLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, intl, id, api,\n    } = props;\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const [apiFromContext] = useAPI();\n    const [clientCertificates, setClientCertificates] = useState([]);\n    const classes = useStyles();\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     *\n     * @param {string} certificate The certificate needs to be associated with the API\n     * @param {string} policy The tier to be used for the certificate.\n     * @param {string} alias The alias of the certificate to be deleted.\n     *\n     * */\n    const saveClientCertificate = (certificate, policy, alias) => {\n        return API.addClientCertificate(id, certificate, policy, alias).then((resp) => {\n            if (resp.status === 201) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.add.success',\n                    defaultMessage: 'Certificate added successfully',\n                }));\n                const tmpCertificates = [...clientCertificates];\n                tmpCertificates.push({\n                    apiId: resp.obj.apiId,\n                    alias: resp.obj.alias,\n                    tier: resp.obj.tier,\n                });\n                setClientCertificates(tmpCertificates);\n            }\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.alias.error',\n                    defaultMessage: 'Something went wrong while adding the API certificate',\n                }));\n            }\n        });\n    };\n\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteClientCertificate = (alias) => {\n        return API.deleteClientCertificate(alias, id).then((resp) => {\n            setClientCertificates(() => {\n                if (resp.status === 200) {\n                    return clientCertificates.filter((cert) => {\n                        return cert.alias !== alias;\n                    });\n                } else {\n                    return -1;\n                }\n            });\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.success',\n                defaultMessage: 'Certificate Deleted Successfully',\n            }));\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.error',\n                    defaultMessage: 'Error while deleting certificate',\n                }));\n            }\n        });\n    };\n\n    // Get the client certificates from backend.\n    useEffect(() => {\n        API.getAllClientCertificates(id).then((resp) => {\n            const { certificates } = resp.obj;\n            setClientCertificates(certificates);\n        }).catch((err) => {\n            console.error(err);\n            setClientCertificates([]);\n        });\n    }, []);\n\n    let mandatoryValue = 'optional';\n    // If not mutual ssl security is selected, no mandatory values should be pre-selected\n    if (!isMutualSSLEnabled) {\n        mandatoryValue = 'null';\n    } else if (\n        !(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            || securityScheme.includes(API_SECURITY_API_KEY))\n    ) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    }\n    return (\n        <>\n            <Grid item xs={12}>\n                <WrappedExpansionPanel className={classes.expansionPanel} id='transportLevel'>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    TransportLevel.transport.level.security'\n                                defaultMessage='Transport Level Security'\n                            />\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <Transports api={api} configDispatcher={configDispatcher} securityScheme={securityScheme} />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={isMutualSSLEnabled}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })}\n                                    value={API_SECURITY_MUTUAL_SSL}\n                                    color='primary'\n                                    id='mutual-ssl-checkbox'\n                                />\n                            )}\n                            label='Mutual SSL'\n                        />\n                        {isMutualSSLEnabled && (\n                            <FormControl component='fieldset'>\n                                <RadioGroup\n                                    aria-label='HTTP security SSL mandatory selection'\n                                    name={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                    value={mandatoryValue}\n                                    onChange={({ target: { name, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { name, value },\n                                    })}\n                                    row\n                                >\n                                    <FormControlLabel\n                                        value={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Mandatory'\n                                        labelPlacement='end'\n                                    />\n                                    <FormControlLabel\n                                        value='optional'\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Optional'\n                                        labelPlacement='end'\n                                    />\n                                </RadioGroup>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.http.mandatory'\n                                        defaultMessage='Choose whether Transport level security is mandatory or\n                                        optional'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n                        {(isMutualSSLEnabled && (!api.advertiseInfo || !api.advertiseInfo.advertised)) && (\n                            // TODO:\n                            // This is half baked!!!\n                            // Refactor the Certificate component to share its capabilities in here and\n                            // endpoints page ~tmkb\n                            <Certificates\n                                isMutualSSLEnabled={isMutualSSLEnabled}\n                                certificates={clientCertificates}\n                                uploadCertificate={saveClientCertificate}\n                                deleteCertificate={deleteClientCertificate}\n                                apiId={id}\n                            />\n                        )}\n                    </ExpansionPanelDetails>\n                </WrappedExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nTransportLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    id: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl((TransportLevel));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Dropzone from 'react-dropzone';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport APIValidation from 'AppData/APIValidation';\nimport SelectEndpoint from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint';\nimport SelectPolicies from '../../../Create/Components/SelectPolicies';\n\nconst dropzoneStyles = {\n    border: '1px dashed #c4c4c4',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: 20,\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'scroll',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n}));\n\n/**\n * This component is used to upload the certificates\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nexport default function UploadCertificate(props) {\n    const {\n        endpoints,\n        uploadCertificate,\n        isMutualSSLEnabled,\n        uploadCertificateOpen,\n        setUploadCertificateOpen,\n        aliasList,\n    } = props;\n    const [alias, setAlias] = useState('');\n    const [policy, setPolicy] = useState('');\n    const [endpoint, setEndpoint] = useState('');\n    const [isSaving, setSaving] = useState(false);\n    const [certificate, setCertificate] = useState({ name: '', content: {} });\n    const [isEndpointEmpty, setIsEndpointEmpty] = useState(false);\n    const [isPoliciesEmpty, setPoliciesEmpty] = useState(false);\n    const [aliasValidity, setAliasValidity] = useState();\n    const classes = useStyles();\n    const [isRejected, setIsRejected] = useState(false);\n\n    const closeCertificateUpload = () => {\n        setUploadCertificateOpen(false);\n        setAliasValidity();\n        setCertificate({ name: '', content: '' });\n        setAlias('');\n        setEndpoint('');\n        setPolicy('');\n    };\n\n    /**\n     * On change functionality to handle the policy dropdown\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { value } = event.target;\n        setPolicy(value);\n    }\n\n    /**\n     * Method to validate the policies.\n     * @param {string} value selected policy.\n     * */\n    const onValidate = (value) => {\n        setPoliciesEmpty(value === '');\n    };\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = () => {\n        setSaving(true);\n        if (isMutualSSLEnabled) {\n            uploadCertificate(certificate.content, policy, alias)\n                .then(() => {\n                    closeCertificateUpload();\n                    aliasList.push(alias);\n                })\n                .finally(() => setSaving(false));\n        } else {\n            uploadCertificate(certificate.content, endpoint, alias)\n                .then(() => {\n                    closeCertificateUpload();\n                    aliasList.push(alias);\n                })\n                .finally(() => setSaving(false));\n        }\n    };\n\n    /**\n     * Handled the file upload action of the dropzone.\n     *\n     * @param {array} file The accepted file list by the dropzone.\n     * */\n    const onDrop = (file) => {\n        const certificateFile = file[0];\n        const rejectedFiles = ['pem', 'txt', 'jks', 'key', 'ca-bundle'];\n        const extension = certificateFile.name.split('.');\n        if (rejectedFiles.includes(extension[1])) {\n            setIsRejected(true);\n        } else {\n            setIsRejected(false);\n        }\n        if (certificateFile) {\n            setCertificate({ name: certificateFile.name, content: certificateFile });\n        }\n    };\n\n    const handleEndpointOnChange = (value) => {\n        setEndpoint(value);\n        if (value) {\n            setIsEndpointEmpty(false);\n        } else {\n            setIsEndpointEmpty(true);\n        }\n    };\n\n    const handleAliasOnBlur = () => {\n        const aliasValidation = APIValidation.alias.required().validate(alias).error;\n        if (aliasValidation) {\n            setAliasValidity({ isValid: false, message: aliasValidation.details[0].message });\n        } else {\n            setAliasValidity({ isValid: true, message: '' });\n        }\n    };\n\n    const getHelperText = () => {\n        if (aliasValidity && !aliasValidity.isValid) {\n            return (aliasValidity.message);\n        } else if (aliasList && aliasList.includes(alias)) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.exist.error'\n                    defaultMessage='Alias already exists'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.default.message'\n                    defaultMessage='Alias for the Certificate'\n                />\n            );\n        }\n    };\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <Dialog open={uploadCertificateOpen}>\n            <DialogTitle>\n                <Typography className={classes.uploadCertDialogHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.uploadCertificate'\n                        defaultMessage='Upload Certificate'\n                    />\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid>\n                    <div>\n                        {isMutualSSLEnabled ? (\n                            <SelectPolicies\n                                multiple={false}\n                                policies={policy}\n                                helperText='Select a throttling policy for the certificate'\n                                onChange={handleOnChange}\n                                required\n                                validate={onValidate}\n                            />\n                        )\n                            : (\n                                <SelectEndpoint\n                                    endpoints={endpoints}\n                                    onChange={handleEndpointOnChange}\n                                    endpoint={endpoint}\n                                    isEndpointEmpty={isEndpointEmpty}\n                                    required\n                                />\n                            )}\n                        <TextField\n                            required\n                            id='certificateAlias'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias'\n                                    defaultMessage='Alias'\n                                />\n                            )}\n                            value={alias}\n                            placeholder='My Alias'\n                            onChange={(event) => setAlias(event.target.value)}\n                            onBlur={() => handleAliasOnBlur()}\n                            margin='normal'\n                            variant='outlined'\n                            error={\n                                (aliasValidity && !aliasValidity.isValid) || (aliasList && aliasList.includes(alias))\n                            }\n                            helperText={getHelperText()}\n                            fullWidth\n                            inputProps={{ maxLength: 45 }}\n                        />\n                        <Dropzone\n                            multiple={false}\n                            accept={\n                                'application/pkcs8,'\n                                    + 'application/pkcs10, application/pkix-crl,'\n                                    + 'application/pkcs7-mime,'\n                                    + 'application/x-x509-ca-cert,'\n                                    + 'application/x-x509-user-cert,'\n                                    + 'application/x-pkcs7-crl,'\n                                    + 'application/x-pkcs12,'\n                                    + 'application/x-pkcs7-certificates,'\n                                    + 'application/x-pkcs7-certreqresp,'\n                                    + '.p8, .p10, .cer, .cert, .p7c, .crt, .der, .p12, .pfx, .p7b, .spc, .p7r'\n                            }\n                            className={classes.dropzone}\n                            activeClassName={classes.acceptDrop}\n                            rejectClassName={classes.rejectDrop}\n                            onDrop={(dropFile) => {\n                                onDrop(dropFile);\n                            }}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps({ style: dropzoneStyles })}>\n                                    <input {...getInputProps()} />\n                                    <div className={classes.dropZoneWrapper} data-testid='cert-upload-btn'>\n                                        {certificate.name === '' ? (\n                                            <div>\n                                                <Icon style={{ fontSize: 56 }}>cloud_upload</Icon>\n                                                <Typography>\n                                                    <FormattedMessage\n                                                        id={\n                                                            'Apis.Details.Endpoints.GeneralConfiguration'\n                                                                + '.UploadCertificate.click.or.drop.to.upload.file'\n                                                        }\n                                                        defaultMessage={\n                                                            'Click or drag the certificate'\n                                                                + ' file to upload.'\n                                                        }\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        ) : iff(\n                                            isRejected,\n                                            <div className={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='error' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' color='error' fontWeight='fontWeightLight'>\n                                                    <Grid xs={12}>\n                                                        {certificate.name}\n                                                    </Grid>\n                                                    <Grid xs={12}>\n                                                        <Typography variant='caption' color='error'>\n                                                            <FormattedMessage\n                                                                id={\n                                                                    'Apis.Details.Endpoints.GeneralConfiguration'\n                                                            + '.UploadCertificate.invalid.file'\n                                                                }\n                                                                defaultMessage='Invalid file type'\n                                                            />\n                                                        </Typography>\n                                                    </Grid>\n                                                </Box>\n                                            </div>,\n                                            <div className={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='primary' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' fontWeight='fontWeightLight'>\n                                                    <Typography>\n                                                        {certificate.name}\n                                                    </Typography>\n                                                </Box>\n                                            </div>,\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeCertificateUpload}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button\n                    id='upload-cert-save-btn'\n                    onClick={saveCertificate}\n                    variant='contained'\n                    color='primary'\n                    autoFocus\n                    disabled={\n                        alias === '' || (aliasValidity && !aliasValidity.isValid)\n                            || (!isMutualSSLEnabled && endpoint === '')\n                            || certificate.name === ''\n                            || (isMutualSSLEnabled && isPoliciesEmpty)\n                            || isSaving || (aliasList && aliasList.includes(alias)) || isRejected\n                    }\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.config.save.button'\n                        defaultMessage='Save'\n                    />\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nUploadCertificate.defaultProps = {\n    isMutualSSLEnabled: false,\n    endpoints: [],\n};\n\nUploadCertificate.propTypes = {\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    isMutualSSLEnabled: PropTypes.bool,\n    setUploadCertificateOpen: PropTypes.func.isRequired,\n    uploadCertificateOpen: PropTypes.bool.isRequired,\n    endpoints: PropTypes.shape([]),\n    aliasList: PropTypes.shape([]).isRequired,\n};\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nexport default function SelectEndpoint(props) {\n    const {\n        onChange,\n        endpoint,\n        isEndpointEmpty,\n        endpoints,\n    } = props;\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <TextField\n            autoFocus\n            error={isEndpointEmpty || endpoints.length === 0}\n            helperText={endpoints.length === 0 ? (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.empty.error'\n                    defaultMessage='Save endpoints before adding the Certificate'\n                />\n            ) : iff(isEndpointEmpty, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.error'\n                defaultMessage='Endpoint should not be empty'\n            />, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.helpertext'\n                defaultMessage='Endpoint for the Certificate'\n            />)}\n            required\n            id='endpoint-certificate'\n            label={(\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint'\n                    defaultMessage='Endpoint'\n                />\n            )}\n            value={endpoint}\n            placeholder='Endpoint'\n            onChange={(event) => onChange(event.target.value)}\n            margin='normal'\n            variant='outlined'\n            fullWidth\n            select\n        >\n            {endpoints !== null && endpoints.map((ep) => {\n                if (ep) {\n                    return (<MenuItem value={ep.url}>{ep.url}</MenuItem>);\n                }\n                return null;\n            })}\n        </TextField>\n    );\n}\n\nSelectEndpoint.propTypes = {\n    endpoints: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpoint: PropTypes.string.isRequired,\n    isEndpointEmpty: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n\n/**\n * Trottling Policies dropdown selector used in minimized API Create form\n * @export\n * @param {*} props\n * @returns {React.Component}\n */\nexport default function SelectPolicies(props) {\n    const {\n        onChange, policies: selectedPolicies, multiple, helperText, isAPIProduct, validate,\n    } = props;\n    const [policies, setPolicies] = useState({});\n    const classes = useStyles();\n    useEffect(() => {\n        API.policies('subscription').then((response) => setPolicies(response.body));\n    }, []);\n    const handleValidateAndChange = ({ target: { value, name } }) => {\n        validate('policies', value);\n        onChange({ target: { name, value } });\n    };\n    if (!policies.list) {\n        return <CircularProgress />;\n    } else {\n        return (\n            <TextField\n                fullWidth\n                select\n                label={(\n                    <>\n                        <FormattedMessage\n                            id='Apis.Create.Components.SelectPolicies.business.plans'\n                            defaultMessage='Business plan(s)'\n                        />\n                        {isAPIProduct && (<sup className={classes.mandatoryStar}>*</sup>)}\n                    </>\n                )}\n                value={selectedPolicies}\n                name='policies'\n                onChange={handleValidateAndChange}\n                SelectProps={{\n                    multiple,\n                    renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                }}\n                helperText={isAPIProduct ? helperText + 'API Product' : helperText + 'API'}\n                margin='normal'\n                variant='outlined'\n                InputProps={{\n                    id: 'itest-id-apipolicies-input',\n                }}\n                InputLabelProps={{\n                    for: 'itest-id-apipolicies-input',\n                }}\n            >\n                {policies.list.map((policy) => (\n                    <MenuItem\n                        dense\n                        disableGutters={multiple}\n                        id={policy.name}\n                        key={policy.name}\n                        value={policy.displayName}\n                    >\n                        {multiple && <Checkbox color='primary' checked={selectedPolicies.includes(policy.name)} />}\n                        <ListItemText primary={policy.displayName} secondary={policy.description} />\n                    </MenuItem>\n                ))}\n            </TextField>\n        );\n    }\n}\n\nSelectPolicies.defaultProps = {\n    policies: [],\n    multiple: true,\n    required: false,\n    isAPIProduct: PropTypes.bool.isRequired,\n    helperText: 'Select one or more throttling policies for the ',\n};\n","/*\n * Copyright (c) 2022, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {Typography} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport UsageIcon from '@material-ui/icons/List';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api';\nimport MUIDataTable from \"mui-datatables\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\ntype CertificateUsageProps = {\n    certAlias: string\n};\n\ntype APIMetaData = {\n    id: string,\n    name: string,\n    context: string,\n    version: string,\n    provider: string\n}\n\n// @ts-ignore\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n        flexDirection: 'row',\n        display: 'flex',\n    },\n    usageDialogHeader: {\n        fontWeight: '600',\n        fontSize: 'h6.fontSize',\n        marginRight: 10,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n}));\n\n/**\n *\n * @param {any} props Props for usage function.\n * @returns {any} Returns the rendered UI for scope usage.\n */\nexport const CertificateUsage = (props: CertificateUsageProps) => {\n    const { certAlias } = props;\n    const classes = useStyles();\n    const [open, setOpen] = useState<boolean>(false);\n    const [usageData, setUsageData] = useState<any>( []);\n    const [page, setPage] = useState<number>(0);\n    const [rowsPerPage, setRowsPerPage] = useState<number>(5);\n    const [count, setCount] = useState<number>(-1);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const fetchUsage = (alias: string, limit: number, offset: number) => {\n        setIsLoading( true);\n        API.getEndpointCertificateUsage(alias, String(limit), String(offset)).then((response: any) => {\n            const {list} = response.body;\n            const {pagination} = response.body;\n            const usageList = list.map((api: APIMetaData) => {\n                const usageListItem = [];\n                usageListItem.push(api.name);\n                usageListItem.push(api.context);\n                usageListItem.push(api.version);\n                usageListItem.push(api.provider);\n                return usageListItem;\n            });\n            setUsageData(usageList);\n            setIsLoading(false);\n            setCount(pagination.total);\n        });\n    }\n\n    useEffect(() => {\n        fetchUsage(certAlias,5,0);\n    }, []);\n\n    const changePage = (newPage: number) => {\n        const offset = rowsPerPage * newPage;\n        fetchUsage(certAlias, rowsPerPage, offset);\n        setPage(newPage);\n    };\n\n    const changeRowsPerPage = (newRowsPerPage: number) => {\n        let offset = newRowsPerPage * page;\n        if (offset > count) {\n            offset = 0;\n        } else if (count - 1 === offset && page !== 0) {\n            offset = newRowsPerPage * page - 1;\n        }\n        fetchUsage(certAlias, newRowsPerPage, offset);\n        setRowsPerPage(newRowsPerPage);\n    };\n\n    const handleUsageOpen = () => {\n        setOpen(true);\n    };\n\n    const handleUsageCancel = () => {\n        setOpen(false);\n    };\n\n    const columns = [\n        'API Name',\n        'Context',\n        'Version',\n        'Provider',\n    ];\n\n    const options = {\n        filterType: 'multiselect',\n        selectableRows: 'none',\n        title: false,\n        filter: false,\n        sort: false,\n        print: false,\n        download: false,\n        viewColumns: false,\n        customToolbar: false,\n        search: false,\n        paginated: true,\n        rowsPerPageOptions: [5, 10, 15],\n        serverSide: true,\n        rowsPerPage,\n        count,\n        page,\n        onChangePage: changePage,\n        onChangeRowsPerPage: changeRowsPerPage\n    };\n\n\n    const dialogTitle = (\n        <div className={classes.root}>\n            <Typography className={classes.usageDialogHeader}>\n                <FormattedMessage\n                    id='APIs.details.endpoints.certificate.usage'\n                    defaultMessage='Usages of certificate - '\n                />\n                {certAlias}\n                {isLoading && (\n                    <CircularProgress\n                        size={24}\n                        style={{ marginLeft: 15, position: \"relative\", top: 4 }}\n                    />\n                )}\n            </Typography>\n        </div>\n    );\n\n    const dialogContent = (\n        <div id='certificate-usage-table'>\n            {/* @ts-ignore */}\n            <MUIDataTable options={options} title={false} data={usageData} columns={columns}/>\n        </div>\n    );\n\n    return (\n        <div>\n            <Button onClick={handleUsageOpen} id='certificate-usage-btn'>\n                <UsageIcon />\n            </Button>\n            <Dialog open={open} maxWidth='xl'>\n                <DialogTitle>\n                    <Typography className={classes.usageDialogHeader}>\n                        {dialogTitle}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {dialogContent}\n                </DialogContent>\n                <DialogActions>\n                    <Button id='certificate-usage-cancel-btn' onClick={handleUsageCancel}>\n                        <FormattedMessage\n                            id='APIs.details.endpoints.certificate.usage.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nCertificateUsage.propTypes = {\n    certAlias: PropTypes.string.isRequired,\n};\n\nexport default CertificateUsage;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { API_SECURITY_MUTUAL_SSL } from './APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n}));\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Transports(props) {\n    const { api, configDispatcher, securityScheme } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const Validate = () => {\n        if (api.transport && api.transport.length === 0) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.transport.empty'\n                        defaultMessage='Please select at least one transport!'\n                    />\n                </Typography>\n            );\n        } else if (isMutualSSLEnabled && !api.transport.includes('https')) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.transport.sslHttps'\n                    defaultMessage='Please select Https as transport with mutual SSL!'\n                />\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.transports'\n                            defaultMessage='Transports'\n                        />\n                    </FormLabel>\n                    <FormGroup style={{ display: 'flow-root' }}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('http') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'http' },\n                                    })}\n                                    value='http'\n                                    color='primary'\n                                    id='http-transport'\n                                />\n                            )}\n                            label='HTTP'\n                        />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('https') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'https' },\n                                    })}\n                                    value='https'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTPS'\n                        />\n                    </FormGroup>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Transports.tooltip'\n                            defaultMessage={\n                                'API will be exposed in selected transport(s) in the gateway(s)'\n                                + ' If Mutual SSL option is selected, a trusted client'\n                                + ' certificate should be presented to access the API'\n                            }\n                        />\n                    )}\n                    aria-label='Transports'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <span className={classes.error}>\n                    <Validate />\n                </span>\n            </Grid>\n        </Grid>\n    );\n}\n\nTransports.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Container from '@material-ui/core/Container';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Progress } from 'AppComponents/Shared';\nimport UpdateComplexity from '../../QueryAnalysis/UpdateComplexity';\n\nconst useStyles = makeStyles(() => ({\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 'auto',\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subTitle: {\n        marginTop: 20,\n    },\n    subTitleDescription: {\n        marginBottom: 10,\n    },\n    flowWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    heading: {\n        margin: 'auto',\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    paper: {\n        padding: '10px 24px',\n        width: 'auto',\n    },\n    editIcon: {\n        position: 'absolute',\n        top: 8,\n        right: 0,\n    },\n    dialogPaper: {\n        minHeight: '95vh',\n        maxHeight: '95vh',\n        minWidth: '150vh',\n        maxWidth: '150vh',\n    },\n}));\n\n/**\n * The base component of the GraphQL Query Analysis.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nexport default function GraphQLQueryAnalysis(props) {\n    const {\n        api,\n        setUpdateComplexityList,\n    } = props;\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n    const [list, setList] = useState(null);\n    const [typelist, setTypeList] = useState([]);\n\n    /**\n     * Get Summation of field's complexity value of all types\n     * @param {Object of array} List\n     */\n    function findSummation(List) {\n        const type = [...new Set(List.map((respond) => respond.type))];\n        const array = [];\n        type.map((respond) => {\n            const ob = {};\n            ob.type = respond;\n            ob.summation = 0;\n            List.map((obj) => {\n                if (obj.type === respond) {\n                    ob.summation += obj.complexityValue;\n                }\n                return ob;\n            });\n            array.push(ob);\n            return array;\n        });\n        setTypeList(array);\n    }\n\n    /**\n     * Set the Initial Complexity Values to the field's\n     */\n\n    function setInitialComplexity() {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexityType = apiClient.getGraphqlPoliciesComplexityTypes(apiId);\n        promisedComplexityType\n            .then((res) => {\n                const array = [];\n                res.typeList.map((respond) => {\n                    respond.fieldList.map((ob) => {\n                        const obj = {};\n                        obj.type = respond.type;\n                        obj.field = ob;\n                        obj.complexityValue = 1;\n                        array.push(obj);\n                        return ob;\n                    });\n                    return array;\n                });\n                setList(array);\n                findSummation(array);\n            });\n    }\n\n    useEffect(() => {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.getGraphqlPoliciesComplexity(apiId);\n        promisedComplexity\n            .then((res) => {\n                setList(res.list);\n                findSummation(res.list);\n                if (res.list.length === 0) {\n                    setInitialComplexity();\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }, []);\n\n    /**\n    * Edit Custom Complexity Values\n    */\n    function editComplexity() {\n        setUpdateComplexityList(list);\n        findSummation(list);\n        setOpen(false);\n    }\n    /**\n     * set open state of the dialog box\n     */\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    if (list === null) {\n        return <Progress />;\n    }\n\n    return (\n        <>\n            <Paper className={classes.paper} spacing={2}>\n                <Grid container spacing={2} alignItems='flex-start'>\n                    <Grid item md={12} style={{ position: 'relative', display: 'inline-flex' }}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configurartion.components.QueryAnalysis'\n                                defaultMessage='Query Analysis'\n                            />\n                        </Typography>\n                        <Typography className={classes.heading}>\n\n                            <span>update complexity</span>\n\n                        </Typography>\n                        <Button\n                            className={classes.editIcon}\n                            size='small'\n                            onClick={handleClickOpen}\n                            disabled={isRestricted(['apim:api_create'], api)}\n                        >\n                            <EditRounded />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Dialog\n                classes={{ paper: classes.dialogPaper }}\n                open={open}\n                aria-labelledby='responsive-dialog-title'\n            >\n                <DialogTitle id='responsive-dialog-title'>\n                    <Typography className={classes.subHeading} variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configurartion.components.QueryAnalysis.edit'\n                            defaultMessage='Edit Complexity Values'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <DialogContentText>\n                        <Container fixed>\n                            <UpdateComplexity\n                                list={list}\n                                setList={setList}\n                                typelist={typelist}\n                            />\n                        </Container>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={editComplexity}\n                            className={classes.saveButton}\n                        >\n\n                            <FormattedMessage\n                                id='Apis.Details.QyeryAnalysis.UpdateComplexity.save'\n                                defaultMessage='Set'\n                            />\n\n                        </Button>\n                    </Grid>\n                    <Button onClick={handleClose} color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Configurartion.components.QueryAnalysis.cancle.btn'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nGraphQLQueryAnalysis.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    setUpdateComplexityList: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport TableCell from '@material-ui/core/TableCell';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n *\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nexport default function UpdateComplexity(props) {\n    const classes = useStyles();\n    const [filterKeyWord, setFilter] = useState('');\n    const {\n        setList, typelist, list,\n    } = props;\n\n    /**\n     * Filter the information by Types.\n     */\n\n    const setFilterByKeyWord = (event) => {\n        setFilter(event.target.value.toLowerCase());\n    };\n\n    return (\n        <>\n            <Grid item md={2}>\n                <Box mt={4} pb={2}>\n                    <div className={classes.searchWrapper}>\n                        <TextField\n                            id='outlined-full-width'\n                            label='Type'\n                            placeholder='Search By Types'\n                            onChange={(e) => setFilterByKeyWord(e, typelist)}\n                            fullWidth\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </Box>\n            </Grid>\n            <Grid item md={12}>\n                <Table stickyHeader>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.typeName'\n                                        defaultMessage='Type'\n                                    />\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.fieldcomplexity'\n                                        defaultMessage='Fields'\n                                    />\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.fieldcomplexitysum'\n                                        defaultMessage='Sum of the Complexity'\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {typelist.filter(\n                            (item) => item.type.toLowerCase().includes(filterKeyWord),\n                        ).map((typename) => {\n                            return (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {typename.type}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <ExpansionPanel>\n                                            <ExpansionPanelSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls='panel1a-content'\n                                                id='panel1a-header'\n                                            />\n                                            <ExpansionPanelDetails>\n                                                <Grid item md={12}>\n                                                    <Table>\n                                                        <TableRow>\n                                                            <TableCell>\n                                                                <b>Field</b>\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                <b>ComplexityValue</b>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                        {list.map((respond, index) => ((respond.type === typename.type)\n                                                     && (\n                                                         <TableRow>\n                                                             <TableCell>\n                                                                 {respond.field}\n                                                             </TableCell>\n                                                             <TableCell>\n                                                                 <TextField\n                                                                     id='complexityValue'\n                                                                     label='complexityValue'\n                                                                     margin='normal'\n                                                                     variant='outlined'\n                                                                     value={respond.complexityValue}\n                                                                     onChange={(event) => {\n                                                                         const newArr = [...list];\n                                                                         newArr[index] = {\n                                                                             type: respond.type,\n                                                                             field: respond.field,\n                                                                             complexityValue: +event.target.value,\n                                                                         };\n                                                                         setList(newArr);\n                                                                     }}\n                                                                 />\n                                                             </TableCell>\n                                                         </TableRow>\n                                                     )))}\n                                                    </Table>\n                                                </Grid>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {typename.summation}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Grid>\n        </>\n    );\n}\n\nUpdateComplexity.propTypes = {\n    setList: PropTypes.func.isRequired,\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            field: PropTypes.string,\n            complexityValue: PropTypes.number,\n        }),\n    ).isRequired,\n    typelist: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            summation: PropTypes.number,\n        }),\n    ).isRequired,\n};\n","/*\n * Copyright (c) 2022, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport WrappedExpansionPanel from 'AppComponents/Shared/WrappedExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        marginLeft: '0px',\n        marginTop: '-7px',\n        marginBottom: '-7px',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n * api.webSubConfiguration possible values true and false\n * @export\n * @param {*} props\n * @returns\n */\nexport default function WebSubConfiguration(props) {\n    const { api, configDispatcher } = props;\n    const { api: apiFromContext } = useAPI();\n    const classes = useStyles();\n    return (\n        <WrappedExpansionPanel className={classes.expansionPanel} id='webSubConfiguration'>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6' component='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.WebSubConfiguration.configuration'\n                        defaultMessage='WebSub Configuration'\n                    />\n                </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container>\n                    <Grid item>\n                        <FormControlLabel\n                            className={classes.actionSpace}\n                            label={(\n                                <Typography>\n                                    <FormattedMessage\n                                        id={\n                                            'Apis.Details.Configuration.components.WebSubConfiguration.configuration'\n                                            + '.subVerification'\n                                        }\n                                        defaultMessage='Enable subscriber verification'\n                                    />\n                                    <Tooltip\n                                        title={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components.WebSubConfiguration'\n                                                    + '.configuration.subVerification.tooltip'\n                                                }\n                                                defaultMessage={\n                                                    'If enabled, APIM will perform verification of intent '\n                                                    + 'for the subscription API'\n                                                }\n                                            />\n                                        )}\n                                        aria-label='WebSub Configuration helper text'\n                                        placement='right-end'\n                                        interactive\n                                    >\n                                        <HelpOutline className={classes.iconSpace} />\n                                    </Tooltip>\n                                </Typography>\n                            )}\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={\n                                        api.enableSubscriberVerification === undefined ? \n                                            false : api.enableSubscriberVerification\n                                    }\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'enableSubscriberVerification',\n                                        value: checked,\n                                    })}\n                                    color='primary'\n                                    inputProps={{\n                                        'aria-label': 'WebSub Configuration',\n                                    }}\n                                    id='websub-verification-checkbox'\n                                />\n                            )}\n                        />\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </WrappedExpansionPanel>\n    );\n}\n\nWebSubConfiguration.propTypes = {\n    api: PropTypes.shape({ enableSubscriberVerification: PropTypes.bool }).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useEffect, useState, useCallback,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash/isEmpty';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\nimport API from 'AppData/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport AsyncOperation from '../Resources/components/AsyncOperation';\nimport GroupOfOperations from '../Resources/components/operationComponents/asyncapi/GroupOfOperations';\nimport AddOperation from '../Resources/components/AddOperation';\nimport SubscriptionConfig from '../Resources/components/operationComponents/asyncapi/SubscriptionConfig';\nimport { extractAsyncAPIPathParameters } from '../Resources/operationUtils';\nimport SaveOperations from '../Resources/components/SaveOperations';\n\nconst verbMap = {\n    sub: 'subscribe',\n    pub: 'publish',\n};\n\n/**\n * This component handles the Resource page in API details though it's written in a sharable way\n * that anyone could use this to render resources in anywhere else if needed.\n *\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function Topics(props) {\n    const {\n        disableUpdate,\n        disableAddOperation,\n    } = props;\n\n    const [api, updateAPI] = useAPI();\n    const [pageError, setPageError] = useState(false);\n    const [sharedScopes, setSharedScopes] = useState();\n    const [sharedScopesByName, setSharedScopesByName] = useState();\n    const [asyncAPISpec, setAsyncAPISpec] = useState({});\n    const [securityDefScopes, setSecurityDefScopes] = useState({});\n    const isAsyncAPI = api.type === 'WEBSUB' || api.type === 'WS' || api.type === 'SSE';\n    const [markedOperations, setSelectedOperation] = useState({});\n\n    /**\n     *\n     * @param {*} spec\n     * @param {*} ref\n     */\n    function getRefTarget(spec, ref) {\n        const arr = ref.split('/');\n        const i = (arr[0] === '#') ? 1 : 0;\n        let target = spec;\n        for (let j = i; j < arr.length; j++) {\n            target = target[arr[j]];\n        }\n        return target;\n    }\n\n    /**\n     *\n     * @param {*} spec\n     * @param {*} parent\n     */\n    function resolveSpec(spec, source) {\n        if (typeof source === 'object') {\n            let o = {};\n            Object.entries(source).forEach(([k, v]) => {\n                if (v !== null) {\n                    if (k !== '$ref') {\n                        o[k] = resolveSpec(spec, v);\n                    } else {\n                        const resolvedRef = resolveSpec(spec, getRefTarget(spec, v));\n                        o = { ...o, ...resolvedRef };\n                    }\n                }\n            });\n            return o;\n        }\n        return source;\n    }\n\n    /**\n     *\n     * @param {*} state\n     * @param {*} configAction\n     */\n    function websubSubscriptionConfigReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = { ...state };\n        switch (action) {\n            case 'enable':\n                nextState.enable = value;\n                if (!value) {\n                    nextState.secret = '';\n                }\n                break;\n            case 'signingAlgorithm':\n            case 'signatureHeader':\n            case 'secret':\n                nextState[action] = value;\n                break;\n            default:\n                return nextState;\n        }\n        return nextState;\n    }\n    const initialWebsubSubscriptionConfig = api.websubSubscriptionConfiguration || {\n        enable: false,\n        signingAlgorithm: '',\n        signatureHeader: '',\n        secret: '',\n    };\n\n    const [websubSubscriptionConfiguration, websubSubscriptionConfigDispatcher] = useReducer(\n        websubSubscriptionConfigReducer, initialWebsubSubscriptionConfig,\n    );\n\n    /**\n     *\n     *\n     * @param {*} currenPaths\n     * @param {*} action\n     */\n    function operationsReducer(currentOperations, operationAction) {\n        const { action, data } = operationAction;\n        const { target, verb, value } = data || {};\n        const addedOperations = cloneDeep(currentOperations);\n        let updatedOperation;\n        if (target) {\n            updatedOperation = cloneDeep(currentOperations[target]);\n        }\n\n        switch (action) {\n            case 'init':\n                setSelectedOperation({});\n                return data || asyncAPISpec.channels;\n            case 'description':\n                updatedOperation[action] = value;\n                return {\n                    ...currentOperations,\n                    [target]: { ...currentOperations[target], description: updatedOperation.description },\n                };\n            case 'uriMapping':\n                return {\n                    ...currentOperations,\n                    [target]: {\n                        ...currentOperations[target],\n                        [verb]: {\n                            ...currentOperations[target][verb],\n                            'x-uri-mapping': value,\n                        },\n                    },\n                };\n            case 'authType':\n                updatedOperation['x-auth-type'] = value ? 'Any' : 'None';\n                return {\n                    ...currentOperations,\n                    [target]: { ...currentOperations[target], 'x-auth-type': updatedOperation['x-auth-type'] },\n                };\n            case 'add':\n                // If target is not there add an empty object\n                if (!addedOperations[data.target]) {\n                    addedOperations[data.target] = {};\n                }\n                addedOperations[data.target].parameters = extractAsyncAPIPathParameters(data.target);\n                // eslint-disable-next-line no-case-declarations\n                let alreadyExistCount = 0;\n                for (let currentVerb of data.verbs) {\n                    currentVerb = verbMap[currentVerb];\n                    if (addedOperations[data.target][currentVerb]) {\n                        const message = `Operation already exist with ${data.target} and ${currentVerb}`;\n                        Alert.warning(message);\n                        console.warn(message);\n                        alreadyExistCount++;\n                    } else {\n                        addedOperations[data.target][currentVerb] = { };\n                    }\n                }\n                if (alreadyExistCount === data.verbs.length) {\n                    Alert.error('Operation(s) already exist!');\n                    return currentOperations;\n                }\n                return addedOperations;\n            case 'parameter':\n                updatedOperation.parameters = updatedOperation.parameters || { };\n                updatedOperation.parameters[value.name] = { ...value };\n                delete updatedOperation.parameters[value.name].name;\n                return {\n                    ...currentOperations,\n                    [target]: { ...currentOperations[target], parameters: updatedOperation.parameters },\n                };\n            case 'addPayloadProperty':\n                updatedOperation[verb].message = updatedOperation[verb].message || { };\n                updatedOperation[verb].message.payload = updatedOperation[verb].message.payload || { };\n                updatedOperation[verb].message.payload.type = 'object';\n                updatedOperation[verb].message.payload.properties = updatedOperation[verb].message.payload.properties\n                    || { };\n                updatedOperation[verb].message.payload.properties[value.name] = {\n                    description: value.description,\n                    type: value.type,\n                };\n                break;\n            case 'deletePayloadProperty':\n                delete updatedOperation[verb].message.payload.properties[value];\n                break;\n            case 'payloadProperty':\n                updatedOperation[verb].message.payload.properties[value.name] = value;\n                break;\n            case 'scopes': {\n                const defValue = value[0];\n                updatedOperation[verb]['x-scopes'] = [];\n                for (let i = 0; i < defValue.length; i++) {\n                    updatedOperation[verb]['x-scopes'].push(defValue[i]);\n                }\n\n                for (const selectedScope of defValue) {\n                    if (selectedScope\n                        && !securityDefScopes[selectedScope]\n                        && securityDefScopes[selectedScope] !== '') {\n                        let scopeDescription = '';\n                        if (selectedScope in sharedScopesByName) {\n                            if (sharedScopesByName[selectedScope].scope.description !== null) {\n                                scopeDescription = sharedScopesByName[selectedScope].scope.description;\n                            }\n                            securityDefScopes[selectedScope] = scopeDescription;\n                        }\n                        setSecurityDefScopes(securityDefScopes);\n                    }\n                }\n                break;\n            }\n            default:\n                return currentOperations;\n        }\n        return {\n            ...currentOperations,\n            [target]: { ...currentOperations[target], [verb]: updatedOperation[verb] },\n        };\n    }\n    const [operations, operationsDispatcher] = useReducer(operationsReducer, {});\n\n    /**\n     *\n     *\n     * @param {*} operation\n     * @param {*} checked\n     */\n    function onOperationSelectM(operation, checked) {\n        const { target, verb } = operation;\n        setSelectedOperation((currentSelections) => {\n            const nextSelectedOperations = cloneDeep(currentSelections);\n            if (!nextSelectedOperations[target]) {\n                nextSelectedOperations[target] = {};\n            }\n            if (checked) {\n                nextSelectedOperations[target][verb] = checked;\n            } else {\n                delete nextSelectedOperations[target][verb];\n            }\n            if (isEmpty(nextSelectedOperations[target])) {\n                delete nextSelectedOperations[target];\n            }\n            return nextSelectedOperations;\n        });\n    }\n    const onMarkAsDelete = useCallback(onOperationSelectM, [setSelectedOperation]);\n\n    /**\n     *\n     * @param {*} spec\n     */\n    function verifySecurityScheme(spec) {\n        /* eslint-disable no-param-reassign */\n        spec.components = spec.components || {};\n        spec.components.securitySchemes = spec.components.securitySchemes || {};\n        spec.components.securitySchemes.oauth2 = spec.components.securitySchemes.oauth2 || { type: 'oauth2' };\n        spec.components.securitySchemes.oauth2.flows = spec.components.securitySchemes.oauth2.flows || {};\n        spec.components.securitySchemes.oauth2.flows.implicit = spec.components.securitySchemes.oauth2.flows.implicit\n            || {};\n        spec.components.securitySchemes.oauth2.flows.implicit.scopes = spec.components.securitySchemes.oauth2.flows\n            .implicit.scopes || {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    /**\n     * This method sets the securityDefinitionScopes from the spec\n     * @param {Object} spec The original swagger content.\n     */\n    function setSecurityDefScopesFromSpec(spec) {\n        verifySecurityScheme(spec);\n        setSecurityDefScopes(cloneDeep(spec.components.securitySchemes.oauth2.flows.implicit.scopes));\n    }\n\n    /**\n     * This method sets the scopes of the spec from the securityDefinitionScopes\n     */\n    function setSpecScopesFromSecurityDefScopes() {\n        verifySecurityScheme(asyncAPISpec);\n        asyncAPISpec.components.securitySchemes.oauth2.flows.implicit.scopes = securityDefScopes;\n    }\n\n    /**\n     *\n     * @param {*} rawSpec The original swagger content.\n     * @returns {null}\n     */\n    function resolveAndUpdateSpec(rawSpec) {\n        const resolvedChannels = resolveSpec(rawSpec, rawSpec);\n        const resolvedSpec = { ...rawSpec, channels: resolvedChannels.channels };\n        operationsDispatcher({ action: 'init', data: resolvedSpec.channels });\n        setAsyncAPISpec(resolvedSpec);\n        setSecurityDefScopesFromSpec(rawSpec);\n    }\n\n    /**\n     *\n     * Update the asyncapi using /asyncapi PUT operation and then fetch the updated API Object doing a apis/{api-uuid}\n     * GET\n     * @param {JSON} spec Updated full AsyncAPI spec ready to PUT\n     * @returns {Promise} Promise resolving to updated API object\n     */\n    function updateAsyncAPIDefinition(spec) {\n        return api\n            .updateAsyncAPIDefinition(spec)\n            .then((response) => resolveAndUpdateSpec(response.body))\n            .then(updateAPI)\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    setPageError(error.response.body);\n                } else {\n                    Alert.error('Error while updating the definition');\n                }\n            });\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    function updateSecurityDefinition(apiOperations) {\n        Object.keys(securityDefScopes).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const [, verbs] of Object.entries(apiOperations)) {\n                for (const [, verbInfo] of Object.entries(verbs)) {\n                    // Checking if the scope resides in the operation\n                    for (const secDef of verbInfo.security || []) {\n                        if (secDef\n                            && secDef.default\n                            && secDef.default.includes(key)) {\n                            isScopeExistsInOperation = true;\n                            break;\n                        }\n                    }\n\n                    if (isScopeExistsInOperation) {\n                        break;\n                    }\n                }\n                if (isScopeExistsInOperation) {\n                    break;\n                }\n            }\n        });\n        setSecurityDefScopes(securityDefScopes);\n    }\n\n    /**\n     *\n     * Save the OpenAPI changes using REST API, type parameter is required to\n     * identify the locally created data structured, i:e type `operation` will assume that `data` contains the\n     * object structure of locally created operation object which is a combination of REST API\n     * response `operations` field and OpenAPI spec operation information\n     * @param {String} type Type of data object\n     * @param {Object} data Data object\n     * @returns {Promise|null} A promise object which resolve to Swagger PUT response body.\n     */\n    function updateAsyncAPI() {\n        const copyOfOperations = cloneDeep(operations);\n        for (const [target, verbs] of Object.entries(markedOperations)) {\n            for (const verb of Object.keys(verbs)) {\n                delete copyOfOperations[target][verb];\n                if (!copyOfOperations[target].publish && !copyOfOperations[target].subscribe) {\n                    delete copyOfOperations[target];\n                }\n            }\n        }\n\n        updateSecurityDefinition(copyOfOperations);\n        setSpecScopesFromSecurityDefScopes();\n        if (websubSubscriptionConfiguration !== api.websubSubscriptionConfiguration) {\n            return updateAPI({ websubSubscriptionConfiguration })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error('Error while updating the API');\n                })\n                .then(() => updateAsyncAPIDefinition({ ...asyncAPISpec, channels: copyOfOperations }));\n        } else {\n            return updateAsyncAPIDefinition({ ...asyncAPISpec, channels: copyOfOperations });\n        }\n    }\n\n    useEffect(() => {\n        if (api.apitype !== 'APIProduct') {\n            API.getAllScopes()\n                .then((response) => {\n                    if (response.body && response.body.list) {\n                        const sharedScopesList = [];\n                        const sharedScopesByNameList = {};\n                        const shared = true;\n                        for (const scope of response.body.list) {\n                            const modifiedScope = {};\n                            modifiedScope.scope = scope;\n                            modifiedScope.shared = shared;\n                            sharedScopesList.push(modifiedScope);\n                            sharedScopesByNameList[scope.name] = modifiedScope;\n                        }\n                        setSharedScopes(sharedScopesList);\n                        setSharedScopesByName(sharedScopesByNameList);\n                    }\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        // Update the Swagger spec object when API object gets changed\n        api.getAsyncAPIDefinition()\n            .then((response) => {\n                resolveAndUpdateSpec(response.body);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                }\n                console.error(error);\n            });\n    }, [api.id]);\n\n    // Note: Make sure not to use any hooks after/within this condition , because it returns conditionally\n    // If you do so, You will probably get `Rendered more hooks than during the previous render.` exception\n    // if ((!pageError && isEmpty(openAPISpec)) || (resolvedSpec.errors.length === 0 && isEmpty(resolvedSpec.spec))) {\n    if ((!pageError && isEmpty(asyncAPISpec))) {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress disableShrink />\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid container direction='row' justify='flex-start' spacing={2} alignItems='stretch'>\n            {pageError && (\n                <Grid item md={12}>\n                    <Banner onClose={() => setPageError(null)} disableActions type='error' message={pageError} />\n                </Grid>\n            )}\n            {!isRestricted(['apim:api_create'], api) && !disableAddOperation\n            && api.type === 'WEBSUB' && (api.gatewayVendor === 'wso2') && (\n                <Grid item md={12} xs={12}>\n                    <SubscriptionConfig\n                        websubSubscriptionConfigDispatcher={websubSubscriptionConfigDispatcher}\n                        websubSubscriptionConfiguration={websubSubscriptionConfiguration}\n                    />\n                </Grid>\n            )}\n            {!isRestricted(['apim:api_create'], api) && !disableAddOperation\n            && (api.gatewayVendor === 'wso2') && (\n                <Grid item md={12} xs={12}>\n                    <AddOperation operationsDispatcher={operationsDispatcher} isAsyncAPI={isAsyncAPI} api={api} />\n                </Grid>\n            )}\n            <Grid item md={12}>\n                <Paper>\n                    {\n                        operations && Object.entries(operations).map(([target, operation]) => (\n                            <GroupOfOperations tag={target} operation={operation}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                    justify='flex-start'\n                                    spacing={1}\n                                    alignItems='stretch'\n                                >\n                                    {operation.subscribe && (\n                                        <Grid key={target + '_subscribe'} item md={12}>\n                                            <AsyncOperation\n                                                target={target}\n                                                verb='subscribe'\n                                                highlight\n                                                operation={operation}\n                                                spec={asyncAPISpec}\n                                                api={api}\n                                                operationsDispatcher={operationsDispatcher}\n                                                sharedScopes={sharedScopes}\n                                                markAsDelete={Boolean(markedOperations[target]\n                                                        && markedOperations[target].subscribe)}\n                                                onMarkAsDelete={onMarkAsDelete}\n                                                disableDelete={api.gatewayVendor === 'solace'}\n                                            />\n                                        </Grid>\n                                    )}\n                                    {operation.publish && (\n                                        <Grid key={target + '_publish'} item md={12}>\n                                            <AsyncOperation\n                                                target={target}\n                                                verb='publish'\n                                                highlight\n                                                operation={operation}\n                                                spec={asyncAPISpec}\n                                                api={api}\n                                                operationsDispatcher={operationsDispatcher}\n                                                sharedScopes={sharedScopes}\n                                                markAsDelete={Boolean(markedOperations[target]\n                                                        && markedOperations[target].publish)}\n                                                onMarkAsDelete={onMarkAsDelete}\n                                                disableDelete={api.gatewayVendor === 'solace'}\n                                            />\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </GroupOfOperations>\n                        ))\n                    }\n                </Paper>\n                <Grid\n                    style={{ marginTop: '25px' }}\n                    container\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    {!disableUpdate && (\n                        <SaveOperations\n                            operationsDispatcher={operationsDispatcher}\n                            updateAsyncAPI={updateAsyncAPI}\n                            api={api}\n                        />\n                    )}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nTopics.defaultProps = {\n    operationProps: { disableDelete: false },\n    disableUpdate: false,\n    disableAddOperation: false,\n};\n\nTopics.propTypes = {\n    disableAddOperation: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    operationProps: PropTypes.shape({\n        disableDelete: PropTypes.bool,\n    }),\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\n\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport DescriptionAndSummary from './operationComponents/asyncapi/DescriptionAndSummary';\nimport OperationGovernance from './operationComponents/asyncapi/OperationGovernance';\nimport Parameters from './operationComponents/asyncapi/Parameters';\nimport PayloadProperties from './operationComponents/asyncapi/PayloadProperties';\nimport Runtime from './operationComponents/asyncapi/Runtime';\n\n/**\n *\n * Handle the operation UI\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nfunction AsyncOperation(props) {\n    const {\n        operation,\n        operationsDispatcher,\n        highlight,\n        api,\n        disableDelete,\n        disableUpdate,\n        onMarkAsDelete,\n        markAsDelete,\n        spec,\n        target,\n        verb,\n        sharedScopes,\n    } = props;\n\n    const trimmedVerb = verb === 'publish' || verb === 'subscribe' ? verb.substr(0, 3) : verb;\n\n    const [isExpanded, setIsExpanded] = useState(false);\n    const useStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[trimmedVerb];\n        return {\n            customButton: {\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            },\n            paperStyles: {\n                border: `1px solid ${backgroundColor}`,\n                borderBottom: '',\n            },\n            customDivider: {\n                backgroundColor,\n            },\n            linearProgress: {\n                height: '2px',\n            },\n            highlightSelected: {\n                backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n            },\n            contentNoMargin: {\n                margin: theme.spacing(0),\n            },\n            overlayUnmarkDelete: {\n                position: 'absolute',\n                zIndex: theme.zIndex.operationDeleteUndo,\n                right: '10%',\n            },\n        };\n    });\n    const isUsedInAPIProduct = false;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function toggleDelete(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        setIsExpanded(false);\n        onMarkAsDelete({ verb, target }, !markAsDelete);\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     * @param {*} expanded\n     */\n    function handleExpansion(event, expanded) {\n        setIsExpanded(expanded);\n    }\n    const classes = useStyles();\n    return (\n        <>\n            {markAsDelete && (\n                <Box className={classes.overlayUnmarkDelete}>\n                    <Tooltip title='Marked for delete' aria-label='Marked for delete'>\n                        <Button onClick={toggleDelete} variant='outlined' style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.Operation.undo.delete'\n                                defaultMessage='Undo Delete'\n                            />\n                        </Button>\n                    </Tooltip>\n                </Box>\n            )}\n            <ExpansionPanel\n                expanded={isExpanded}\n                onChange={handleExpansion}\n                disabled={markAsDelete}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={highlight ? classes.highlightSelected : ''}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel2a-content'\n                    id='panel2a-header'\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={11}>\n                            <Badge invisible='false' color='error' variant='dot'>\n                                <Button\n                                    disableFocusRipple\n                                    variant='outlined'\n                                    size='small'\n                                    className={classes.customButton}\n                                >\n                                    {trimmedVerb.toUpperCase()}\n                                </Button>\n                            </Badge>\n                            <Typography display='inline' style={{ margin: '0px 30px' }} variant='h6' gutterBottom>\n                                {target}\n                            </Typography>\n                        </Grid>\n                        {!(disableDelete || markAsDelete) && (\n                            <Grid item md={1} justify='flex-end' container>\n                                <Tooltip\n                                    title={\n                                        isUsedInAPIProduct\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.Operation.cannot.delete'\n                                                    + '.when.used.in.api.products'}\n                                                    defaultMessage='Cannot delete operation when used in an API product'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.components.Operation.Delete'\n                                                    defaultMessage='Delete'\n                                                />\n                                            )\n                                    }\n                                    aria-label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.Operation.delete.operation'\n                                            defaultMessage='Delete operation'\n                                        />\n                                    )}\n                                >\n                                    <div>\n                                        <IconButton\n                                            disabled={Boolean(isUsedInAPIProduct)\n                                                || disableUpdate\n                                                || isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                            onClick={toggleDelete}\n                                            aria-label='delete'\n                                        >\n                                            <DeleteIcon fontSize='small' />\n                                        </IconButton>\n                                    </div>\n                                </Tooltip>\n                            </Grid>\n                        )}\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <ExpansionPanelDetails>\n                    <Grid spacing={2} container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <DescriptionAndSummary\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            disableUpdate={disableUpdate}\n                            target={target}\n                            verb={verb}\n                        />\n                        {operation.parameters && (\n                            <Parameters\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                api={api}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                            />\n                        )}\n                        <PayloadProperties\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            disableUpdate={disableUpdate}\n                            target={target}\n                            verb={verb}\n                        />\n                        {(api.gatewayVendor === 'wso2') && (\n                            <>\n                                <OperationGovernance\n                                    operation={operation}\n                                    operationsDispatcher={operationsDispatcher}\n                                    api={api}\n                                    disableUpdate={disableUpdate}\n                                    spec={spec}\n                                    target={target}\n                                    verb={verb}\n                                    sharedScopes={sharedScopes}\n                                />\n                                {(api.type === 'WS' || api.type === 'WEBSUB') && (\n                                    <Runtime\n                                        operation={operation}\n                                        operationsDispatcher={operationsDispatcher}\n                                        disableUpdate={disableUpdate}\n                                        target={target}\n                                        verb={verb}\n                                        api={api}\n                                    />\n                                )}\n                            </>\n                        )}\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\nAsyncOperation.defaultProps = {\n    highlight: false,\n    disableUpdate: false,\n    disableDelete: false,\n    onMarkAsDelete: () => {},\n    markAsDelete: false,\n};\nAsyncOperation.propTypes = {\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})), resourcePolicies: PropTypes.shape({}) })\n        .isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    onMarkAsDelete: PropTypes.func,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    markAsDelete: PropTypes.bool,\n    disableDelete: PropTypes.bool,\n    operation: PropTypes.shape({\n        'x-wso2-new': PropTypes.bool,\n        summary: PropTypes.string,\n    }).isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    highlight: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n};\n\nexport default React.memo(AsyncOperation);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n * Renders the operation summary and description sections\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DescriptionAndSummary(props) {\n    const {\n        operation, operationsDispatcher, disableUpdate, target, verb,\n    } = props;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Description\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    margin='dense'\n                    fullWidth\n                    label='Description'\n                    multiline\n                    disabled={disableUpdate}\n                    rows='4'\n                    value={operation.description || ''}\n                    variant='outlined'\n                    onChange={\n                        ({ target: { value } }) => operationsDispatcher(\n                            { action: 'description', data: { target, verb, value } },\n                        )\n                    }\n                />\n            </Grid>\n            <Grid item md={6} />\n        </>\n    );\n}\n\nDescriptionAndSummary.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n        spec: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nDescriptionAndSummary.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Link } from 'react-router-dom';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { getAsyncAPIOperationScopes } from '../../../operationUtils';\n\n/**\n *\n * Renders the security and scopes selection section in the operation collapsed page\n * @export\n * @param {*} props\n * @returns\n */\nexport default function OperationGovernance(props) {\n    const {\n        operation, operationsDispatcher, api, disableUpdate, target, verb, sharedScopes,\n    } = props;\n    const operationScopes = getAsyncAPIOperationScopes(operation[verb]);\n    const filteredApiScopes = api.scopes.filter((sharedScope) => !sharedScope.shared);\n    const intl = useIntl();\n\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography gutterBottom variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Topics.components.operationComponents.OperationGovernance.title'\n                        defaultMessage='Operation Governance'\n                    />\n                    <Typography style={{ marginLeft: '10px' }} gutterBottom variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Topics.components.operationComponents.OperationGovernance.subTitle'\n                            defaultMessage='(Security & Scopes)'\n                        />\n                    </Typography>\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                <FormControl disabled={disableUpdate} component='fieldset'>\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                checked={operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none'}\n                                onChange={({ target: { checked } }) => operationsDispatcher({\n                                    action: 'authType',\n                                    data: { target, verb, value: checked },\n                                })}\n                                size='small'\n                                color='primary'\n                            />\n                        )}\n                        label='Security'\n                        labelPlacement='start'\n                    />\n                </FormControl>\n                <sup style={{ marginLeft: '10px' }}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id={'Apis.Details.Topics.components.operationComponents.OperationGovernance.Security'\n                                + '.tooltip'}\n                                defaultMessage='This will enable/disable Application Level securities defined in the\n                                Runtime Configurations page.'\n                            />\n                        )}\n                        fontSize='small'\n                        aria-label='Operation security'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </sup>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                {\n                    operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? (\n                        <TextField\n                            id='operation_scope'\n                            select\n                            SelectProps={{\n                                multiple: true,\n                                renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                            }}\n                            disabled={disableUpdate}\n                            fullWidth\n                            label={api.scopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                                id: 'Apis.Details.Topics.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.label.default',\n                                defaultMessage: 'Operation scope',\n                            }) : intl.formatMessage({\n                                id: 'Apis.Details.Topics.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.label.notAvailable',\n                                defaultMessage: 'No scope available',\n                            })}\n                            value={operationScopes}\n                            onChange={({ target: { value } }) => operationsDispatcher({\n                                action: 'scopes',\n                                data: { target, verb, value: value ? [value] : [] },\n                            })}\n                            helperText={(\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.'\n                                    + 'OperationGovernance.operation.scope.helperText'}\n                                    defaultMessage='Select a scope to control permissions to this operation'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        >\n                            <ListSubheader>\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.'\n                                    + 'OperationGovernance.operation.scope.select.local'}\n                                    defaultMessage='API Scopes'\n                                />\n                            </ListSubheader>\n                            {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                                <MenuItem\n                                    key={apiScope.scope.name}\n                                    value={apiScope.scope.name}\n                                    dense\n                                >\n                                    <Checkbox checked={operationScopes.includes(apiScope.scope.name)} color='primary' />\n                                    {apiScope.scope.name}\n                                </MenuItem>\n                            )) : (\n                                <MenuItem\n                                    value=''\n                                    disabled\n                                >\n                                    <em>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Topics.components.operationComponents.'\n                                        + 'OperationGovernance.operation.no.api.scope.available'}\n                                            defaultMessage='No API scopes available'\n                                        />\n                                    </em>\n                                </MenuItem>\n                            )}\n                            <ListSubheader>\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.'\n                                    + 'OperationGovernance.operation.scope.select.shared'}\n                                    defaultMessage='Shared Scopes'\n                                />\n                            </ListSubheader>\n                            {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                                <MenuItem\n                                    key={sharedScope.scope.name}\n                                    value={sharedScope.scope.name}\n                                    dense\n                                >\n                                    <Checkbox\n                                        checked={operationScopes.includes(sharedScope.scope.name)}\n                                        color='primary'\n                                    />\n                                    {sharedScope.scope.name}\n                                </MenuItem>\n                            )) : (\n                                <MenuItem\n                                    value=''\n                                    disabled\n                                >\n                                    <em>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Topics.components.operationComponents.'\n                                        + 'OperationGovernance.operation.no.sharedpi.scope.available'}\n                                            defaultMessage='No shared scopes available'\n                                        />\n                                    </em>\n                                </MenuItem>\n                            )}\n                        </TextField>\n                    ) : null\n                }\n            </Grid>\n            <Grid item md={5} style={{ marginTop: '14px' }}>\n                {\n                    operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? !disableUpdate && (\n                        <Link\n                            to={`/apis/${api.id}/scopes/create`}\n                            target='_blank'\n                        >\n                            <Typography\n                                style={{ marginLeft: '10px' }}\n                                color='primary'\n                                display='inline'\n                                variant='caption'\n                            >\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.'\n                                    + 'OperationGovernance.operation.scope.create.new.scope'}\n                                    defaultMessage='Create New Scope'\n                                />\n                                <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                            </Typography>\n                        </Link>\n                    ) : null\n                }\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nOperationGovernance.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})) }),\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nOperationGovernance.defaultProps = {\n    api: { scopes: [] },\n    sharedScopes: [],\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport ListParameters from './ListParameters';\n\n/*\n    Paramters will contain: name, description, type\n*/\n\n/**\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Parameters(props) {\n    const {\n        operation, spec, target, verb, operationsDispatcher, disableForSolace,\n    } = props;\n    let haveParameters = false;\n    Object.entries(operation.parameters).forEach(() => {\n        haveParameters = true;\n    });\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Topic Parameters\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={11}>\n                {haveParameters && (\n                    <ListParameters\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        spec={spec}\n                        disableForSolace={disableForSolace}\n                    />\n                )}\n            </Grid>\n        </>\n    );\n}\n\nParameters.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    disableForSolace: PropTypes.bool,\n};\n\nParameters.defaultProps = {\n    disableForSolace: false,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EditParameter from './EditParameter';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ListParameters(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, disableForSolace,\n    } = props;\n    const classes = useStyles();\n    const [editingParameter, setEditingParameter] = useState(null);\n\n    return (\n        <>\n            {editingParameter !== null && (\n                <EditParameter\n                    operationsDispatcher={operationsDispatcher}\n                    target={target}\n                    verb={verb}\n                    editingParameter={editingParameter}\n                    setEditingParameter={setEditingParameter}\n                    disableForSolaceAPI={disableForSolace}\n                />\n            )}\n            <Table className={classes.table} aria-label='parameters list'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListParameter.param.name'\n                                defaultMessage='Name'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListParameter.param.datatype'\n                                defaultMessage='Data Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListParameter.param.description'\n                                defaultMessage='Description'\n                            />\n                        </TableCell>\n                        {!disableUpdate && (\n                            <TableCell align='left'>\n                                <FormattedMessage\n                                    id='Apis.Details.Topics.components.operationComponents.ListParameter.actions'\n                                    defaultMessage='Actions'\n                                />\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        operation.parameters && Object.entries(operation.parameters).map(([k, v]) => {\n                            return (\n                                <TableRow key={k}>\n                                    <TableCell align='left'>{k}</TableCell>\n                                    <TableCell align='left'>{v.schema.type}</TableCell>\n                                    <TableCell align='left'>{v.description}</TableCell>\n                                    <TableCell align='left'>\n                                        <Tooltip title={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.operationComponents.'\n                                            + 'ListParameter.edit'}\n                                                defaultMessage='Edit'\n                                            />\n                                        )}\n                                        >\n                                            <IconButton\n                                                disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                                onClick={() => setEditingParameter({ name: k, ...v })}\n                                                fontSize='small'\n                                            >\n                                                <EditIcon fontSize='small' />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </>\n    );\n}\n\nListParameters.defaultProps = {\n    disableUpdate: false,\n    disableForSolace: false,\n};\nListParameters.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    disableForSolace: PropTypes.bool,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function EditParameter(props) {\n    const {\n        operationsDispatcher, target, verb, editingParameter, setEditingParameter, disableForSolaceAPI,\n    } = props;\n\n    /**\n     *\n     *\n     * @param {*} currentParameter\n     * @param {*} paramAction\n     */\n    function parameterActionReducer(currentParameter, paramAction) {\n        const { action, value } = paramAction;\n        const nextParameter = currentParameter.schema\n            ? { ...currentParameter, schema: { ...currentParameter.schema } } : { ...currentParameter };\n        switch (action) {\n            case 'description':\n                nextParameter[action] = value;\n                break;\n            case 'type':\n                nextParameter.schema = nextParameter.schema || {};\n                nextParameter.schema[action] = value;\n                break;\n            default:\n                break;\n        }\n        return nextParameter;\n    }\n    const [parameter, parameterActionDispatcher] = useReducer(parameterActionReducer, editingParameter);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setEditingParameter(null);\n    };\n\n    const handelDone = () => {\n        operationsDispatcher({ action: 'parameter', data: { target, verb, value: parameter } });\n        handleClose();\n    };\n\n    const getSupportedDataTypes = () => {\n        return ['integer', 'string', 'long', 'double', 'float'];\n    };\n\n    const isEditing = parameter !== null;\n    if (!isEditing) {\n        return null;\n    }\n    return (\n        <Dialog fullWidth maxWidth='md' open={isEditing} onClose={handleClose} aria-labelledby='edit-parameter'>\n            <DialogTitle disableTypography id='edit-parameter'>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.title'\n                        defaultMessage='Edit'\n                    />\n                    {' '}\n                    <Typography display='inline' variant='subtitle1'>\n                        {parameter.name}\n                    </Typography>\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' spacing={2} justify='flex-start' alignItems='center'>\n                    {!disableForSolaceAPI && (\n                        <Grid item md={6}>\n                            <FormControl\n                                required\n                                fullWidth\n                                margin='dense'\n                                variant='outlined'\n                                className={classes.formControl}\n                            >\n                                <InputLabel required id='edit-parameter-type'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Topics.components.operationComponents.EditParameter.data.type'\n                                        defaultMessage='Data Type'\n                                    />\n                                </InputLabel>\n\n                                <Select\n                                    value={parameter.schema ? parameter.schema.type : ''}\n                                    onChange={\n                                        ({ target: { name, value } }) => parameterActionDispatcher({\n                                            action: name, value,\n                                        })\n                                    }\n                                    inputProps={{\n                                        name: 'type',\n                                        id: 'edit-parameter-type',\n                                    }}\n                                    MenuProps={{\n                                        getContentAnchorEl: null,\n                                        anchorOrigin: {\n                                            vertical: 'bottom',\n                                            horizontal: 'left',\n                                        },\n                                    }}\n                                >\n                                    {getSupportedDataTypes().map((dataType) => (\n                                        <MenuItem value={dataType} dense>\n                                            {capitalizeFirstLetter(dataType)}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Topics.components.operationComponents.EditParameter.'\n                                        + 'select.data.type'}\n                                        defaultMessage='Select the Data Type'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        </Grid>\n                    )}\n                    <Grid item md={6} />\n                    <Grid item md={12}>\n                        <TextField\n                            value={parameter.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Topics.components.operationComponents.EditParameter.description'\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                parameterActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid>\n                    {/* <Grid item md={6}>\n                        <TextField\n                            value={capitalizeFirstLetter(parameter.in)}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.type'\n                                    defaultMessage='Parameter Type'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid> */}\n                    {/* <Grid item md={6}>\n                        <TextField\n                            value={parameter.name}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.name'\n                                    defaultMessage='Name'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid> */}\n                    {/* <Grid item md={12}>\n                        <TextField\n                            value={parameter.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.description'\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                parameterActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid> */}\n                    {/* <Grid item md={6}>\n                        <FormControl\n                            required\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                        >\n                            <InputLabel required id='edit-parameter-type'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.data.type'\n                                    defaultMessage='Data Type'\n                                />\n                            </InputLabel>\n\n                            <Select\n                                value={parameter.schema ? parameter.schema.type : parameter.type}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'type',\n                                    id: 'edit-parameter-type',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getSupportedDataTypes(version, parameter.in).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.schema.data.type'}\n                                    defaultMessage='Select the Schema Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid> */}\n                    {/* <Grid item md={6}>\n                        <FormControl\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                            disabled={parameter.schema\n                                ? iff(\n                                    parameter.schema.type === 'boolean' || parameter.schema.type === 'object',\n                                    true,\n                                    false,\n                                )\n                                : iff(\n                                    parameter.type === 'boolean' || parameter.type === 'object',\n                                    true,\n                                    false,\n                                )}\n                        >\n                            <InputLabel id='edit-parameter-format'>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'data.format'}\n                                    defaultMessage='Data Format'\n                                />\n                            </InputLabel>\n                            <Select\n                                value={parameter.schema ? parameter.schema.format : parameter.format}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'format',\n                                    id: 'edit-parameter-format',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getDataFormats(\n                                    parameter.schema ? parameter.schema.type : parameter.type,\n                                ).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.format.of.data.type'}\n                                    defaultMessage='Select the Format of Data Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid> */}\n                    {/* <Grid item>\n                        <FormControl component='fieldset'>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={parameter.required}\n                                        onChange={(\n                                            { target: { name, checked } },\n                                        ) => parameterActionDispatcher({ action: name, value: checked })}\n                                        value={parameter.required}\n                                        inputProps={{\n                                            name: 'required',\n                                        }}\n                                    />\n                                )}\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'required'}\n                                        defaultMessage='Required'\n                                    />\n                                )}\n                            />\n                        </FormControl>\n                    </Grid> */}\n                    {/* <Grid container direction='row' justify='flex-end' alignItems='center'>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                + 'use.done.button.to.persist.changes'}\n                                defaultMessage='Use DONE button in the page to persist changes'\n                            />\n                        </DialogContentText>\n                    </Grid> */}\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button size='small' onClick={handleClose} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.close'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button\n                    size='small'\n                    onClick={handelDone}\n                    variant='contained'\n                    color='primary'\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.done'\n                        defaultMessage='Done'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nEditParameter.propTypes = {\n    // operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    editingParameter: PropTypes.shape({}).isRequired,\n    setEditingParameter: PropTypes.func.isRequired,\n    // version: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport AddPayloadProperty from './AddPayloadProperty';\nimport ListPayloadProperties from './ListPayloadProperties';\n\n/*\n    Paramters will contain: name, description, type\n*/\n\n/**\n * Renders the payload properties section\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function PayloadProperties(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, disableForSolace,\n    } = props;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Payload Properties\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                {!disableUpdate && (\n                    (!disableForSolace) && (\n                        <AddPayloadProperty\n                            target={target}\n                            verb={verb}\n                            operationsDispatcher={operationsDispatcher}\n                            operation={operation}\n                        />\n                    )\n                )}\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={11}>\n                <ListPayloadProperties\n                    disableUpdate={disableUpdate}\n                    target={target}\n                    verb={verb}\n                    operationsDispatcher={operationsDispatcher}\n                    operation={operation}\n                    disableForSolace={disableForSolace}\n                />\n            </Grid>\n        </>\n    );\n}\n\nPayloadProperties.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    disableForSolace: PropTypes.bool,\n};\n\nPayloadProperties.defaultProps = {\n    disableUpdate: false,\n    disableForSolace: false,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n    },\n    parameterContainer: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    checkBox: {\n        color: '#7c7c7c',\n    },\n}));\n\n/**\n *\n * Add payload properties according to the AsyncAPI spec.\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddPayloadProperty(props) {\n    const {\n        operationsDispatcher, target, verb,\n    } = props;\n\n    /**\n     *\n     * @param {*} state\n     * @param {*} action\n     */\n    function newPropertyReducer(state, action) {\n        const { type, value } = action;\n        const nextState = { ...state };\n        switch (type) {\n            case 'name':\n            case 'description':\n            case 'type':\n                nextState[type] = value;\n                break;\n            case 'clear':\n                return {\n                    name: '',\n                    description: '',\n                    type: '',\n                };\n            default:\n                return nextState;\n        }\n        return nextState;\n    }\n\n    const [property, newPropertyDispatcher] = useReducer(newPropertyReducer, { });\n    const classes = useStyles();\n\n    /**\n     * Get supported data types for properies.\n     * @returns {*} data types\n     */\n    function getSupportedDataTypes() {\n        return ['integer', 'string', 'long', 'double', 'float'];\n    }\n\n    /**\n     * Clear inputs\n     */\n    function clearInputs() {\n        newPropertyDispatcher({ type: 'clear' });\n    }\n\n    /**\n     * Add new property\n     */\n    function addNewProperty() {\n        operationsDispatcher({\n            action: 'addPayloadProperty',\n            data: {\n                target, verb, value: property,\n            },\n        });\n        clearInputs();\n    }\n\n    return (\n        <Grid container direction='row' spacing={1} className={classes.parameterContainer}>\n            <Grid item xs={2} md={2}>\n                <TextField\n                    id='parameter-name'\n                    label='Name'\n                    name='name'\n                    disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                    value={property.name}\n                    onChange={({ target: { name, value } }) => newPropertyDispatcher({ type: name, value })}\n                    helperText='Enter property name'\n                    margin='dense'\n                    variant='outlined'\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            // key code 13 is for `Enter` key\n                            event.preventDefault(); // To prevent form submissions\n                            addNewProperty();\n                        }\n                    }}\n                />\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    {/* <InputLabel ref={inputLabel} htmlFor='data-type' error={isParameterExist}> */}\n                    <InputLabel\n                        htmlFor='data-type'\n                        disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.data.type'\n                            defaultMessage='Data Type'\n                        />\n                    </InputLabel>\n\n                    <Select\n                        value={property.type}\n                        onChange={({ target: { name, value } }) => newPropertyDispatcher({ type: name, value })}\n                        disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                        inputProps={{\n                            name: 'type',\n                            id: 'data-type',\n                        }}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                    >\n                        {\n                            getSupportedDataTypes().map((dataType) => {\n                                return (\n                                    <MenuItem\n                                        value={dataType}\n                                        dense\n                                    >\n                                        {dataType}\n                                    </MenuItem>\n                                );\n                            })\n                        }\n                    </Select>\n                    <FormHelperText id='my-helper-text'>Select the data type</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} md={6}>\n                <TextField\n                    id='parameter-description'\n                    label='Description'\n                    name='description'\n                    disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                    value={property.description}\n                    onChange={({ target: { name, value } }) => newPropertyDispatcher({ type: name, value })}\n                    helperText='Enter property description'\n                    margin='dense'\n                    variant='outlined'\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            // key code 13 is for `Enter` key\n                            event.preventDefault(); // To prevent form submissions\n                            addNewProperty();\n                        }\n                    }}\n                />\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.AddParameter.add.tooltip'\n                            defaultMessage='Add new parameter'\n                        />\n                    )}\n                    aria-label='AddParameter'\n                    placement='bottom'\n                    interactive\n                >\n                    <span>\n                        <Button\n                            style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                            size='small'\n                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                            variant='outlined'\n                            aria-label='add'\n                            color='primary'\n                            onClick={addNewProperty}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.AddParameter.add'\n                                defaultMessage='Add'\n                            />\n                        </Button>\n                    </span>\n                </Tooltip>\n                <sup>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddParameter.clear.inputs.tooltip'\n                                defaultMessage='Clear inputs'\n                            />\n                        )}\n                        aria-label='clear-inputs'\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <IconButton\n                                disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                onClick={clearInputs}\n                                size='small'\n                            >\n                                <ClearIcon />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </sup>\n            </Grid>\n        </Grid>\n    );\n}\n\nAddPayloadProperty.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default React.memo(injectIntl(AddPayloadProperty));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EditPayloadProperty from './EditPayloadProperty';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ListPayloadProperties(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, disableForSolace,\n    } = props;\n    const classes = useStyles();\n    const [editingProperty, setEditingProperty] = useState(null);\n    const properties = (operation && operation[verb] && operation[verb].message && operation[verb].message.payload\n            && operation[verb].message.payload.properties) ? operation[verb].message.payload.properties : { };\n\n    return (\n        <>\n            {editingProperty !== null && (\n                <EditPayloadProperty\n                    operationsDispatcher={operationsDispatcher}\n                    target={target}\n                    verb={verb}\n                    editingProperty={editingProperty}\n                    setEditingProperty={setEditingProperty}\n                />\n            )}\n            <Table className={classes.table} aria-label='parameters list'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListPayloadProps.name'\n                                defaultMessage='Name'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListPayloadProps.data.type'\n                                defaultMessage='Data Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListPayloadProps.description'\n                                defaultMessage='Description'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Topics.components.operationComponents.ListPayloadProps.actions'\n                                defaultMessage='Actions'\n                            />\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        properties && Object.entries(properties).map(([k, v]) => {\n                            return (\n                                <TableRow key={k}>\n                                    <TableCell align='left'>{k}</TableCell>\n                                    <TableCell align='left'>{v.type}</TableCell>\n                                    <TableCell align='left'>{v.description}</TableCell>\n                                    <TableCell align='left'>\n                                        <Tooltip title={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.operationComponents.'\n                                            + 'ListPayloadProperties.edit'}\n                                                defaultMessage='Edit'\n                                            />\n                                        )}\n                                        >\n                                            <IconButton\n                                                disabled={disableForSolace\n                                                    || isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                                onClick={() => setEditingProperty({ name: k, ...v })}\n                                                fontSize='small'\n                                            >\n                                                <EditIcon fontSize='small' />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.operationComponents'\n                                            + '.ListPayloadProps.delete'}\n                                                defaultMessage='Delete'\n                                            />\n                                        )}\n                                        >\n                                            <IconButton\n                                                disabled={disableUpdate || disableForSolace\n                                                    || isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                                onClick={() => operationsDispatcher({\n                                                    action: 'deletePayloadProperty',\n                                                    data: { target, verb, value: k },\n                                                })}\n                                                fontSize='small'\n                                            >\n                                                <DeleteIcon fontSize='small' />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </>\n    );\n}\n\nListPayloadProperties.defaultProps = {\n    disableUpdate: false,\n    disableForSolace: false,\n};\nListPayloadProperties.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    disableForSolace: PropTypes.bool,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Edit payload properties according to the AsyncAPI spec.\n * @export\n * @returns\n */\nexport default function EditPayloadProperty(props) {\n    const {\n        operationsDispatcher, target, verb, editingProperty, setEditingProperty,\n    } = props;\n\n    /**\n     * Payload property reducer\n     *\n     * @param {*} currentProperty\n     * @param {*} paramAction\n     */\n    function propertyActionReducer(currentProperty, paramAction) {\n        const { action, value } = paramAction;\n        const nextProperty = currentProperty.schema\n            ? { ...currentProperty, schema: { ...currentProperty.schema } } : { ...currentProperty };\n        switch (action) {\n            case 'type':\n            case 'description':\n                nextProperty[action] = value;\n                break;\n            default:\n                break;\n        }\n        return nextProperty;\n    }\n\n    const [property, propertyActionDispatcher] = useReducer(propertyActionReducer, editingProperty);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setEditingProperty(null);\n    };\n\n    const handelDone = () => {\n        operationsDispatcher({ action: 'payloadProperty', data: { target, verb, value: property } });\n        handleClose();\n    };\n\n    const getSupportedDataTypes = () => {\n        return ['integer', 'string', 'long', 'double', 'float'];\n    };\n\n    const isEditing = property !== null;\n    if (!isEditing) {\n        return null;\n    }\n    return (\n        <Dialog fullWidth maxWidth='md' open={isEditing} onClose={handleClose} aria-labelledby='edit-property'>\n            <DialogTitle disableTypography id='edit-property'>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditPayloadProperty.title'\n                        defaultMessage='Edit'\n                    />\n                    {' '}\n                    <Typography display='inline' variant='subtitle1'>\n                        {property.name}\n                    </Typography>\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' spacing={2} justify='flex-start' alignItems='center'>\n                    <Grid item md={6}>\n                        <FormControl\n                            required\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                        >\n                            <InputLabel required id='edit-property-type'>\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.EditPayloadProperty'\n                                    + '.data.type'}\n                                    defaultMessage='Data Type'\n                                />\n                            </InputLabel>\n\n                            <Select\n                                value={property.type}\n                                onChange={\n                                    ({ target: { name, value } }) => propertyActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'type',\n                                    id: 'edit-property-type',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getSupportedDataTypes().map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {dataType}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.EditPayloadProperty.'\n                                    + 'select.data.type'}\n                                    defaultMessage='Select the Data Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item md={6} />\n                    <Grid item md={12}>\n                        <TextField\n                            value={property.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id={'Apis.Details.Topics.components.operationComponents.EditPayloadProperty'\n                                    + '.description'}\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                propertyActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button size='small' onClick={handleClose} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditPayloadProperty.close'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button\n                    size='small'\n                    onClick={handelDone}\n                    variant='contained'\n                    color='primary'\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditPayloadProperty.done'\n                        defaultMessage='Done'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nEditPayloadProperty.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    editingProperty: PropTypes.shape({}).isRequired,\n    setEditingProperty: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { useRevisionContext } from 'AppComponents/Shared/RevisionContext';\nimport Utils from 'AppData/Utils';\nimport { FileCopy } from '@material-ui/icons';\nimport { isRestricted } from 'AppData/AuthManager';\n\n/**\n * Renders the callback URL for WebSub and URI mapping for WebSocket.\n *\n * @param {*} props\n */\nexport default function Runtime(props) {\n    const {\n        operation, operationsDispatcher, target, verb, api,\n    } = props;\n    const { settings } = useAppContext();\n    const { allEnvRevision } = useRevisionContext();\n    const allEnvDeployments = Utils.getAllEnvironmentDeployments(settings.environment, allEnvRevision);\n\n    const buildCallbackURL = (protocol, host, port) => {\n        const context = api.context.substr(0, 1) !== '/' ? '/' + api.context : api.context;\n        let url = `${protocol}://${host || '{GATEWAY_HOST}'}:${port || `{websub_event_receiver_${protocol}_endpoint}`}`;\n        url += context;\n        url += '/' + api.version;\n        url += '/webhooks_events_receiver_resource?topic=';\n        url += target.toLowerCase();\n        return url;\n    };\n\n    const getUriMappingHelperText = (value) => {\n        let fqPath;\n        if (api.endpointConfig\n            && api.endpointConfig.production_endpoints\n            && api.endpointConfig.production_endpoints.url\n            && api.endpointConfig.production_endpoints.url.length > 0\n            && value\n            && value.length > 0) {\n            const { url } = api.endpointConfig.production_endpoints;\n            fqPath = url.replace(/\\/$/, \"\") + '/' + value.replace(/^\\//, \"\");\n        }\n        return fqPath ? 'Production URL will be ' + fqPath : '';\n    };\n    const [uriMappingHelperText, setUriMappingHelperText] = useState(\n        getUriMappingHelperText(operation[verb]['x-uri-mapping']),\n    );\n\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Runtime\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            {api.type === 'WS' && (\n                <>\n                    <Grid item md={1} />\n                    <Grid item md={5}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                            margin='dense'\n                            fullWidth\n                            label='URL Mapping'\n                            value={operation[verb]['x-uri-mapping']}\n                            variant='outlined'\n                            helperText={uriMappingHelperText}\n                            onChange={(e) => {\n                                let { value } = e.target;\n                                if (value.length > 0 && value.substr(0, 1) !== '/') {\n                                    value = '/' + value;\n                                }\n                                setUriMappingHelperText(getUriMappingHelperText(value));\n                                operationsDispatcher({ action: 'uriMapping', data: { target, verb, value } });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6} />\n                </>\n            )}\n            {api.type === 'WEBSUB' && settings.environment.map((env) => (\n                <>\n                    <Grid item md={1} />\n                    <Grid item md={10}>\n                        <Typography variant='subtitle1'>{env.displayName}</Typography>\n                        <TextField\n                            margin='dense'\n                            fullWidth\n                            label='HTTP Callback URL'\n                            disabled\n                            value={buildCallbackURL('http', allEnvDeployments[env.name].vhost.host,\n                                allEnvDeployments[env.name].vhost.websubHttpPort)}\n                            variant='outlined'\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position='end'>\n                                        <CopyToClipboard\n                                            text={buildCallbackURL('http',\n                                                allEnvDeployments[env.name].vhost.host,\n                                                allEnvDeployments[env.name].vhost.websubHttpPort)}\n                                        >\n                                            <IconButton>\n                                                <Icon>\n                                                    <FileCopy />\n                                                </Icon>\n                                            </IconButton>\n                                        </CopyToClipboard>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <TextField\n                            margin='dense'\n                            fullWidth\n                            label='HTTPS Callback URL'\n                            disabled\n                            value={buildCallbackURL('https', allEnvDeployments[env.name].vhost.host,\n                                allEnvDeployments[env.name].vhost.websubHttpsPort)}\n                            variant='outlined'\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position='end'>\n                                        <CopyToClipboard\n                                            text={buildCallbackURL('https',\n                                                allEnvDeployments[env.name].vhost.host,\n                                                allEnvDeployments[env.name].vhost.websubHttpsPort)}\n                                        >\n                                            <IconButton>\n                                                <Icon>\n                                                    <FileCopy />\n                                                </Icon>\n                                            </IconButton>\n                                        </CopyToClipboard>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={1} />\n                </>\n            ))}\n        </>\n    );\n}\n\nRuntime.propTypes = {\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n        spec: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport PropTypes from 'prop-types';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n/**\n * Return a group container , User should provide the operations list as the child component\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function GroupOfOperations(props) {\n    const { children, tag } = props;\n    return (\n        <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls='panel1a-content' id='panel1a-header'>\n                <Typography variant='h4'>\n                    {tag}\n                </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nGroupOfOperations.propTypes = {\n    children: PropTypes.element.isRequired,\n    tag: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\n\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    paper: {\n        paddingLeft: theme.spacing(4),\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(0.5),\n        marginTop: '12px',\n    },\n}));\n\n/**\n * Renders Subscription configurations for WebSub APIs.\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction SubscriptionConfig(props) {\n    const {\n        websubSubscriptionConfigDispatcher, websubSubscriptionConfiguration,\n    } = props;\n\n    const [isExpanded, setIsExpanded] = useState(false);\n    const classes = useStyles();\n    const [enabled, setEnabled] = useState(!!websubSubscriptionConfiguration.enable);\n\n    /**\n     *\n     */\n    function generateSecret() {\n        return 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[x]/g, (c) => {\n            // eslint-disable-next-line no-bitwise\n            const r = Math.random() * 16 | 0;\n            // eslint-disable-next-line no-bitwise, no-mixed-operators\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    /**\n     *\n     */\n    function getAlgorithms() {\n        return ['SHA1', 'SHA256', 'SHA384', 'SHA512'];\n    }\n\n    return (\n        <ExpansionPanel\n            expanded={isExpanded}\n            onChange={(e, expanded) => {\n                setIsExpanded(expanded);\n            }}\n            className={classes.paperStyles}\n        >\n            <ExpansionPanelSummary\n                disableRipple\n                disableTouchRipple\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls='panel2a-content'\n                id='panel2a-header'\n                classes={{ content: classes.contentNoMargin }}\n            >\n                <Grid item md={12} xs={12}>\n                    <Box ml={1}>\n                        <Typography variant='subtitle1' gutterBottom>\n                            Subscription Configuration\n                        </Typography>\n                    </Box>\n                </Grid>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <Grid container direction='row' spacing={0} justify='center' alignItems='center'>\n                    <Grid item xs={6}>\n                        <FormControl component='fieldset'>\n                            <FormControlLabel\n                                control={(\n                                    <Switch\n                                        checked={websubSubscriptionConfiguration.enable}\n                                        onChange={({ target: { checked } }) => {\n                                            setEnabled(checked);\n                                            websubSubscriptionConfigDispatcher({\n                                                action: 'enable',\n                                                value: checked,\n                                            });\n                                        }}\n                                        size='small'\n                                        color='primary'\n                                    />\n                                )}\n                                label='Enable'\n                                labelPlacement='start'\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={6} />\n                    <Grid item xs={6}>\n                        <TextField\n                            autoFocus\n                            fullWidth\n                            select\n                            disabled={!enabled}\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.Subscription.signingAlgorithm'\n                                        defaultMessage='Signing Algortithm'\n                                    />\n                                </>\n                            )}\n                            value={websubSubscriptionConfiguration.signingAlgorithm}\n                            helperText='Select an algorithm to sign the message'\n                            name='secret'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => websubSubscriptionConfigDispatcher({\n                                action: 'signingAlgorithm',\n                                value,\n                            })}\n                        >\n                            {\n                                getAlgorithms().map((name) => (\n                                    <MenuItem value={name} dense>\n                                        {name}\n                                    </MenuItem>\n                                ))\n                            }\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={6} />\n                    <Grid item xs={6}>\n                        <TextField\n                            autoFocus\n                            fullWidth\n                            disabled={!enabled}\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.Subscription.signature.header'\n                                        defaultMessage='Signature Header'\n                                    />\n                                </>\n                            )}\n                            value={websubSubscriptionConfiguration.signatureHeader}\n                            helperText='Set the HTTP header use by the provider to send the signature'\n                            name='secret'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => websubSubscriptionConfigDispatcher({\n                                action: 'signatureHeader',\n                                value,\n                            })}\n                        />\n                    </Grid>\n                    <Grid item xs={6} />\n                    <Grid item xs={6}>\n                        <Grid container direction='row'>\n                            <Grid item xs={10}>\n                                <TextField\n                                    autoFocus\n                                    fullWidth\n                                    disabled\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Subscription.secret'\n                                                defaultMessage='Secret'\n                                            />\n                                        </>\n                                    )}\n                                    value={websubSubscriptionConfiguration.secret}\n                                    helperText='Use the above secret key while registering at the provider'\n                                    name='secret'\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!enabled}\n                                    onClick={() => websubSubscriptionConfigDispatcher({\n                                        action: 'secret',\n                                        value: generateSecret(),\n                                    })}\n                                    style={{ marginLeft: 10, marginTop: 25 }}\n                                >\n                                    Generate\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} />\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nSubscriptionConfig.propTypes = {\n    websubSubscriptionConfigDispatcher: PropTypes.func.isRequired,\n    websubSubscriptionConfiguration: PropTypes.shape({\n        signingAlgorithm: PropTypes.string.isRequired,\n        signatureHeader: PropTypes.string.isRequired,\n        secret: PropTypes.string.isRequired,\n        enable: PropTypes.bool.isRequired,\n    }).isRequired,\n};\n\nexport default React.memo(SubscriptionConfig);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/SettingsEthernet';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport { isRestricted } from 'AppData/AuthManager';\nimport API from 'AppData/api';\nimport Endpoints from './components/Endpoints';\nimport KeyManager from './components/KeyManager';\nimport APILevelRateLimitingPolicies from './components/APILevelRateLimitingPolicies';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    boxFlex: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n        minHeight: '250px',\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(1),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 175,\n        right: -55,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const keyManagers = api.apiType === API.CONSTS.APIProduct ? ['all'] : [...api.keyManagers];\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        apiThrottlingPolicy: api.apiThrottlingPolicy,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n        keyManagers,\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'apiThrottlingPolicy':\n            case 'maxTps':\n                nextState[action] = value;\n                return nextState;\n            case 'keymanagers':\n                nextState.keyManagers = value;\n                return nextState;\n            case 'throttlingPoliciesEnabled':\n                if (value) {\n                    nextState.apiThrottlingPolicy = '';\n                } else {\n                    nextState.apiThrottlingPolicy = null;\n                }\n                return nextState;\n            case 'allKeyManagersEnabled':\n                if (value) {\n                    nextState.keyManagers = [];\n                } else {\n                    nextState.keyManagers = ['all'];\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const history = useHistory();\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    function handleSaveAndDeploy() {\n        setIsUpdating(true);\n\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            }));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                    <Grid item xs={12} md={7} style={{ marginBottom: 30, position: 'relative' }}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.section.client.websocket'\n                                defaultMessage='Client Websocket'\n                            />\n                        </Typography>\n                        <div className={classes.boxFlex}>\n                            <Paper\n                                className={classes.paper}\n                                elevation={0}\n                                style={{ display: 'flex', alignItems: 'center' }}\n                            >\n                                <Box pr={3}>\n                                    <KeyManager api={apiConfig} configDispatcher={configDispatcher} />\n                                </Box>\n                                <Box pr={3}>\n                                    <APILevelRateLimitingPolicies api={apiConfig} configDispatcher={configDispatcher} />\n                                </Box>\n                            </Paper>\n                            <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.section.backend.websocket'\n                                defaultMessage='Backend Websocket'\n                            />\n                        </Typography>\n                        <Paper className={classes.paper} style={{ height: 'calc(100% - 75px)' }} elevation={0}>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <Endpoints api={api} />\n                                </>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            {api.isRevision\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                || isRestricted(['apim:api_create'], api)) ? (\n                                    <Button\n                                        disabled\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.save'\n                                            defaultMessage='Save'\n                                        />\n                                    </Button>\n                                ) : (\n                                    <CustomSplitButton\n                                        advertiseInfo={api.advertiseInfo}\n                                        api={api}\n                                        handleSave={handleSave}\n                                        handleSaveAndDeploy={handleSaveAndDeploy}\n                                        isUpdating={isUpdating}\n                                    />\n                                )}\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n        display: 'inline-flex',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    keyManagerSelect: {\n        minWidth: 180,\n    },\n}));\n\n/**\n *\n * API Level Rate Limiting configuration\n * @param {*} props\n * @returns\n */\nexport default function APILevelRateLimitingPolicies(props) {\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const {\n        configDispatcher,\n        api: { apiThrottlingPolicy },\n    } = props;\n    const [apiRateLimits, setApiRateLimits] = useState([]);\n    const handleChange = (event) => {\n        configDispatcher({\n            action: 'apiThrottlingPolicy',\n            value: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.policies('api').then((response) => setApiRateLimits(response.body.list));\n    }, []);\n\n    return (\n        <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APILevelRateLimitingPolicies.configuration'\n                        defaultMessage='Rate Limiting Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.APILevelRateLimitingPolicies.components.Configuration.tooltip'\n                                defaultMessage={'Selected Rate Limiting Policy will be applied to all the'\n                                + ' requests of this API.'}\n                            />\n                        )}\n                        aria-label='Rate Limiting Policies'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={!(apiThrottlingPolicy === null)}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'throttlingPoliciesEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container spacing={1} alignItems='center'>\n                    <Grid item md={6} xs={12}>\n                        {!(apiThrottlingPolicy === null) && (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                value={apiThrottlingPolicy}\n                                onChange={handleChange}\n                                label='Rate limiting policies'\n                                margin='dense'\n                                variant='outlined'\n                                style={{ display: 'flex', minWidth: 180 }}\n                            >\n                                {apiRateLimits.map((rateLimit) => (\n                                    <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nAPILevelRateLimitingPolicies.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIProduct from 'AppData/APIProduct';\nimport LifeCycleUpdate from './LifeCycleUpdate';\nimport LifeCycleHistory from './LifeCycleHistory';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    historyHead: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n});\n/**\n *\n *\n * @class LifeCycle\n * @extends {Component}\n */\nclass LifeCycle extends Component {\n    /**\n     * Creates an instance of LifeCycle.\n     * @param {Object} props\n     * @memberof LifeCycle\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            lcHistory: null,\n            checkList: [],\n            certList: [],\n        };\n        this.updateData = this.updateData.bind(this);\n        this.handleChangeCheckList = this.handleChangeCheckList.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof LifeCycle\n     */\n    componentDidMount() {\n        const { api: { id } } = this.props;\n        const promisedClientCerts = Api.getAllClientCertificates(id);\n        const { intl } = this.props;\n        promisedClientCerts.then((certList) => {\n            const clientCerts = certList.body;\n            this.setState({\n                certList: [...clientCerts.certificates],\n            });\n            this.updateData();\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.error.certs',\n                    defaultMessage: 'Error while retrieving certificates',\n                }));\n                console.error(error);\n            }\n        });\n    }\n\n    handleChangeCheckList = (index) => (event, checked) => {\n        const { checkList } = this.state;\n        checkList[index].checked = checked;\n        this.setState({ checkList });\n    };\n\n    /**\n     *\n     *\n     * @memberof LifeCycle\n     */\n    updateData() {\n        const { api: { id }, isAPIProduct } = this.props;\n        const apiProduct = new APIProduct();\n        let promisedAPI;\n        let promisedLcState;\n        let promisedLcHistory;\n        if (isAPIProduct) {\n            promisedAPI = apiProduct.getAPIProductByID(id);\n            promisedLcState = apiProduct.getLCStateOfAPIProduct(id);\n            promisedLcHistory = apiProduct.getLCHistoryOfAPIProduct(id);\n        } else {\n            promisedAPI = Api.get(id);\n            promisedLcState = this.api.getLcState(id);\n            promisedLcHistory = this.api.getLcHistory(id);\n        }\n        Promise.all([promisedAPI, promisedLcState, promisedLcHistory])\n            .then((response) => {\n                let api;\n                if (isAPIProduct) {\n                    api = response[0].body;\n                } else {\n                    /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: true}}] */\n                    api = response[0];\n                }\n                const lcState = response[1].body;\n                const lcHistory = response[2].body.list;\n\n                // Bug fix for issue #12363\n                // Changing internal state PROTOTYPE -> PRE-RELEASED to display in LC History table\n                lcHistory.forEach(element => {\n                    const temp = element;\n                    if (element.previousState === 'PROTOTYPED') {\n                        temp.previousState = 'PRE-RELEASED';\n                    }\n                    if (element.postState === 'PROTOTYPED') {\n                        temp.postState = 'PRE-RELEASED';\n                    }\n                });\n\n                // Creating checklist\n                const checkList = [];\n                let index = 0;\n                for (const item of lcState.checkItems) {\n                    checkList.push({\n                        index,\n                        label: item.name,\n                        value: item.name,\n                        checked: false,\n                    });\n                    index++;\n                }\n                this.setState({\n                    api,\n                    lcState,\n                    lcHistory,\n                    checkList,\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycle\n     */\n    render() {\n        const { classes, isAPIProduct } = this.props;\n        const {\n            api, lcState, checkList, lcHistory, certList,\n        } = this.state;\n        const apiFromContext = this.context.api;\n        if (apiFromContext && isRestricted(['apim:api_publish'], apiFromContext)) {\n            return (\n                <Grid container direction='row' alignItems='center' spacing={4} style={{ marginTop: 20 }}>\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycle.change.not.allowed'\n                                defaultMessage={\n                                    '* You are not authorized to change the life cycle state of the API'\n                                    + ' due to insufficient permissions'\n                                }\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!lcState) {\n            return <Progress />;\n        }\n        return (\n            <>\n                <Typography id='itest-api-details-lifecycle-head' variant='h4' component='h2' gutterBottom>\n                    <FormattedMessage id='Apis.Details.LifeCycle.LifeCycle.lifecycle' defaultMessage='Lifecycle' />\n                </Typography>\n                <div className={classes.contentWrapper}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <LifeCycleUpdate\n                                handleUpdate={this.updateData}\n                                lcState={lcState}\n                                checkList={checkList}\n                                handleChangeCheckList={this.handleChangeCheckList}\n                                api={api}\n                                certList={certList}\n                                isAPIProduct={isAPIProduct}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            {lcHistory.length > 1 && (\n                                <div>\n                                    <Typography\n                                        variant='h6'\n                                        component='h3'\n                                        gutterBottom\n                                        className={classes.historyHead}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.LifeCycle.history'\n                                            defaultMessage='History'\n                                        />\n                                    </Typography>\n                                    <LifeCycleHistory lcHistory={lcHistory} />\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nLifeCycle.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nLifeCycle.contextType = ApiContext;\n\nexport default withStyles(styles)(LifeCycle);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { CircularProgress } from '@material-ui/core';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\nimport PublishWithoutDeploy from 'AppComponents/Apis/Details/LifeCycle/Components/PublishWithoutDeploy';\nimport PublishWithoutDeployProduct from 'AppComponents/Apis/Details/LifeCycle/Components/PublishWithoutDeployProduct';\nimport Configurations from 'Config';\nimport APIProduct from 'AppData/APIProduct';\nimport LifeCycleImage from './LifeCycleImage';\nimport CheckboxLabels from './CheckboxLabels';\nimport LifecyclePending from './LifecyclePending';\nimport { API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY }\nfrom '../Configuration/components/APISecurity/components/apiSecurityConstants';\n\nconst styles = (theme) => ({\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleUpdate\n * @extends {Component}\n */\nclass LifeCycleUpdate extends Component {\n    /**\n     * @param {*} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.updateLifeCycleState = this.updateLifeCycleState.bind(this);\n        this.api = new API();\n        this.apiProduct = new APIProduct();\n        this.WORKFLOW_STATUS = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n            REJECTED: 'REJECTED'\n        };\n        this.state = {\n            newState: null,\n            isUpdating: null,\n            pageError: null,\n            isOpen: false,\n            deploymentsAvailable: false,\n        };\n        this.setIsOpen = this.setIsOpen.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    /**\n     *\n     * Set Deployment availability\n     */\n    componentDidMount() {\n        const {\n            api: { id: apiUUID },\n        } = this.props;\n        this.api.getRevisionsWithEnv(apiUUID).then((result) => {\n            this.setState({ deploymentsAvailable: result.body.count > 0 });\n        });\n    }\n\n    /**\n     *\n     * Set isOpen state of the dialog box which shows the caution message when publish without deploying\n     * @param {Boolean} isOpen Should dialog box is open or not\n     */\n    setIsOpen(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    /**\n     * @param {*} apiUUID api UUID\n     * @param {*} action life cycle action\n     * @memberof LifeCycleUpdate\n     */\n    updateLCStateOfAPI(apiUUID, action) {\n        this.setState({ isUpdating: action });\n        let promisedUpdate;\n        const lifecycleChecklist = this.props.checkList.map((item) => item.value + ':' + item.checked);\n        const { isAPIProduct } = this.props;\n        if (isAPIProduct) {\n            promisedUpdate = this.apiProduct.updateLcState(apiUUID, action, lifecycleChecklist);\n        } else if (lifecycleChecklist.length > 0) {\n            promisedUpdate = this.api.updateLcState(apiUUID, action, lifecycleChecklist.toString());\n        } else {\n            promisedUpdate = this.api.updateLcState(apiUUID, action);\n        }\n        promisedUpdate\n            .then((response) => {\n                /* TODO: Handle IO erros ~tmkb */\n                // get the latest state of the API\n                this.context.updateAPI();\n                const newState = response.body.lifecycleState.state;\n                const { workflowStatus } = response.body;\n                this.setState({ newState });\n                const { intl } = this.props;\n\n                if (workflowStatus === this.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.createStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } if (workflowStatus === this.WORKFLOW_STATUS.REJECTED) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.reject.rejectStatus',\n                        defaultMessage: 'Lifecycle state change action rejected due to validation failure',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.otherStatus',\n                        defaultMessage: 'Lifecycle state updated successfully',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    this.setState({ pageError: error.response.body });\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = 'Something went wrong while updating the lifecycle';\n                    Alert.error(message);\n                    this.setState({ pageError: error.response.body });\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                this.setState({ isUpdating: null });\n            });\n    }\n\n    /**\n     *\n     * Set handle click warning\n     */\n    handleClick() {\n        const {\n            api: { id: apiUUID },\n        } = this.props;\n        this.setIsOpen(false);\n        this.updateLCStateOfAPI(apiUUID, 'Publish');\n    }\n\n    /**\n     *\n     *\n     * @param {*} event event\n     * @memberof LifeCycleUpdate\n     */\n    updateLifeCycleState(event) {\n        const { deploymentsAvailable } = this.state;\n        event.preventDefault();\n        let action = event.currentTarget.getAttribute('data-value');\n        if (action === 'Deploy To Test') {\n            action = 'Deploy as a Prototype';\n        }\n        const {\n            api: { id: apiUUID, advertiseInfo }, isAPIProduct,\n        } = this.props;\n        if (action === 'Publish' && !deploymentsAvailable && ((advertiseInfo && !advertiseInfo.advertised)\n            || isAPIProduct)) {\n            this.setIsOpen(true);\n        } else {\n            this.updateLCStateOfAPI(apiUUID, action);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof LifeCycleUpdate\n     */\n    render() {\n        const {\n            api, lcState, classes, theme, handleChangeCheckList, checkList, certList, isAPIProduct,\n        } = this.props;\n        const lifecycleStates = [...lcState.availableTransitions];\n        const { newState, pageError, isOpen, deploymentsAvailable } = this.state;\n        const isWorkflowPending = api.workflowStatus && api.workflowStatus === this.WORKFLOW_STATUS.CREATED;\n        const lcMap = new Map();\n        lcMap.set('Published', 'Publish');\n        lcMap.set('Prototyped', 'Deploy as a prototype');\n        lcMap.set('Deprecated', 'Deprecate');\n        lcMap.set('Blocked', 'Block');\n        lcMap.set('Created', 'Create');\n        lcMap.set('Retired', 'Retire');\n        const isMutualSSLEnabled = api.securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY);\n        const isAppLayerSecurityMandatory = api.securityScheme.includes(\n            API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n        );\n        const isCertAvailable = certList.length !== 0;\n        const isBusinessPlanAvailable = api.policies.length !== 0;\n        const lifeCycleStatus = isAPIProduct ? api.state : api.lifeCycleStatus;\n        const lifecycleButtons = lifecycleStates.map((item) => {\n            const lifecycleState = { ...item, displayName: item.event };\n            if (lifecycleState.event === 'Deploy as a Prototype') {\n                if (lifecycleState.displayName === 'Deploy as a Prototype') {\n                    lifecycleState.displayName = 'Pre-Release';\n                }\n                return {\n                    ...lifecycleState,\n                    disabled:\n                        (api.type !== 'WEBSUB' && api.endpointConfig == null && !isAPIProduct),\n                };\n            }\n            if (lifecycleState.event === 'Publish') {\n                const buttonDisabled = (isMutualSSLEnabled && !isCertAvailable)\n                                    || (deploymentsAvailable && !isBusinessPlanAvailable)\n                                    || (isAPIProduct && !isBusinessPlanAvailable);\n                // When business plans are not assigned and deployments available\n\n                return {\n                    ...lifecycleState,\n                    disabled: buttonDisabled,\n                };\n            }\n            return {\n                ...lifecycleState,\n                disabled: false,\n            };\n        });\n\n        return (\n            <Grid container>\n                {isWorkflowPending ? (\n                    <Grid item xs={12}>\n                        <LifecyclePending currentState={lcState.state} />\n                    </Grid>\n                ) : (\n                    <Grid item xs={12}>\n                        {theme.custom.lifeCycleImage ? (\n                            <img\n                                src={Configurations.app.context + theme.custom.lifeCycleImage}\n                                alt='life cycles'\n                            />\n                        ) : (\n                            <Grid container spacing={3}>\n                                <Grid item xs={8}>\n                                    <LifeCycleImage lifeCycleStatus={newState || lifeCycleStatus} />\n                                </Grid>\n                                {(lifeCycleStatus === 'CREATED' || lifeCycleStatus === 'PROTOTYPED')\n                                    && (!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                                    <Grid item xs={3}>\n                                        <CheckboxLabels\n                                            api={api}\n                                            isMutualSSLEnabled={isMutualSSLEnabled}\n                                            isAppLayerSecurityMandatory={isAppLayerSecurityMandatory}\n                                            isCertAvailable={isCertAvailable}\n                                            isBusinessPlanAvailable={isBusinessPlanAvailable}\n                                            isAPIProduct={isAPIProduct}\n                                        />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        )}\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    {!isWorkflowPending && (\n                        <FormGroup row>\n                            {checkList.map((checkItem, index) => (\n                                <FormControlLabel\n                                    key={checkList[index].value}\n                                    control={(\n                                        <Checkbox\n                                            checked={checkList[index].checked}\n                                            onChange={handleChangeCheckList(index)}\n                                            value={checkList[index].value}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label={checkList[index].label}\n                                />\n                            ))}\n                        </FormGroup>\n                    )}\n                    <ScopeValidation resourcePath={resourcePath.API_CHANGE_LC} resourceMethod={resourceMethod.POST}>\n                        <div className={classes.buttonsWrapper}>\n                            {!isWorkflowPending\n                            && lifecycleButtons.map((transitionState) => {\n                                /* Skip when transitions available for current state, this occurs in states\n                                where have allowed re-publishing in prototype and published sates */\n                                return (\n                                    <Button\n                                        disabled={transitionState.disabled\n                                        || this.state.isUpdating || api.isRevision}\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.stateButton}\n                                        key={transitionState.event}\n                                        data-value={transitionState.event}\n                                        onClick={this.updateLifeCycleState}\n                                        data-testid={transitionState.event + '-btn'}\n                                    >\n                                        {transitionState.displayName}\n                                        {this.state.isUpdating === transitionState.event && (\n                                            <CircularProgress size={18} />\n                                        )}\n                                    </Button>\n                                );\n                            })}\n                        </div>\n                    </ScopeValidation>\n                </Grid>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => this.setState({ pageError: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                {isAPIProduct ? <PublishWithoutDeployProduct\n                    classes={classes}\n                    api={api}\n                    handleClick={this.handleClick}\n                    handleClose={() => this.setIsOpen(false)}\n                    open={isOpen}\n                /> : <PublishWithoutDeploy\n                    classes={classes}\n                    api={api}\n                    handleClick={this.handleClick}\n                    handleClose={() => this.setIsOpen(false)}\n                    open={isOpen}\n                /> }\n            </Grid>\n        );\n    }\n}\n\nLifeCycleUpdate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    checkList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    lcState: PropTypes.shape({}).isRequired,\n    handleChangeCheckList: PropTypes.func.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nLifeCycleUpdate.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(injectIntl(LifeCycleUpdate));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport Box from '@material-ui/core/Box';\n// import Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport { Link as RouterLink } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Joi from '@hapi/joi';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const {\n        children, classes, onClose, ...other\n    } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n/**\n *\n * @returns\n */\nexport default function PublishWithoutDeploy(props) {\n    const {\n        classes, api, handleClick, open, handleClose,\n    } = props;\n\n    let isExternalEndpointAvailable = false;\n    let availableExternalEndpoint = '';\n    if (api.advertiseInfo && api.advertiseInfo.apiExternalProductionEndpoint\n        && api.advertiseInfo.apiExternalProductionEndpoint.length > 0) {\n        isExternalEndpointAvailable = true;\n        availableExternalEndpoint = api.advertiseInfo.apiExternalProductionEndpoint;\n    } else if (api.advertiseInfo && api.advertiseInfo.apiExternalSandboxEndpoint\n        && api.advertiseInfo.apiExternalSandboxEndpoint.length > 0) {\n        isExternalEndpointAvailable = true;\n        availableExternalEndpoint = api.advertiseInfo.apiExternalSandboxEndpoint;\n    }\n\n    const [externalEndpoint, setExternalEndpoint] = useState(availableExternalEndpoint);\n    const [isValidExternalEndpoint, setValidExternalEndpoint] = useState(isExternalEndpointAvailable);\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    /**\n     * Validate external endpoint\n     *\n     * @param event\n     */\n    const handleOnChangeExternalEndpoint = (event) => {\n        const { value } = event.target;\n        setExternalEndpoint(value);\n        const urlSchema = Joi.string().uri().empty();\n        setValidExternalEndpoint(!urlSchema.validate(value).error);\n    };\n\n    const handlePublishClick = () => {\n        if (externalEndpoint && externalEndpoint.length > 0) {\n            const updatedAPI = {\n                id: api.id,\n                name: api.name,\n                description: api.description,\n                lifeCycleStatus: api.lifeCycleStatus,\n                accessControl: api.accessControl,\n                authorizationHeader: api.authorizationHeader,\n                responseCachingEnabled: api.responseCachingEnabled,\n                cacheTimeout: api.cacheTimeout,\n                visibility: api.visibility,\n                isDefaultVersion: api.isDefaultVersion,\n                enableSchemaValidation: api.enableSchemaValidation,\n                accessControlRoles: [...api.accessControlRoles],\n                visibleRoles: [...api.visibleRoles],\n                tags: [...api.tags],\n                maxTps: api.maxTps,\n                transport: [...api.transport],\n                wsdlUrl: api.wsdlUrl,\n                securityScheme: [...api.securityScheme],\n                categories: [...api.categories],\n                corsConfiguration: {\n                    corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n                    accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n                    accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n                    accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n                    accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n                },\n                additionalProperties: [...api.additionalProperties],\n                type: api.type,\n                advertiseInfo: {\n                    advertised: true,\n                    apiExternalProductionEndpoint: externalEndpoint,\n                    apiExternalSandboxEndpoint: externalEndpoint,\n                    originalDevPortalUrl: api.advertiseInfo.originalDevPortalUrl,\n                    apiOwner: api.advertiseInfo.apiOwner,\n                    vendor: api.advertiseInfo.vendor,\n                },\n            };\n            const promisedUpdate = api.update(updatedAPI);\n            promisedUpdate\n                .then(() => {\n                    Alert.info('API updated successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        const message = 'Something went wrong while updating the API';\n                        Alert.error(message);\n                    }\n                    console.error(error);\n                })\n                .finally(() => {\n                    handleClick();\n                });\n        }\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby='publish-api-confirmation' open={open}>\n            <DialogTitle id='itest-publish-confirmation' onClose={handleClose}>\n                <FormattedMessage\n                    id='Apis.Details.LifeCycle.components.confirm.publish.title'\n                    defaultMessage='Publish API without deployments'\n                />\n            </DialogTitle>\n            <Divider light />\n            <DialogContent>\n                <Box my={1}>\n                    <DialogContentText id='itest-confirm-publish-text'>\n                        <Typography variant='subtitle1' display='block' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.components.confirm.publish.message'\n                                defaultMessage='The API will not be available for consumption unless it is deployed.'\n                            />\n                        </Typography>\n                    </DialogContentText>\n                </Box>\n                <Collapse in={isExpanded}>\n                    <Box>\n                        <Box my={1}>\n                            <DialogContentText id='itest-confirm-publish-text'>\n                                <Typography variant='body1' display='block' gutterBottom>\n                                    <FormattedMessage\n                                        // eslint-disable-next-line max-len\n                                        id='Apis.Details.LifeCycle.components.confirm.publish.message.advertise.only'\n                                        // eslint-disable-next-line max-len\n                                        defaultMessage={'If you want to publish as a third party API, please provide '\n                                        + 'the external endpoint and press \"Publish\".'}\n                                    />\n                                </Typography>\n                            </DialogContentText>\n                        </Box>\n                        <Box my={1}>\n                            <TextField\n                                fullWidth\n                                id='itest-id-api-external-endpoint-input'\n                                label={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.components.externalEndpoint'\n                                            defaultMessage='External Endpoint'\n                                        />\n                                        <sup className={classes.mandatoryStar}>*</sup>\n                                    </>\n                                )}\n                                name='externalEndpoint'\n                                value={externalEndpoint}\n                                onChange={handleOnChangeExternalEndpoint}\n                                helperText={!isValidExternalEndpoint && (\n                                    <FormattedMessage\n                                        id='Apis.Details.LifeCycle.externalEndpoint.error'\n                                        defaultMessage='Invalid Endpoint URL'\n                                    />\n                                )}\n                                error={!isValidExternalEndpoint}\n                                margin='normal'\n                                variant='outlined'\n                            />\n                        </Box>\n                    </Box>\n                </Collapse>\n            </DialogContent>\n            <DialogActions>\n                {!isExpanded && (\n                    <Button\n                        color='primary'\n                        onClick={() => setIsExpanded(!isExpanded)}\n                        endIcon={<ArrowDropDownIcon />}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.PublishWithoutDeploy.see.more'\n                            defaultMessage='See more'\n                        />\n                    </Button>\n                )}\n                {isExpanded && (\n                    <>\n                        <Button\n                            color='primary'\n                            onClick={() => setIsExpanded(!isExpanded)}\n                            endIcon={<ArrowDropUpIcon />}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.PublishWithoutDeploy.see.less'\n                                defaultMessage='See less'\n                            />\n                        </Button>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            disabled={!isValidExternalEndpoint}\n                            onClick={handlePublishClick}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.PublishWithoutDeploy.advertise'\n                                defaultMessage='Publish'\n                            />\n                        </Button>\n                    </>\n                )}\n                <Button\n                    variant='contained'\n                    color='primary'\n                    component={RouterLink}\n                    to={'/apis/' + api.id + '/deployments'}\n                    id='deployments-btn'\n                >\n                    <Box fontSize='button.fontSize' alignItems='center' display='flex' fontFamily='fontFamily'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.publish.content.info.deployments'\n                            defaultMessage='Deployments'\n                        />\n                        <Box ml={0.5} mt={0.25} display='flex'>\n                            <LinkIcon fontSize='small' />\n                        </Box>\n                    </Box>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","/*\n * Copyright (c) 2023, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Box from '@material-ui/core/Box';\n// import Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const {\n        children, classes, onClose, ...other\n    } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n/**\n *\n * @returns\n */\nexport default function PublishWithoutDeployProduct(props) {\n    const {\n        api, open, handleClose,\n    } = props;\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby='publish-api-confirmation' open={open} fullWidth maxWidth='md'>\n            <DialogTitle id='itest-publish-confirmation' onClose={handleClose}>\n                <FormattedMessage\n                    id='Apis.Details.LifeCycle.components.confirm.publish.apiProducts.title'\n                    defaultMessage='Deploy API product before publishing'\n                />\n            </DialogTitle>\n            <Divider light />\n            <DialogContent>\n                <Box my={1}>\n                    <DialogContentText id='itest-confirm-publish-text'>\n                        <Typography variant='subtitle1' display='block' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.components.confirm.publish.apiProducts.message'\n                                defaultMessage='Deploy the API product before publishing the API'\n                            />\n                        </Typography>\n                    </DialogContentText>\n                </Box>\n\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    component={RouterLink}\n                    to={'/apis/' + api.id + '/deployments'}\n                >\n                    <Box fontSize='button.fontSize' alignItems='center' display='flex' fontFamily='fontFamily'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.publish.content.info.deployments'\n                            defaultMessage='Deployments'\n                        />\n                        <Box ml={0.5} mt={0.25} display='flex'>\n                            <LinkIcon fontSize='small' />\n                        </Box>\n                    </Box>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n `max-len` es-lint rule has been disabled for the entire file due to the generated svg elements in the file.\n it's impossible to get them under 120 columns rule\n  */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n    root: {\n        marginTop: 30,\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleImage\n * @extends {React.Component}\n */\nclass LifeCycleImage extends React.Component {\n    /**\n     *\n     *\n     * @param {*} element\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    highLightMe(element) {\n        const style = {};\n        if (!element.startsWith(this.props.lifeCycleStatus.toLowerCase())) {\n            style.opacity = 0.4;\n        }\n        return style;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='633'\n                height='244'\n                viewBox='0 0 743.09858 287.34519'\n                id='svg5953'\n                className={classes.root}\n                aria-hidden='true'\n            >\n                <defs id='defs5955'>\n                    <path\n                        transform='scale(.26458)'\n                        id='path5588'\n                        d='m 1738.3694,290.45336 a 290.37688,290.37688 0 0 1 268.3994,-179.55952 290.37688,290.37688 0 0 1 5.8758,0.0595'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5578'\n                        d='m 2103.6746,127.54094 a 290.37688,290.37688 0 0 1 193.3409,265.03704'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5547'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path4189'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                </defs>\n                <g id='layer1' transform='translate(51.512 4.77)'>\n                    <path d='m 99,13.3622 24,0 0,24 -24,0 z' id='path6746' fill='none' />\n                    <g id='prototyped' style={this.highLightMe('prototyped')}>\n                        <text\n                            id='text6729'\n                            y='6.362'\n                            x='61'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                            fill='#2b2b2b'\n                        >\n                            <tspan y='6.362' x='61' id='tspan6731'>\n                                PRE-RELEASED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6748'\n                            d='m 118,16.3622 -4.18,0 c -0.42,-1.16 -1.52,-2 -2.82,-2 -1.3,0 -2.4,0.84 -2.82,2 l -4.18,0 c -1.1,0 -2,0.9 -2,2 l 0,14 c 0,1.1 0.9,2 2,2 l 14,0 c 1.1,0 2,-0.9 2,-2 l 0,-14 c 0,-1.1 -0.9,-2 -2,-2 z m -7,0 c 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 0,-0.55 0.45,-1 1,-1 z m -2,14 -4,-4 1.41,-1.41 2.59,2.58 6.59,-6.59 1.41,1.42 -8,8 z'\n                        />\n                    </g>\n                    <path d='m 224.5,133.8622 24,0 0,24 -24,0 z' id='path6762' fill='none' />\n                    <g id='published' style={this.highLightMe('published')}>\n                        <text\n                            id='text6524'\n                            y='125.476'\n                            x='207'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='207' id='tspan6526'>\n                                PUBLISHED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6764'\n                            d='m 240.5,144.8622 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m -8,0 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m 0,2 c -2.33,0 -7,1.17 -7,3.5 l 0,2.5 14,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z m 8,0 c -0.29,0 -0.62,0.02 -0.97,0.05 1.16,0.84 1.97,1.97 1.97,3.45 l 0,2.5 6,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z'\n                        />\n                    </g>\n                    <g id='created' style={this.highLightMe('created')}>\n                        <text\n                            id='text6520'\n                            y='282.362'\n                            x='68'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='68' id='tspan6522'>\n                                CREATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6778'\n                            d='m 97,238.8622 c -1.1,0 -1.99,0.9 -1.99,2 l -0.01,16 c 0,1.1 0.89,2 1.99,2 l 12.01,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -6,-6 -8,0 z m 7,7 0,-5.5 5.5,5.5 -5.5,0 z'\n                        />\n                    </g>\n                    <path d='m 91,236.8622 24,0 0,24 -24,0 z' id='path6780' fill='none' />\n                    <g id='deprecated' style={this.highLightMe('deprecated')}>\n                        <text\n                            id='text6536'\n                            y='125.476'\n                            x='397.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='397.858' id='tspan6538'>\n                                DEPRECATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6794'\n                            d='m 433.52944,97.811947 c 0,1.1 0.9,2 2,2 l 8,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -12,0 0,12 z m 13,-15 -3.5,0 -1,-1 -5,0 -1,1 -3.5,0 0,2 14,0 0,-2 z'\n                        />\n                        <path id='path6796' d='m 427.52944,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <path d='m 427.52944,236.8622 24,0 0,24 -24,0 z' id='path6810' clipRule='evenodd' fill='none' />\n                    <g id='blocked' style={this.highLightMe('blocked')}>\n                        <text\n                            id='text6532'\n                            y='282.362'\n                            x='386.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='386.858' id='tspan6534'>\n                                BLOCKED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6812'\n                            d='m 450.22944,255.8622 -9.1,-9.1 c 0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3 l 4.3,4.3 -3,3 -4.4,-4.3 c -1.2,2.4 -0.7,5.4 1.3,7.4 1.9,1.9 4.6,2.4 6.9,1.5 l 9.1,9.1 c 0.4,0.4 1,0.4 1.4,0 l 2.3,-2.3 c 0.5,-0.4 0.5,-1.1 0.1,-1.4 z'\n                        />\n                    </g>\n                    <g id='retired' style={this.highLightMe('retired')}>\n                        <text\n                            id='text6540'\n                            y='125.483'\n                            x='627.485'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.483' x='627.485' id='tspan6542'>\n                                RETIRED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6826'\n                            d='m 663.36667,89.811947 0,2 -13,0 0,-6 9,0 c 2.21,0 4,1.79 4,4 z m -20,3 0,2 6,0 0,2 8,0 0,-2 6,0 0,-2 -20,0 z m 5.14,-1.9 c 1.16,-1.19 1.14,-3.08 -0.04,-4.24 -1.19,-1.16 -3.08,-1.14 -4.24,0.04 -1.16,1.19 -1.14,3.08 0.04,4.24 1.19,1.16 3.08,1.14 4.24,-0.04 z'\n                        />\n                        <path id='path6828' d='m 641.36667,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <g id='published_to_created' style={this.highLightMe('published_to_created')}>\n                        <path\n                            id='path6872'\n                            d='m 235.84375,184.86133 c -11.86654,31.99459 -35.12697,58.48216 -65.32031,74.38281 l -5.4624,15.71344 14.85695,3.63617 c 35.16928,-17.95415 62.42125,-48.3249 76.47461,-85.22656 l -15.28708,7.18109 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#065381'\n                        />\n                        <path\n                            id='path6985'\n                            d='m 178.61585,255.22337 -4.875,15.375 14.5,3.625'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 187.11585,249.22337 -4.875,15.375 14.5,3.625'\n                            id='path6987'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_published' style={this.highLightMe('created_to_published')}>\n                        <path\n                            id='path6850'\n                            d='m 202.80469,171.18359 c -8.60566,23.79669 -25.78994,43.52064 -48.1836,55.30469 l 15.33148,4.4495 -5.74163,15.30245 c 27.19915,-14.16065 48.15744,-37.93366 58.79687,-66.69335 l -4.08764,-14.98782 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#34b2e4'\n                        />\n                        <path\n                            d='m 200.07828,178.47337 15.66836,-6.25318 3.78013,13.89858'\n                            id='path6979'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            id='path6991'\n                            d='m 195.3937,187.48898 15.66836,-6.25318 3.78013,13.89858'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_published' style={this.highLightMe('prototyped_to_published')}>\n                        <path\n                            id='path6874'\n                            d='m 181.42383,-4.0683594 5.18392,15.3553234 -15.14681,3.480614 c 26.97521,14.497097 48.38501,37.525806 60.88086,65.484375 l 16.41911,5.795641 4.09261,-14.231188 C 238.22018,39.231643 213.06477,12.507292 181.42383,-4.0683594 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#fe912a'\n                        />\n                        <path\n                            id='path6993'\n                            d='m 228.26421,71.982698 16.39604,5.833631 3.93328,-14.097941'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 224.76421,65.357698 16.39604,5.833631 3.93328,-14.097941'\n                            id='path6995'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='published_to_prototyped' style={this.highLightMe('published_to_prototyped')}>\n                        <path\n                            id='path6855'\n                            d='m 164.61328,27.712891 -16.76273,3.798407 6.57718,15.455499 c 19.64736,10.327117 35.3679,26.809879 44.75391,46.923828 l 6.94786,-12.105746 13.33339,3.763949 C 208.07457,60.73778 188.78631,40.399355 164.61328,27.712891 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#ffc95c'\n                        />\n                        <path\n                            id='path6997'\n                            d='m 163.43006,52.336437 -6.45235,-15.202795 16.61701,-3.535534'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='M 171.82695,57.993291 165.3746,42.790496 181.99161,39.254962'\n                            id='path6999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_prototyped' style={this.highLightMe('created_to_prototyped')}>\n                        <path\n                            id='path6870'\n                            d='M 35.433594,-4.7226562 C -17.800688,22.43674 -51.366944,77.095386 -51.511719,136.85742 c 0.08726,60.42038 34.333636,115.59607 88.439453,142.48828 l -5.963174,-14.43529 14.818643,-3.6858 C -1.8626488,238.10436 -32.152993,189.83798 -32.251953,136.87891 -32.191581,84.271252 -2.3316563,36.239603 44.818359,12.90625 l 7.576833,-14.3582512 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#8b103e'\n                        />\n                        <path\n                            id='path7001'\n                            d='m 25.625,1.1122031 16.25,3 -7.125,13.7499999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 16.375,7.1122031 16.25,2.9999999 -7.125,13.75'\n                            id='path7003'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_created' style={this.highLightMe('prototyped_to_created')}>\n                        <path\n                            id='path6840'\n                            d='M 52.171875,26.720703 C 10.473112,47.61586 -15.897048,90.22032 -16,136.86133 c 0.06835,46.84095 26.630186,89.61173 68.585938,110.43945 l 18.169686,-5.17409 -8.489999,-14.63841 C 27.868397,210.36444 6.0894455,175.28511 6,136.86133 6.0597413,98.328986 27.932967,63.153267 62.464844,46.056641 l -14.466177,-4.2932 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#e34856'\n                        />\n                        <path\n                            id='path7005'\n                            d='m 39.421204,240.07329 17.677669,-4.94975 -7.778174,-14.49569'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 27.930719,230.8809 17.677669,-4.94975 -7.778174,-14.49569'\n                            id='path7007'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='deprecated_to_retired' style={this.highLightMe('deprecated_to_retired')}>\n                        <path\n                            id='rect7009'\n                            d='m 530.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7016'\n                            d='m 589.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 581.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7018'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_deprecated' style={this.highLightMe('published_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            id='path7020'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 365.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7022'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7024'\n                            d='m 357.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_blocked' style={this.highLightMe('published_to_blocked')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            id='path7026'\n                            color='#000'\n                            overflow='visible'\n                            fill='#65daad'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            id='path7028'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7030'\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g\n                        id='blocked_to_published'\n                        transform='rotate(180 338.919 207.057)'\n                        style={this.highLightMe('blocked_to_published')}\n                    >\n                        <path\n                            id='path7039'\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#64d0da'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7041'\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            id='path7043'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='blocked_to_deprecated' style={this.highLightMe('blocked_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 427.85405,225.05409 0,-68.24164 9.52539,-9.89949 9.40863,9.89949 0,68.24164 -9.76218,-9.54594 z'\n                            id='path7045'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 428.37098,165.32904 8.95242,-9.31051 8.89273,9.42988'\n                            id='path7047'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7049'\n                            d='m 428.37098,174.01654 8.95242,-9.31051 8.89273,9.42988'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\nLifeCycleImage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lifeCycleStatus: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(LifeCycleImage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport green from '@material-ui/core/colors/green';\nimport yellow from '@material-ui/core/colors/yellow';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst useStyles = makeStyles((theme) => ({\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'block',\n        alignItems: 'left',\n        justifyContent: 'center',\n    },\n    iconTrue: {\n        color: green[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconWarn: {\n        color: yellow[700],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    grid: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'left',\n        alignItems: 'left',\n    },\n    labelsGrid: {\n        fontWeight: 600,\n        marginTop: theme.spacing(3),\n    },\n}));\n/**\n * This component renders the requirements list\n * @param {*} props\n */\nexport default function CheckboxLabels(props) {\n    const classes = useStyles();\n    const {\n        api, isMutualSSLEnabled, isCertAvailable, isAppLayerSecurityMandatory, isBusinessPlanAvailable, isAPIProduct,\n    } = props;\n    const isEndpointAvailable = !isAPIProduct\n        ? api.endpointConfig !== null && !api.endpointConfig.implementation_status\n        : false;\n    const lcState = isAPIProduct ? api.state : api.lifeCycleStatus;\n\n    return (\n        <Paper className={classes.paperCenter}>\n            <Grid xs={12}>\n                <Typography variant='h6' component='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements'\n                        defaultMessage='Requirements'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements.state.transition'\n                        defaultMessage='Requirements for next state transition'\n                    />\n                </Typography>\n            </Grid>\n            {(lcState === 'CREATED' || lcState === 'PROTOTYPED') && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2' component='h5'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.publisher'\n                                defaultMessage='Publish'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        {api.type !== 'WEBSUB' && !isAPIProduct && (\n                            <Grid xs={12} className={classes.grid}>\n                                {isEndpointAvailable ? (\n                                    <CheckIcon className={classes.iconTrue} />\n                                ) : (\n                                    <CloseIcon className={classes.iconFalse} />\n                                )}\n                                <Typography>\n                                    <FormattedMessage\n                                        data-testid='endpoint-req'\n                                        id='Apis.Details.LifeCycle.CheckboxLabels.endpoints.provided'\n                                        defaultMessage='Endpoint provided'\n                                    />\n                                </Typography>\n                                <Link to={'/apis/' + api.id + '/endpoints'} aria-label='Endpoint provided'>\n                                    <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                </Link>\n                            </Grid>\n                        )}\n                        <>\n                            {isAppLayerSecurityMandatory && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isBusinessPlanAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography data-testid='business-plan-req'>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.business.plans.selected'\n                                            defaultMessage='Business Plan(s) selected'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/subscriptions'} aria-label='Business Plan(s)'>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            )}\n                            {isMutualSSLEnabled && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isCertAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.cert.provided'\n                                            defaultMessage='Certificate provided'\n                                        />\n                                    </Typography>\n                                    <Link\n                                        to={'/apis/' + api.id + '/runtime-configuration'}\n                                        aria-label='Certificate provided'\n                                    >\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            ) }\n                        </>\n                    </Grid>\n                </>\n            )}\n        </Paper>\n    );\n}\n\nCheckboxLabels.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\n\nconst lifecyclePending = (props) => {\n    const { currentState } = props;\n    const intl = useIntl();\n    const [isOpen, setOpen] = useState(false);\n    const [api, updateAPI] = useAPI();\n    const deleteTask = () => {\n        const { id } = api;\n        api.cleanupPendingTask(id)\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.success',\n                    defaultMessage: 'Lifecycle task deleted successfully',\n                }));\n                updateAPI();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.error',\n                    defaultMessage: 'Error while deleting task',\n                }));\n            });\n    };\n    return (\n        <Paper>\n            <Box display='block' p={2} mt={2}>\n                <Box display='block'>\n                    <Typography variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.pending'\n                            defaultMessage='Pending lifecycle state change.'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='block' mt={0.5}>\n                    <Typography variant='subtitle2'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.current.state'\n                            defaultMessage='Current state is'\n                        />\n                        {' '}\n                        {currentState}\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Button\n                        size='small'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => setOpen(true)}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.delete.task'\n                            defaultMessage='Delete Task'\n                        />\n                    </Button>\n\n                </Box>\n            </Box>\n            <Dialog open={isOpen} transition={Slide}>\n                <DialogTitle>\n                    <FormattedMessage\n                        id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.title'\n                        defaultMessage='Delete Task'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.text.description'\n                            defaultMessage='The life cycle task will be removed'\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button dense onClick={() => setOpen(false)}>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='text'\n                        color='primary'\n                        onClick={deleteTask}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog,delete'\n                            defaultMessage='Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Paper>\n    );\n};\nlifecyclePending.propTypes = {\n    currentState: PropTypes.string.isRequired,\n};\nexport default lifecyclePending;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Person from '@material-ui/icons/Person';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => ({\n    firstCol: {\n        width: 100,\n    },\n    personIcon: {\n        fontSize: theme.typography.fontSize,\n    },\n    avatar: {\n        width: 25,\n        height: 25,\n    },\n});\nconst LifeCycleHistory = (props) => {\n    const { classes } = props;\n    return (\n        <Paper>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell className={classes.firstCol}>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.user' defaultMessage='User' />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycleHistory.action'\n                                defaultMessage='Action'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.time' defaultMessage='Time' />\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.lcHistory.reverse().map((entry) => entry.previousState && (\n                        <TableRow key={entry.postState}>\n                            <TableCell component='th' scope='row'>\n                                <Avatar className={classes.avatar}>\n                                    <Person className={classes.personIcon} />\n                                </Avatar>\n                                <div>{entry.user}</div>\n                            </TableCell>\n                            <TableCell>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.LifeCycleHistory.lifecycle.state.history'\n                                    defaultMessage='LC has changed from {previous} to {post}'\n                                    values={{ previous: entry.previousState, post: entry.postState }}\n                                />\n                            </TableCell>\n                            <TableCell>{moment(entry.updatedTime).fromNow()}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\nLifeCycleHistory.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lcHistory: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\nexport default withStyles(styles)(LifeCycleHistory);\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Listing from './Listing';\nimport View from './View';\nimport Edit from './Edit';\nimport EditContent from './EditContent';\nimport DocCreate from './Create';\nimport GenerateDocument from './GenerateDocument';\n\nconst Documents = (props) => {\n    const { isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents'} component={Listing} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/details'} component={View} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit'} component={Edit} />\n                <Route\n                    exact\n                    path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit-content'}\n                    component={EditContent} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/create'} component={DocCreate} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/swaggerdoc'} component={GenerateDocument} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n};\n\nDocuments.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default Documents;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Create from './Create';\nimport MarkdownEditor from './MarkdownEditor';\nimport Edit from './Edit';\nimport Delete from './Delete';\nimport DeleteMultiple from './DeleteMultiple';\nimport Download from './Download';\nimport ViewDocument from './ViewDocument';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"ListingTextEditor\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingRight: 10,\n    },\n    actionTable: {\n        '& td': {\n            width: 50,\n        },\n        '& td:first-child': {\n            width: 130,\n        },\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    genDocumentButton:{\n        marginRight:10,\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        marginBottom: 10,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    documentsPaper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n});\n \nfunction LinkGenerator(props) {\n    return props.apiType === 'APIPRODUCT' ? (\n        <Link to={'/api-products/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    ) : (\n        <Link to={'/apis/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    );\n}\n\nclass Listing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            docs: null,\n            showAddDocs: false,\n            docsToDelete: null,\n        };\n        this.apiId = props.api.id;\n        this.toggleAddDocs = this.toggleAddDocs.bind(this);\n        this.getDocumentsList = this.getDocumentsList.bind(this);\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.getDocumentsList();\n    }\n    \n    /*\n     Get the document list attached to current API and set it to the state\n     */\n    getDocumentsList() {\n        const { api, intl } = this.props;\n        const  getSortOrder = (prop) => {    \n            return function(a, b) {    \n                if (a[prop] > b[prop]) {    \n                    return 1;    \n                } else if (a[prop] < b[prop]) {    \n                    return -1;    \n                }    \n                return 0;    \n            }    \n        }  \n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct();\n            const docs = apiProduct.getDocuments(api.id);\n            docs.then((response) => {\n                const documentList = response.body.list.filter((item) => item.otherTypeName !== '_overview');\n                documentList.sort(getSortOrder('name'));\n                this.setState({ docs: documentList });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message.api.product',\n                    defaultMessage: 'Error in fetching documents list of the API Product',\n                }));\n            });\n        } else {\n            const newApi = new API();\n            const docs = newApi.getDocuments(api.id);\n            docs.then((response) => {\n                const documentList = response.body.list.filter((item) => item.otherTypeName !== '_overview');\n                documentList.sort(getSortOrder('name'));\n                this.setState({ docs: documentList });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message',\n                    defaultMessage: 'Error in fetching documents list of the API',\n                }));\n            });\n        }\n    }\n    toggleAddDocs() {\n        this.setState((oldState) => {\n            return { showAddDocs: !oldState.showAddDocs };\n        });\n    }\n\n\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { docs, showAddDocs, docsToDelete } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/documents/create`;\n        const showActionsColumn = isRestricted(['apim:api_publish', 'apim:api_create'], api) ? 'excluded' : true;\n        const options = {\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            search: false,\n            onRowsDelete: (rowData, rowMeta, that = this) => {\n                that.setState({ docsToDelete: rowData });\n                return false;\n            },\n        };\n        const columns = [\n            {\n                name: 'documentId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            return (\n                                <LinkGenerator\n                                    docName={docName}\n                                    docId={docId}\n                                    apiId={this.apiId}\n                                    apiType={api.apiType}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.column.header.name'\n                            defaultMessage='Name'\n                        />\n                    ),\n                },\n            },\n            {\n                name: 'sourceType',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.source.type'\n                        defaultMessage='Source Type'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'type',\n                label: (\n                    <FormattedMessage id='Apis.Details.Documents.Listing.column.header.type' defaultMessage='Type' />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'sourceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'action',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.action'\n                        defaultMessage='Action'\n                    />\n                ),\n                options: {\n                    display: showActionsColumn,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            const sourceType = tableMeta.rowData[2];\n                            const sourceUrl = tableMeta.rowData[4];\n                            if (sourceType === 'MARKDOWN') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <MarkdownEditor docName={docName} docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'INLINE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Suspense\n                                                    fallback={\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Documents.Listing.loading'\n                                                            defaultMessage='Loading...'\n                                                        />\n                                                    }\n                                                >\n                                                    <TextEditor\n                                                        docName={docName}\n                                                        docId={docId}\n                                                        apiId={this.apiId}\n                                                        apiType={api.apiType}\n                                                    />\n                                                </Suspense>\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'URL') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <a href={sourceUrl}>\n                                                <Button>\n                                                    <Icon>open_in_new</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Listing.documents.open'\n                                                        defaultMessage='Open'\n                                                    />\n                                                </Button>\n                                               </a>  \n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'FILE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Download docId={docId} apiId={this.apiId} docName={docName} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else {\n                                return <span />;\n                            }\n                        }\n                        return null;\n                    },\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n        if(!docs){\n            return (<Progress />);\n        }\n        return (\n            <>\n                {docsToDelete && (\n                    <DeleteMultiple getDocumentsList={this.getDocumentsList} docsToDelete={docsToDelete} docs={docs} />\n                )}\n                <div className={classes.titleWrapper}>\n                    <Typography id='itest-api-details-documents-head' variant='h4' component='h2' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.documents.listing.title'\n                            defaultMessage='Documents'\n                        />\n                    </Typography>\n                    {((docs && docs.length > 0) || (api.type=='HTTP')) && (\n                        <Button\n                            size='small'\n                            data-testid='add-document-btn'\n                            className={classes.button}\n                            component={Link}\n                            to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && !api.isRevision && url}\n                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || api.isRevision}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Documents.Listing.add.new.document.button'\n                                defaultMessage='Add New Document'\n                            />\n                        </Button>\n                    )}\n                </div>\n                <div>\n                    {showAddDocs && (\n                        <Create\n                            toggleAddDocs={this.toggleAddDocs}\n                            getDocumentsList={this.getDocumentsList}\n                            apiType={api.apiType}\n                        />\n                    )}\n\n                    {api.type=='HTTP' && (\n                        <React.Fragment>\n                            <Paper className={classes.documentsPaper}>\n                                <Typography className={classes.subHeading} variant='h6' component='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.documents.generated.title'\n                                        defaultMessage='Generated Document'\n                                    />\n                                </Typography>\n                                <div>\n                                    <ViewDocument\n                                        cla\n                                        docName={api.name+'_doc'}\n                                        apiType={api.apiType}\n                                        apiId={this.apiId}\n                                        api\n                                        className={classes.genDocumentButton}\n                                    />\n                                </div>\n                            </Paper>\n                        </React.Fragment>\n                    )}\n\n                    {api.type=='HTTP' && docs && docs.length > 0 && (\n                        <React.Fragment>\n                            <Paper className={classes.documentsPaper}>\n                                    <Typography className={classes.subHeading} variant='h6' component='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Listing.documents.uploaded.title'\n                                            defaultMessage='Uploaded Documents'\n                                        />\n                                    </Typography>\n                                    <MUIDataTable title='' data={docs} columns={columns} options={options} />\n                            </Paper>\n                        </React.Fragment>\n                    )}\n                    \n                    {docs && docs.length > 0 && api.type!='HTTP' && (\n                        <MUIDataTable title='' data={docs} columns={columns} options={options} />\n                    )}\n                    \n                    {docs && docs.length < 1 && api.type!='HTTP' && (\n                        <InlineMessage type='info' height={140}>\n                            <div className={classes.contentWrapper}>\n                                <Typography variant='h5' component='h3' className={classes.head}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.title'\n                                        defaultMessage='Create Documents'\n                                    />\n                                </Typography>\n                                {api.apiType === API.CONSTS.APIProduct\n                                    ? \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.APIProduct.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                    : \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                }\n                                <div className={classes.actions}>\n                                    <Button\n                                        id='add-new-document-btn'\n                                        data-testid='add-document-btn'\n                                        variant='contained'\n                                        color='primary'\n                                        component={Link}\n                                        to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && !api.isRevision && url}\n                                        className={classes.button}\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || api.isRevision}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Listing.add.new.msg.button'\n                                            defaultMessage='Add New Document'\n                                        />\n                                    </Button>\n                                </div>\n                            </div>\n                        </InlineMessage>\n                    )}\n                    \n                </div>\n            </>\n        );\n    }\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Listing)));","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage } from 'react-intl';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction GoToEdit(props) {\n    const { doc } = props;\n    const [open, setOpen] = React.useState(true);\n    const { api, isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    let docContentEditPath = null;\n    if (doc && doc.body && doc.body.documentId) {\n        docContentEditPath = `/${urlPrefix}/${api.id}/documents/${doc.body.documentId}/edit-content`;\n    }\n\n    let displayAddContent;\n    if (doc.body.sourceType === 'INLINE'  || doc.body.sourceType === 'MARKDOWN') {\n        displayAddContent = true;\n    } else {\n        displayAddContent= false;\n    }\n\n    console.info('printing doc', doc);\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                {' '}\n                <FormattedMessage\n                    id='Apis.Details.Documents.GoToEdit.title'\n                    defaultMessage='Document Created Successfully'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {displayAddContent ? (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.content'\n                        defaultMessage= 'You can add content to the document or go back to the document listing page.'\n                    />\n                    ) : (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.file'\n                        defaultMessage= {'You can go back to the document listing page and upload' + \n                        ' the file by editing the document.'}\n                    />\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                {displayAddContent && (<Link\n                    to={{\n                        pathname: docContentEditPath,\n                        state: { doc: doc.body },\n                    }}\n                >\n                    <Button color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.add.content'\n                            defaultMessage='Add Content'\n                        />\n                    </Button>\n                </Link>)}\n                <Link to={listingPath}>\n                    <Button color='primary' autoFocus id='add-content-back-to-listing-btn'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.back.to.listing'\n                            defaultMessage='Back to Listing'\n                        />\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    );\n}\nGoToEdit.propTypes = {\n    doc: PropTypes.shape({}).isRequired,\n};\nexport default GoToEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction Delete(props) {\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const { api } = useContext(APIContext);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDoc();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDoc = () => {\n        const {\n            apiId, docId, getDocumentsList, apiType,\n        } = props;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.deleteDocument(apiId, docId);\n        docPromise\n            .then(() => {\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { apiName } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || api.isRevision}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage id='Apis.Details.Documents.Delete.document.delete' defaultMessage='Delete' />\n            </Button>\n            <Dialog\n                open={open}\n                onClose={toggleOpen}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle id='alert-dialog-title'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                        defaultMessage='Delete Document'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='alert-dialog-description'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                            defaultMessage={\n                                'Selected document will be deleted from the API.' +\n                                'You will not be able to undo this action.'\n                            }\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => runAction('no')} color='default'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete'\n                            defaultMessage='Yes. Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nDelete.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    apiType: PropTypes.string.isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(Delete);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\n\nfunction DeleteMultiple(props) {\n    const {\n        intl, docsToDelete, docs, getDocumentsList,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const restApi = isAPIProduct ? new APIProduct() : new API();\n\n    const [open, setOpen] = useState(true);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDocs();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDocs = () => {\n        const docPromises = [];\n\n        docsToDelete.data.map((docIndexObj) => {\n            const doc = docs[docIndexObj.index];\n            docPromises.push(restApi.deleteDocument(api.id, doc.documentId));\n        });\n        Promise.all(docPromises)\n            .then((values) => {\n                console.log(values);\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(`${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Delete.document.delete.error',\n                        defaultMessage: 'Error while deleting documents!',\n                    })}`);\n                }\n            });\n    };\n    useEffect(() => {\n        setOpen(true);\n    }, [docsToDelete]);\n\n    return (\n        <Dialog\n            open={open}\n            onClose={toggleOpen}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.selected.document.listing.delete.confirm.title'\n                    defaultMessage='Delete Selected Documents'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    <strong>{api.name}</strong>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.selected.document.listing.delete.confirm.body'\n                        defaultMessage={\n                            'Selected documents will be deleted from the API.' +\n                            ' You will not be able to undo this action.'\n                        }\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => runAction('no')} color='default'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nDeleteMultiple.propTypes = {\n    docs: PropTypes.instanceOf(Array).isRequired,\n    getDocumentsList: PropTypes.func.isRequired,\n    docsToDelete: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(DeleteMultiple);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\n\nfunction Download(props) {\n    const { intl } = props;\n\n    const { docId, apiId, docName } = props;\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const [isSuccessful, setIsSuccessful] = useState(false);\n\n    useEffect(() => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((done) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(true);\n            })\n            .catch((error) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(false);\n            });\n    }, []);\n    const handleDownload = () => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id:'Apis.Details.Documents.Download.documents.markdown.editor.download.error',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n\n    return (\n        isSuccessful &&\n        <Button onClick={handleDownload} disabled={!isFileAvailable}  aria-label={'Download ' + docName}>\n            <Icon>arrow_downward</Icon>\n            <FormattedMessage\n                id='Apis.Details.Documents.Download.documents.listing.download'\n                defaultMessage='Download'\n            />\n        </Button>\n    );\n}\nDownload.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(Download);\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useRef, useContext} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Api from 'AppData/api';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport GenerateDocument from './GenerateDocument';\n\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n    viewButton: {\n        whiteSpace: 'nowrap',\n        marginRight: 50,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction ViewDocument(props) {\n    const restAPI = new Api();\n\n    const { intl, apiType } = props;\n    const [open, setOpen] = useState(false);\n    const [saveDisabled, setSaveDisabled] = useState(false);\n    let createEditForm = useRef(null);\n    const { api } = useContext(APIContext);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const { classes, apiId, docName } = props;\n    return (\n        <React.Fragment>\n            <Button\n                id='view-generated-document-btn'\n                data-testid='view-generated-document-btn'\n                variant='contained'\n                color='primary'\n                onClick={toggleOpen}\n                className={classes.viewButton}\n                aria-label={'View Content of ' + docName}\n            >\n                <FormattedMessage\n                    id='Apis.Details.Documents.ViewDocument.view.document'\n                    defaultMessage='View Document'\n                />\n            </Button>\n            <Dialog open={open} onClose={toggleOpen} TransitionComponent={Transition} fullScreen> \n                <Paper square className={classes.popupHeader}>\n                        <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                            <Icon>close</Icon>\n                        </IconButton>\n                </Paper>\n                <div className='apim_elements'><GenerateDocument /></div>\n                \n            </Dialog>\n        </React.Fragment>\n    );\n}\nViewDocument.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ViewDocument));\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!./elements.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#apim_elements {\\n    margin: 32px;\\n}\\n\\n#apim_elements blockquote,\\n#apim_elements dd,\\n#apim_elements dl,\\n#apim_elements figure,\\n#apim_elements h1,\\n#apim_elements h2,\\n#apim_elements h3,\\n#apim_elements h4,\\n#apim_elements h5,\\n#apim_elements h6,\\n#apim_elements hr,\\n#apim_elements p,\\n#apim_elements pre {\\n    margin: 0\\n}\\n\\n#apim_elements button {\\n    background-color: initial;\\n    background-image: none\\n}\\n\\n:focus {\\n    outline: none\\n}\\n\\n#apim_elements fieldset,\\n#apim_elements l,\\n#apim_elements ul {\\n    margin: 0;\\n    padding: 0\\n}\\n\\n#apim_elements tol,\\n#apim_elements tul {\\n    list-style: none\\n}\\n\\n#apim_elements thtml {\\n    font-family: var(--font-ui);\\n    line-height: 1.5\\n}\\n\\n#apim_elements tbody {\\n    text-rendering: optimizeSpeed;\\n    font-family: inherit;\\n    line-height: inherit;\\n    margin: 0;\\n    min-height: 100vh\\n}\\n\\n#apim_elements t*,\\n#apim_elements t:after,\\n#apim_elements t:before {\\n    border: 0 solid var(--color-border, currentColor);\\n    box-sizing: border-box\\n}\\n\\n#apim_elements thr {\\n    border-top-width: 1px\\n}\\n\\n#apim_elements timg {\\n    border-style: solid\\n}\\n\\n#apim_elements ttextarea {\\n    resize: vertical\\n}\\n\\n#apim_elements input::-ms-input-placeholder,\\n#apim_elements textarea::-ms-input-placeholder {\\n    color: #a1a1aa\\n}\\n\\n#apim_elements input::placeholder,\\n#apim_elements textarea::placeholder {\\n    color: #a1a1aa\\n}\\n\\n#apim_elements [role=button],\\n#apim_elements button {\\n    cursor: pointer\\n}\\n\\n#apim_elements table {\\n    border-collapse: collapse\\n}\\n\\n#apim_elements a {\\n    color: inherit;\\n    text-decoration: inherit\\n}\\n\\n#apim_elements button,\\n#apim_elements input,\\n#apim_elements optgroup,\\n#apim_elements select,\\n#apim_elements textarea {\\n    color: inherit;\\n    line-height: inherit;\\n    padding: 0\\n}\\n\\n#apim_elements code,\\n#apim_elements kbd,\\n#apim_elements pre,\\n#apim_elements samp {\\n    font-family: var(--font-mono)\\n}\\n\\n#apim_elements audio,\\n#apim_elements canvas,\\n#apim_elements embed,\\n#apim_elements iframe,\\n#apim_elements img,\\n#apim_elements object,\\n#apim_elements svg,\\n#apim_elements video {\\n    display: block;\\n    vertical-align: middle\\n}\\n\\n#apim_elements img,\\n#apim_elements video {\\n    height: auto;\\n    max-width: 100%\\n}\\n\\n#apim_elements button {\\n    font-family: var(--font-ui)\\n}\\n\\n#apim_elements select {\\n    -moz-appearance: none;\\n    -webkit-appearance: none\\n}\\n\\n#apim_elements select::-ms-expand {\\n    display: none\\n}\\n\\n#apim_elements iframe {\\n    border: 0\\n}\\n\\n@media (prefers-reduced-motion:reduce) {\\n    * {\\n        animation-duration: .01ms !important;\\n        animation-iteration-count: 1 !important;\\n        scroll-behavior: auto !important;\\n        transition-duration: .01ms !important\\n    }\\n}\\n\\n.sl-content-center {\\n    align-content: center\\n}\\n\\n.sl-content-start {\\n    align-content: flex-start\\n}\\n\\n.sl-content-end {\\n    align-content: flex-end\\n}\\n\\n.sl-content-between {\\n    align-content: space-between\\n}\\n\\n.sl-content-around {\\n    align-content: space-around\\n}\\n\\n.sl-content-evenly {\\n    align-content: space-evenly\\n}\\n\\n.sl-items-start {\\n    align-items: flex-start\\n}\\n\\n.sl-items-end {\\n    align-items: flex-end\\n}\\n\\n.sl-items-center {\\n    align-items: center\\n}\\n\\n.sl-items-baseline {\\n    align-items: baseline\\n}\\n\\n.sl-items-stretch {\\n    align-items: stretch\\n}\\n\\n.sl-self-auto {\\n    align-self: auto\\n}\\n\\n.sl-self-start {\\n    align-self: flex-start\\n}\\n\\n.sl-self-end {\\n    align-self: flex-end\\n}\\n\\n.sl-self-center {\\n    align-self: center\\n}\\n\\n.sl-self-stretch {\\n    align-self: stretch\\n}\\n\\n.sl-bg-transparent {\\n    background-color: initial\\n}\\n\\n.sl-bg-current {\\n    background-color: currentColor\\n}\\n\\n.sl-bg-lighten-100 {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.sl-bg-darken-100 {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.sl-bg-primary {\\n    background-color: var(--color-primary)\\n}\\n\\n.sl-bg-primary-tint {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.sl-bg-primary-light {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.sl-bg-primary-dark {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.sl-bg-primary-darker {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.sl-bg-success {\\n    background-color: var(--color-success)\\n}\\n\\n.sl-bg-success-tint {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.sl-bg-success-light {\\n    background-color: var(--color-success-light)\\n}\\n\\n.sl-bg-success-dark {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.sl-bg-success-darker {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.sl-bg-warning {\\n    background-color: var(--color-warning)\\n}\\n\\n.sl-bg-warning-tint {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.sl-bg-warning-light {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.sl-bg-warning-dark {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.sl-bg-warning-darker {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.sl-bg-danger {\\n    background-color: var(--color-danger)\\n}\\n\\n.sl-bg-danger-tint {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.sl-bg-danger-light {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.sl-bg-danger-dark {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.sl-bg-danger-darker {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.sl-bg-code {\\n    background-color: var(--color-code)\\n}\\n\\n.sl-bg-on-code {\\n    background-color: var(--color-on-code)\\n}\\n\\n.sl-bg-on-primary {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.sl-bg-on-success {\\n    background-color: var(--color-on-success)\\n}\\n\\n.sl-bg-on-warning {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.sl-bg-on-danger {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.sl-bg-canvas-50 {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.sl-bg-canvas-100 {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.sl-bg-canvas-200 {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.sl-bg-canvas-300 {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.sl-bg-canvas-400 {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.sl-bg-canvas-500 {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.sl-bg-canvas-pure {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.sl-bg-canvas {\\n    background-color: var(--color-canvas)\\n}\\n\\n.sl-bg-canvas-tint {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.sl-bg-canvas-dialog {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.sl-bg-body {\\n    background-color: var(--color-text)\\n}\\n\\n.sl-bg-body-muted {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.sl-bg-body-light {\\n    background-color: var(--color-text-light)\\n}\\n\\n.hover\\\\:sl-bg-transparent:hover {\\n    background-color: initial\\n}\\n\\n.hover\\\\:sl-bg-current:hover {\\n    background-color: currentColor\\n}\\n\\n.hover\\\\:sl-bg-lighten-100:hover {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.hover\\\\:sl-bg-darken-100:hover {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.hover\\\\:sl-bg-primary:hover {\\n    background-color: var(--color-primary)\\n}\\n\\n.hover\\\\:sl-bg-primary-tint:hover {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.hover\\\\:sl-bg-primary-light:hover {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.hover\\\\:sl-bg-primary-dark:hover {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.hover\\\\:sl-bg-primary-darker:hover {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.hover\\\\:sl-bg-success:hover {\\n    background-color: var(--color-success)\\n}\\n\\n.hover\\\\:sl-bg-success-tint:hover {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.hover\\\\:sl-bg-success-light:hover {\\n    background-color: var(--color-success-light)\\n}\\n\\n.hover\\\\:sl-bg-success-dark:hover {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.hover\\\\:sl-bg-success-darker:hover {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.hover\\\\:sl-bg-warning:hover {\\n    background-color: var(--color-warning)\\n}\\n\\n.hover\\\\:sl-bg-warning-tint:hover {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.hover\\\\:sl-bg-warning-light:hover {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.hover\\\\:sl-bg-warning-dark:hover {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.hover\\\\:sl-bg-warning-darker:hover {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.hover\\\\:sl-bg-danger:hover {\\n    background-color: var(--color-danger)\\n}\\n\\n.hover\\\\:sl-bg-danger-tint:hover {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.hover\\\\:sl-bg-danger-light:hover {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.hover\\\\:sl-bg-danger-dark:hover {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.hover\\\\:sl-bg-danger-darker:hover {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.hover\\\\:sl-bg-code:hover {\\n    background-color: var(--color-code)\\n}\\n\\n.hover\\\\:sl-bg-on-code:hover {\\n    background-color: var(--color-on-code)\\n}\\n\\n.hover\\\\:sl-bg-on-primary:hover {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.hover\\\\:sl-bg-on-success:hover {\\n    background-color: var(--color-on-success)\\n}\\n\\n.hover\\\\:sl-bg-on-warning:hover {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.hover\\\\:sl-bg-on-danger:hover {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.hover\\\\:sl-bg-canvas-50:hover {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.hover\\\\:sl-bg-canvas-100:hover {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.hover\\\\:sl-bg-canvas-200:hover {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.hover\\\\:sl-bg-canvas-300:hover {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.hover\\\\:sl-bg-canvas-400:hover {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.hover\\\\:sl-bg-canvas-500:hover {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.hover\\\\:sl-bg-canvas-pure:hover {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.hover\\\\:sl-bg-canvas:hover {\\n    background-color: var(--color-canvas)\\n}\\n\\n.hover\\\\:sl-bg-canvas-tint:hover {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.hover\\\\:sl-bg-canvas-dialog:hover {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.hover\\\\:sl-bg-body:hover {\\n    background-color: var(--color-text)\\n}\\n\\n.hover\\\\:sl-bg-body-muted:hover {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.hover\\\\:sl-bg-body-light:hover {\\n    background-color: var(--color-text-light)\\n}\\n\\n.focus\\\\:sl-bg-transparent:focus {\\n    background-color: initial\\n}\\n\\n.focus\\\\:sl-bg-current:focus {\\n    background-color: currentColor\\n}\\n\\n.focus\\\\:sl-bg-lighten-100:focus {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.focus\\\\:sl-bg-darken-100:focus {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.focus\\\\:sl-bg-primary:focus {\\n    background-color: var(--color-primary)\\n}\\n\\n.focus\\\\:sl-bg-primary-tint:focus {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.focus\\\\:sl-bg-primary-light:focus {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.focus\\\\:sl-bg-primary-dark:focus {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.focus\\\\:sl-bg-primary-darker:focus {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.focus\\\\:sl-bg-success:focus {\\n    background-color: var(--color-success)\\n}\\n\\n.focus\\\\:sl-bg-success-tint:focus {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.focus\\\\:sl-bg-success-light:focus {\\n    background-color: var(--color-success-light)\\n}\\n\\n.focus\\\\:sl-bg-success-dark:focus {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.focus\\\\:sl-bg-success-darker:focus {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.focus\\\\:sl-bg-warning:focus {\\n    background-color: var(--color-warning)\\n}\\n\\n.focus\\\\:sl-bg-warning-tint:focus {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.focus\\\\:sl-bg-warning-light:focus {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.focus\\\\:sl-bg-warning-dark:focus {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.focus\\\\:sl-bg-warning-darker:focus {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.focus\\\\:sl-bg-danger:focus {\\n    background-color: var(--color-danger)\\n}\\n\\n.focus\\\\:sl-bg-danger-tint:focus {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.focus\\\\:sl-bg-danger-light:focus {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.focus\\\\:sl-bg-danger-dark:focus {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.focus\\\\:sl-bg-danger-darker:focus {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.focus\\\\:sl-bg-code:focus {\\n    background-color: var(--color-code)\\n}\\n\\n.focus\\\\:sl-bg-on-code:focus {\\n    background-color: var(--color-on-code)\\n}\\n\\n.focus\\\\:sl-bg-on-primary:focus {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.focus\\\\:sl-bg-on-success:focus {\\n    background-color: var(--color-on-success)\\n}\\n\\n.focus\\\\:sl-bg-on-warning:focus {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.focus\\\\:sl-bg-on-danger:focus {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.focus\\\\:sl-bg-canvas-50:focus {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.focus\\\\:sl-bg-canvas-100:focus {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.focus\\\\:sl-bg-canvas-200:focus {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.focus\\\\:sl-bg-canvas-300:focus {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.focus\\\\:sl-bg-canvas-400:focus {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.focus\\\\:sl-bg-canvas-500:focus {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.focus\\\\:sl-bg-canvas-pure:focus {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.focus\\\\:sl-bg-canvas:focus {\\n    background-color: var(--color-canvas)\\n}\\n\\n.focus\\\\:sl-bg-canvas-tint:focus {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.focus\\\\:sl-bg-canvas-dialog:focus {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.focus\\\\:sl-bg-body:focus {\\n    background-color: var(--color-text)\\n}\\n\\n.focus\\\\:sl-bg-body-muted:focus {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.focus\\\\:sl-bg-body-light:focus {\\n    background-color: var(--color-text-light)\\n}\\n\\n.active\\\\:sl-bg-transparent:active {\\n    background-color: initial\\n}\\n\\n.active\\\\:sl-bg-current:active {\\n    background-color: currentColor\\n}\\n\\n.active\\\\:sl-bg-lighten-100:active {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.active\\\\:sl-bg-darken-100:active {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.active\\\\:sl-bg-primary:active {\\n    background-color: var(--color-primary)\\n}\\n\\n.active\\\\:sl-bg-primary-tint:active {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.active\\\\:sl-bg-primary-light:active {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.active\\\\:sl-bg-primary-dark:active {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.active\\\\:sl-bg-primary-darker:active {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.active\\\\:sl-bg-success:active {\\n    background-color: var(--color-success)\\n}\\n\\n.active\\\\:sl-bg-success-tint:active {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.active\\\\:sl-bg-success-light:active {\\n    background-color: var(--color-success-light)\\n}\\n\\n.active\\\\:sl-bg-success-dark:active {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.active\\\\:sl-bg-success-darker:active {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.active\\\\:sl-bg-warning:active {\\n    background-color: var(--color-warning)\\n}\\n\\n.active\\\\:sl-bg-warning-tint:active {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.active\\\\:sl-bg-warning-light:active {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.active\\\\:sl-bg-warning-dark:active {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.active\\\\:sl-bg-warning-darker:active {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.active\\\\:sl-bg-danger:active {\\n    background-color: var(--color-danger)\\n}\\n\\n.active\\\\:sl-bg-danger-tint:active {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.active\\\\:sl-bg-danger-light:active {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.active\\\\:sl-bg-danger-dark:active {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.active\\\\:sl-bg-danger-darker:active {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.active\\\\:sl-bg-code:active {\\n    background-color: var(--color-code)\\n}\\n\\n.active\\\\:sl-bg-on-code:active {\\n    background-color: var(--color-on-code)\\n}\\n\\n.active\\\\:sl-bg-on-primary:active {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.active\\\\:sl-bg-on-success:active {\\n    background-color: var(--color-on-success)\\n}\\n\\n.active\\\\:sl-bg-on-warning:active {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.active\\\\:sl-bg-on-danger:active {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.active\\\\:sl-bg-canvas-50:active {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.active\\\\:sl-bg-canvas-100:active {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.active\\\\:sl-bg-canvas-200:active {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.active\\\\:sl-bg-canvas-300:active {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.active\\\\:sl-bg-canvas-400:active {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.active\\\\:sl-bg-canvas-500:active {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.active\\\\:sl-bg-canvas-pure:active {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.active\\\\:sl-bg-canvas:active {\\n    background-color: var(--color-canvas)\\n}\\n\\n.active\\\\:sl-bg-canvas-tint:active {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.active\\\\:sl-bg-canvas-dialog:active {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.active\\\\:sl-bg-body:active {\\n    background-color: var(--color-text)\\n}\\n\\n.active\\\\:sl-bg-body-muted:active {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.active\\\\:sl-bg-body-light:active {\\n    background-color: var(--color-text-light)\\n}\\n\\n.disabled\\\\:sl-bg-transparent:disabled {\\n    background-color: initial\\n}\\n\\n.disabled\\\\:sl-bg-current:disabled {\\n    background-color: currentColor\\n}\\n\\n.disabled\\\\:sl-bg-lighten-100:disabled {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.disabled\\\\:sl-bg-darken-100:disabled {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.disabled\\\\:sl-bg-primary:disabled {\\n    background-color: var(--color-primary)\\n}\\n\\n.disabled\\\\:sl-bg-primary-tint:disabled {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.disabled\\\\:sl-bg-primary-light:disabled {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.disabled\\\\:sl-bg-primary-dark:disabled {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.disabled\\\\:sl-bg-primary-darker:disabled {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.disabled\\\\:sl-bg-success:disabled {\\n    background-color: var(--color-success)\\n}\\n\\n.disabled\\\\:sl-bg-success-tint:disabled {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.disabled\\\\:sl-bg-success-light:disabled {\\n    background-color: var(--color-success-light)\\n}\\n\\n.disabled\\\\:sl-bg-success-dark:disabled {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.disabled\\\\:sl-bg-success-darker:disabled {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.disabled\\\\:sl-bg-warning:disabled {\\n    background-color: var(--color-warning)\\n}\\n\\n.disabled\\\\:sl-bg-warning-tint:disabled {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.disabled\\\\:sl-bg-warning-light:disabled {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.disabled\\\\:sl-bg-warning-dark:disabled {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.disabled\\\\:sl-bg-warning-darker:disabled {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.disabled\\\\:sl-bg-danger:disabled {\\n    background-color: var(--color-danger)\\n}\\n\\n.disabled\\\\:sl-bg-danger-tint:disabled {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.disabled\\\\:sl-bg-danger-light:disabled {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.disabled\\\\:sl-bg-danger-dark:disabled {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.disabled\\\\:sl-bg-danger-darker:disabled {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.disabled\\\\:sl-bg-code:disabled {\\n    background-color: var(--color-code)\\n}\\n\\n.disabled\\\\:sl-bg-on-code:disabled {\\n    background-color: var(--color-on-code)\\n}\\n\\n.disabled\\\\:sl-bg-on-primary:disabled {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.disabled\\\\:sl-bg-on-success:disabled {\\n    background-color: var(--color-on-success)\\n}\\n\\n.disabled\\\\:sl-bg-on-warning:disabled {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.disabled\\\\:sl-bg-on-danger:disabled {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-50:disabled {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-100:disabled {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-200:disabled {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-300:disabled {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-400:disabled {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-500:disabled {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-pure:disabled {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.disabled\\\\:sl-bg-canvas:disabled {\\n    background-color: var(--color-canvas)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-tint:disabled {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-dialog:disabled {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.disabled\\\\:sl-bg-body:disabled {\\n    background-color: var(--color-text)\\n}\\n\\n.disabled\\\\:sl-bg-body-muted:disabled {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.disabled\\\\:sl-bg-body-light:disabled {\\n    background-color: var(--color-text-light)\\n}\\n\\n.sl-bg-none {\\n    background-image: none\\n}\\n\\n.sl-bg-gradient-to-t {\\n    background-image: linear-gradient(to top, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-tr {\\n    background-image: linear-gradient(to top right, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-r {\\n    background-image: linear-gradient(to right, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-br {\\n    background-image: linear-gradient(to bottom right, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-b {\\n    background-image: linear-gradient(to bottom, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-bl {\\n    background-image: linear-gradient(to bottom left, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-l {\\n    background-image: linear-gradient(to left, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-tl {\\n    background-image: linear-gradient(to top left, var(--tw-gradient-stops))\\n}\\n\\n.sl-blur-0,\\n.sl-blur-none {\\n    --tw-blur: blur(0)\\n}\\n\\n.sl-blur-sm {\\n    --tw-blur: blur(4px)\\n}\\n\\n.sl-blur {\\n    --tw-blur: blur(8px)\\n}\\n\\n.sl-blur-md {\\n    --tw-blur: blur(12px)\\n}\\n\\n.sl-blur-lg {\\n    --tw-blur: blur(16px)\\n}\\n\\n.sl-blur-xl {\\n    --tw-blur: blur(24px)\\n}\\n\\n.sl-blur-2xl {\\n    --tw-blur: blur(40px)\\n}\\n\\n.sl-blur-3xl {\\n    --tw-blur: blur(64px)\\n}\\n\\n.sl-border-transparent {\\n    border-color: transparent\\n}\\n\\n.sl-border-current {\\n    border-color: currentColor\\n}\\n\\n.sl-border-lighten-100 {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.sl-border-darken-100 {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.sl-border-primary {\\n    border-color: var(--color-primary)\\n}\\n\\n.sl-border-primary-tint {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.sl-border-primary-light {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.sl-border-primary-dark {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.sl-border-primary-darker {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.sl-border-success {\\n    border-color: var(--color-success)\\n}\\n\\n.sl-border-success-tint {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.sl-border-success-light {\\n    border-color: var(--color-success-light)\\n}\\n\\n.sl-border-success-dark {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.sl-border-success-darker {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.sl-border-warning {\\n    border-color: var(--color-warning)\\n}\\n\\n.sl-border-warning-tint {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.sl-border-warning-light {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.sl-border-warning-dark {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.sl-border-warning-darker {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.sl-border-danger {\\n    border-color: var(--color-danger)\\n}\\n\\n.sl-border-danger-tint {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.sl-border-danger-light {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.sl-border-danger-dark {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.sl-border-danger-darker {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.sl-border-code {\\n    border-color: var(--color-code)\\n}\\n\\n.sl-border-on-code {\\n    border-color: var(--color-on-code)\\n}\\n\\n.sl-border-on-primary {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.sl-border-on-success {\\n    border-color: var(--color-on-success)\\n}\\n\\n.sl-border-on-warning {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.sl-border-on-danger {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.sl-border-light {\\n    border-color: var(--color-border-light)\\n}\\n\\n.sl-border-dark {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.sl-border-button {\\n    border-color: var(--color-border-button)\\n}\\n\\n.sl-border-input {\\n    border-color: var(--color-border-input)\\n}\\n\\n.sl-border-body {\\n    border-color: var(--color-text)\\n}\\n\\n.hover\\\\:sl-border-transparent:hover {\\n    border-color: transparent\\n}\\n\\n.hover\\\\:sl-border-current:hover {\\n    border-color: currentColor\\n}\\n\\n.hover\\\\:sl-border-lighten-100:hover {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.hover\\\\:sl-border-darken-100:hover {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.hover\\\\:sl-border-primary:hover {\\n    border-color: var(--color-primary)\\n}\\n\\n.hover\\\\:sl-border-primary-tint:hover {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.hover\\\\:sl-border-primary-light:hover {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.hover\\\\:sl-border-primary-dark:hover {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.hover\\\\:sl-border-primary-darker:hover {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.hover\\\\:sl-border-success:hover {\\n    border-color: var(--color-success)\\n}\\n\\n.hover\\\\:sl-border-success-tint:hover {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.hover\\\\:sl-border-success-light:hover {\\n    border-color: var(--color-success-light)\\n}\\n\\n.hover\\\\:sl-border-success-dark:hover {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.hover\\\\:sl-border-success-darker:hover {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.hover\\\\:sl-border-warning:hover {\\n    border-color: var(--color-warning)\\n}\\n\\n.hover\\\\:sl-border-warning-tint:hover {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.hover\\\\:sl-border-warning-light:hover {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.hover\\\\:sl-border-warning-dark:hover {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.hover\\\\:sl-border-warning-darker:hover {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.hover\\\\:sl-border-danger:hover {\\n    border-color: var(--color-danger)\\n}\\n\\n.hover\\\\:sl-border-danger-tint:hover {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.hover\\\\:sl-border-danger-light:hover {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.hover\\\\:sl-border-danger-dark:hover {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.hover\\\\:sl-border-danger-darker:hover {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.hover\\\\:sl-border-code:hover {\\n    border-color: var(--color-code)\\n}\\n\\n.hover\\\\:sl-border-on-code:hover {\\n    border-color: var(--color-on-code)\\n}\\n\\n.hover\\\\:sl-border-on-primary:hover {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.hover\\\\:sl-border-on-success:hover {\\n    border-color: var(--color-on-success)\\n}\\n\\n.hover\\\\:sl-border-on-warning:hover {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.hover\\\\:sl-border-on-danger:hover {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.hover\\\\:sl-border-light:hover {\\n    border-color: var(--color-border-light)\\n}\\n\\n.hover\\\\:sl-border-dark:hover {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.hover\\\\:sl-border-button:hover {\\n    border-color: var(--color-border-button)\\n}\\n\\n.hover\\\\:sl-border-input:hover {\\n    border-color: var(--color-border-input)\\n}\\n\\n.hover\\\\:sl-border-body:hover {\\n    border-color: var(--color-text)\\n}\\n\\n.focus\\\\:sl-border-transparent:focus {\\n    border-color: transparent\\n}\\n\\n.focus\\\\:sl-border-current:focus {\\n    border-color: currentColor\\n}\\n\\n.focus\\\\:sl-border-lighten-100:focus {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.focus\\\\:sl-border-darken-100:focus {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.focus\\\\:sl-border-primary:focus {\\n    border-color: var(--color-primary)\\n}\\n\\n.focus\\\\:sl-border-primary-tint:focus {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.focus\\\\:sl-border-primary-light:focus {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.focus\\\\:sl-border-primary-dark:focus {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.focus\\\\:sl-border-primary-darker:focus {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.focus\\\\:sl-border-success:focus {\\n    border-color: var(--color-success)\\n}\\n\\n.focus\\\\:sl-border-success-tint:focus {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.focus\\\\:sl-border-success-light:focus {\\n    border-color: var(--color-success-light)\\n}\\n\\n.focus\\\\:sl-border-success-dark:focus {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.focus\\\\:sl-border-success-darker:focus {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.focus\\\\:sl-border-warning:focus {\\n    border-color: var(--color-warning)\\n}\\n\\n.focus\\\\:sl-border-warning-tint:focus {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.focus\\\\:sl-border-warning-light:focus {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.focus\\\\:sl-border-warning-dark:focus {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.focus\\\\:sl-border-warning-darker:focus {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.focus\\\\:sl-border-danger:focus {\\n    border-color: var(--color-danger)\\n}\\n\\n.focus\\\\:sl-border-danger-tint:focus {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.focus\\\\:sl-border-danger-light:focus {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.focus\\\\:sl-border-danger-dark:focus {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.focus\\\\:sl-border-danger-darker:focus {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.focus\\\\:sl-border-code:focus {\\n    border-color: var(--color-code)\\n}\\n\\n.focus\\\\:sl-border-on-code:focus {\\n    border-color: var(--color-on-code)\\n}\\n\\n.focus\\\\:sl-border-on-primary:focus {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.focus\\\\:sl-border-on-success:focus {\\n    border-color: var(--color-on-success)\\n}\\n\\n.focus\\\\:sl-border-on-warning:focus {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.focus\\\\:sl-border-on-danger:focus {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.focus\\\\:sl-border-light:focus {\\n    border-color: var(--color-border-light)\\n}\\n\\n.focus\\\\:sl-border-dark:focus {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.focus\\\\:sl-border-button:focus {\\n    border-color: var(--color-border-button)\\n}\\n\\n.focus\\\\:sl-border-input:focus {\\n    border-color: var(--color-border-input)\\n}\\n\\n.focus\\\\:sl-border-body:focus {\\n    border-color: var(--color-text)\\n}\\n\\n.active\\\\:sl-border-transparent:active {\\n    border-color: transparent\\n}\\n\\n.active\\\\:sl-border-current:active {\\n    border-color: currentColor\\n}\\n\\n.active\\\\:sl-border-lighten-100:active {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.active\\\\:sl-border-darken-100:active {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.active\\\\:sl-border-primary:active {\\n    border-color: var(--color-primary)\\n}\\n\\n.active\\\\:sl-border-primary-tint:active {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.active\\\\:sl-border-primary-light:active {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.active\\\\:sl-border-primary-dark:active {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.active\\\\:sl-border-primary-darker:active {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.active\\\\:sl-border-success:active {\\n    border-color: var(--color-success)\\n}\\n\\n.active\\\\:sl-border-success-tint:active {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.active\\\\:sl-border-success-light:active {\\n    border-color: var(--color-success-light)\\n}\\n\\n.active\\\\:sl-border-success-dark:active {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.active\\\\:sl-border-success-darker:active {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.active\\\\:sl-border-warning:active {\\n    border-color: var(--color-warning)\\n}\\n\\n.active\\\\:sl-border-warning-tint:active {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.active\\\\:sl-border-warning-light:active {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.active\\\\:sl-border-warning-dark:active {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.active\\\\:sl-border-warning-darker:active {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.active\\\\:sl-border-danger:active {\\n    border-color: var(--color-danger)\\n}\\n\\n.active\\\\:sl-border-danger-tint:active {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.active\\\\:sl-border-danger-light:active {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.active\\\\:sl-border-danger-dark:active {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.active\\\\:sl-border-danger-darker:active {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.active\\\\:sl-border-code:active {\\n    border-color: var(--color-code)\\n}\\n\\n.active\\\\:sl-border-on-code:active {\\n    border-color: var(--color-on-code)\\n}\\n\\n.active\\\\:sl-border-on-primary:active {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.active\\\\:sl-border-on-success:active {\\n    border-color: var(--color-on-success)\\n}\\n\\n.active\\\\:sl-border-on-warning:active {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.active\\\\:sl-border-on-danger:active {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.active\\\\:sl-border-light:active {\\n    border-color: var(--color-border-light)\\n}\\n\\n.active\\\\:sl-border-dark:active {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.active\\\\:sl-border-button:active {\\n    border-color: var(--color-border-button)\\n}\\n\\n.active\\\\:sl-border-input:active {\\n    border-color: var(--color-border-input)\\n}\\n\\n.active\\\\:sl-border-body:active {\\n    border-color: var(--color-text)\\n}\\n\\n.sl-rounded-none {\\n    border-radius: 0\\n}\\n\\n.sl-rounded-sm {\\n    border-radius: 1px\\n}\\n\\n.sl-rounded {\\n    border-radius: 2px\\n}\\n\\n.sl-rounded-lg {\\n    border-radius: 5px\\n}\\n\\n.sl-rounded-xl {\\n    border-radius: 7px\\n}\\n\\n.sl-rounded-full {\\n    border-radius: 9999px\\n}\\n\\n.sl-rounded-t-none {\\n    border-top-left-radius: 0;\\n    border-top-right-radius: 0\\n}\\n\\n.sl-rounded-r-none {\\n    border-bottom-right-radius: 0;\\n    border-top-right-radius: 0\\n}\\n\\n.sl-rounded-b-none {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0\\n}\\n\\n.sl-rounded-l-none {\\n    border-bottom-left-radius: 0;\\n    border-top-left-radius: 0\\n}\\n\\n.sl-rounded-t-sm {\\n    border-top-left-radius: 1px;\\n    border-top-right-radius: 1px\\n}\\n\\n.sl-rounded-r-sm {\\n    border-bottom-right-radius: 1px;\\n    border-top-right-radius: 1px\\n}\\n\\n.sl-rounded-b-sm {\\n    border-bottom-left-radius: 1px;\\n    border-bottom-right-radius: 1px\\n}\\n\\n.sl-rounded-l-sm {\\n    border-bottom-left-radius: 1px;\\n    border-top-left-radius: 1px\\n}\\n\\n.sl-rounded-t {\\n    border-top-left-radius: 2px\\n}\\n\\n.sl-rounded-r,\\n.sl-rounded-t {\\n    border-top-right-radius: 2px\\n}\\n\\n.sl-rounded-b,\\n.sl-rounded-r {\\n    border-bottom-right-radius: 2px\\n}\\n\\n.sl-rounded-b,\\n.sl-rounded-l {\\n    border-bottom-left-radius: 2px\\n}\\n\\n.sl-rounded-l {\\n    border-top-left-radius: 2px\\n}\\n\\n.sl-rounded-t-lg {\\n    border-top-left-radius: 5px;\\n    border-top-right-radius: 5px\\n}\\n\\n.sl-rounded-r-lg {\\n    border-bottom-right-radius: 5px;\\n    border-top-right-radius: 5px\\n}\\n\\n.sl-rounded-b-lg {\\n    border-bottom-left-radius: 5px;\\n    border-bottom-right-radius: 5px\\n}\\n\\n.sl-rounded-l-lg {\\n    border-bottom-left-radius: 5px;\\n    border-top-left-radius: 5px\\n}\\n\\n.sl-rounded-t-xl {\\n    border-top-left-radius: 7px;\\n    border-top-right-radius: 7px\\n}\\n\\n.sl-rounded-r-xl {\\n    border-bottom-right-radius: 7px;\\n    border-top-right-radius: 7px\\n}\\n\\n.sl-rounded-b-xl {\\n    border-bottom-left-radius: 7px;\\n    border-bottom-right-radius: 7px\\n}\\n\\n.sl-rounded-l-xl {\\n    border-bottom-left-radius: 7px;\\n    border-top-left-radius: 7px\\n}\\n\\n.sl-rounded-t-full {\\n    border-top-left-radius: 9999px;\\n    border-top-right-radius: 9999px\\n}\\n\\n.sl-rounded-r-full {\\n    border-bottom-right-radius: 9999px;\\n    border-top-right-radius: 9999px\\n}\\n\\n.sl-rounded-b-full {\\n    border-bottom-left-radius: 9999px;\\n    border-bottom-right-radius: 9999px\\n}\\n\\n.sl-rounded-l-full {\\n    border-bottom-left-radius: 9999px;\\n    border-top-left-radius: 9999px\\n}\\n\\n.sl-rounded-tl-none {\\n    border-top-left-radius: 0\\n}\\n\\n.sl-rounded-tr-none {\\n    border-top-right-radius: 0\\n}\\n\\n.sl-rounded-br-none {\\n    border-bottom-right-radius: 0\\n}\\n\\n.sl-rounded-bl-none {\\n    border-bottom-left-radius: 0\\n}\\n\\n.sl-rounded-tl-sm {\\n    border-top-left-radius: 1px\\n}\\n\\n.sl-rounded-tr-sm {\\n    border-top-right-radius: 1px\\n}\\n\\n.sl-rounded-br-sm {\\n    border-bottom-right-radius: 1px\\n}\\n\\n.sl-rounded-bl-sm {\\n    border-bottom-left-radius: 1px\\n}\\n\\n.sl-rounded-tl {\\n    border-top-left-radius: 2px\\n}\\n\\n.sl-rounded-tr {\\n    border-top-right-radius: 2px\\n}\\n\\n.sl-rounded-br {\\n    border-bottom-right-radius: 2px\\n}\\n\\n.sl-rounded-bl {\\n    border-bottom-left-radius: 2px\\n}\\n\\n.sl-rounded-tl-lg {\\n    border-top-left-radius: 5px\\n}\\n\\n.sl-rounded-tr-lg {\\n    border-top-right-radius: 5px\\n}\\n\\n.sl-rounded-br-lg {\\n    border-bottom-right-radius: 5px\\n}\\n\\n.sl-rounded-bl-lg {\\n    border-bottom-left-radius: 5px\\n}\\n\\n.sl-rounded-tl-xl {\\n    border-top-left-radius: 7px\\n}\\n\\n.sl-rounded-tr-xl {\\n    border-top-right-radius: 7px\\n}\\n\\n.sl-rounded-br-xl {\\n    border-bottom-right-radius: 7px\\n}\\n\\n.sl-rounded-bl-xl {\\n    border-bottom-left-radius: 7px\\n}\\n\\n.sl-rounded-tl-full {\\n    border-top-left-radius: 9999px\\n}\\n\\n.sl-rounded-tr-full {\\n    border-top-right-radius: 9999px\\n}\\n\\n.sl-rounded-br-full {\\n    border-bottom-right-radius: 9999px\\n}\\n\\n.sl-rounded-bl-full {\\n    border-bottom-left-radius: 9999px\\n}\\n\\n.sl-border-solid {\\n    border-style: solid\\n}\\n\\n.sl-border-dashed {\\n    border-style: dashed\\n}\\n\\n.sl-border-dotted {\\n    border-style: dotted\\n}\\n\\n.sl-border-double {\\n    border-style: double\\n}\\n\\n.sl-border-none {\\n    border-style: none\\n}\\n\\n.sl-border-0 {\\n    border-width: 0\\n}\\n\\n.sl-border-2 {\\n    border-width: 2px\\n}\\n\\n.sl-border-4 {\\n    border-width: 4px\\n}\\n\\n.sl-border-8 {\\n    border-width: 8px\\n}\\n\\n.sl-border {\\n    border-width: 1px\\n}\\n\\n.sl-border-t-0 {\\n    border-top-width: 0\\n}\\n\\n.sl-border-r-0 {\\n    border-right-width: 0\\n}\\n\\n.sl-border-b-0 {\\n    border-bottom-width: 0\\n}\\n\\n.sl-border-l-0 {\\n    border-left-width: 0\\n}\\n\\n.sl-border-t-2 {\\n    border-top-width: 2px\\n}\\n\\n.sl-border-r-2 {\\n    border-right-width: 2px\\n}\\n\\n.sl-border-b-2 {\\n    border-bottom-width: 2px\\n}\\n\\n.sl-border-l-2 {\\n    border-left-width: 2px\\n}\\n\\n.sl-border-t-4 {\\n    border-top-width: 4px\\n}\\n\\n.sl-border-r-4 {\\n    border-right-width: 4px\\n}\\n\\n.sl-border-b-4 {\\n    border-bottom-width: 4px\\n}\\n\\n.sl-border-l-4 {\\n    border-left-width: 4px\\n}\\n\\n.sl-border-t-8 {\\n    border-top-width: 8px\\n}\\n\\n.sl-border-r-8 {\\n    border-right-width: 8px\\n}\\n\\n.sl-border-b-8 {\\n    border-bottom-width: 8px\\n}\\n\\n.sl-border-l-8 {\\n    border-left-width: 8px\\n}\\n\\n.sl-border-t {\\n    border-top-width: 1px\\n}\\n\\n.sl-border-r {\\n    border-right-width: 1px\\n}\\n\\n.sl-border-b {\\n    border-bottom-width: 1px\\n}\\n\\n.sl-border-l {\\n    border-left-width: 1px\\n}\\n\\n* {\\n    --tw-shadow: 0 0 #0000\\n}\\n\\n.sl-shadow-sm {\\n    --tw-shadow: var(--shadow-sm);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.sl-shadow,\\n.sl-shadow-md {\\n    --tw-shadow: var(--shadow-md)\\n}\\n\\n.sl-shadow,\\n.sl-shadow-lg,\\n.sl-shadow-md {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.sl-shadow-lg {\\n    --tw-shadow: var(--shadow-lg)\\n}\\n\\n.sl-shadow-xl {\\n    --tw-shadow: var(--shadow-xl)\\n}\\n\\n.sl-shadow-2xl,\\n.sl-shadow-xl {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.sl-shadow-2xl {\\n    --tw-shadow: var(--shadow-2xl)\\n}\\n\\n.hover\\\\:sl-shadow-sm:hover {\\n    --tw-shadow: var(--shadow-sm);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.hover\\\\:sl-shadow-md:hover,\\n.hover\\\\:sl-shadow:hover {\\n    --tw-shadow: var(--shadow-md)\\n}\\n\\n.hover\\\\:sl-shadow-lg:hover,\\n.hover\\\\:sl-shadow-md:hover,\\n.hover\\\\:sl-shadow:hover {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.hover\\\\:sl-shadow-lg:hover {\\n    --tw-shadow: var(--shadow-lg)\\n}\\n\\n.hover\\\\:sl-shadow-xl:hover {\\n    --tw-shadow: var(--shadow-xl)\\n}\\n\\n.hover\\\\:sl-shadow-2xl:hover,\\n.hover\\\\:sl-shadow-xl:hover {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.hover\\\\:sl-shadow-2xl:hover {\\n    --tw-shadow: var(--shadow-2xl)\\n}\\n\\n.focus\\\\:sl-shadow-sm:focus {\\n    --tw-shadow: var(--shadow-sm);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.focus\\\\:sl-shadow-md:focus,\\n.focus\\\\:sl-shadow:focus {\\n    --tw-shadow: var(--shadow-md)\\n}\\n\\n.focus\\\\:sl-shadow-lg:focus,\\n.focus\\\\:sl-shadow-md:focus,\\n.focus\\\\:sl-shadow:focus {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.focus\\\\:sl-shadow-lg:focus {\\n    --tw-shadow: var(--shadow-lg)\\n}\\n\\n.focus\\\\:sl-shadow-xl:focus {\\n    --tw-shadow: var(--shadow-xl)\\n}\\n\\n.focus\\\\:sl-shadow-2xl:focus,\\n.focus\\\\:sl-shadow-xl:focus {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.focus\\\\:sl-shadow-2xl:focus {\\n    --tw-shadow: var(--shadow-2xl)\\n}\\n\\n.sl-box-border {\\n    box-sizing: border-box\\n}\\n\\n.sl-box-content {\\n    box-sizing: initial\\n}\\n\\n.sl-cursor-auto {\\n    cursor: auto\\n}\\n\\n.sl-cursor {\\n    cursor: default\\n}\\n\\n.sl-cursor-pointer {\\n    cursor: pointer\\n}\\n\\n.sl-cursor-wait {\\n    cursor: wait\\n}\\n\\n.sl-cursor-text {\\n    cursor: text\\n}\\n\\n.sl-cursor-move {\\n    cursor: move\\n}\\n\\n.sl-cursor-not-allowed {\\n    cursor: not-allowed\\n}\\n\\n.sl-cursor-zoom-in {\\n    cursor: zoom-in\\n}\\n\\n.sl-cursor-zoom-out {\\n    cursor: zoom-out\\n}\\n\\n.sl-block {\\n    display: block\\n}\\n\\n.sl-inline-block {\\n    display: inline-block\\n}\\n\\n.sl-inline {\\n    display: inline\\n}\\n\\n.sl-flex {\\n    display: flex\\n}\\n\\n.sl-inline-flex {\\n    display: inline-flex\\n}\\n\\n.sl-table {\\n    display: table\\n}\\n\\n.sl-inline-table {\\n    display: inline-table\\n}\\n\\n.sl-table-caption {\\n    display: table-caption\\n}\\n\\n.sl-table-cell {\\n    display: table-cell\\n}\\n\\n.sl-table-column {\\n    display: table-column\\n}\\n\\n.sl-table-column-group {\\n    display: table-column-group\\n}\\n\\n.sl-table-footer-group {\\n    display: table-footer-group\\n}\\n\\n.sl-table-header-group {\\n    display: table-header-group\\n}\\n\\n.sl-table-row-group {\\n    display: table-row-group\\n}\\n\\n.sl-table-row {\\n    display: table-row\\n}\\n\\n.sl-flow-root {\\n    display: flow-root\\n}\\n\\n.sl-grid {\\n    display: grid\\n}\\n\\n.sl-inline-grid {\\n    display: inline-grid\\n}\\n\\n.sl-contents {\\n    display: contents\\n}\\n\\n.sl-list-item {\\n    display: list-item\\n}\\n\\n.sl-hidden {\\n    display: none\\n}\\n\\n.sl-drop-shadow {\\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-default1)) drop-shadow(var(--drop-shadow-default2))\\n}\\n\\n.sl-filter {\\n    --tw-blur: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-brightness: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-contrast: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-grayscale: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-hue-rotate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-invert: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-saturate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-sepia: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\\n}\\n\\n.sl-filter-none {\\n    filter: none\\n}\\n\\n.sl-flex-1 {\\n    flex: 1 1\\n}\\n\\n.sl-flex-auto {\\n    flex: 1 1 auto\\n}\\n\\n.sl-flex-initial {\\n    flex: 0 1 auto\\n}\\n\\n.sl-flex-none {\\n    flex: none\\n}\\n\\n.sl-flex-row {\\n    flex-direction: row\\n}\\n\\n.sl-flex-row-reverse {\\n    flex-direction: row-reverse\\n}\\n\\n.sl-flex-col {\\n    flex-direction: column\\n}\\n\\n.sl-flex-col-reverse {\\n    flex-direction: column-reverse\\n}\\n\\n.sl-flex-grow-0 {\\n    flex-grow: 0\\n}\\n\\n.sl-flex-grow {\\n    flex-grow: 1\\n}\\n\\n.sl-flex-shrink-0 {\\n    flex-shrink: 0\\n}\\n\\n.sl-flex-shrink {\\n    flex-shrink: 1\\n}\\n\\n.sl-flex-wrap {\\n    flex-wrap: wrap\\n}\\n\\n.sl-flex-wrap-reverse {\\n    flex-wrap: wrap-reverse\\n}\\n\\n.sl-flex-nowrap {\\n    flex-wrap: nowrap\\n}\\n\\n.sl-font-sans,\\n.sl-font-ui {\\n    font-family: var(--font-ui)\\n}\\n\\n.sl-font-prose {\\n    font-family: var(--font-prose)\\n}\\n\\n.sl-font-mono {\\n    font-family: var(--font-mono)\\n}\\n\\n.sl-text-2xs {\\n    font-size: 9px\\n}\\n\\n.sl-text-xs {\\n    font-size: 10px\\n}\\n\\n.sl-text-sm {\\n    font-size: 11px\\n}\\n\\n.sl-text-base {\\n    font-size: 12px\\n}\\n\\n.sl-text-lg {\\n    font-size: 14px\\n}\\n\\n.sl-text-xl {\\n    font-size: 16px\\n}\\n\\n.sl-text-2xl {\\n    font-size: 20px\\n}\\n\\n.sl-text-3xl {\\n    font-size: 24px\\n}\\n\\n.sl-text-4xl {\\n    font-size: 28px\\n}\\n\\n.sl-text-5xl {\\n    font-size: 36px\\n}\\n\\n.sl-text-6xl {\\n    font-size: 44px\\n}\\n\\n.sl-text-paragraph-leading {\\n    font-size: var(--fs-paragraph-leading)\\n}\\n\\n.sl-text-paragraph {\\n    font-size: var(--fs-paragraph)\\n}\\n\\n.sl-text-paragraph-small {\\n    font-size: var(--fs-paragraph-small)\\n}\\n\\n.sl-text-paragraph-tiny {\\n    font-size: var(--fs-paragraph-tiny)\\n}\\n\\n.sl-antialiased {\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale\\n}\\n\\n.sl-subpixel-antialiased {\\n    -webkit-font-smoothing: auto;\\n    -moz-osx-font-smoothing: auto\\n}\\n\\n.sl-italic {\\n    font-style: italic\\n}\\n\\n.sl-not-italic {\\n    font-style: normal\\n}\\n\\n.sl-font-light {\\n    font-weight: 300\\n}\\n\\n.sl-font-normal {\\n    font-weight: 400\\n}\\n\\n.sl-font-medium {\\n    font-weight: 500\\n}\\n\\n.sl-font-semibold {\\n    font-weight: 600\\n}\\n\\n.sl-font-bold {\\n    font-weight: 700\\n}\\n\\n.sl-h-0 {\\n    height: 0\\n}\\n\\n.sl-h-1 {\\n    height: 4px\\n}\\n\\n.sl-h-2 {\\n    height: 8px\\n}\\n\\n.sl-h-3 {\\n    height: 12px\\n}\\n\\n.sl-h-4 {\\n    height: 16px\\n}\\n\\n.sl-h-5 {\\n    height: 20px\\n}\\n\\n.sl-h-6 {\\n    height: 24px\\n}\\n\\n.sl-h-7 {\\n    height: 28px\\n}\\n\\n.sl-h-8 {\\n    height: 32px\\n}\\n\\n.sl-h-9 {\\n    height: 36px\\n}\\n\\n.sl-h-10 {\\n    height: 40px\\n}\\n\\n.sl-h-11 {\\n    height: 44px\\n}\\n\\n.sl-h-12 {\\n    height: 48px\\n}\\n\\n.sl-h-14 {\\n    height: 56px\\n}\\n\\n.sl-h-16 {\\n    height: 64px\\n}\\n\\n.sl-h-20 {\\n    height: 80px\\n}\\n\\n.sl-h-24 {\\n    height: 96px\\n}\\n\\n.sl-h-28 {\\n    height: 112px\\n}\\n\\n.sl-h-32 {\\n    height: 128px\\n}\\n\\n.sl-h-36 {\\n    height: 144px\\n}\\n\\n.sl-h-40 {\\n    height: 160px\\n}\\n\\n.sl-h-44 {\\n    height: 176px\\n}\\n\\n.sl-h-48 {\\n    height: 192px\\n}\\n\\n.sl-h-52 {\\n    height: 208px\\n}\\n\\n.sl-h-56 {\\n    height: 224px\\n}\\n\\n.sl-h-60 {\\n    height: 240px\\n}\\n\\n.sl-h-64 {\\n    height: 256px\\n}\\n\\n.sl-h-72 {\\n    height: 288px\\n}\\n\\n.sl-h-80 {\\n    height: 320px\\n}\\n\\n.sl-h-96 {\\n    height: 384px\\n}\\n\\n.sl-h-auto {\\n    height: auto\\n}\\n\\n.sl-h-px {\\n    height: 1px\\n}\\n\\n.sl-h-0\\\\.5 {\\n    height: 2px\\n}\\n\\n.sl-h-1\\\\.5 {\\n    height: 6px\\n}\\n\\n.sl-h-2\\\\.5 {\\n    height: 10px\\n}\\n\\n.sl-h-3\\\\.5 {\\n    height: 14px\\n}\\n\\n.sl-h-4\\\\.5 {\\n    height: 18px\\n}\\n\\n.sl-h-xs {\\n    height: 20px\\n}\\n\\n.sl-h-sm {\\n    height: 24px\\n}\\n\\n.sl-h-md {\\n    height: 32px\\n}\\n\\n.sl-h-lg {\\n    height: 36px\\n}\\n\\n.sl-h-xl {\\n    height: 44px\\n}\\n\\n.sl-h-2xl {\\n    height: 52px\\n}\\n\\n.sl-h-3xl {\\n    height: 60px\\n}\\n\\n.sl-h-full {\\n    height: 100%\\n}\\n\\n.sl-h-screen {\\n    height: 100vh\\n}\\n\\n.sl-inset-0 {\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    top: 0\\n}\\n\\n.sl-inset-1 {\\n    bottom: 4px;\\n    left: 4px;\\n    right: 4px;\\n    top: 4px\\n}\\n\\n.sl-inset-2 {\\n    bottom: 8px;\\n    left: 8px;\\n    right: 8px;\\n    top: 8px\\n}\\n\\n.sl-inset-3 {\\n    bottom: 12px;\\n    left: 12px;\\n    right: 12px;\\n    top: 12px\\n}\\n\\n.sl-inset-4 {\\n    bottom: 16px;\\n    left: 16px;\\n    right: 16px;\\n    top: 16px\\n}\\n\\n.sl-inset-5 {\\n    bottom: 20px;\\n    left: 20px;\\n    right: 20px;\\n    top: 20px\\n}\\n\\n.sl-inset-6 {\\n    bottom: 24px;\\n    left: 24px;\\n    right: 24px;\\n    top: 24px\\n}\\n\\n.sl-inset-7 {\\n    bottom: 28px;\\n    left: 28px;\\n    right: 28px;\\n    top: 28px\\n}\\n\\n.sl-inset-8 {\\n    bottom: 32px;\\n    left: 32px;\\n    right: 32px;\\n    top: 32px\\n}\\n\\n.sl-inset-9 {\\n    bottom: 36px;\\n    left: 36px;\\n    right: 36px;\\n    top: 36px\\n}\\n\\n.sl-inset-10 {\\n    bottom: 40px;\\n    left: 40px;\\n    right: 40px;\\n    top: 40px\\n}\\n\\n.sl-inset-11 {\\n    bottom: 44px;\\n    left: 44px;\\n    right: 44px;\\n    top: 44px\\n}\\n\\n.sl-inset-12 {\\n    bottom: 48px;\\n    left: 48px;\\n    right: 48px;\\n    top: 48px\\n}\\n\\n.sl-inset-14 {\\n    bottom: 56px;\\n    left: 56px;\\n    right: 56px;\\n    top: 56px\\n}\\n\\n.sl-inset-16 {\\n    bottom: 64px;\\n    left: 64px;\\n    right: 64px;\\n    top: 64px\\n}\\n\\n.sl-inset-20 {\\n    bottom: 80px;\\n    left: 80px;\\n    right: 80px;\\n    top: 80px\\n}\\n\\n.sl-inset-24 {\\n    bottom: 96px;\\n    left: 96px;\\n    right: 96px;\\n    top: 96px\\n}\\n\\n.sl-inset-28 {\\n    bottom: 112px;\\n    left: 112px;\\n    right: 112px;\\n    top: 112px\\n}\\n\\n.sl-inset-32 {\\n    bottom: 128px;\\n    left: 128px;\\n    right: 128px;\\n    top: 128px\\n}\\n\\n.sl-inset-36 {\\n    bottom: 144px;\\n    left: 144px;\\n    right: 144px;\\n    top: 144px\\n}\\n\\n.sl-inset-40 {\\n    bottom: 160px;\\n    left: 160px;\\n    right: 160px;\\n    top: 160px\\n}\\n\\n.sl-inset-44 {\\n    bottom: 176px;\\n    left: 176px;\\n    right: 176px;\\n    top: 176px\\n}\\n\\n.sl-inset-48 {\\n    bottom: 192px;\\n    left: 192px;\\n    right: 192px;\\n    top: 192px\\n}\\n\\n.sl-inset-52 {\\n    bottom: 208px;\\n    left: 208px;\\n    right: 208px;\\n    top: 208px\\n}\\n\\n.sl-inset-56 {\\n    bottom: 224px;\\n    left: 224px;\\n    right: 224px;\\n    top: 224px\\n}\\n\\n.sl-inset-60 {\\n    bottom: 240px;\\n    left: 240px;\\n    right: 240px;\\n    top: 240px\\n}\\n\\n.sl-inset-64 {\\n    bottom: 256px;\\n    left: 256px;\\n    right: 256px;\\n    top: 256px\\n}\\n\\n.sl-inset-72 {\\n    bottom: 288px;\\n    left: 288px;\\n    right: 288px;\\n    top: 288px\\n}\\n\\n.sl-inset-80 {\\n    bottom: 320px;\\n    left: 320px;\\n    right: 320px;\\n    top: 320px\\n}\\n\\n.sl-inset-96 {\\n    bottom: 384px;\\n    left: 384px;\\n    right: 384px;\\n    top: 384px\\n}\\n\\n.sl-inset-auto {\\n    bottom: auto;\\n    left: auto;\\n    right: auto;\\n    top: auto\\n}\\n\\n.sl-inset-px {\\n    bottom: 1px;\\n    left: 1px;\\n    right: 1px;\\n    top: 1px\\n}\\n\\n.sl-inset-0\\\\.5 {\\n    bottom: 2px;\\n    left: 2px;\\n    right: 2px;\\n    top: 2px\\n}\\n\\n.sl-inset-1\\\\.5 {\\n    bottom: 6px;\\n    left: 6px;\\n    right: 6px;\\n    top: 6px\\n}\\n\\n.sl-inset-2\\\\.5 {\\n    bottom: 10px;\\n    left: 10px;\\n    right: 10px;\\n    top: 10px\\n}\\n\\n.sl-inset-3\\\\.5 {\\n    bottom: 14px;\\n    left: 14px;\\n    right: 14px;\\n    top: 14px\\n}\\n\\n.sl-inset-4\\\\.5 {\\n    bottom: 18px;\\n    left: 18px;\\n    right: 18px;\\n    top: 18px\\n}\\n\\n.sl--inset-0 {\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    top: 0\\n}\\n\\n.sl--inset-1 {\\n    bottom: -4px;\\n    left: -4px;\\n    right: -4px;\\n    top: -4px\\n}\\n\\n.sl--inset-2 {\\n    bottom: -8px;\\n    left: -8px;\\n    right: -8px;\\n    top: -8px\\n}\\n\\n.sl--inset-3 {\\n    bottom: -12px;\\n    left: -12px;\\n    right: -12px;\\n    top: -12px\\n}\\n\\n.sl--inset-4 {\\n    bottom: -16px;\\n    left: -16px;\\n    right: -16px;\\n    top: -16px\\n}\\n\\n.sl--inset-5 {\\n    bottom: -20px;\\n    left: -20px;\\n    right: -20px;\\n    top: -20px\\n}\\n\\n.sl--inset-6 {\\n    bottom: -24px;\\n    left: -24px;\\n    right: -24px;\\n    top: -24px\\n}\\n\\n.sl--inset-7 {\\n    bottom: -28px;\\n    left: -28px;\\n    right: -28px;\\n    top: -28px\\n}\\n\\n.sl--inset-8 {\\n    bottom: -32px;\\n    left: -32px;\\n    right: -32px;\\n    top: -32px\\n}\\n\\n.sl--inset-9 {\\n    bottom: -36px;\\n    left: -36px;\\n    right: -36px;\\n    top: -36px\\n}\\n\\n.sl--inset-10 {\\n    bottom: -40px;\\n    left: -40px;\\n    right: -40px;\\n    top: -40px\\n}\\n\\n.sl--inset-11 {\\n    bottom: -44px;\\n    left: -44px;\\n    right: -44px;\\n    top: -44px\\n}\\n\\n.sl--inset-12 {\\n    bottom: -48px;\\n    left: -48px;\\n    right: -48px;\\n    top: -48px\\n}\\n\\n.sl--inset-14 {\\n    bottom: -56px;\\n    left: -56px;\\n    right: -56px;\\n    top: -56px\\n}\\n\\n.sl--inset-16 {\\n    bottom: -64px;\\n    left: -64px;\\n    right: -64px;\\n    top: -64px\\n}\\n\\n.sl--inset-20 {\\n    bottom: -80px;\\n    left: -80px;\\n    right: -80px;\\n    top: -80px\\n}\\n\\n.sl--inset-24 {\\n    bottom: -96px;\\n    left: -96px;\\n    right: -96px;\\n    top: -96px\\n}\\n\\n.sl--inset-28 {\\n    bottom: -112px;\\n    left: -112px;\\n    right: -112px;\\n    top: -112px\\n}\\n\\n.sl--inset-32 {\\n    bottom: -128px;\\n    left: -128px;\\n    right: -128px;\\n    top: -128px\\n}\\n\\n.sl--inset-36 {\\n    bottom: -144px;\\n    left: -144px;\\n    right: -144px;\\n    top: -144px\\n}\\n\\n.sl--inset-40 {\\n    bottom: -160px;\\n    left: -160px;\\n    right: -160px;\\n    top: -160px\\n}\\n\\n.sl--inset-44 {\\n    bottom: -176px;\\n    left: -176px;\\n    right: -176px;\\n    top: -176px\\n}\\n\\n.sl--inset-48 {\\n    bottom: -192px;\\n    left: -192px;\\n    right: -192px;\\n    top: -192px\\n}\\n\\n.sl--inset-52 {\\n    bottom: -208px;\\n    left: -208px;\\n    right: -208px;\\n    top: -208px\\n}\\n\\n.sl--inset-56 {\\n    bottom: -224px;\\n    left: -224px;\\n    right: -224px;\\n    top: -224px\\n}\\n\\n.sl--inset-60 {\\n    bottom: -240px;\\n    left: -240px;\\n    right: -240px;\\n    top: -240px\\n}\\n\\n.sl--inset-64 {\\n    bottom: -256px;\\n    left: -256px;\\n    right: -256px;\\n    top: -256px\\n}\\n\\n.sl--inset-72 {\\n    bottom: -288px;\\n    left: -288px;\\n    right: -288px;\\n    top: -288px\\n}\\n\\n.sl--inset-80 {\\n    bottom: -320px;\\n    left: -320px;\\n    right: -320px;\\n    top: -320px\\n}\\n\\n.sl--inset-96 {\\n    bottom: -384px;\\n    left: -384px;\\n    right: -384px;\\n    top: -384px\\n}\\n\\n.sl--inset-px {\\n    bottom: -1px;\\n    left: -1px;\\n    right: -1px;\\n    top: -1px\\n}\\n\\n.sl--inset-0\\\\.5 {\\n    bottom: -2px;\\n    left: -2px;\\n    right: -2px;\\n    top: -2px\\n}\\n\\n.sl--inset-1\\\\.5 {\\n    bottom: -6px;\\n    left: -6px;\\n    right: -6px;\\n    top: -6px\\n}\\n\\n.sl--inset-2\\\\.5 {\\n    bottom: -10px;\\n    left: -10px;\\n    right: -10px;\\n    top: -10px\\n}\\n\\n.sl--inset-3\\\\.5 {\\n    bottom: -14px;\\n    left: -14px;\\n    right: -14px;\\n    top: -14px\\n}\\n\\n.sl--inset-4\\\\.5 {\\n    bottom: -18px;\\n    left: -18px;\\n    right: -18px;\\n    top: -18px\\n}\\n\\n.sl-inset-y-0 {\\n    bottom: 0;\\n    top: 0\\n}\\n\\n.sl-inset-x-0 {\\n    left: 0;\\n    right: 0\\n}\\n\\n.sl-inset-y-1 {\\n    bottom: 4px;\\n    top: 4px\\n}\\n\\n.sl-inset-x-1 {\\n    left: 4px;\\n    right: 4px\\n}\\n\\n.sl-inset-y-2 {\\n    bottom: 8px;\\n    top: 8px\\n}\\n\\n.sl-inset-x-2 {\\n    left: 8px;\\n    right: 8px\\n}\\n\\n.sl-inset-y-3 {\\n    bottom: 12px;\\n    top: 12px\\n}\\n\\n.sl-inset-x-3 {\\n    left: 12px;\\n    right: 12px\\n}\\n\\n.sl-inset-y-4 {\\n    bottom: 16px;\\n    top: 16px\\n}\\n\\n.sl-inset-x-4 {\\n    left: 16px;\\n    right: 16px\\n}\\n\\n.sl-inset-y-5 {\\n    bottom: 20px;\\n    top: 20px\\n}\\n\\n.sl-inset-x-5 {\\n    left: 20px;\\n    right: 20px\\n}\\n\\n.sl-inset-y-6 {\\n    bottom: 24px;\\n    top: 24px\\n}\\n\\n.sl-inset-x-6 {\\n    left: 24px;\\n    right: 24px\\n}\\n\\n.sl-inset-y-7 {\\n    bottom: 28px;\\n    top: 28px\\n}\\n\\n.sl-inset-x-7 {\\n    left: 28px;\\n    right: 28px\\n}\\n\\n.sl-inset-y-8 {\\n    bottom: 32px;\\n    top: 32px\\n}\\n\\n.sl-inset-x-8 {\\n    left: 32px;\\n    right: 32px\\n}\\n\\n.sl-inset-y-9 {\\n    bottom: 36px;\\n    top: 36px\\n}\\n\\n.sl-inset-x-9 {\\n    left: 36px;\\n    right: 36px\\n}\\n\\n.sl-inset-y-10 {\\n    bottom: 40px;\\n    top: 40px\\n}\\n\\n.sl-inset-x-10 {\\n    left: 40px;\\n    right: 40px\\n}\\n\\n.sl-inset-y-11 {\\n    bottom: 44px;\\n    top: 44px\\n}\\n\\n.sl-inset-x-11 {\\n    left: 44px;\\n    right: 44px\\n}\\n\\n.sl-inset-y-12 {\\n    bottom: 48px;\\n    top: 48px\\n}\\n\\n.sl-inset-x-12 {\\n    left: 48px;\\n    right: 48px\\n}\\n\\n.sl-inset-y-14 {\\n    bottom: 56px;\\n    top: 56px\\n}\\n\\n.sl-inset-x-14 {\\n    left: 56px;\\n    right: 56px\\n}\\n\\n.sl-inset-y-16 {\\n    bottom: 64px;\\n    top: 64px\\n}\\n\\n.sl-inset-x-16 {\\n    left: 64px;\\n    right: 64px\\n}\\n\\n.sl-inset-y-20 {\\n    bottom: 80px;\\n    top: 80px\\n}\\n\\n.sl-inset-x-20 {\\n    left: 80px;\\n    right: 80px\\n}\\n\\n.sl-inset-y-24 {\\n    bottom: 96px;\\n    top: 96px\\n}\\n\\n.sl-inset-x-24 {\\n    left: 96px;\\n    right: 96px\\n}\\n\\n.sl-inset-y-28 {\\n    bottom: 112px;\\n    top: 112px\\n}\\n\\n.sl-inset-x-28 {\\n    left: 112px;\\n    right: 112px\\n}\\n\\n.sl-inset-y-32 {\\n    bottom: 128px;\\n    top: 128px\\n}\\n\\n.sl-inset-x-32 {\\n    left: 128px;\\n    right: 128px\\n}\\n\\n.sl-inset-y-36 {\\n    bottom: 144px;\\n    top: 144px\\n}\\n\\n.sl-inset-x-36 {\\n    left: 144px;\\n    right: 144px\\n}\\n\\n.sl-inset-y-40 {\\n    bottom: 160px;\\n    top: 160px\\n}\\n\\n.sl-inset-x-40 {\\n    left: 160px;\\n    right: 160px\\n}\\n\\n.sl-inset-y-44 {\\n    bottom: 176px;\\n    top: 176px\\n}\\n\\n.sl-inset-x-44 {\\n    left: 176px;\\n    right: 176px\\n}\\n\\n.sl-inset-y-48 {\\n    bottom: 192px;\\n    top: 192px\\n}\\n\\n.sl-inset-x-48 {\\n    left: 192px;\\n    right: 192px\\n}\\n\\n.sl-inset-y-52 {\\n    bottom: 208px;\\n    top: 208px\\n}\\n\\n.sl-inset-x-52 {\\n    left: 208px;\\n    right: 208px\\n}\\n\\n.sl-inset-y-56 {\\n    bottom: 224px;\\n    top: 224px\\n}\\n\\n.sl-inset-x-56 {\\n    left: 224px;\\n    right: 224px\\n}\\n\\n.sl-inset-y-60 {\\n    bottom: 240px;\\n    top: 240px\\n}\\n\\n.sl-inset-x-60 {\\n    left: 240px;\\n    right: 240px\\n}\\n\\n.sl-inset-y-64 {\\n    bottom: 256px;\\n    top: 256px\\n}\\n\\n.sl-inset-x-64 {\\n    left: 256px;\\n    right: 256px\\n}\\n\\n.sl-inset-y-72 {\\n    bottom: 288px;\\n    top: 288px\\n}\\n\\n.sl-inset-x-72 {\\n    left: 288px;\\n    right: 288px\\n}\\n\\n.sl-inset-y-80 {\\n    bottom: 320px;\\n    top: 320px\\n}\\n\\n.sl-inset-x-80 {\\n    left: 320px;\\n    right: 320px\\n}\\n\\n.sl-inset-y-96 {\\n    bottom: 384px;\\n    top: 384px\\n}\\n\\n.sl-inset-x-96 {\\n    left: 384px;\\n    right: 384px\\n}\\n\\n.sl-inset-y-auto {\\n    bottom: auto;\\n    top: auto\\n}\\n\\n.sl-inset-x-auto {\\n    left: auto;\\n    right: auto\\n}\\n\\n.sl-inset-y-px {\\n    bottom: 1px;\\n    top: 1px\\n}\\n\\n.sl-inset-x-px {\\n    left: 1px;\\n    right: 1px\\n}\\n\\n.sl-inset-y-0\\\\.5 {\\n    bottom: 2px;\\n    top: 2px\\n}\\n\\n.sl-inset-x-0\\\\.5 {\\n    left: 2px;\\n    right: 2px\\n}\\n\\n.sl-inset-y-1\\\\.5 {\\n    bottom: 6px;\\n    top: 6px\\n}\\n\\n.sl-inset-x-1\\\\.5 {\\n    left: 6px;\\n    right: 6px\\n}\\n\\n.sl-inset-y-2\\\\.5 {\\n    bottom: 10px;\\n    top: 10px\\n}\\n\\n.sl-inset-x-2\\\\.5 {\\n    left: 10px;\\n    right: 10px\\n}\\n\\n.sl-inset-y-3\\\\.5 {\\n    bottom: 14px;\\n    top: 14px\\n}\\n\\n.sl-inset-x-3\\\\.5 {\\n    left: 14px;\\n    right: 14px\\n}\\n\\n.sl-inset-y-4\\\\.5 {\\n    bottom: 18px;\\n    top: 18px\\n}\\n\\n.sl-inset-x-4\\\\.5 {\\n    left: 18px;\\n    right: 18px\\n}\\n\\n.sl--inset-y-0 {\\n    bottom: 0;\\n    top: 0\\n}\\n\\n.sl--inset-x-0 {\\n    left: 0;\\n    right: 0\\n}\\n\\n.sl--inset-y-1 {\\n    bottom: -4px;\\n    top: -4px\\n}\\n\\n.sl--inset-x-1 {\\n    left: -4px;\\n    right: -4px\\n}\\n\\n.sl--inset-y-2 {\\n    bottom: -8px;\\n    top: -8px\\n}\\n\\n.sl--inset-x-2 {\\n    left: -8px;\\n    right: -8px\\n}\\n\\n.sl--inset-y-3 {\\n    bottom: -12px;\\n    top: -12px\\n}\\n\\n.sl--inset-x-3 {\\n    left: -12px;\\n    right: -12px\\n}\\n\\n.sl--inset-y-4 {\\n    bottom: -16px;\\n    top: -16px\\n}\\n\\n.sl--inset-x-4 {\\n    left: -16px;\\n    right: -16px\\n}\\n\\n.sl--inset-y-5 {\\n    bottom: -20px;\\n    top: -20px\\n}\\n\\n.sl--inset-x-5 {\\n    left: -20px;\\n    right: -20px\\n}\\n\\n.sl--inset-y-6 {\\n    bottom: -24px;\\n    top: -24px\\n}\\n\\n.sl--inset-x-6 {\\n    left: -24px;\\n    right: -24px\\n}\\n\\n.sl--inset-y-7 {\\n    bottom: -28px;\\n    top: -28px\\n}\\n\\n.sl--inset-x-7 {\\n    left: -28px;\\n    right: -28px\\n}\\n\\n.sl--inset-y-8 {\\n    bottom: -32px;\\n    top: -32px\\n}\\n\\n.sl--inset-x-8 {\\n    left: -32px;\\n    right: -32px\\n}\\n\\n.sl--inset-y-9 {\\n    bottom: -36px;\\n    top: -36px\\n}\\n\\n.sl--inset-x-9 {\\n    left: -36px;\\n    right: -36px\\n}\\n\\n.sl--inset-y-10 {\\n    bottom: -40px;\\n    top: -40px\\n}\\n\\n.sl--inset-x-10 {\\n    left: -40px;\\n    right: -40px\\n}\\n\\n.sl--inset-y-11 {\\n    bottom: -44px;\\n    top: -44px\\n}\\n\\n.sl--inset-x-11 {\\n    left: -44px;\\n    right: -44px\\n}\\n\\n.sl--inset-y-12 {\\n    bottom: -48px;\\n    top: -48px\\n}\\n\\n.sl--inset-x-12 {\\n    left: -48px;\\n    right: -48px\\n}\\n\\n.sl--inset-y-14 {\\n    bottom: -56px;\\n    top: -56px\\n}\\n\\n.sl--inset-x-14 {\\n    left: -56px;\\n    right: -56px\\n}\\n\\n.sl--inset-y-16 {\\n    bottom: -64px;\\n    top: -64px\\n}\\n\\n.sl--inset-x-16 {\\n    left: -64px;\\n    right: -64px\\n}\\n\\n.sl--inset-y-20 {\\n    bottom: -80px;\\n    top: -80px\\n}\\n\\n.sl--inset-x-20 {\\n    left: -80px;\\n    right: -80px\\n}\\n\\n.sl--inset-y-24 {\\n    bottom: -96px;\\n    top: -96px\\n}\\n\\n.sl--inset-x-24 {\\n    left: -96px;\\n    right: -96px\\n}\\n\\n.sl--inset-y-28 {\\n    bottom: -112px;\\n    top: -112px\\n}\\n\\n.sl--inset-x-28 {\\n    left: -112px;\\n    right: -112px\\n}\\n\\n.sl--inset-y-32 {\\n    bottom: -128px;\\n    top: -128px\\n}\\n\\n.sl--inset-x-32 {\\n    left: -128px;\\n    right: -128px\\n}\\n\\n.sl--inset-y-36 {\\n    bottom: -144px;\\n    top: -144px\\n}\\n\\n.sl--inset-x-36 {\\n    left: -144px;\\n    right: -144px\\n}\\n\\n.sl--inset-y-40 {\\n    bottom: -160px;\\n    top: -160px\\n}\\n\\n.sl--inset-x-40 {\\n    left: -160px;\\n    right: -160px\\n}\\n\\n.sl--inset-y-44 {\\n    bottom: -176px;\\n    top: -176px\\n}\\n\\n.sl--inset-x-44 {\\n    left: -176px;\\n    right: -176px\\n}\\n\\n.sl--inset-y-48 {\\n    bottom: -192px;\\n    top: -192px\\n}\\n\\n.sl--inset-x-48 {\\n    left: -192px;\\n    right: -192px\\n}\\n\\n.sl--inset-y-52 {\\n    bottom: -208px;\\n    top: -208px\\n}\\n\\n.sl--inset-x-52 {\\n    left: -208px;\\n    right: -208px\\n}\\n\\n.sl--inset-y-56 {\\n    bottom: -224px;\\n    top: -224px\\n}\\n\\n.sl--inset-x-56 {\\n    left: -224px;\\n    right: -224px\\n}\\n\\n.sl--inset-y-60 {\\n    bottom: -240px;\\n    top: -240px\\n}\\n\\n.sl--inset-x-60 {\\n    left: -240px;\\n    right: -240px\\n}\\n\\n.sl--inset-y-64 {\\n    bottom: -256px;\\n    top: -256px\\n}\\n\\n.sl--inset-x-64 {\\n    left: -256px;\\n    right: -256px\\n}\\n\\n.sl--inset-y-72 {\\n    bottom: -288px;\\n    top: -288px\\n}\\n\\n.sl--inset-x-72 {\\n    left: -288px;\\n    right: -288px\\n}\\n\\n.sl--inset-y-80 {\\n    bottom: -320px;\\n    top: -320px\\n}\\n\\n.sl--inset-x-80 {\\n    left: -320px;\\n    right: -320px\\n}\\n\\n.sl--inset-y-96 {\\n    bottom: -384px;\\n    top: -384px\\n}\\n\\n.sl--inset-x-96 {\\n    left: -384px;\\n    right: -384px\\n}\\n\\n.sl--inset-y-px {\\n    bottom: -1px;\\n    top: -1px\\n}\\n\\n.sl--inset-x-px {\\n    left: -1px;\\n    right: -1px\\n}\\n\\n.sl--inset-y-0\\\\.5 {\\n    bottom: -2px;\\n    top: -2px\\n}\\n\\n.sl--inset-x-0\\\\.5 {\\n    left: -2px;\\n    right: -2px\\n}\\n\\n.sl--inset-y-1\\\\.5 {\\n    bottom: -6px;\\n    top: -6px\\n}\\n\\n.sl--inset-x-1\\\\.5 {\\n    left: -6px;\\n    right: -6px\\n}\\n\\n.sl--inset-y-2\\\\.5 {\\n    bottom: -10px;\\n    top: -10px\\n}\\n\\n.sl--inset-x-2\\\\.5 {\\n    left: -10px;\\n    right: -10px\\n}\\n\\n.sl--inset-y-3\\\\.5 {\\n    bottom: -14px;\\n    top: -14px\\n}\\n\\n.sl--inset-x-3\\\\.5 {\\n    left: -14px;\\n    right: -14px\\n}\\n\\n.sl--inset-y-4\\\\.5 {\\n    bottom: -18px;\\n    top: -18px\\n}\\n\\n.sl--inset-x-4\\\\.5 {\\n    left: -18px;\\n    right: -18px\\n}\\n\\n.sl-top-0 {\\n    top: 0\\n}\\n\\n.sl-right-0 {\\n    right: 0\\n}\\n\\n.sl-bottom-0 {\\n    bottom: 0\\n}\\n\\n.sl-left-0 {\\n    left: 0\\n}\\n\\n.sl-top-1 {\\n    top: 4px\\n}\\n\\n.sl-right-1 {\\n    right: 4px\\n}\\n\\n.sl-bottom-1 {\\n    bottom: 4px\\n}\\n\\n.sl-left-1 {\\n    left: 4px\\n}\\n\\n.sl-top-2 {\\n    top: 8px\\n}\\n\\n.sl-right-2 {\\n    right: 8px\\n}\\n\\n.sl-bottom-2 {\\n    bottom: 8px\\n}\\n\\n.sl-left-2 {\\n    left: 8px\\n}\\n\\n.sl-top-3 {\\n    top: 12px\\n}\\n\\n.sl-right-3 {\\n    right: 12px\\n}\\n\\n.sl-bottom-3 {\\n    bottom: 12px\\n}\\n\\n.sl-left-3 {\\n    left: 12px\\n}\\n\\n.sl-top-4 {\\n    top: 16px\\n}\\n\\n.sl-right-4 {\\n    right: 16px\\n}\\n\\n.sl-bottom-4 {\\n    bottom: 16px\\n}\\n\\n.sl-left-4 {\\n    left: 16px\\n}\\n\\n.sl-top-5 {\\n    top: 20px\\n}\\n\\n.sl-right-5 {\\n    right: 20px\\n}\\n\\n.sl-bottom-5 {\\n    bottom: 20px\\n}\\n\\n.sl-left-5 {\\n    left: 20px\\n}\\n\\n.sl-top-6 {\\n    top: 24px\\n}\\n\\n.sl-right-6 {\\n    right: 24px\\n}\\n\\n.sl-bottom-6 {\\n    bottom: 24px\\n}\\n\\n.sl-left-6 {\\n    left: 24px\\n}\\n\\n.sl-top-7 {\\n    top: 28px\\n}\\n\\n.sl-right-7 {\\n    right: 28px\\n}\\n\\n.sl-bottom-7 {\\n    bottom: 28px\\n}\\n\\n.sl-left-7 {\\n    left: 28px\\n}\\n\\n.sl-top-8 {\\n    top: 32px\\n}\\n\\n.sl-right-8 {\\n    right: 32px\\n}\\n\\n.sl-bottom-8 {\\n    bottom: 32px\\n}\\n\\n.sl-left-8 {\\n    left: 32px\\n}\\n\\n.sl-top-9 {\\n    top: 36px\\n}\\n\\n.sl-right-9 {\\n    right: 36px\\n}\\n\\n.sl-bottom-9 {\\n    bottom: 36px\\n}\\n\\n.sl-left-9 {\\n    left: 36px\\n}\\n\\n.sl-top-10 {\\n    top: 40px\\n}\\n\\n.sl-right-10 {\\n    right: 40px\\n}\\n\\n.sl-bottom-10 {\\n    bottom: 40px\\n}\\n\\n.sl-left-10 {\\n    left: 40px\\n}\\n\\n.sl-top-11 {\\n    top: 44px\\n}\\n\\n.sl-right-11 {\\n    right: 44px\\n}\\n\\n.sl-bottom-11 {\\n    bottom: 44px\\n}\\n\\n.sl-left-11 {\\n    left: 44px\\n}\\n\\n.sl-top-12 {\\n    top: 48px\\n}\\n\\n.sl-right-12 {\\n    right: 48px\\n}\\n\\n.sl-bottom-12 {\\n    bottom: 48px\\n}\\n\\n.sl-left-12 {\\n    left: 48px\\n}\\n\\n.sl-top-14 {\\n    top: 56px\\n}\\n\\n.sl-right-14 {\\n    right: 56px\\n}\\n\\n.sl-bottom-14 {\\n    bottom: 56px\\n}\\n\\n.sl-left-14 {\\n    left: 56px\\n}\\n\\n.sl-top-16 {\\n    top: 64px\\n}\\n\\n.sl-right-16 {\\n    right: 64px\\n}\\n\\n.sl-bottom-16 {\\n    bottom: 64px\\n}\\n\\n.sl-left-16 {\\n    left: 64px\\n}\\n\\n.sl-top-20 {\\n    top: 80px\\n}\\n\\n.sl-right-20 {\\n    right: 80px\\n}\\n\\n.sl-bottom-20 {\\n    bottom: 80px\\n}\\n\\n.sl-left-20 {\\n    left: 80px\\n}\\n\\n.sl-top-24 {\\n    top: 96px\\n}\\n\\n.sl-right-24 {\\n    right: 96px\\n}\\n\\n.sl-bottom-24 {\\n    bottom: 96px\\n}\\n\\n.sl-left-24 {\\n    left: 96px\\n}\\n\\n.sl-top-28 {\\n    top: 112px\\n}\\n\\n.sl-right-28 {\\n    right: 112px\\n}\\n\\n.sl-bottom-28 {\\n    bottom: 112px\\n}\\n\\n.sl-left-28 {\\n    left: 112px\\n}\\n\\n.sl-top-32 {\\n    top: 128px\\n}\\n\\n.sl-right-32 {\\n    right: 128px\\n}\\n\\n.sl-bottom-32 {\\n    bottom: 128px\\n}\\n\\n.sl-left-32 {\\n    left: 128px\\n}\\n\\n.sl-top-36 {\\n    top: 144px\\n}\\n\\n.sl-right-36 {\\n    right: 144px\\n}\\n\\n.sl-bottom-36 {\\n    bottom: 144px\\n}\\n\\n.sl-left-36 {\\n    left: 144px\\n}\\n\\n.sl-top-40 {\\n    top: 160px\\n}\\n\\n.sl-right-40 {\\n    right: 160px\\n}\\n\\n.sl-bottom-40 {\\n    bottom: 160px\\n}\\n\\n.sl-left-40 {\\n    left: 160px\\n}\\n\\n.sl-top-44 {\\n    top: 176px\\n}\\n\\n.sl-right-44 {\\n    right: 176px\\n}\\n\\n.sl-bottom-44 {\\n    bottom: 176px\\n}\\n\\n.sl-left-44 {\\n    left: 176px\\n}\\n\\n.sl-top-48 {\\n    top: 192px\\n}\\n\\n.sl-right-48 {\\n    right: 192px\\n}\\n\\n.sl-bottom-48 {\\n    bottom: 192px\\n}\\n\\n.sl-left-48 {\\n    left: 192px\\n}\\n\\n.sl-top-52 {\\n    top: 208px\\n}\\n\\n.sl-right-52 {\\n    right: 208px\\n}\\n\\n.sl-bottom-52 {\\n    bottom: 208px\\n}\\n\\n.sl-left-52 {\\n    left: 208px\\n}\\n\\n.sl-top-56 {\\n    top: 224px\\n}\\n\\n.sl-right-56 {\\n    right: 224px\\n}\\n\\n.sl-bottom-56 {\\n    bottom: 224px\\n}\\n\\n.sl-left-56 {\\n    left: 224px\\n}\\n\\n.sl-top-60 {\\n    top: 240px\\n}\\n\\n.sl-right-60 {\\n    right: 240px\\n}\\n\\n.sl-bottom-60 {\\n    bottom: 240px\\n}\\n\\n.sl-left-60 {\\n    left: 240px\\n}\\n\\n.sl-top-64 {\\n    top: 256px\\n}\\n\\n.sl-right-64 {\\n    right: 256px\\n}\\n\\n.sl-bottom-64 {\\n    bottom: 256px\\n}\\n\\n.sl-left-64 {\\n    left: 256px\\n}\\n\\n.sl-top-72 {\\n    top: 288px\\n}\\n\\n.sl-right-72 {\\n    right: 288px\\n}\\n\\n.sl-bottom-72 {\\n    bottom: 288px\\n}\\n\\n.sl-left-72 {\\n    left: 288px\\n}\\n\\n.sl-top-80 {\\n    top: 320px\\n}\\n\\n.sl-right-80 {\\n    right: 320px\\n}\\n\\n.sl-bottom-80 {\\n    bottom: 320px\\n}\\n\\n.sl-left-80 {\\n    left: 320px\\n}\\n\\n.sl-top-96 {\\n    top: 384px\\n}\\n\\n.sl-right-96 {\\n    right: 384px\\n}\\n\\n.sl-bottom-96 {\\n    bottom: 384px\\n}\\n\\n.sl-left-96 {\\n    left: 384px\\n}\\n\\n.sl-top-auto {\\n    top: auto\\n}\\n\\n.sl-right-auto {\\n    right: auto\\n}\\n\\n.sl-bottom-auto {\\n    bottom: auto\\n}\\n\\n.sl-left-auto {\\n    left: auto\\n}\\n\\n.sl-top-px {\\n    top: 1px\\n}\\n\\n.sl-right-px {\\n    right: 1px\\n}\\n\\n.sl-bottom-px {\\n    bottom: 1px\\n}\\n\\n.sl-left-px {\\n    left: 1px\\n}\\n\\n.sl-top-0\\\\.5 {\\n    top: 2px\\n}\\n\\n.sl-right-0\\\\.5 {\\n    right: 2px\\n}\\n\\n.sl-bottom-0\\\\.5 {\\n    bottom: 2px\\n}\\n\\n.sl-left-0\\\\.5 {\\n    left: 2px\\n}\\n\\n.sl-top-1\\\\.5 {\\n    top: 6px\\n}\\n\\n.sl-right-1\\\\.5 {\\n    right: 6px\\n}\\n\\n.sl-bottom-1\\\\.5 {\\n    bottom: 6px\\n}\\n\\n.sl-left-1\\\\.5 {\\n    left: 6px\\n}\\n\\n.sl-top-2\\\\.5 {\\n    top: 10px\\n}\\n\\n.sl-right-2\\\\.5 {\\n    right: 10px\\n}\\n\\n.sl-bottom-2\\\\.5 {\\n    bottom: 10px\\n}\\n\\n.sl-left-2\\\\.5 {\\n    left: 10px\\n}\\n\\n.sl-top-3\\\\.5 {\\n    top: 14px\\n}\\n\\n.sl-right-3\\\\.5 {\\n    right: 14px\\n}\\n\\n.sl-bottom-3\\\\.5 {\\n    bottom: 14px\\n}\\n\\n.sl-left-3\\\\.5 {\\n    left: 14px\\n}\\n\\n.sl-top-4\\\\.5 {\\n    top: 18px\\n}\\n\\n.sl-right-4\\\\.5 {\\n    right: 18px\\n}\\n\\n.sl-bottom-4\\\\.5 {\\n    bottom: 18px\\n}\\n\\n.sl-left-4\\\\.5 {\\n    left: 18px\\n}\\n\\n.sl--top-0 {\\n    top: 0\\n}\\n\\n.sl--right-0 {\\n    right: 0\\n}\\n\\n.sl--bottom-0 {\\n    bottom: 0\\n}\\n\\n.sl--left-0 {\\n    left: 0\\n}\\n\\n.sl--top-1 {\\n    top: -4px\\n}\\n\\n.sl--right-1 {\\n    right: -4px\\n}\\n\\n.sl--bottom-1 {\\n    bottom: -4px\\n}\\n\\n.sl--left-1 {\\n    left: -4px\\n}\\n\\n.sl--top-2 {\\n    top: -8px\\n}\\n\\n.sl--right-2 {\\n    right: -8px\\n}\\n\\n.sl--bottom-2 {\\n    bottom: -8px\\n}\\n\\n.sl--left-2 {\\n    left: -8px\\n}\\n\\n.sl--top-3 {\\n    top: -12px\\n}\\n\\n.sl--right-3 {\\n    right: -12px\\n}\\n\\n.sl--bottom-3 {\\n    bottom: -12px\\n}\\n\\n.sl--left-3 {\\n    left: -12px\\n}\\n\\n.sl--top-4 {\\n    top: -16px\\n}\\n\\n.sl--right-4 {\\n    right: -16px\\n}\\n\\n.sl--bottom-4 {\\n    bottom: -16px\\n}\\n\\n.sl--left-4 {\\n    left: -16px\\n}\\n\\n.sl--top-5 {\\n    top: -20px\\n}\\n\\n.sl--right-5 {\\n    right: -20px\\n}\\n\\n.sl--bottom-5 {\\n    bottom: -20px\\n}\\n\\n.sl--left-5 {\\n    left: -20px\\n}\\n\\n.sl--top-6 {\\n    top: -24px\\n}\\n\\n.sl--right-6 {\\n    right: -24px\\n}\\n\\n.sl--bottom-6 {\\n    bottom: -24px\\n}\\n\\n.sl--left-6 {\\n    left: -24px\\n}\\n\\n.sl--top-7 {\\n    top: -28px\\n}\\n\\n.sl--right-7 {\\n    right: -28px\\n}\\n\\n.sl--bottom-7 {\\n    bottom: -28px\\n}\\n\\n.sl--left-7 {\\n    left: -28px\\n}\\n\\n.sl--top-8 {\\n    top: -32px\\n}\\n\\n.sl--right-8 {\\n    right: -32px\\n}\\n\\n.sl--bottom-8 {\\n    bottom: -32px\\n}\\n\\n.sl--left-8 {\\n    left: -32px\\n}\\n\\n.sl--top-9 {\\n    top: -36px\\n}\\n\\n.sl--right-9 {\\n    right: -36px\\n}\\n\\n.sl--bottom-9 {\\n    bottom: -36px\\n}\\n\\n.sl--left-9 {\\n    left: -36px\\n}\\n\\n.sl--top-10 {\\n    top: -40px\\n}\\n\\n.sl--right-10 {\\n    right: -40px\\n}\\n\\n.sl--bottom-10 {\\n    bottom: -40px\\n}\\n\\n.sl--left-10 {\\n    left: -40px\\n}\\n\\n.sl--top-11 {\\n    top: -44px\\n}\\n\\n.sl--right-11 {\\n    right: -44px\\n}\\n\\n.sl--bottom-11 {\\n    bottom: -44px\\n}\\n\\n.sl--left-11 {\\n    left: -44px\\n}\\n\\n.sl--top-12 {\\n    top: -48px\\n}\\n\\n.sl--right-12 {\\n    right: -48px\\n}\\n\\n.sl--bottom-12 {\\n    bottom: -48px\\n}\\n\\n.sl--left-12 {\\n    left: -48px\\n}\\n\\n.sl--top-14 {\\n    top: -56px\\n}\\n\\n.sl--right-14 {\\n    right: -56px\\n}\\n\\n.sl--bottom-14 {\\n    bottom: -56px\\n}\\n\\n.sl--left-14 {\\n    left: -56px\\n}\\n\\n.sl--top-16 {\\n    top: -64px\\n}\\n\\n.sl--right-16 {\\n    right: -64px\\n}\\n\\n.sl--bottom-16 {\\n    bottom: -64px\\n}\\n\\n.sl--left-16 {\\n    left: -64px\\n}\\n\\n.sl--top-20 {\\n    top: -80px\\n}\\n\\n.sl--right-20 {\\n    right: -80px\\n}\\n\\n.sl--bottom-20 {\\n    bottom: -80px\\n}\\n\\n.sl--left-20 {\\n    left: -80px\\n}\\n\\n.sl--top-24 {\\n    top: -96px\\n}\\n\\n.sl--right-24 {\\n    right: -96px\\n}\\n\\n.sl--bottom-24 {\\n    bottom: -96px\\n}\\n\\n.sl--left-24 {\\n    left: -96px\\n}\\n\\n.sl--top-28 {\\n    top: -112px\\n}\\n\\n.sl--right-28 {\\n    right: -112px\\n}\\n\\n.sl--bottom-28 {\\n    bottom: -112px\\n}\\n\\n.sl--left-28 {\\n    left: -112px\\n}\\n\\n.sl--top-32 {\\n    top: -128px\\n}\\n\\n.sl--right-32 {\\n    right: -128px\\n}\\n\\n.sl--bottom-32 {\\n    bottom: -128px\\n}\\n\\n.sl--left-32 {\\n    left: -128px\\n}\\n\\n.sl--top-36 {\\n    top: -144px\\n}\\n\\n.sl--right-36 {\\n    right: -144px\\n}\\n\\n.sl--bottom-36 {\\n    bottom: -144px\\n}\\n\\n.sl--left-36 {\\n    left: -144px\\n}\\n\\n.sl--top-40 {\\n    top: -160px\\n}\\n\\n.sl--right-40 {\\n    right: -160px\\n}\\n\\n.sl--bottom-40 {\\n    bottom: -160px\\n}\\n\\n.sl--left-40 {\\n    left: -160px\\n}\\n\\n.sl--top-44 {\\n    top: -176px\\n}\\n\\n.sl--right-44 {\\n    right: -176px\\n}\\n\\n.sl--bottom-44 {\\n    bottom: -176px\\n}\\n\\n.sl--left-44 {\\n    left: -176px\\n}\\n\\n.sl--top-48 {\\n    top: -192px\\n}\\n\\n.sl--right-48 {\\n    right: -192px\\n}\\n\\n.sl--bottom-48 {\\n    bottom: -192px\\n}\\n\\n.sl--left-48 {\\n    left: -192px\\n}\\n\\n.sl--top-52 {\\n    top: -208px\\n}\\n\\n.sl--right-52 {\\n    right: -208px\\n}\\n\\n.sl--bottom-52 {\\n    bottom: -208px\\n}\\n\\n.sl--left-52 {\\n    left: -208px\\n}\\n\\n.sl--top-56 {\\n    top: -224px\\n}\\n\\n.sl--right-56 {\\n    right: -224px\\n}\\n\\n.sl--bottom-56 {\\n    bottom: -224px\\n}\\n\\n.sl--left-56 {\\n    left: -224px\\n}\\n\\n.sl--top-60 {\\n    top: -240px\\n}\\n\\n.sl--right-60 {\\n    right: -240px\\n}\\n\\n.sl--bottom-60 {\\n    bottom: -240px\\n}\\n\\n.sl--left-60 {\\n    left: -240px\\n}\\n\\n.sl--top-64 {\\n    top: -256px\\n}\\n\\n.sl--right-64 {\\n    right: -256px\\n}\\n\\n.sl--bottom-64 {\\n    bottom: -256px\\n}\\n\\n.sl--left-64 {\\n    left: -256px\\n}\\n\\n.sl--top-72 {\\n    top: -288px\\n}\\n\\n.sl--right-72 {\\n    right: -288px\\n}\\n\\n.sl--bottom-72 {\\n    bottom: -288px\\n}\\n\\n.sl--left-72 {\\n    left: -288px\\n}\\n\\n.sl--top-80 {\\n    top: -320px\\n}\\n\\n.sl--right-80 {\\n    right: -320px\\n}\\n\\n.sl--bottom-80 {\\n    bottom: -320px\\n}\\n\\n.sl--left-80 {\\n    left: -320px\\n}\\n\\n.sl--top-96 {\\n    top: -384px\\n}\\n\\n.sl--right-96 {\\n    right: -384px\\n}\\n\\n.sl--bottom-96 {\\n    bottom: -384px\\n}\\n\\n.sl--left-96 {\\n    left: -384px\\n}\\n\\n.sl--top-px {\\n    top: -1px\\n}\\n\\n.sl--right-px {\\n    right: -1px\\n}\\n\\n.sl--bottom-px {\\n    bottom: -1px\\n}\\n\\n.sl--left-px {\\n    left: -1px\\n}\\n\\n.sl--top-0\\\\.5 {\\n    top: -2px\\n}\\n\\n.sl--right-0\\\\.5 {\\n    right: -2px\\n}\\n\\n.sl--bottom-0\\\\.5 {\\n    bottom: -2px\\n}\\n\\n.sl--left-0\\\\.5 {\\n    left: -2px\\n}\\n\\n.sl--top-1\\\\.5 {\\n    top: -6px\\n}\\n\\n.sl--right-1\\\\.5 {\\n    right: -6px\\n}\\n\\n.sl--bottom-1\\\\.5 {\\n    bottom: -6px\\n}\\n\\n.sl--left-1\\\\.5 {\\n    left: -6px\\n}\\n\\n.sl--top-2\\\\.5 {\\n    top: -10px\\n}\\n\\n.sl--right-2\\\\.5 {\\n    right: -10px\\n}\\n\\n.sl--bottom-2\\\\.5 {\\n    bottom: -10px\\n}\\n\\n.sl--left-2\\\\.5 {\\n    left: -10px\\n}\\n\\n.sl--top-3\\\\.5 {\\n    top: -14px\\n}\\n\\n.sl--right-3\\\\.5 {\\n    right: -14px\\n}\\n\\n.sl--bottom-3\\\\.5 {\\n    bottom: -14px\\n}\\n\\n.sl--left-3\\\\.5 {\\n    left: -14px\\n}\\n\\n.sl--top-4\\\\.5 {\\n    top: -18px\\n}\\n\\n.sl--right-4\\\\.5 {\\n    right: -18px\\n}\\n\\n.sl--bottom-4\\\\.5 {\\n    bottom: -18px\\n}\\n\\n.sl--left-4\\\\.5 {\\n    left: -18px\\n}\\n\\n.sl-justify-start {\\n    justify-content: flex-start\\n}\\n\\n.sl-justify-end {\\n    justify-content: flex-end\\n}\\n\\n.sl-justify-center {\\n    justify-content: center\\n}\\n\\n.sl-justify-between {\\n    justify-content: space-between\\n}\\n\\n.sl-justify-around {\\n    justify-content: space-around\\n}\\n\\n.sl-justify-evenly {\\n    justify-content: space-evenly\\n}\\n\\n.sl-justify-items-start {\\n    justify-items: start\\n}\\n\\n.sl-justify-items-end {\\n    justify-items: end\\n}\\n\\n.sl-justify-items-center {\\n    justify-items: center\\n}\\n\\n.sl-justify-items-stretch {\\n    justify-items: stretch\\n}\\n\\n.sl-justify-self-auto {\\n    justify-self: auto\\n}\\n\\n.sl-justify-self-start {\\n    justify-self: start\\n}\\n\\n.sl-justify-self-end {\\n    justify-self: end\\n}\\n\\n.sl-justify-self-center {\\n    justify-self: center\\n}\\n\\n.sl-justify-self-stretch {\\n    justify-self: stretch\\n}\\n\\n.sl-tracking-tight {\\n    letter-spacing: -.025em\\n}\\n\\n.sl-tracking-normal {\\n    letter-spacing: 0\\n}\\n\\n.sl-tracking-wide {\\n    letter-spacing: .025em\\n}\\n\\n.sl-leading-none {\\n    line-height: 1\\n}\\n\\n.sl-leading-tight {\\n    line-height: 1.2\\n}\\n\\n.sl-leading-snug {\\n    line-height: 1.375\\n}\\n\\n.sl-leading-normal {\\n    line-height: 1.5\\n}\\n\\n.sl-leading-relaxed {\\n    line-height: 1.625\\n}\\n\\n.sl-leading-loose {\\n    line-height: 2\\n}\\n\\n.sl-leading-paragraph-leading {\\n    line-height: var(--lh-paragraph-leading)\\n}\\n\\n.sl-leading-paragraph {\\n    line-height: var(--lh-paragraph)\\n}\\n\\n.sl-leading-paragraph-small {\\n    line-height: var(--lh-paragraph-small)\\n}\\n\\n.sl-leading-paragraph-tiny {\\n    line-height: var(--lh-paragraph-tiny)\\n}\\n\\n.sl-m-0 {\\n    margin: 0\\n}\\n\\n.sl-m-1 {\\n    margin: 4px\\n}\\n\\n.sl-m-2 {\\n    margin: 8px\\n}\\n\\n.sl-m-3 {\\n    margin: 12px\\n}\\n\\n.sl-m-4 {\\n    margin: 16px\\n}\\n\\n.sl-m-5 {\\n    margin: 20px\\n}\\n\\n.sl-m-6 {\\n    margin: 24px\\n}\\n\\n.sl-m-7 {\\n    margin: 28px\\n}\\n\\n.sl-m-8 {\\n    margin: 32px\\n}\\n\\n.sl-m-9 {\\n    margin: 36px\\n}\\n\\n.sl-m-10 {\\n    margin: 40px\\n}\\n\\n.sl-m-11 {\\n    margin: 44px\\n}\\n\\n.sl-m-12 {\\n    margin: 48px\\n}\\n\\n.sl-m-14 {\\n    margin: 56px\\n}\\n\\n.sl-m-16 {\\n    margin: 64px\\n}\\n\\n.sl-m-20 {\\n    margin: 80px\\n}\\n\\n.sl-m-24 {\\n    margin: 96px\\n}\\n\\n.sl-m-28 {\\n    margin: 112px\\n}\\n\\n.sl-m-32 {\\n    margin: 128px\\n}\\n\\n.sl-m-36 {\\n    margin: 144px\\n}\\n\\n.sl-m-40 {\\n    margin: 160px\\n}\\n\\n.sl-m-44 {\\n    margin: 176px\\n}\\n\\n.sl-m-48 {\\n    margin: 192px\\n}\\n\\n.sl-m-52 {\\n    margin: 208px\\n}\\n\\n.sl-m-56 {\\n    margin: 224px\\n}\\n\\n.sl-m-60 {\\n    margin: 240px\\n}\\n\\n.sl-m-64 {\\n    margin: 256px\\n}\\n\\n.sl-m-72 {\\n    margin: 288px\\n}\\n\\n.sl-m-80 {\\n    margin: 320px\\n}\\n\\n.sl-m-96 {\\n    margin: 384px\\n}\\n\\n.sl-m-auto {\\n    margin: auto\\n}\\n\\n.sl-m-px {\\n    margin: 1px\\n}\\n\\n.sl-m-0\\\\.5 {\\n    margin: 2px\\n}\\n\\n.sl-m-1\\\\.5 {\\n    margin: 6px\\n}\\n\\n.sl-m-2\\\\.5 {\\n    margin: 10px\\n}\\n\\n.sl-m-3\\\\.5 {\\n    margin: 14px\\n}\\n\\n.sl-m-4\\\\.5 {\\n    margin: 18px\\n}\\n\\n.sl--m-0 {\\n    margin: 0\\n}\\n\\n.sl--m-1 {\\n    margin: -4px\\n}\\n\\n.sl--m-2 {\\n    margin: -8px\\n}\\n\\n.sl--m-3 {\\n    margin: -12px\\n}\\n\\n.sl--m-4 {\\n    margin: -16px\\n}\\n\\n.sl--m-5 {\\n    margin: -20px\\n}\\n\\n.sl--m-6 {\\n    margin: -24px\\n}\\n\\n.sl--m-7 {\\n    margin: -28px\\n}\\n\\n.sl--m-8 {\\n    margin: -32px\\n}\\n\\n.sl--m-9 {\\n    margin: -36px\\n}\\n\\n.sl--m-10 {\\n    margin: -40px\\n}\\n\\n.sl--m-11 {\\n    margin: -44px\\n}\\n\\n.sl--m-12 {\\n    margin: -48px\\n}\\n\\n.sl--m-14 {\\n    margin: -56px\\n}\\n\\n.sl--m-16 {\\n    margin: -64px\\n}\\n\\n.sl--m-20 {\\n    margin: -80px\\n}\\n\\n.sl--m-24 {\\n    margin: -96px\\n}\\n\\n.sl--m-28 {\\n    margin: -112px\\n}\\n\\n.sl--m-32 {\\n    margin: -128px\\n}\\n\\n.sl--m-36 {\\n    margin: -144px\\n}\\n\\n.sl--m-40 {\\n    margin: -160px\\n}\\n\\n.sl--m-44 {\\n    margin: -176px\\n}\\n\\n.sl--m-48 {\\n    margin: -192px\\n}\\n\\n.sl--m-52 {\\n    margin: -208px\\n}\\n\\n.sl--m-56 {\\n    margin: -224px\\n}\\n\\n.sl--m-60 {\\n    margin: -240px\\n}\\n\\n.sl--m-64 {\\n    margin: -256px\\n}\\n\\n.sl--m-72 {\\n    margin: -288px\\n}\\n\\n.sl--m-80 {\\n    margin: -320px\\n}\\n\\n.sl--m-96 {\\n    margin: -384px\\n}\\n\\n.sl--m-px {\\n    margin: -1px\\n}\\n\\n.sl--m-0\\\\.5 {\\n    margin: -2px\\n}\\n\\n.sl--m-1\\\\.5 {\\n    margin: -6px\\n}\\n\\n.sl--m-2\\\\.5 {\\n    margin: -10px\\n}\\n\\n.sl--m-3\\\\.5 {\\n    margin: -14px\\n}\\n\\n.sl--m-4\\\\.5 {\\n    margin: -18px\\n}\\n\\n.sl-my-0 {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl-mx-0 {\\n    margin-left: 0;\\n    margin-right: 0\\n}\\n\\n.sl-my-1 {\\n    margin-bottom: 4px;\\n    margin-top: 4px\\n}\\n\\n.sl-mx-1 {\\n    margin-left: 4px;\\n    margin-right: 4px\\n}\\n\\n.sl-my-2 {\\n    margin-bottom: 8px;\\n    margin-top: 8px\\n}\\n\\n.sl-mx-2 {\\n    margin-left: 8px;\\n    margin-right: 8px\\n}\\n\\n.sl-my-3 {\\n    margin-bottom: 12px;\\n    margin-top: 12px\\n}\\n\\n.sl-mx-3 {\\n    margin-left: 12px;\\n    margin-right: 12px\\n}\\n\\n.sl-my-4 {\\n    margin-bottom: 16px;\\n    margin-top: 16px\\n}\\n\\n.sl-mx-4 {\\n    margin-left: 16px;\\n    margin-right: 16px\\n}\\n\\n.sl-my-5 {\\n    margin-bottom: 20px;\\n    margin-top: 20px\\n}\\n\\n.sl-mx-5 {\\n    margin-left: 20px;\\n    margin-right: 20px\\n}\\n\\n.sl-my-6 {\\n    margin-bottom: 24px;\\n    margin-top: 24px\\n}\\n\\n.sl-mx-6 {\\n    margin-left: 24px;\\n    margin-right: 24px\\n}\\n\\n.sl-my-7 {\\n    margin-bottom: 28px;\\n    margin-top: 28px\\n}\\n\\n.sl-mx-7 {\\n    margin-left: 28px;\\n    margin-right: 28px\\n}\\n\\n.sl-my-8 {\\n    margin-bottom: 32px;\\n    margin-top: 32px\\n}\\n\\n.sl-mx-8 {\\n    margin-left: 32px;\\n    margin-right: 32px\\n}\\n\\n.sl-my-9 {\\n    margin-bottom: 36px;\\n    margin-top: 36px\\n}\\n\\n.sl-mx-9 {\\n    margin-left: 36px;\\n    margin-right: 36px\\n}\\n\\n.sl-my-10 {\\n    margin-bottom: 40px;\\n    margin-top: 40px\\n}\\n\\n.sl-mx-10 {\\n    margin-left: 40px;\\n    margin-right: 40px\\n}\\n\\n.sl-my-11 {\\n    margin-bottom: 44px;\\n    margin-top: 44px\\n}\\n\\n.sl-mx-11 {\\n    margin-left: 44px;\\n    margin-right: 44px\\n}\\n\\n.sl-my-12 {\\n    margin-bottom: 48px;\\n    margin-top: 48px\\n}\\n\\n.sl-mx-12 {\\n    margin-left: 48px;\\n    margin-right: 48px\\n}\\n\\n.sl-my-14 {\\n    margin-bottom: 56px;\\n    margin-top: 56px\\n}\\n\\n.sl-mx-14 {\\n    margin-left: 56px;\\n    margin-right: 56px\\n}\\n\\n.sl-my-16 {\\n    margin-bottom: 64px;\\n    margin-top: 64px\\n}\\n\\n.sl-mx-16 {\\n    margin-left: 64px;\\n    margin-right: 64px\\n}\\n\\n.sl-my-20 {\\n    margin-bottom: 80px;\\n    margin-top: 80px\\n}\\n\\n.sl-mx-20 {\\n    margin-left: 80px;\\n    margin-right: 80px\\n}\\n\\n.sl-my-24 {\\n    margin-bottom: 96px;\\n    margin-top: 96px\\n}\\n\\n.sl-mx-24 {\\n    margin-left: 96px;\\n    margin-right: 96px\\n}\\n\\n.sl-my-28 {\\n    margin-bottom: 112px;\\n    margin-top: 112px\\n}\\n\\n.sl-mx-28 {\\n    margin-left: 112px;\\n    margin-right: 112px\\n}\\n\\n.sl-my-32 {\\n    margin-bottom: 128px;\\n    margin-top: 128px\\n}\\n\\n.sl-mx-32 {\\n    margin-left: 128px;\\n    margin-right: 128px\\n}\\n\\n.sl-my-36 {\\n    margin-bottom: 144px;\\n    margin-top: 144px\\n}\\n\\n.sl-mx-36 {\\n    margin-left: 144px;\\n    margin-right: 144px\\n}\\n\\n.sl-my-40 {\\n    margin-bottom: 160px;\\n    margin-top: 160px\\n}\\n\\n.sl-mx-40 {\\n    margin-left: 160px;\\n    margin-right: 160px\\n}\\n\\n.sl-my-44 {\\n    margin-bottom: 176px;\\n    margin-top: 176px\\n}\\n\\n.sl-mx-44 {\\n    margin-left: 176px;\\n    margin-right: 176px\\n}\\n\\n.sl-my-48 {\\n    margin-bottom: 192px;\\n    margin-top: 192px\\n}\\n\\n.sl-mx-48 {\\n    margin-left: 192px;\\n    margin-right: 192px\\n}\\n\\n.sl-my-52 {\\n    margin-bottom: 208px;\\n    margin-top: 208px\\n}\\n\\n.sl-mx-52 {\\n    margin-left: 208px;\\n    margin-right: 208px\\n}\\n\\n.sl-my-56 {\\n    margin-bottom: 224px;\\n    margin-top: 224px\\n}\\n\\n.sl-mx-56 {\\n    margin-left: 224px;\\n    margin-right: 224px\\n}\\n\\n.sl-my-60 {\\n    margin-bottom: 240px;\\n    margin-top: 240px\\n}\\n\\n.sl-mx-60 {\\n    margin-left: 240px;\\n    margin-right: 240px\\n}\\n\\n.sl-my-64 {\\n    margin-bottom: 256px;\\n    margin-top: 256px\\n}\\n\\n.sl-mx-64 {\\n    margin-left: 256px;\\n    margin-right: 256px\\n}\\n\\n.sl-my-72 {\\n    margin-bottom: 288px;\\n    margin-top: 288px\\n}\\n\\n.sl-mx-72 {\\n    margin-left: 288px;\\n    margin-right: 288px\\n}\\n\\n.sl-my-80 {\\n    margin-bottom: 320px;\\n    margin-top: 320px\\n}\\n\\n.sl-mx-80 {\\n    margin-left: 320px;\\n    margin-right: 320px\\n}\\n\\n.sl-my-96 {\\n    margin-bottom: 384px;\\n    margin-top: 384px\\n}\\n\\n.sl-mx-96 {\\n    margin-left: 384px;\\n    margin-right: 384px\\n}\\n\\n.sl-my-auto {\\n    margin-bottom: auto;\\n    margin-top: auto\\n}\\n\\n.sl-mx-auto {\\n    margin-left: auto;\\n    margin-right: auto\\n}\\n\\n.sl-my-px {\\n    margin-bottom: 1px;\\n    margin-top: 1px\\n}\\n\\n.sl-mx-px {\\n    margin-left: 1px;\\n    margin-right: 1px\\n}\\n\\n.sl-my-0\\\\.5 {\\n    margin-bottom: 2px;\\n    margin-top: 2px\\n}\\n\\n.sl-mx-0\\\\.5 {\\n    margin-left: 2px;\\n    margin-right: 2px\\n}\\n\\n.sl-my-1\\\\.5 {\\n    margin-bottom: 6px;\\n    margin-top: 6px\\n}\\n\\n.sl-mx-1\\\\.5 {\\n    margin-left: 6px;\\n    margin-right: 6px\\n}\\n\\n.sl-my-2\\\\.5 {\\n    margin-bottom: 10px;\\n    margin-top: 10px\\n}\\n\\n.sl-mx-2\\\\.5 {\\n    margin-left: 10px;\\n    margin-right: 10px\\n}\\n\\n.sl-my-3\\\\.5 {\\n    margin-bottom: 14px;\\n    margin-top: 14px\\n}\\n\\n.sl-mx-3\\\\.5 {\\n    margin-left: 14px;\\n    margin-right: 14px\\n}\\n\\n.sl-my-4\\\\.5 {\\n    margin-bottom: 18px;\\n    margin-top: 18px\\n}\\n\\n.sl-mx-4\\\\.5 {\\n    margin-left: 18px;\\n    margin-right: 18px\\n}\\n\\n.sl--my-0 {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl--mx-0 {\\n    margin-left: 0;\\n    margin-right: 0\\n}\\n\\n.sl--my-1 {\\n    margin-bottom: -4px;\\n    margin-top: -4px\\n}\\n\\n.sl--mx-1 {\\n    margin-left: -4px;\\n    margin-right: -4px\\n}\\n\\n.sl--my-2 {\\n    margin-bottom: -8px;\\n    margin-top: -8px\\n}\\n\\n.sl--mx-2 {\\n    margin-left: -8px;\\n    margin-right: -8px\\n}\\n\\n.sl--my-3 {\\n    margin-bottom: -12px;\\n    margin-top: -12px\\n}\\n\\n.sl--mx-3 {\\n    margin-left: -12px;\\n    margin-right: -12px\\n}\\n\\n.sl--my-4 {\\n    margin-bottom: -16px;\\n    margin-top: -16px\\n}\\n\\n.sl--mx-4 {\\n    margin-left: -16px;\\n    margin-right: -16px\\n}\\n\\n.sl--my-5 {\\n    margin-bottom: -20px;\\n    margin-top: -20px\\n}\\n\\n.sl--mx-5 {\\n    margin-left: -20px;\\n    margin-right: -20px\\n}\\n\\n.sl--my-6 {\\n    margin-bottom: -24px;\\n    margin-top: -24px\\n}\\n\\n.sl--mx-6 {\\n    margin-left: -24px;\\n    margin-right: -24px\\n}\\n\\n.sl--my-7 {\\n    margin-bottom: -28px;\\n    margin-top: -28px\\n}\\n\\n.sl--mx-7 {\\n    margin-left: -28px;\\n    margin-right: -28px\\n}\\n\\n.sl--my-8 {\\n    margin-bottom: -32px;\\n    margin-top: -32px\\n}\\n\\n.sl--mx-8 {\\n    margin-left: -32px;\\n    margin-right: -32px\\n}\\n\\n.sl--my-9 {\\n    margin-bottom: -36px;\\n    margin-top: -36px\\n}\\n\\n.sl--mx-9 {\\n    margin-left: -36px;\\n    margin-right: -36px\\n}\\n\\n.sl--my-10 {\\n    margin-bottom: -40px;\\n    margin-top: -40px\\n}\\n\\n.sl--mx-10 {\\n    margin-left: -40px;\\n    margin-right: -40px\\n}\\n\\n.sl--my-11 {\\n    margin-bottom: -44px;\\n    margin-top: -44px\\n}\\n\\n.sl--mx-11 {\\n    margin-left: -44px;\\n    margin-right: -44px\\n}\\n\\n.sl--my-12 {\\n    margin-bottom: -48px;\\n    margin-top: -48px\\n}\\n\\n.sl--mx-12 {\\n    margin-left: -48px;\\n    margin-right: -48px\\n}\\n\\n.sl--my-14 {\\n    margin-bottom: -56px;\\n    margin-top: -56px\\n}\\n\\n.sl--mx-14 {\\n    margin-left: -56px;\\n    margin-right: -56px\\n}\\n\\n.sl--my-16 {\\n    margin-bottom: -64px;\\n    margin-top: -64px\\n}\\n\\n.sl--mx-16 {\\n    margin-left: -64px;\\n    margin-right: -64px\\n}\\n\\n.sl--my-20 {\\n    margin-bottom: -80px;\\n    margin-top: -80px\\n}\\n\\n.sl--mx-20 {\\n    margin-left: -80px;\\n    margin-right: -80px\\n}\\n\\n.sl--my-24 {\\n    margin-bottom: -96px;\\n    margin-top: -96px\\n}\\n\\n.sl--mx-24 {\\n    margin-left: -96px;\\n    margin-right: -96px\\n}\\n\\n.sl--my-28 {\\n    margin-bottom: -112px;\\n    margin-top: -112px\\n}\\n\\n.sl--mx-28 {\\n    margin-left: -112px;\\n    margin-right: -112px\\n}\\n\\n.sl--my-32 {\\n    margin-bottom: -128px;\\n    margin-top: -128px\\n}\\n\\n.sl--mx-32 {\\n    margin-left: -128px;\\n    margin-right: -128px\\n}\\n\\n.sl--my-36 {\\n    margin-bottom: -144px;\\n    margin-top: -144px\\n}\\n\\n.sl--mx-36 {\\n    margin-left: -144px;\\n    margin-right: -144px\\n}\\n\\n.sl--my-40 {\\n    margin-bottom: -160px;\\n    margin-top: -160px\\n}\\n\\n.sl--mx-40 {\\n    margin-left: -160px;\\n    margin-right: -160px\\n}\\n\\n.sl--my-44 {\\n    margin-bottom: -176px;\\n    margin-top: -176px\\n}\\n\\n.sl--mx-44 {\\n    margin-left: -176px;\\n    margin-right: -176px\\n}\\n\\n.sl--my-48 {\\n    margin-bottom: -192px;\\n    margin-top: -192px\\n}\\n\\n.sl--mx-48 {\\n    margin-left: -192px;\\n    margin-right: -192px\\n}\\n\\n.sl--my-52 {\\n    margin-bottom: -208px;\\n    margin-top: -208px\\n}\\n\\n.sl--mx-52 {\\n    margin-left: -208px;\\n    margin-right: -208px\\n}\\n\\n.sl--my-56 {\\n    margin-bottom: -224px;\\n    margin-top: -224px\\n}\\n\\n.sl--mx-56 {\\n    margin-left: -224px;\\n    margin-right: -224px\\n}\\n\\n.sl--my-60 {\\n    margin-bottom: -240px;\\n    margin-top: -240px\\n}\\n\\n.sl--mx-60 {\\n    margin-left: -240px;\\n    margin-right: -240px\\n}\\n\\n.sl--my-64 {\\n    margin-bottom: -256px;\\n    margin-top: -256px\\n}\\n\\n.sl--mx-64 {\\n    margin-left: -256px;\\n    margin-right: -256px\\n}\\n\\n.sl--my-72 {\\n    margin-bottom: -288px;\\n    margin-top: -288px\\n}\\n\\n.sl--mx-72 {\\n    margin-left: -288px;\\n    margin-right: -288px\\n}\\n\\n.sl--my-80 {\\n    margin-bottom: -320px;\\n    margin-top: -320px\\n}\\n\\n.sl--mx-80 {\\n    margin-left: -320px;\\n    margin-right: -320px\\n}\\n\\n.sl--my-96 {\\n    margin-bottom: -384px;\\n    margin-top: -384px\\n}\\n\\n.sl--mx-96 {\\n    margin-left: -384px;\\n    margin-right: -384px\\n}\\n\\n.sl--my-px {\\n    margin-bottom: -1px;\\n    margin-top: -1px\\n}\\n\\n.sl--mx-px {\\n    margin-left: -1px;\\n    margin-right: -1px\\n}\\n\\n.sl--my-0\\\\.5 {\\n    margin-bottom: -2px;\\n    margin-top: -2px\\n}\\n\\n.sl--mx-0\\\\.5 {\\n    margin-left: -2px;\\n    margin-right: -2px\\n}\\n\\n.sl--my-1\\\\.5 {\\n    margin-bottom: -6px;\\n    margin-top: -6px\\n}\\n\\n.sl--mx-1\\\\.5 {\\n    margin-left: -6px;\\n    margin-right: -6px\\n}\\n\\n.sl--my-2\\\\.5 {\\n    margin-bottom: -10px;\\n    margin-top: -10px\\n}\\n\\n.sl--mx-2\\\\.5 {\\n    margin-left: -10px;\\n    margin-right: -10px\\n}\\n\\n.sl--my-3\\\\.5 {\\n    margin-bottom: -14px;\\n    margin-top: -14px\\n}\\n\\n.sl--mx-3\\\\.5 {\\n    margin-left: -14px;\\n    margin-right: -14px\\n}\\n\\n.sl--my-4\\\\.5 {\\n    margin-bottom: -18px;\\n    margin-top: -18px\\n}\\n\\n.sl--mx-4\\\\.5 {\\n    margin-left: -18px;\\n    margin-right: -18px\\n}\\n\\n.sl-mt-0 {\\n    margin-top: 0\\n}\\n\\n.sl-mr-0 {\\n    margin-right: 0\\n}\\n\\n.sl-mb-0 {\\n    margin-bottom: 0\\n}\\n\\n.sl-ml-0 {\\n    margin-left: 0\\n}\\n\\n.sl-mt-1 {\\n    margin-top: 4px\\n}\\n\\n.sl-mr-1 {\\n    margin-right: 4px\\n}\\n\\n.sl-mb-1 {\\n    margin-bottom: 4px\\n}\\n\\n.sl-ml-1 {\\n    margin-left: 4px\\n}\\n\\n.sl-mt-2 {\\n    margin-top: 8px\\n}\\n\\n.sl-mr-2 {\\n    margin-right: 8px\\n}\\n\\n.sl-mb-2 {\\n    margin-bottom: 8px\\n}\\n\\n.sl-ml-2 {\\n    margin-left: 8px\\n}\\n\\n.sl-mt-3 {\\n    margin-top: 12px\\n}\\n\\n.sl-mr-3 {\\n    margin-right: 12px\\n}\\n\\n.sl-mb-3 {\\n    margin-bottom: 12px\\n}\\n\\n.sl-ml-3 {\\n    margin-left: 12px\\n}\\n\\n.sl-mt-4 {\\n    margin-top: 16px\\n}\\n\\n.sl-mr-4 {\\n    margin-right: 16px\\n}\\n\\n.sl-mb-4 {\\n    margin-bottom: 16px\\n}\\n\\n.sl-ml-4 {\\n    margin-left: 16px\\n}\\n\\n.sl-mt-5 {\\n    margin-top: 20px\\n}\\n\\n.sl-mr-5 {\\n    margin-right: 20px\\n}\\n\\n.sl-mb-5 {\\n    margin-bottom: 20px\\n}\\n\\n.sl-ml-5 {\\n    margin-left: 20px\\n}\\n\\n.sl-mt-6 {\\n    margin-top: 24px\\n}\\n\\n.sl-mr-6 {\\n    margin-right: 24px\\n}\\n\\n.sl-mb-6 {\\n    margin-bottom: 24px\\n}\\n\\n.sl-ml-6 {\\n    margin-left: 24px\\n}\\n\\n.sl-mt-7 {\\n    margin-top: 28px\\n}\\n\\n.sl-mr-7 {\\n    margin-right: 28px\\n}\\n\\n.sl-mb-7 {\\n    margin-bottom: 28px\\n}\\n\\n.sl-ml-7 {\\n    margin-left: 28px\\n}\\n\\n.sl-mt-8 {\\n    margin-top: 32px\\n}\\n\\n.sl-mr-8 {\\n    margin-right: 32px\\n}\\n\\n.sl-mb-8 {\\n    margin-bottom: 32px\\n}\\n\\n.sl-ml-8 {\\n    margin-left: 32px\\n}\\n\\n.sl-mt-9 {\\n    margin-top: 36px\\n}\\n\\n.sl-mr-9 {\\n    margin-right: 36px\\n}\\n\\n.sl-mb-9 {\\n    margin-bottom: 36px\\n}\\n\\n.sl-ml-9 {\\n    margin-left: 36px\\n}\\n\\n.sl-mt-10 {\\n    margin-top: 40px\\n}\\n\\n.sl-mr-10 {\\n    margin-right: 40px\\n}\\n\\n.sl-mb-10 {\\n    margin-bottom: 40px\\n}\\n\\n.sl-ml-10 {\\n    margin-left: 40px\\n}\\n\\n.sl-mt-11 {\\n    margin-top: 44px\\n}\\n\\n.sl-mr-11 {\\n    margin-right: 44px\\n}\\n\\n.sl-mb-11 {\\n    margin-bottom: 44px\\n}\\n\\n.sl-ml-11 {\\n    margin-left: 44px\\n}\\n\\n.sl-mt-12 {\\n    margin-top: 48px\\n}\\n\\n.sl-mr-12 {\\n    margin-right: 48px\\n}\\n\\n.sl-mb-12 {\\n    margin-bottom: 48px\\n}\\n\\n.sl-ml-12 {\\n    margin-left: 48px\\n}\\n\\n.sl-mt-14 {\\n    margin-top: 56px\\n}\\n\\n.sl-mr-14 {\\n    margin-right: 56px\\n}\\n\\n.sl-mb-14 {\\n    margin-bottom: 56px\\n}\\n\\n.sl-ml-14 {\\n    margin-left: 56px\\n}\\n\\n.sl-mt-16 {\\n    margin-top: 64px\\n}\\n\\n.sl-mr-16 {\\n    margin-right: 64px\\n}\\n\\n.sl-mb-16 {\\n    margin-bottom: 64px\\n}\\n\\n.sl-ml-16 {\\n    margin-left: 64px\\n}\\n\\n.sl-mt-20 {\\n    margin-top: 80px\\n}\\n\\n.sl-mr-20 {\\n    margin-right: 80px\\n}\\n\\n.sl-mb-20 {\\n    margin-bottom: 80px\\n}\\n\\n.sl-ml-20 {\\n    margin-left: 80px\\n}\\n\\n.sl-mt-24 {\\n    margin-top: 96px\\n}\\n\\n.sl-mr-24 {\\n    margin-right: 96px\\n}\\n\\n.sl-mb-24 {\\n    margin-bottom: 96px\\n}\\n\\n.sl-ml-24 {\\n    margin-left: 96px\\n}\\n\\n.sl-mt-28 {\\n    margin-top: 112px\\n}\\n\\n.sl-mr-28 {\\n    margin-right: 112px\\n}\\n\\n.sl-mb-28 {\\n    margin-bottom: 112px\\n}\\n\\n.sl-ml-28 {\\n    margin-left: 112px\\n}\\n\\n.sl-mt-32 {\\n    margin-top: 128px\\n}\\n\\n.sl-mr-32 {\\n    margin-right: 128px\\n}\\n\\n.sl-mb-32 {\\n    margin-bottom: 128px\\n}\\n\\n.sl-ml-32 {\\n    margin-left: 128px\\n}\\n\\n.sl-mt-36 {\\n    margin-top: 144px\\n}\\n\\n.sl-mr-36 {\\n    margin-right: 144px\\n}\\n\\n.sl-mb-36 {\\n    margin-bottom: 144px\\n}\\n\\n.sl-ml-36 {\\n    margin-left: 144px\\n}\\n\\n.sl-mt-40 {\\n    margin-top: 160px\\n}\\n\\n.sl-mr-40 {\\n    margin-right: 160px\\n}\\n\\n.sl-mb-40 {\\n    margin-bottom: 160px\\n}\\n\\n.sl-ml-40 {\\n    margin-left: 160px\\n}\\n\\n.sl-mt-44 {\\n    margin-top: 176px\\n}\\n\\n.sl-mr-44 {\\n    margin-right: 176px\\n}\\n\\n.sl-mb-44 {\\n    margin-bottom: 176px\\n}\\n\\n.sl-ml-44 {\\n    margin-left: 176px\\n}\\n\\n.sl-mt-48 {\\n    margin-top: 192px\\n}\\n\\n.sl-mr-48 {\\n    margin-right: 192px\\n}\\n\\n.sl-mb-48 {\\n    margin-bottom: 192px\\n}\\n\\n.sl-ml-48 {\\n    margin-left: 192px\\n}\\n\\n.sl-mt-52 {\\n    margin-top: 208px\\n}\\n\\n.sl-mr-52 {\\n    margin-right: 208px\\n}\\n\\n.sl-mb-52 {\\n    margin-bottom: 208px\\n}\\n\\n.sl-ml-52 {\\n    margin-left: 208px\\n}\\n\\n.sl-mt-56 {\\n    margin-top: 224px\\n}\\n\\n.sl-mr-56 {\\n    margin-right: 224px\\n}\\n\\n.sl-mb-56 {\\n    margin-bottom: 224px\\n}\\n\\n.sl-ml-56 {\\n    margin-left: 224px\\n}\\n\\n.sl-mt-60 {\\n    margin-top: 240px\\n}\\n\\n.sl-mr-60 {\\n    margin-right: 240px\\n}\\n\\n.sl-mb-60 {\\n    margin-bottom: 240px\\n}\\n\\n.sl-ml-60 {\\n    margin-left: 240px\\n}\\n\\n.sl-mt-64 {\\n    margin-top: 256px\\n}\\n\\n.sl-mr-64 {\\n    margin-right: 256px\\n}\\n\\n.sl-mb-64 {\\n    margin-bottom: 256px\\n}\\n\\n.sl-ml-64 {\\n    margin-left: 256px\\n}\\n\\n.sl-mt-72 {\\n    margin-top: 288px\\n}\\n\\n.sl-mr-72 {\\n    margin-right: 288px\\n}\\n\\n.sl-mb-72 {\\n    margin-bottom: 288px\\n}\\n\\n.sl-ml-72 {\\n    margin-left: 288px\\n}\\n\\n.sl-mt-80 {\\n    margin-top: 320px\\n}\\n\\n.sl-mr-80 {\\n    margin-right: 320px\\n}\\n\\n.sl-mb-80 {\\n    margin-bottom: 320px\\n}\\n\\n.sl-ml-80 {\\n    margin-left: 320px\\n}\\n\\n.sl-mt-96 {\\n    margin-top: 384px\\n}\\n\\n.sl-mr-96 {\\n    margin-right: 384px\\n}\\n\\n.sl-mb-96 {\\n    margin-bottom: 384px\\n}\\n\\n.sl-ml-96 {\\n    margin-left: 384px\\n}\\n\\n.sl-mt-auto {\\n    margin-top: auto\\n}\\n\\n.sl-mr-auto {\\n    margin-right: auto\\n}\\n\\n.sl-mb-auto {\\n    margin-bottom: auto\\n}\\n\\n.sl-ml-auto {\\n    margin-left: auto\\n}\\n\\n.sl-mt-px {\\n    margin-top: 1px\\n}\\n\\n.sl-mr-px {\\n    margin-right: 1px\\n}\\n\\n.sl-mb-px {\\n    margin-bottom: 1px\\n}\\n\\n.sl-ml-px {\\n    margin-left: 1px\\n}\\n\\n.sl-mt-0\\\\.5 {\\n    margin-top: 2px\\n}\\n\\n.sl-mr-0\\\\.5 {\\n    margin-right: 2px\\n}\\n\\n.sl-mb-0\\\\.5 {\\n    margin-bottom: 2px\\n}\\n\\n.sl-ml-0\\\\.5 {\\n    margin-left: 2px\\n}\\n\\n.sl-mt-1\\\\.5 {\\n    margin-top: 6px\\n}\\n\\n.sl-mr-1\\\\.5 {\\n    margin-right: 6px\\n}\\n\\n.sl-mb-1\\\\.5 {\\n    margin-bottom: 6px\\n}\\n\\n.sl-ml-1\\\\.5 {\\n    margin-left: 6px\\n}\\n\\n.sl-mt-2\\\\.5 {\\n    margin-top: 10px\\n}\\n\\n.sl-mr-2\\\\.5 {\\n    margin-right: 10px\\n}\\n\\n.sl-mb-2\\\\.5 {\\n    margin-bottom: 10px\\n}\\n\\n.sl-ml-2\\\\.5 {\\n    margin-left: 10px\\n}\\n\\n.sl-mt-3\\\\.5 {\\n    margin-top: 14px\\n}\\n\\n.sl-mr-3\\\\.5 {\\n    margin-right: 14px\\n}\\n\\n.sl-mb-3\\\\.5 {\\n    margin-bottom: 14px\\n}\\n\\n.sl-ml-3\\\\.5 {\\n    margin-left: 14px\\n}\\n\\n.sl-mt-4\\\\.5 {\\n    margin-top: 18px\\n}\\n\\n.sl-mr-4\\\\.5 {\\n    margin-right: 18px\\n}\\n\\n.sl-mb-4\\\\.5 {\\n    margin-bottom: 18px\\n}\\n\\n.sl-ml-4\\\\.5 {\\n    margin-left: 18px\\n}\\n\\n.sl--mt-0 {\\n    margin-top: 0\\n}\\n\\n.sl--mr-0 {\\n    margin-right: 0\\n}\\n\\n.sl--mb-0 {\\n    margin-bottom: 0\\n}\\n\\n.sl--ml-0 {\\n    margin-left: 0\\n}\\n\\n.sl--mt-1 {\\n    margin-top: -4px\\n}\\n\\n.sl--mr-1 {\\n    margin-right: -4px\\n}\\n\\n.sl--mb-1 {\\n    margin-bottom: -4px\\n}\\n\\n.sl--ml-1 {\\n    margin-left: -4px\\n}\\n\\n.sl--mt-2 {\\n    margin-top: -8px\\n}\\n\\n.sl--mr-2 {\\n    margin-right: -8px\\n}\\n\\n.sl--mb-2 {\\n    margin-bottom: -8px\\n}\\n\\n.sl--ml-2 {\\n    margin-left: -8px\\n}\\n\\n.sl--mt-3 {\\n    margin-top: -12px\\n}\\n\\n.sl--mr-3 {\\n    margin-right: -12px\\n}\\n\\n.sl--mb-3 {\\n    margin-bottom: -12px\\n}\\n\\n.sl--ml-3 {\\n    margin-left: -12px\\n}\\n\\n.sl--mt-4 {\\n    margin-top: -16px\\n}\\n\\n.sl--mr-4 {\\n    margin-right: -16px\\n}\\n\\n.sl--mb-4 {\\n    margin-bottom: -16px\\n}\\n\\n.sl--ml-4 {\\n    margin-left: -16px\\n}\\n\\n.sl--mt-5 {\\n    margin-top: -20px\\n}\\n\\n.sl--mr-5 {\\n    margin-right: -20px\\n}\\n\\n.sl--mb-5 {\\n    margin-bottom: -20px\\n}\\n\\n.sl--ml-5 {\\n    margin-left: -20px\\n}\\n\\n.sl--mt-6 {\\n    margin-top: -24px\\n}\\n\\n.sl--mr-6 {\\n    margin-right: -24px\\n}\\n\\n.sl--mb-6 {\\n    margin-bottom: -24px\\n}\\n\\n.sl--ml-6 {\\n    margin-left: -24px\\n}\\n\\n.sl--mt-7 {\\n    margin-top: -28px\\n}\\n\\n.sl--mr-7 {\\n    margin-right: -28px\\n}\\n\\n.sl--mb-7 {\\n    margin-bottom: -28px\\n}\\n\\n.sl--ml-7 {\\n    margin-left: -28px\\n}\\n\\n.sl--mt-8 {\\n    margin-top: -32px\\n}\\n\\n.sl--mr-8 {\\n    margin-right: -32px\\n}\\n\\n.sl--mb-8 {\\n    margin-bottom: -32px\\n}\\n\\n.sl--ml-8 {\\n    margin-left: -32px\\n}\\n\\n.sl--mt-9 {\\n    margin-top: -36px\\n}\\n\\n.sl--mr-9 {\\n    margin-right: -36px\\n}\\n\\n.sl--mb-9 {\\n    margin-bottom: -36px\\n}\\n\\n.sl--ml-9 {\\n    margin-left: -36px\\n}\\n\\n.sl--mt-10 {\\n    margin-top: -40px\\n}\\n\\n.sl--mr-10 {\\n    margin-right: -40px\\n}\\n\\n.sl--mb-10 {\\n    margin-bottom: -40px\\n}\\n\\n.sl--ml-10 {\\n    margin-left: -40px\\n}\\n\\n.sl--mt-11 {\\n    margin-top: -44px\\n}\\n\\n.sl--mr-11 {\\n    margin-right: -44px\\n}\\n\\n.sl--mb-11 {\\n    margin-bottom: -44px\\n}\\n\\n.sl--ml-11 {\\n    margin-left: -44px\\n}\\n\\n.sl--mt-12 {\\n    margin-top: -48px\\n}\\n\\n.sl--mr-12 {\\n    margin-right: -48px\\n}\\n\\n.sl--mb-12 {\\n    margin-bottom: -48px\\n}\\n\\n.sl--ml-12 {\\n    margin-left: -48px\\n}\\n\\n.sl--mt-14 {\\n    margin-top: -56px\\n}\\n\\n.sl--mr-14 {\\n    margin-right: -56px\\n}\\n\\n.sl--mb-14 {\\n    margin-bottom: -56px\\n}\\n\\n.sl--ml-14 {\\n    margin-left: -56px\\n}\\n\\n.sl--mt-16 {\\n    margin-top: -64px\\n}\\n\\n.sl--mr-16 {\\n    margin-right: -64px\\n}\\n\\n.sl--mb-16 {\\n    margin-bottom: -64px\\n}\\n\\n.sl--ml-16 {\\n    margin-left: -64px\\n}\\n\\n.sl--mt-20 {\\n    margin-top: -80px\\n}\\n\\n.sl--mr-20 {\\n    margin-right: -80px\\n}\\n\\n.sl--mb-20 {\\n    margin-bottom: -80px\\n}\\n\\n.sl--ml-20 {\\n    margin-left: -80px\\n}\\n\\n.sl--mt-24 {\\n    margin-top: -96px\\n}\\n\\n.sl--mr-24 {\\n    margin-right: -96px\\n}\\n\\n.sl--mb-24 {\\n    margin-bottom: -96px\\n}\\n\\n.sl--ml-24 {\\n    margin-left: -96px\\n}\\n\\n.sl--mt-28 {\\n    margin-top: -112px\\n}\\n\\n.sl--mr-28 {\\n    margin-right: -112px\\n}\\n\\n.sl--mb-28 {\\n    margin-bottom: -112px\\n}\\n\\n.sl--ml-28 {\\n    margin-left: -112px\\n}\\n\\n.sl--mt-32 {\\n    margin-top: -128px\\n}\\n\\n.sl--mr-32 {\\n    margin-right: -128px\\n}\\n\\n.sl--mb-32 {\\n    margin-bottom: -128px\\n}\\n\\n.sl--ml-32 {\\n    margin-left: -128px\\n}\\n\\n.sl--mt-36 {\\n    margin-top: -144px\\n}\\n\\n.sl--mr-36 {\\n    margin-right: -144px\\n}\\n\\n.sl--mb-36 {\\n    margin-bottom: -144px\\n}\\n\\n.sl--ml-36 {\\n    margin-left: -144px\\n}\\n\\n.sl--mt-40 {\\n    margin-top: -160px\\n}\\n\\n.sl--mr-40 {\\n    margin-right: -160px\\n}\\n\\n.sl--mb-40 {\\n    margin-bottom: -160px\\n}\\n\\n.sl--ml-40 {\\n    margin-left: -160px\\n}\\n\\n.sl--mt-44 {\\n    margin-top: -176px\\n}\\n\\n.sl--mr-44 {\\n    margin-right: -176px\\n}\\n\\n.sl--mb-44 {\\n    margin-bottom: -176px\\n}\\n\\n.sl--ml-44 {\\n    margin-left: -176px\\n}\\n\\n.sl--mt-48 {\\n    margin-top: -192px\\n}\\n\\n.sl--mr-48 {\\n    margin-right: -192px\\n}\\n\\n.sl--mb-48 {\\n    margin-bottom: -192px\\n}\\n\\n.sl--ml-48 {\\n    margin-left: -192px\\n}\\n\\n.sl--mt-52 {\\n    margin-top: -208px\\n}\\n\\n.sl--mr-52 {\\n    margin-right: -208px\\n}\\n\\n.sl--mb-52 {\\n    margin-bottom: -208px\\n}\\n\\n.sl--ml-52 {\\n    margin-left: -208px\\n}\\n\\n.sl--mt-56 {\\n    margin-top: -224px\\n}\\n\\n.sl--mr-56 {\\n    margin-right: -224px\\n}\\n\\n.sl--mb-56 {\\n    margin-bottom: -224px\\n}\\n\\n.sl--ml-56 {\\n    margin-left: -224px\\n}\\n\\n.sl--mt-60 {\\n    margin-top: -240px\\n}\\n\\n.sl--mr-60 {\\n    margin-right: -240px\\n}\\n\\n.sl--mb-60 {\\n    margin-bottom: -240px\\n}\\n\\n.sl--ml-60 {\\n    margin-left: -240px\\n}\\n\\n.sl--mt-64 {\\n    margin-top: -256px\\n}\\n\\n.sl--mr-64 {\\n    margin-right: -256px\\n}\\n\\n.sl--mb-64 {\\n    margin-bottom: -256px\\n}\\n\\n.sl--ml-64 {\\n    margin-left: -256px\\n}\\n\\n.sl--mt-72 {\\n    margin-top: -288px\\n}\\n\\n.sl--mr-72 {\\n    margin-right: -288px\\n}\\n\\n.sl--mb-72 {\\n    margin-bottom: -288px\\n}\\n\\n.sl--ml-72 {\\n    margin-left: -288px\\n}\\n\\n.sl--mt-80 {\\n    margin-top: -320px\\n}\\n\\n.sl--mr-80 {\\n    margin-right: -320px\\n}\\n\\n.sl--mb-80 {\\n    margin-bottom: -320px\\n}\\n\\n.sl--ml-80 {\\n    margin-left: -320px\\n}\\n\\n.sl--mt-96 {\\n    margin-top: -384px\\n}\\n\\n.sl--mr-96 {\\n    margin-right: -384px\\n}\\n\\n.sl--mb-96 {\\n    margin-bottom: -384px\\n}\\n\\n.sl--ml-96 {\\n    margin-left: -384px\\n}\\n\\n.sl--mt-px {\\n    margin-top: -1px\\n}\\n\\n.sl--mr-px {\\n    margin-right: -1px\\n}\\n\\n.sl--mb-px {\\n    margin-bottom: -1px\\n}\\n\\n.sl--ml-px {\\n    margin-left: -1px\\n}\\n\\n.sl--mt-0\\\\.5 {\\n    margin-top: -2px\\n}\\n\\n.sl--mr-0\\\\.5 {\\n    margin-right: -2px\\n}\\n\\n.sl--mb-0\\\\.5 {\\n    margin-bottom: -2px\\n}\\n\\n.sl--ml-0\\\\.5 {\\n    margin-left: -2px\\n}\\n\\n.sl--mt-1\\\\.5 {\\n    margin-top: -6px\\n}\\n\\n.sl--mr-1\\\\.5 {\\n    margin-right: -6px\\n}\\n\\n.sl--mb-1\\\\.5 {\\n    margin-bottom: -6px\\n}\\n\\n.sl--ml-1\\\\.5 {\\n    margin-left: -6px\\n}\\n\\n.sl--mt-2\\\\.5 {\\n    margin-top: -10px\\n}\\n\\n.sl--mr-2\\\\.5 {\\n    margin-right: -10px\\n}\\n\\n.sl--mb-2\\\\.5 {\\n    margin-bottom: -10px\\n}\\n\\n.sl--ml-2\\\\.5 {\\n    margin-left: -10px\\n}\\n\\n.sl--mt-3\\\\.5 {\\n    margin-top: -14px\\n}\\n\\n.sl--mr-3\\\\.5 {\\n    margin-right: -14px\\n}\\n\\n.sl--mb-3\\\\.5 {\\n    margin-bottom: -14px\\n}\\n\\n.sl--ml-3\\\\.5 {\\n    margin-left: -14px\\n}\\n\\n.sl--mt-4\\\\.5 {\\n    margin-top: -18px\\n}\\n\\n.sl--mr-4\\\\.5 {\\n    margin-right: -18px\\n}\\n\\n.sl--mb-4\\\\.5 {\\n    margin-bottom: -18px\\n}\\n\\n.sl--ml-4\\\\.5 {\\n    margin-left: -18px\\n}\\n\\n.sl-max-h-full {\\n    max-height: 100%\\n}\\n\\n.sl-max-h-screen {\\n    max-height: 100vh\\n}\\n\\n.sl-max-w-none {\\n    max-width: none\\n}\\n\\n.sl-max-w-full {\\n    max-width: 100%\\n}\\n\\n.sl-max-w-min {\\n    max-width: -moz-min-content;\\n    max-width: min-content\\n}\\n\\n.sl-max-w-max {\\n    max-width: -moz-max-content;\\n    max-width: max-content\\n}\\n\\n.sl-max-w-prose {\\n    max-width: 65ch\\n}\\n\\n.sl-min-h-full {\\n    min-height: 100%\\n}\\n\\n.sl-min-h-screen {\\n    min-height: 100vh\\n}\\n\\n.sl-min-w-full {\\n    min-width: 100%\\n}\\n\\n.sl-min-w-min {\\n    min-width: -moz-min-content;\\n    min-width: min-content\\n}\\n\\n.sl-min-w-max {\\n    min-width: -moz-max-content;\\n    min-width: max-content\\n}\\n\\n.sl-object-contain {\\n    object-fit: contain\\n}\\n\\n.sl-object-cover {\\n    object-fit: cover\\n}\\n\\n.sl-object-fill {\\n    object-fit: fill\\n}\\n\\n.sl-object-none {\\n    object-fit: none\\n}\\n\\n.sl-object-scale-down {\\n    object-fit: scale-down\\n}\\n\\n.sl-object-bottom {\\n    object-position: bottom\\n}\\n\\n.sl-object-center {\\n    object-position: center\\n}\\n\\n.sl-object-left {\\n    object-position: left\\n}\\n\\n.sl-object-left-bottom {\\n    object-position: left bottom\\n}\\n\\n.sl-object-left-top {\\n    object-position: left top\\n}\\n\\n.sl-object-right {\\n    object-position: right\\n}\\n\\n.sl-object-right-bottom {\\n    object-position: right bottom\\n}\\n\\n.sl-object-right-top {\\n    object-position: right top\\n}\\n\\n.sl-object-top {\\n    object-position: top\\n}\\n\\n.sl-opacity-0 {\\n    opacity: 0\\n}\\n\\n.sl-opacity-5 {\\n    opacity: .05\\n}\\n\\n.sl-opacity-10 {\\n    opacity: .1\\n}\\n\\n.sl-opacity-20 {\\n    opacity: .2\\n}\\n\\n.sl-opacity-30 {\\n    opacity: .3\\n}\\n\\n.sl-opacity-40 {\\n    opacity: .4\\n}\\n\\n.sl-opacity-50 {\\n    opacity: .5\\n}\\n\\n.sl-opacity-60 {\\n    opacity: .6\\n}\\n\\n.sl-opacity-70 {\\n    opacity: .7\\n}\\n\\n.sl-opacity-90 {\\n    opacity: .9\\n}\\n\\n.sl-opacity-100 {\\n    opacity: 1\\n}\\n\\n.hover\\\\:sl-opacity-0:hover {\\n    opacity: 0\\n}\\n\\n.hover\\\\:sl-opacity-5:hover {\\n    opacity: .05\\n}\\n\\n.hover\\\\:sl-opacity-10:hover {\\n    opacity: .1\\n}\\n\\n.hover\\\\:sl-opacity-20:hover {\\n    opacity: .2\\n}\\n\\n.hover\\\\:sl-opacity-30:hover {\\n    opacity: .3\\n}\\n\\n.hover\\\\:sl-opacity-40:hover {\\n    opacity: .4\\n}\\n\\n.hover\\\\:sl-opacity-50:hover {\\n    opacity: .5\\n}\\n\\n.hover\\\\:sl-opacity-60:hover {\\n    opacity: .6\\n}\\n\\n.hover\\\\:sl-opacity-70:hover {\\n    opacity: .7\\n}\\n\\n.hover\\\\:sl-opacity-90:hover {\\n    opacity: .9\\n}\\n\\n.hover\\\\:sl-opacity-100:hover {\\n    opacity: 1\\n}\\n\\n.focus\\\\:sl-opacity-0:focus {\\n    opacity: 0\\n}\\n\\n.focus\\\\:sl-opacity-5:focus {\\n    opacity: .05\\n}\\n\\n.focus\\\\:sl-opacity-10:focus {\\n    opacity: .1\\n}\\n\\n.focus\\\\:sl-opacity-20:focus {\\n    opacity: .2\\n}\\n\\n.focus\\\\:sl-opacity-30:focus {\\n    opacity: .3\\n}\\n\\n.focus\\\\:sl-opacity-40:focus {\\n    opacity: .4\\n}\\n\\n.focus\\\\:sl-opacity-50:focus {\\n    opacity: .5\\n}\\n\\n.focus\\\\:sl-opacity-60:focus {\\n    opacity: .6\\n}\\n\\n.focus\\\\:sl-opacity-70:focus {\\n    opacity: .7\\n}\\n\\n.focus\\\\:sl-opacity-90:focus {\\n    opacity: .9\\n}\\n\\n.focus\\\\:sl-opacity-100:focus {\\n    opacity: 1\\n}\\n\\n.active\\\\:sl-opacity-0:active {\\n    opacity: 0\\n}\\n\\n.active\\\\:sl-opacity-5:active {\\n    opacity: .05\\n}\\n\\n.active\\\\:sl-opacity-10:active {\\n    opacity: .1\\n}\\n\\n.active\\\\:sl-opacity-20:active {\\n    opacity: .2\\n}\\n\\n.active\\\\:sl-opacity-30:active {\\n    opacity: .3\\n}\\n\\n.active\\\\:sl-opacity-40:active {\\n    opacity: .4\\n}\\n\\n.active\\\\:sl-opacity-50:active {\\n    opacity: .5\\n}\\n\\n.active\\\\:sl-opacity-60:active {\\n    opacity: .6\\n}\\n\\n.active\\\\:sl-opacity-70:active {\\n    opacity: .7\\n}\\n\\n.active\\\\:sl-opacity-90:active {\\n    opacity: .9\\n}\\n\\n.active\\\\:sl-opacity-100:active {\\n    opacity: 1\\n}\\n\\n.disabled\\\\:sl-opacity-0:disabled {\\n    opacity: 0\\n}\\n\\n.disabled\\\\:sl-opacity-5:disabled {\\n    opacity: .05\\n}\\n\\n.disabled\\\\:sl-opacity-10:disabled {\\n    opacity: .1\\n}\\n\\n.disabled\\\\:sl-opacity-20:disabled {\\n    opacity: .2\\n}\\n\\n.disabled\\\\:sl-opacity-30:disabled {\\n    opacity: .3\\n}\\n\\n.disabled\\\\:sl-opacity-40:disabled {\\n    opacity: .4\\n}\\n\\n.disabled\\\\:sl-opacity-50:disabled {\\n    opacity: .5\\n}\\n\\n.disabled\\\\:sl-opacity-60:disabled {\\n    opacity: .6\\n}\\n\\n.disabled\\\\:sl-opacity-70:disabled {\\n    opacity: .7\\n}\\n\\n.disabled\\\\:sl-opacity-90:disabled {\\n    opacity: .9\\n}\\n\\n.disabled\\\\:sl-opacity-100:disabled {\\n    opacity: 1\\n}\\n\\n.sl-outline-none {\\n    outline: 2px solid transparent;\\n    outline-offset: 2px\\n}\\n\\n.sl-overflow-auto {\\n    overflow: auto\\n}\\n\\n.sl-overflow-hidden {\\n    overflow: hidden\\n}\\n\\n.sl-overflow-visible {\\n    overflow: visible\\n}\\n\\n.sl-overflow-scroll {\\n    overflow: scroll\\n}\\n\\n.sl-overflow-x-auto {\\n    overflow-x: auto\\n}\\n\\n.sl-overflow-y-auto {\\n    overflow-y: auto\\n}\\n\\n.sl-overflow-x-hidden {\\n    overflow-x: hidden\\n}\\n\\n.sl-overflow-y-hidden {\\n    overflow-y: hidden\\n}\\n\\n.sl-overflow-x-visible {\\n    overflow-x: visible\\n}\\n\\n.sl-overflow-y-visible {\\n    overflow-y: visible\\n}\\n\\n.sl-overflow-x-scroll {\\n    overflow-x: scroll\\n}\\n\\n.sl-overflow-y-scroll {\\n    overflow-y: scroll\\n}\\n\\n.sl-overscroll-auto {\\n    overscroll-behavior: auto\\n}\\n\\n.sl-overscroll-contain {\\n    overscroll-behavior: contain\\n}\\n\\n.sl-overscroll-none {\\n    overscroll-behavior: none\\n}\\n\\n.sl-overscroll-y-auto {\\n    overscroll-behavior-y: auto\\n}\\n\\n.sl-overscroll-y-contain {\\n    overscroll-behavior-y: contain\\n}\\n\\n.sl-overscroll-y-none {\\n    overscroll-behavior-y: none\\n}\\n\\n.sl-overscroll-x-auto {\\n    overscroll-behavior-x: auto\\n}\\n\\n.sl-overscroll-x-contain {\\n    overscroll-behavior-x: contain\\n}\\n\\n.sl-overscroll-x-none {\\n    overscroll-behavior-x: none\\n}\\n\\n.sl-p-0 {\\n    padding: 0\\n}\\n\\n.sl-p-1 {\\n    padding: 4px\\n}\\n\\n.sl-p-2 {\\n    padding: 8px\\n}\\n\\n.sl-p-3 {\\n    padding: 12px\\n}\\n\\n.sl-p-4 {\\n    padding: 16px\\n}\\n\\n.sl-p-5 {\\n    padding: 20px\\n}\\n\\n.sl-p-6 {\\n    padding: 24px\\n}\\n\\n.sl-p-7 {\\n    padding: 28px\\n}\\n\\n.sl-p-8 {\\n    padding: 32px\\n}\\n\\n.sl-p-9 {\\n    padding: 36px\\n}\\n\\n.sl-p-10 {\\n    padding: 40px\\n}\\n\\n.sl-p-11 {\\n    padding: 44px\\n}\\n\\n.sl-p-12 {\\n    padding: 48px\\n}\\n\\n.sl-p-14 {\\n    padding: 56px\\n}\\n\\n.sl-p-16 {\\n    padding: 64px\\n}\\n\\n.sl-p-20 {\\n    padding: 80px\\n}\\n\\n.sl-p-24 {\\n    padding: 96px\\n}\\n\\n.sl-p-28 {\\n    padding: 112px\\n}\\n\\n.sl-p-32 {\\n    padding: 128px\\n}\\n\\n.sl-p-36 {\\n    padding: 144px\\n}\\n\\n.sl-p-40 {\\n    padding: 160px\\n}\\n\\n.sl-p-44 {\\n    padding: 176px\\n}\\n\\n.sl-p-48 {\\n    padding: 192px\\n}\\n\\n.sl-p-52 {\\n    padding: 208px\\n}\\n\\n.sl-p-56 {\\n    padding: 224px\\n}\\n\\n.sl-p-60 {\\n    padding: 240px\\n}\\n\\n.sl-p-64 {\\n    padding: 256px\\n}\\n\\n.sl-p-72 {\\n    padding: 288px\\n}\\n\\n.sl-p-80 {\\n    padding: 320px\\n}\\n\\n.sl-p-96 {\\n    padding: 384px\\n}\\n\\n.sl-p-px {\\n    padding: 1px\\n}\\n\\n.sl-p-0\\\\.5 {\\n    padding: 2px\\n}\\n\\n.sl-p-1\\\\.5 {\\n    padding: 6px\\n}\\n\\n.sl-p-2\\\\.5 {\\n    padding: 10px\\n}\\n\\n.sl-p-3\\\\.5 {\\n    padding: 14px\\n}\\n\\n.sl-p-4\\\\.5 {\\n    padding: 18px\\n}\\n\\n.sl-py-0 {\\n    padding-bottom: 0;\\n    padding-top: 0\\n}\\n\\n.sl-px-0 {\\n    padding-left: 0;\\n    padding-right: 0\\n}\\n\\n.sl-py-1 {\\n    padding-bottom: 4px;\\n    padding-top: 4px\\n}\\n\\n.sl-px-1 {\\n    padding-left: 4px;\\n    padding-right: 4px\\n}\\n\\n.sl-py-2 {\\n    padding-bottom: 8px;\\n    padding-top: 8px\\n}\\n\\n.sl-px-2 {\\n    padding-left: 8px;\\n    padding-right: 8px\\n}\\n\\n.sl-py-3 {\\n    padding-bottom: 12px;\\n    padding-top: 12px\\n}\\n\\n.sl-px-3 {\\n    padding-left: 12px;\\n    padding-right: 12px\\n}\\n\\n.sl-py-4 {\\n    padding-bottom: 16px;\\n    padding-top: 16px\\n}\\n\\n.sl-px-4 {\\n    padding-left: 16px;\\n    padding-right: 16px\\n}\\n\\n.sl-py-5 {\\n    padding-bottom: 20px;\\n    padding-top: 20px\\n}\\n\\n.sl-px-5 {\\n    padding-left: 20px;\\n    padding-right: 20px\\n}\\n\\n.sl-py-6 {\\n    padding-bottom: 24px;\\n    padding-top: 24px\\n}\\n\\n.sl-px-6 {\\n    padding-left: 24px;\\n    padding-right: 24px\\n}\\n\\n.sl-py-7 {\\n    padding-bottom: 28px;\\n    padding-top: 28px\\n}\\n\\n.sl-px-7 {\\n    padding-left: 28px;\\n    padding-right: 28px\\n}\\n\\n.sl-py-8 {\\n    padding-bottom: 32px;\\n    padding-top: 32px\\n}\\n\\n.sl-px-8 {\\n    padding-left: 32px;\\n    padding-right: 32px\\n}\\n\\n.sl-py-9 {\\n    padding-bottom: 36px;\\n    padding-top: 36px\\n}\\n\\n.sl-px-9 {\\n    padding-left: 36px;\\n    padding-right: 36px\\n}\\n\\n.sl-py-10 {\\n    padding-bottom: 40px;\\n    padding-top: 40px\\n}\\n\\n.sl-px-10 {\\n    padding-left: 40px;\\n    padding-right: 40px\\n}\\n\\n.sl-py-11 {\\n    padding-bottom: 44px;\\n    padding-top: 44px\\n}\\n\\n.sl-px-11 {\\n    padding-left: 44px;\\n    padding-right: 44px\\n}\\n\\n.sl-py-12 {\\n    padding-bottom: 48px;\\n    padding-top: 48px\\n}\\n\\n.sl-px-12 {\\n    padding-left: 48px;\\n    padding-right: 48px\\n}\\n\\n.sl-py-14 {\\n    padding-bottom: 56px;\\n    padding-top: 56px\\n}\\n\\n.sl-px-14 {\\n    padding-left: 56px;\\n    padding-right: 56px\\n}\\n\\n.sl-py-16 {\\n    padding-bottom: 64px;\\n    padding-top: 64px\\n}\\n\\n.sl-px-16 {\\n    padding-left: 64px;\\n    padding-right: 64px\\n}\\n\\n.sl-py-20 {\\n    padding-bottom: 80px;\\n    padding-top: 80px\\n}\\n\\n.sl-px-20 {\\n    padding-left: 80px;\\n    padding-right: 80px\\n}\\n\\n.sl-py-24 {\\n    padding-bottom: 96px;\\n    padding-top: 96px\\n}\\n\\n.sl-px-24 {\\n    padding-left: 96px;\\n    padding-right: 96px\\n}\\n\\n.sl-py-28 {\\n    padding-bottom: 112px;\\n    padding-top: 112px\\n}\\n\\n.sl-px-28 {\\n    padding-left: 112px;\\n    padding-right: 112px\\n}\\n\\n.sl-py-32 {\\n    padding-bottom: 128px;\\n    padding-top: 128px\\n}\\n\\n.sl-px-32 {\\n    padding-left: 128px;\\n    padding-right: 128px\\n}\\n\\n.sl-py-36 {\\n    padding-bottom: 144px;\\n    padding-top: 144px\\n}\\n\\n.sl-px-36 {\\n    padding-left: 144px;\\n    padding-right: 144px\\n}\\n\\n.sl-py-40 {\\n    padding-bottom: 160px;\\n    padding-top: 160px\\n}\\n\\n.sl-px-40 {\\n    padding-left: 160px;\\n    padding-right: 160px\\n}\\n\\n.sl-py-44 {\\n    padding-bottom: 176px;\\n    padding-top: 176px\\n}\\n\\n.sl-px-44 {\\n    padding-left: 176px;\\n    padding-right: 176px\\n}\\n\\n.sl-py-48 {\\n    padding-bottom: 192px;\\n    padding-top: 192px\\n}\\n\\n.sl-px-48 {\\n    padding-left: 192px;\\n    padding-right: 192px\\n}\\n\\n.sl-py-52 {\\n    padding-bottom: 208px;\\n    padding-top: 208px\\n}\\n\\n.sl-px-52 {\\n    padding-left: 208px;\\n    padding-right: 208px\\n}\\n\\n.sl-py-56 {\\n    padding-bottom: 224px;\\n    padding-top: 224px\\n}\\n\\n.sl-px-56 {\\n    padding-left: 224px;\\n    padding-right: 224px\\n}\\n\\n.sl-py-60 {\\n    padding-bottom: 240px;\\n    padding-top: 240px\\n}\\n\\n.sl-px-60 {\\n    padding-left: 240px;\\n    padding-right: 240px\\n}\\n\\n.sl-py-64 {\\n    padding-bottom: 256px;\\n    padding-top: 256px\\n}\\n\\n.sl-px-64 {\\n    padding-left: 256px;\\n    padding-right: 256px\\n}\\n\\n.sl-py-72 {\\n    padding-bottom: 288px;\\n    padding-top: 288px\\n}\\n\\n.sl-px-72 {\\n    padding-left: 288px;\\n    padding-right: 288px\\n}\\n\\n.sl-py-80 {\\n    padding-bottom: 320px;\\n    padding-top: 320px\\n}\\n\\n.sl-px-80 {\\n    padding-left: 320px;\\n    padding-right: 320px\\n}\\n\\n.sl-py-96 {\\n    padding-bottom: 384px;\\n    padding-top: 384px\\n}\\n\\n.sl-px-96 {\\n    padding-left: 384px;\\n    padding-right: 384px\\n}\\n\\n.sl-py-px {\\n    padding-bottom: 1px;\\n    padding-top: 1px\\n}\\n\\n.sl-px-px {\\n    padding-left: 1px;\\n    padding-right: 1px\\n}\\n\\n.sl-py-0\\\\.5 {\\n    padding-bottom: 2px;\\n    padding-top: 2px\\n}\\n\\n.sl-px-0\\\\.5 {\\n    padding-left: 2px;\\n    padding-right: 2px\\n}\\n\\n.sl-py-1\\\\.5 {\\n    padding-bottom: 6px;\\n    padding-top: 6px\\n}\\n\\n.sl-px-1\\\\.5 {\\n    padding-left: 6px;\\n    padding-right: 6px\\n}\\n\\n.sl-py-2\\\\.5 {\\n    padding-bottom: 10px;\\n    padding-top: 10px\\n}\\n\\n.sl-px-2\\\\.5 {\\n    padding-left: 10px;\\n    padding-right: 10px\\n}\\n\\n.sl-py-3\\\\.5 {\\n    padding-bottom: 14px;\\n    padding-top: 14px\\n}\\n\\n.sl-px-3\\\\.5 {\\n    padding-left: 14px;\\n    padding-right: 14px\\n}\\n\\n.sl-py-4\\\\.5 {\\n    padding-bottom: 18px;\\n    padding-top: 18px\\n}\\n\\n.sl-px-4\\\\.5 {\\n    padding-left: 18px;\\n    padding-right: 18px\\n}\\n\\n.sl-pt-0 {\\n    padding-top: 0\\n}\\n\\n.sl-pr-0 {\\n    padding-right: 0\\n}\\n\\n.sl-pb-0 {\\n    padding-bottom: 0\\n}\\n\\n.sl-pl-0 {\\n    padding-left: 0\\n}\\n\\n.sl-pt-1 {\\n    padding-top: 4px\\n}\\n\\n.sl-pr-1 {\\n    padding-right: 4px\\n}\\n\\n.sl-pb-1 {\\n    padding-bottom: 4px\\n}\\n\\n.sl-pl-1 {\\n    padding-left: 4px\\n}\\n\\n.sl-pt-2 {\\n    padding-top: 8px\\n}\\n\\n.sl-pr-2 {\\n    padding-right: 8px\\n}\\n\\n.sl-pb-2 {\\n    padding-bottom: 8px\\n}\\n\\n.sl-pl-2 {\\n    padding-left: 8px\\n}\\n\\n.sl-pt-3 {\\n    padding-top: 12px\\n}\\n\\n.sl-pr-3 {\\n    padding-right: 12px\\n}\\n\\n.sl-pb-3 {\\n    padding-bottom: 12px\\n}\\n\\n.sl-pl-3 {\\n    padding-left: 12px\\n}\\n\\n.sl-pt-4 {\\n    padding-top: 16px\\n}\\n\\n.sl-pr-4 {\\n    padding-right: 16px\\n}\\n\\n.sl-pb-4 {\\n    padding-bottom: 16px\\n}\\n\\n.sl-pl-4 {\\n    padding-left: 16px\\n}\\n\\n.sl-pt-5 {\\n    padding-top: 20px\\n}\\n\\n.sl-pr-5 {\\n    padding-right: 20px\\n}\\n\\n.sl-pb-5 {\\n    padding-bottom: 20px\\n}\\n\\n.sl-pl-5 {\\n    padding-left: 20px\\n}\\n\\n.sl-pt-6 {\\n    padding-top: 24px\\n}\\n\\n.sl-pr-6 {\\n    padding-right: 24px\\n}\\n\\n.sl-pb-6 {\\n    padding-bottom: 24px\\n}\\n\\n.sl-pl-6 {\\n    padding-left: 24px\\n}\\n\\n.sl-pt-7 {\\n    padding-top: 28px\\n}\\n\\n.sl-pr-7 {\\n    padding-right: 28px\\n}\\n\\n.sl-pb-7 {\\n    padding-bottom: 28px\\n}\\n\\n.sl-pl-7 {\\n    padding-left: 28px\\n}\\n\\n.sl-pt-8 {\\n    padding-top: 32px\\n}\\n\\n.sl-pr-8 {\\n    padding-right: 32px\\n}\\n\\n.sl-pb-8 {\\n    padding-bottom: 32px\\n}\\n\\n.sl-pl-8 {\\n    padding-left: 32px\\n}\\n\\n.sl-pt-9 {\\n    padding-top: 36px\\n}\\n\\n.sl-pr-9 {\\n    padding-right: 36px\\n}\\n\\n.sl-pb-9 {\\n    padding-bottom: 36px\\n}\\n\\n.sl-pl-9 {\\n    padding-left: 36px\\n}\\n\\n.sl-pt-10 {\\n    padding-top: 40px\\n}\\n\\n.sl-pr-10 {\\n    padding-right: 40px\\n}\\n\\n.sl-pb-10 {\\n    padding-bottom: 40px\\n}\\n\\n.sl-pl-10 {\\n    padding-left: 40px\\n}\\n\\n.sl-pt-11 {\\n    padding-top: 44px\\n}\\n\\n.sl-pr-11 {\\n    padding-right: 44px\\n}\\n\\n.sl-pb-11 {\\n    padding-bottom: 44px\\n}\\n\\n.sl-pl-11 {\\n    padding-left: 44px\\n}\\n\\n.sl-pt-12 {\\n    padding-top: 48px\\n}\\n\\n.sl-pr-12 {\\n    padding-right: 48px\\n}\\n\\n.sl-pb-12 {\\n    padding-bottom: 48px\\n}\\n\\n.sl-pl-12 {\\n    padding-left: 48px\\n}\\n\\n.sl-pt-14 {\\n    padding-top: 56px\\n}\\n\\n.sl-pr-14 {\\n    padding-right: 56px\\n}\\n\\n.sl-pb-14 {\\n    padding-bottom: 56px\\n}\\n\\n.sl-pl-14 {\\n    padding-left: 56px\\n}\\n\\n.sl-pt-16 {\\n    padding-top: 64px\\n}\\n\\n.sl-pr-16 {\\n    padding-right: 64px\\n}\\n\\n.sl-pb-16 {\\n    padding-bottom: 64px\\n}\\n\\n.sl-pl-16 {\\n    padding-left: 64px\\n}\\n\\n.sl-pt-20 {\\n    padding-top: 80px\\n}\\n\\n.sl-pr-20 {\\n    padding-right: 80px\\n}\\n\\n.sl-pb-20 {\\n    padding-bottom: 80px\\n}\\n\\n.sl-pl-20 {\\n    padding-left: 80px\\n}\\n\\n.sl-pt-24 {\\n    padding-top: 96px\\n}\\n\\n.sl-pr-24 {\\n    padding-right: 96px\\n}\\n\\n.sl-pb-24 {\\n    padding-bottom: 96px\\n}\\n\\n.sl-pl-24 {\\n    padding-left: 96px\\n}\\n\\n.sl-pt-28 {\\n    padding-top: 112px\\n}\\n\\n.sl-pr-28 {\\n    padding-right: 112px\\n}\\n\\n.sl-pb-28 {\\n    padding-bottom: 112px\\n}\\n\\n.sl-pl-28 {\\n    padding-left: 112px\\n}\\n\\n.sl-pt-32 {\\n    padding-top: 128px\\n}\\n\\n.sl-pr-32 {\\n    padding-right: 128px\\n}\\n\\n.sl-pb-32 {\\n    padding-bottom: 128px\\n}\\n\\n.sl-pl-32 {\\n    padding-left: 128px\\n}\\n\\n.sl-pt-36 {\\n    padding-top: 144px\\n}\\n\\n.sl-pr-36 {\\n    padding-right: 144px\\n}\\n\\n.sl-pb-36 {\\n    padding-bottom: 144px\\n}\\n\\n.sl-pl-36 {\\n    padding-left: 144px\\n}\\n\\n.sl-pt-40 {\\n    padding-top: 160px\\n}\\n\\n.sl-pr-40 {\\n    padding-right: 160px\\n}\\n\\n.sl-pb-40 {\\n    padding-bottom: 160px\\n}\\n\\n.sl-pl-40 {\\n    padding-left: 160px\\n}\\n\\n.sl-pt-44 {\\n    padding-top: 176px\\n}\\n\\n.sl-pr-44 {\\n    padding-right: 176px\\n}\\n\\n.sl-pb-44 {\\n    padding-bottom: 176px\\n}\\n\\n.sl-pl-44 {\\n    padding-left: 176px\\n}\\n\\n.sl-pt-48 {\\n    padding-top: 192px\\n}\\n\\n.sl-pr-48 {\\n    padding-right: 192px\\n}\\n\\n.sl-pb-48 {\\n    padding-bottom: 192px\\n}\\n\\n.sl-pl-48 {\\n    padding-left: 192px\\n}\\n\\n.sl-pt-52 {\\n    padding-top: 208px\\n}\\n\\n.sl-pr-52 {\\n    padding-right: 208px\\n}\\n\\n.sl-pb-52 {\\n    padding-bottom: 208px\\n}\\n\\n.sl-pl-52 {\\n    padding-left: 208px\\n}\\n\\n.sl-pt-56 {\\n    padding-top: 224px\\n}\\n\\n.sl-pr-56 {\\n    padding-right: 224px\\n}\\n\\n.sl-pb-56 {\\n    padding-bottom: 224px\\n}\\n\\n.sl-pl-56 {\\n    padding-left: 224px\\n}\\n\\n.sl-pt-60 {\\n    padding-top: 240px\\n}\\n\\n.sl-pr-60 {\\n    padding-right: 240px\\n}\\n\\n.sl-pb-60 {\\n    padding-bottom: 240px\\n}\\n\\n.sl-pl-60 {\\n    padding-left: 240px\\n}\\n\\n.sl-pt-64 {\\n    padding-top: 256px\\n}\\n\\n.sl-pr-64 {\\n    padding-right: 256px\\n}\\n\\n.sl-pb-64 {\\n    padding-bottom: 256px\\n}\\n\\n.sl-pl-64 {\\n    padding-left: 256px\\n}\\n\\n.sl-pt-72 {\\n    padding-top: 288px\\n}\\n\\n.sl-pr-72 {\\n    padding-right: 288px\\n}\\n\\n.sl-pb-72 {\\n    padding-bottom: 288px\\n}\\n\\n.sl-pl-72 {\\n    padding-left: 288px\\n}\\n\\n.sl-pt-80 {\\n    padding-top: 320px\\n}\\n\\n.sl-pr-80 {\\n    padding-right: 320px\\n}\\n\\n.sl-pb-80 {\\n    padding-bottom: 320px\\n}\\n\\n.sl-pl-80 {\\n    padding-left: 320px\\n}\\n\\n.sl-pt-96 {\\n    padding-top: 384px\\n}\\n\\n.sl-pr-96 {\\n    padding-right: 384px\\n}\\n\\n.sl-pb-96 {\\n    padding-bottom: 384px\\n}\\n\\n.sl-pl-96 {\\n    padding-left: 384px\\n}\\n\\n.sl-pt-px {\\n    padding-top: 1px\\n}\\n\\n.sl-pr-px {\\n    padding-right: 1px\\n}\\n\\n.sl-pb-px {\\n    padding-bottom: 1px\\n}\\n\\n.sl-pl-px {\\n    padding-left: 1px\\n}\\n\\n.sl-pt-0\\\\.5 {\\n    padding-top: 2px\\n}\\n\\n.sl-pr-0\\\\.5 {\\n    padding-right: 2px\\n}\\n\\n.sl-pb-0\\\\.5 {\\n    padding-bottom: 2px\\n}\\n\\n.sl-pl-0\\\\.5 {\\n    padding-left: 2px\\n}\\n\\n.sl-pt-1\\\\.5 {\\n    padding-top: 6px\\n}\\n\\n.sl-pr-1\\\\.5 {\\n    padding-right: 6px\\n}\\n\\n.sl-pb-1\\\\.5 {\\n    padding-bottom: 6px\\n}\\n\\n.sl-pl-1\\\\.5 {\\n    padding-left: 6px\\n}\\n\\n.sl-pt-2\\\\.5 {\\n    padding-top: 10px\\n}\\n\\n.sl-pr-2\\\\.5 {\\n    padding-right: 10px\\n}\\n\\n.sl-pb-2\\\\.5 {\\n    padding-bottom: 10px\\n}\\n\\n.sl-pl-2\\\\.5 {\\n    padding-left: 10px\\n}\\n\\n.sl-pt-3\\\\.5 {\\n    padding-top: 14px\\n}\\n\\n.sl-pr-3\\\\.5 {\\n    padding-right: 14px\\n}\\n\\n.sl-pb-3\\\\.5 {\\n    padding-bottom: 14px\\n}\\n\\n.sl-pl-3\\\\.5 {\\n    padding-left: 14px\\n}\\n\\n.sl-pt-4\\\\.5 {\\n    padding-top: 18px\\n}\\n\\n.sl-pr-4\\\\.5 {\\n    padding-right: 18px\\n}\\n\\n.sl-pb-4\\\\.5 {\\n    padding-bottom: 18px\\n}\\n\\n.sl-pl-4\\\\.5 {\\n    padding-left: 18px\\n}\\n\\n.sl-placeholder::-ms-input-placeholder {\\n    color: var(--color-text-light)\\n}\\n\\n.sl-placeholder::placeholder {\\n    color: var(--color-text-light)\\n}\\n\\n.sl-placeholder-primary::-ms-input-placeholder {\\n    color: #3898ff\\n}\\n\\n.sl-placeholder-primary::placeholder {\\n    color: #3898ff\\n}\\n\\n.sl-placeholder-success::-ms-input-placeholder {\\n    color: #0ea06f\\n}\\n\\n.sl-placeholder-success::placeholder {\\n    color: #0ea06f\\n}\\n\\n.sl-placeholder-warning::-ms-input-placeholder {\\n    color: #f3602b\\n}\\n\\n.sl-placeholder-warning::placeholder {\\n    color: #f3602b\\n}\\n\\n.sl-placeholder-danger::-ms-input-placeholder {\\n    color: #f05151\\n}\\n\\n.sl-placeholder-danger::placeholder {\\n    color: #f05151\\n}\\n\\n.sl-pointer-events-none {\\n    pointer-events: none\\n}\\n\\n.sl-pointer-events-auto {\\n    pointer-events: auto\\n}\\n\\n.sl-static {\\n    position: static\\n}\\n\\n.sl-fixed {\\n    position: fixed\\n}\\n\\n.sl-absolute {\\n    position: absolute\\n}\\n\\n.sl-relative {\\n    position: relative\\n}\\n\\n.sl-sticky {\\n    position: -webkit-sticky;\\n    position: sticky\\n}\\n\\n.sl-resize-none {\\n    resize: none\\n}\\n\\n.sl-resize-y {\\n    resize: vertical\\n}\\n\\n.sl-resize-x {\\n    resize: horizontal\\n}\\n\\n.sl-resize {\\n    resize: both\\n}\\n\\n.sl-ring-primary {\\n    --tw-ring-color: hsla(var(--primary-h), 80%, 61%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-success {\\n    --tw-ring-color: hsla(var(--success-h), 84%, 34%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-warning {\\n    --tw-ring-color: hsla(var(--warning-h), 89%, 56%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-danger {\\n    --tw-ring-color: hsla(var(--danger-h), 84%, 63%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-primary:focus {\\n    --tw-ring-color: hsla(var(--primary-h), 80%, 61%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-success:focus {\\n    --tw-ring-color: hsla(var(--success-h), 84%, 34%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-warning:focus {\\n    --tw-ring-color: hsla(var(--warning-h), 89%, 56%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-danger:focus {\\n    --tw-ring-color: hsla(var(--danger-h), 84%, 63%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-opacity-0 {\\n    --tw-ring-opacity: 0\\n}\\n\\n.sl-ring-opacity-5 {\\n    --tw-ring-opacity: 0.05\\n}\\n\\n.sl-ring-opacity-10 {\\n    --tw-ring-opacity: 0.1\\n}\\n\\n.sl-ring-opacity-20 {\\n    --tw-ring-opacity: 0.2\\n}\\n\\n.sl-ring-opacity-30 {\\n    --tw-ring-opacity: 0.3\\n}\\n\\n.sl-ring-opacity-40 {\\n    --tw-ring-opacity: 0.4\\n}\\n\\n.sl-ring-opacity-50 {\\n    --tw-ring-opacity: 0.5\\n}\\n\\n.sl-ring-opacity-60 {\\n    --tw-ring-opacity: 0.6\\n}\\n\\n.sl-ring-opacity-70 {\\n    --tw-ring-opacity: 0.7\\n}\\n\\n.sl-ring-opacity-90 {\\n    --tw-ring-opacity: 0.9\\n}\\n\\n.sl-ring-opacity-100 {\\n    --tw-ring-opacity: 1\\n}\\n\\n.focus\\\\:sl-ring-opacity-0:focus {\\n    --tw-ring-opacity: 0\\n}\\n\\n.focus\\\\:sl-ring-opacity-5:focus {\\n    --tw-ring-opacity: 0.05\\n}\\n\\n.focus\\\\:sl-ring-opacity-10:focus {\\n    --tw-ring-opacity: 0.1\\n}\\n\\n.focus\\\\:sl-ring-opacity-20:focus {\\n    --tw-ring-opacity: 0.2\\n}\\n\\n.focus\\\\:sl-ring-opacity-30:focus {\\n    --tw-ring-opacity: 0.3\\n}\\n\\n.focus\\\\:sl-ring-opacity-40:focus {\\n    --tw-ring-opacity: 0.4\\n}\\n\\n.focus\\\\:sl-ring-opacity-50:focus {\\n    --tw-ring-opacity: 0.5\\n}\\n\\n.focus\\\\:sl-ring-opacity-60:focus {\\n    --tw-ring-opacity: 0.6\\n}\\n\\n.focus\\\\:sl-ring-opacity-70:focus {\\n    --tw-ring-opacity: 0.7\\n}\\n\\n.focus\\\\:sl-ring-opacity-90:focus {\\n    --tw-ring-opacity: 0.9\\n}\\n\\n.focus\\\\:sl-ring-opacity-100:focus {\\n    --tw-ring-opacity: 1\\n}\\n\\n* {\\n    --tw-ring-inset: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-ring-offset-width: 0px;\\n    --tw-ring-offset-color: #fff;\\n    --tw-ring-color: rgba(147, 197, 253, .5);\\n    --tw-ring-offset-shadow: 0 0 #0000;\\n    --tw-ring-shadow: 0 0 #0000\\n}\\n\\n.sl-ring {\\n    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)\\n}\\n\\n.sl-ring-inset {\\n    --tw-ring-inset: inset\\n}\\n\\n.focus\\\\:sl-ring:focus {\\n    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)\\n}\\n\\n.focus\\\\:sl-ring-inset:focus {\\n    --tw-ring-inset: inset\\n}\\n\\n.sl-stroke-transparent {\\n    stroke: transparent\\n}\\n\\n.sl-stroke-current {\\n    stroke: currentColor\\n}\\n\\n.sl-stroke-lighten-100 {\\n    stroke: var(--color-lighten-100)\\n}\\n\\n.sl-stroke-darken-100 {\\n    stroke: var(--color-darken-100)\\n}\\n\\n.sl-stroke-primary {\\n    stroke: var(--color-primary)\\n}\\n\\n.sl-stroke-primary-tint {\\n    stroke: var(--color-primary-tint)\\n}\\n\\n.sl-stroke-primary-light {\\n    stroke: var(--color-primary-light)\\n}\\n\\n.sl-stroke-primary-dark {\\n    stroke: var(--color-primary-dark)\\n}\\n\\n.sl-stroke-primary-darker {\\n    stroke: var(--color-primary-darker)\\n}\\n\\n.sl-stroke-success {\\n    stroke: var(--color-success)\\n}\\n\\n.sl-stroke-success-tint {\\n    stroke: var(--color-success-tint)\\n}\\n\\n.sl-stroke-success-light {\\n    stroke: var(--color-success-light)\\n}\\n\\n.sl-stroke-success-dark {\\n    stroke: var(--color-success-dark)\\n}\\n\\n.sl-stroke-success-darker {\\n    stroke: var(--color-success-darker)\\n}\\n\\n.sl-stroke-warning {\\n    stroke: var(--color-warning)\\n}\\n\\n.sl-stroke-warning-tint {\\n    stroke: var(--color-warning-tint)\\n}\\n\\n.sl-stroke-warning-light {\\n    stroke: var(--color-warning-light)\\n}\\n\\n.sl-stroke-warning-dark {\\n    stroke: var(--color-warning-dark)\\n}\\n\\n.sl-stroke-warning-darker {\\n    stroke: var(--color-warning-darker)\\n}\\n\\n.sl-stroke-danger {\\n    stroke: var(--color-danger)\\n}\\n\\n.sl-stroke-danger-tint {\\n    stroke: var(--color-danger-tint)\\n}\\n\\n.sl-stroke-danger-light {\\n    stroke: var(--color-danger-light)\\n}\\n\\n.sl-stroke-danger-dark {\\n    stroke: var(--color-danger-dark)\\n}\\n\\n.sl-stroke-danger-darker {\\n    stroke: var(--color-danger-darker)\\n}\\n\\n.sl-stroke-code {\\n    stroke: var(--color-code)\\n}\\n\\n.sl-stroke-on-code {\\n    stroke: var(--color-on-code)\\n}\\n\\n.sl-stroke-on-primary {\\n    stroke: var(--color-on-primary)\\n}\\n\\n.sl-stroke-on-success {\\n    stroke: var(--color-on-success)\\n}\\n\\n.sl-stroke-on-warning {\\n    stroke: var(--color-on-warning)\\n}\\n\\n.sl-stroke-on-danger {\\n    stroke: var(--color-on-danger)\\n}\\n\\n.sl-stroke-text {\\n    stroke: var(--color-text)\\n}\\n\\n.sl-table-auto {\\n    table-layout: auto\\n}\\n\\n.sl-table-fixed {\\n    table-layout: fixed\\n}\\n\\n.sl-text-left {\\n    text-align: left\\n}\\n\\n.sl-text-center {\\n    text-align: center\\n}\\n\\n.sl-text-right {\\n    text-align: right\\n}\\n\\n.sl-text-justify {\\n    text-align: justify\\n}\\n\\n.sl-text-transparent {\\n    color: transparent\\n}\\n\\n.sl-text-current {\\n    color: currentColor\\n}\\n\\n.sl-text-lighten-100 {\\n    color: var(--color-lighten-100)\\n}\\n\\n.sl-text-darken-100 {\\n    color: var(--color-darken-100)\\n}\\n\\n.sl-text-primary {\\n    color: var(--color-primary)\\n}\\n\\n.sl-text-primary-tint {\\n    color: var(--color-primary-tint)\\n}\\n\\n.sl-text-primary-light {\\n    color: var(--color-primary-light)\\n}\\n\\n.sl-text-primary-dark {\\n    color: var(--color-primary-dark)\\n}\\n\\n.sl-text-primary-darker {\\n    color: var(--color-primary-darker)\\n}\\n\\n.sl-text-success {\\n    color: var(--color-success)\\n}\\n\\n.sl-text-success-tint {\\n    color: var(--color-success-tint)\\n}\\n\\n.sl-text-success-light {\\n    color: var(--color-success-light)\\n}\\n\\n.sl-text-success-dark {\\n    color: var(--color-success-dark)\\n}\\n\\n.sl-text-success-darker {\\n    color: var(--color-success-darker)\\n}\\n\\n.sl-text-warning {\\n    color: var(--color-warning)\\n}\\n\\n.sl-text-warning-tint {\\n    color: var(--color-warning-tint)\\n}\\n\\n.sl-text-warning-light {\\n    color: var(--color-warning-light)\\n}\\n\\n.sl-text-warning-dark {\\n    color: var(--color-warning-dark)\\n}\\n\\n.sl-text-warning-darker {\\n    color: var(--color-warning-darker)\\n}\\n\\n.sl-text-danger {\\n    color: var(--color-danger)\\n}\\n\\n.sl-text-danger-tint {\\n    color: var(--color-danger-tint)\\n}\\n\\n.sl-text-danger-light {\\n    color: var(--color-danger-light)\\n}\\n\\n.sl-text-danger-dark {\\n    color: var(--color-danger-dark)\\n}\\n\\n.sl-text-danger-darker {\\n    color: var(--color-danger-darker)\\n}\\n\\n.sl-text-code {\\n    color: var(--color-code)\\n}\\n\\n.sl-text-on-code {\\n    color: var(--color-on-code)\\n}\\n\\n.sl-text-on-primary {\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-text-on-success {\\n    color: var(--color-on-success)\\n}\\n\\n.sl-text-on-warning {\\n    color: var(--color-on-warning)\\n}\\n\\n.sl-text-on-danger {\\n    color: var(--color-on-danger)\\n}\\n\\n.sl-text-body {\\n    color: var(--color-text)\\n}\\n\\n.sl-text-muted {\\n    color: var(--color-text-muted)\\n}\\n\\n.sl-text-light {\\n    color: var(--color-text-light)\\n}\\n\\n.sl-text-heading {\\n    color: var(--color-text-heading)\\n}\\n\\n.sl-text-paragraph {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.sl-text-canvas-50 {\\n    color: var(--color-canvas-50)\\n}\\n\\n.sl-text-canvas-100 {\\n    color: var(--color-canvas-100)\\n}\\n\\n.sl-text-canvas-200 {\\n    color: var(--color-canvas-200)\\n}\\n\\n.sl-text-canvas-300 {\\n    color: var(--color-canvas-300)\\n}\\n\\n.sl-text-canvas-pure {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.sl-text-canvas {\\n    color: var(--color-canvas)\\n}\\n\\n.sl-text-canvas-dialog {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.sl-text-link {\\n    color: var(--color-link)\\n}\\n\\n.sl-text-link-dark {\\n    color: var(--color-link-dark)\\n}\\n\\n.hover\\\\:sl-text-transparent:hover {\\n    color: transparent\\n}\\n\\n.hover\\\\:sl-text-current:hover {\\n    color: currentColor\\n}\\n\\n.hover\\\\:sl-text-lighten-100:hover {\\n    color: var(--color-lighten-100)\\n}\\n\\n.hover\\\\:sl-text-darken-100:hover {\\n    color: var(--color-darken-100)\\n}\\n\\n.hover\\\\:sl-text-primary:hover {\\n    color: var(--color-primary)\\n}\\n\\n.hover\\\\:sl-text-primary-tint:hover {\\n    color: var(--color-primary-tint)\\n}\\n\\n.hover\\\\:sl-text-primary-light:hover {\\n    color: var(--color-primary-light)\\n}\\n\\n.hover\\\\:sl-text-primary-dark:hover {\\n    color: var(--color-primary-dark)\\n}\\n\\n.hover\\\\:sl-text-primary-darker:hover {\\n    color: var(--color-primary-darker)\\n}\\n\\n.hover\\\\:sl-text-success:hover {\\n    color: var(--color-success)\\n}\\n\\n.hover\\\\:sl-text-success-tint:hover {\\n    color: var(--color-success-tint)\\n}\\n\\n.hover\\\\:sl-text-success-light:hover {\\n    color: var(--color-success-light)\\n}\\n\\n.hover\\\\:sl-text-success-dark:hover {\\n    color: var(--color-success-dark)\\n}\\n\\n.hover\\\\:sl-text-success-darker:hover {\\n    color: var(--color-success-darker)\\n}\\n\\n.hover\\\\:sl-text-warning:hover {\\n    color: var(--color-warning)\\n}\\n\\n.hover\\\\:sl-text-warning-tint:hover {\\n    color: var(--color-warning-tint)\\n}\\n\\n.hover\\\\:sl-text-warning-light:hover {\\n    color: var(--color-warning-light)\\n}\\n\\n.hover\\\\:sl-text-warning-dark:hover {\\n    color: var(--color-warning-dark)\\n}\\n\\n.hover\\\\:sl-text-warning-darker:hover {\\n    color: var(--color-warning-darker)\\n}\\n\\n.hover\\\\:sl-text-danger:hover {\\n    color: var(--color-danger)\\n}\\n\\n.hover\\\\:sl-text-danger-tint:hover {\\n    color: var(--color-danger-tint)\\n}\\n\\n.hover\\\\:sl-text-danger-light:hover {\\n    color: var(--color-danger-light)\\n}\\n\\n.hover\\\\:sl-text-danger-dark:hover {\\n    color: var(--color-danger-dark)\\n}\\n\\n.hover\\\\:sl-text-danger-darker:hover {\\n    color: var(--color-danger-darker)\\n}\\n\\n.hover\\\\:sl-text-code:hover {\\n    color: var(--color-code)\\n}\\n\\n.hover\\\\:sl-text-on-code:hover {\\n    color: var(--color-on-code)\\n}\\n\\n.hover\\\\:sl-text-on-primary:hover {\\n    color: var(--color-on-primary)\\n}\\n\\n.hover\\\\:sl-text-on-success:hover {\\n    color: var(--color-on-success)\\n}\\n\\n.hover\\\\:sl-text-on-warning:hover {\\n    color: var(--color-on-warning)\\n}\\n\\n.hover\\\\:sl-text-on-danger:hover {\\n    color: var(--color-on-danger)\\n}\\n\\n.hover\\\\:sl-text-body:hover {\\n    color: var(--color-text)\\n}\\n\\n.hover\\\\:sl-text-muted:hover {\\n    color: var(--color-text-muted)\\n}\\n\\n.hover\\\\:sl-text-light:hover {\\n    color: var(--color-text-light)\\n}\\n\\n.hover\\\\:sl-text-heading:hover {\\n    color: var(--color-text-heading)\\n}\\n\\n.hover\\\\:sl-text-paragraph:hover {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.hover\\\\:sl-text-canvas-50:hover {\\n    color: var(--color-canvas-50)\\n}\\n\\n.hover\\\\:sl-text-canvas-100:hover {\\n    color: var(--color-canvas-100)\\n}\\n\\n.hover\\\\:sl-text-canvas-200:hover {\\n    color: var(--color-canvas-200)\\n}\\n\\n.hover\\\\:sl-text-canvas-300:hover {\\n    color: var(--color-canvas-300)\\n}\\n\\n.hover\\\\:sl-text-canvas-pure:hover {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.hover\\\\:sl-text-canvas:hover {\\n    color: var(--color-canvas)\\n}\\n\\n.hover\\\\:sl-text-canvas-dialog:hover {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.hover\\\\:sl-text-link:hover {\\n    color: var(--color-link)\\n}\\n\\n.hover\\\\:sl-text-link-dark:hover {\\n    color: var(--color-link-dark)\\n}\\n\\n.focus\\\\:sl-text-transparent:focus {\\n    color: transparent\\n}\\n\\n.focus\\\\:sl-text-current:focus {\\n    color: currentColor\\n}\\n\\n.focus\\\\:sl-text-lighten-100:focus {\\n    color: var(--color-lighten-100)\\n}\\n\\n.focus\\\\:sl-text-darken-100:focus {\\n    color: var(--color-darken-100)\\n}\\n\\n.focus\\\\:sl-text-primary:focus {\\n    color: var(--color-primary)\\n}\\n\\n.focus\\\\:sl-text-primary-tint:focus {\\n    color: var(--color-primary-tint)\\n}\\n\\n.focus\\\\:sl-text-primary-light:focus {\\n    color: var(--color-primary-light)\\n}\\n\\n.focus\\\\:sl-text-primary-dark:focus {\\n    color: var(--color-primary-dark)\\n}\\n\\n.focus\\\\:sl-text-primary-darker:focus {\\n    color: var(--color-primary-darker)\\n}\\n\\n.focus\\\\:sl-text-success:focus {\\n    color: var(--color-success)\\n}\\n\\n.focus\\\\:sl-text-success-tint:focus {\\n    color: var(--color-success-tint)\\n}\\n\\n.focus\\\\:sl-text-success-light:focus {\\n    color: var(--color-success-light)\\n}\\n\\n.focus\\\\:sl-text-success-dark:focus {\\n    color: var(--color-success-dark)\\n}\\n\\n.focus\\\\:sl-text-success-darker:focus {\\n    color: var(--color-success-darker)\\n}\\n\\n.focus\\\\:sl-text-warning:focus {\\n    color: var(--color-warning)\\n}\\n\\n.focus\\\\:sl-text-warning-tint:focus {\\n    color: var(--color-warning-tint)\\n}\\n\\n.focus\\\\:sl-text-warning-light:focus {\\n    color: var(--color-warning-light)\\n}\\n\\n.focus\\\\:sl-text-warning-dark:focus {\\n    color: var(--color-warning-dark)\\n}\\n\\n.focus\\\\:sl-text-warning-darker:focus {\\n    color: var(--color-warning-darker)\\n}\\n\\n.focus\\\\:sl-text-danger:focus {\\n    color: var(--color-danger)\\n}\\n\\n.focus\\\\:sl-text-danger-tint:focus {\\n    color: var(--color-danger-tint)\\n}\\n\\n.focus\\\\:sl-text-danger-light:focus {\\n    color: var(--color-danger-light)\\n}\\n\\n.focus\\\\:sl-text-danger-dark:focus {\\n    color: var(--color-danger-dark)\\n}\\n\\n.focus\\\\:sl-text-danger-darker:focus {\\n    color: var(--color-danger-darker)\\n}\\n\\n.focus\\\\:sl-text-code:focus {\\n    color: var(--color-code)\\n}\\n\\n.focus\\\\:sl-text-on-code:focus {\\n    color: var(--color-on-code)\\n}\\n\\n.focus\\\\:sl-text-on-primary:focus {\\n    color: var(--color-on-primary)\\n}\\n\\n.focus\\\\:sl-text-on-success:focus {\\n    color: var(--color-on-success)\\n}\\n\\n.focus\\\\:sl-text-on-warning:focus {\\n    color: var(--color-on-warning)\\n}\\n\\n.focus\\\\:sl-text-on-danger:focus {\\n    color: var(--color-on-danger)\\n}\\n\\n.focus\\\\:sl-text-body:focus {\\n    color: var(--color-text)\\n}\\n\\n.focus\\\\:sl-text-muted:focus {\\n    color: var(--color-text-muted)\\n}\\n\\n.focus\\\\:sl-text-light:focus {\\n    color: var(--color-text-light)\\n}\\n\\n.focus\\\\:sl-text-heading:focus {\\n    color: var(--color-text-heading)\\n}\\n\\n.focus\\\\:sl-text-paragraph:focus {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.focus\\\\:sl-text-canvas-50:focus {\\n    color: var(--color-canvas-50)\\n}\\n\\n.focus\\\\:sl-text-canvas-100:focus {\\n    color: var(--color-canvas-100)\\n}\\n\\n.focus\\\\:sl-text-canvas-200:focus {\\n    color: var(--color-canvas-200)\\n}\\n\\n.focus\\\\:sl-text-canvas-300:focus {\\n    color: var(--color-canvas-300)\\n}\\n\\n.focus\\\\:sl-text-canvas-pure:focus {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.focus\\\\:sl-text-canvas:focus {\\n    color: var(--color-canvas)\\n}\\n\\n.focus\\\\:sl-text-canvas-dialog:focus {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.focus\\\\:sl-text-link:focus {\\n    color: var(--color-link)\\n}\\n\\n.focus\\\\:sl-text-link-dark:focus {\\n    color: var(--color-link-dark)\\n}\\n\\n.disabled\\\\:sl-text-transparent:disabled {\\n    color: transparent\\n}\\n\\n.disabled\\\\:sl-text-current:disabled {\\n    color: currentColor\\n}\\n\\n.disabled\\\\:sl-text-lighten-100:disabled {\\n    color: var(--color-lighten-100)\\n}\\n\\n.disabled\\\\:sl-text-darken-100:disabled {\\n    color: var(--color-darken-100)\\n}\\n\\n.disabled\\\\:sl-text-primary:disabled {\\n    color: var(--color-primary)\\n}\\n\\n.disabled\\\\:sl-text-primary-tint:disabled {\\n    color: var(--color-primary-tint)\\n}\\n\\n.disabled\\\\:sl-text-primary-light:disabled {\\n    color: var(--color-primary-light)\\n}\\n\\n.disabled\\\\:sl-text-primary-dark:disabled {\\n    color: var(--color-primary-dark)\\n}\\n\\n.disabled\\\\:sl-text-primary-darker:disabled {\\n    color: var(--color-primary-darker)\\n}\\n\\n.disabled\\\\:sl-text-success:disabled {\\n    color: var(--color-success)\\n}\\n\\n.disabled\\\\:sl-text-success-tint:disabled {\\n    color: var(--color-success-tint)\\n}\\n\\n.disabled\\\\:sl-text-success-light:disabled {\\n    color: var(--color-success-light)\\n}\\n\\n.disabled\\\\:sl-text-success-dark:disabled {\\n    color: var(--color-success-dark)\\n}\\n\\n.disabled\\\\:sl-text-success-darker:disabled {\\n    color: var(--color-success-darker)\\n}\\n\\n.disabled\\\\:sl-text-warning:disabled {\\n    color: var(--color-warning)\\n}\\n\\n.disabled\\\\:sl-text-warning-tint:disabled {\\n    color: var(--color-warning-tint)\\n}\\n\\n.disabled\\\\:sl-text-warning-light:disabled {\\n    color: var(--color-warning-light)\\n}\\n\\n.disabled\\\\:sl-text-warning-dark:disabled {\\n    color: var(--color-warning-dark)\\n}\\n\\n.disabled\\\\:sl-text-warning-darker:disabled {\\n    color: var(--color-warning-darker)\\n}\\n\\n.disabled\\\\:sl-text-danger:disabled {\\n    color: var(--color-danger)\\n}\\n\\n.disabled\\\\:sl-text-danger-tint:disabled {\\n    color: var(--color-danger-tint)\\n}\\n\\n.disabled\\\\:sl-text-danger-light:disabled {\\n    color: var(--color-danger-light)\\n}\\n\\n.disabled\\\\:sl-text-danger-dark:disabled {\\n    color: var(--color-danger-dark)\\n}\\n\\n.disabled\\\\:sl-text-danger-darker:disabled {\\n    color: var(--color-danger-darker)\\n}\\n\\n.disabled\\\\:sl-text-code:disabled {\\n    color: var(--color-code)\\n}\\n\\n.disabled\\\\:sl-text-on-code:disabled {\\n    color: var(--color-on-code)\\n}\\n\\n.disabled\\\\:sl-text-on-primary:disabled {\\n    color: var(--color-on-primary)\\n}\\n\\n.disabled\\\\:sl-text-on-success:disabled {\\n    color: var(--color-on-success)\\n}\\n\\n.disabled\\\\:sl-text-on-warning:disabled {\\n    color: var(--color-on-warning)\\n}\\n\\n.disabled\\\\:sl-text-on-danger:disabled {\\n    color: var(--color-on-danger)\\n}\\n\\n.disabled\\\\:sl-text-body:disabled {\\n    color: var(--color-text)\\n}\\n\\n.disabled\\\\:sl-text-muted:disabled {\\n    color: var(--color-text-muted)\\n}\\n\\n.disabled\\\\:sl-text-light:disabled {\\n    color: var(--color-text-light)\\n}\\n\\n.disabled\\\\:sl-text-heading:disabled {\\n    color: var(--color-text-heading)\\n}\\n\\n.disabled\\\\:sl-text-paragraph:disabled {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.disabled\\\\:sl-text-canvas-50:disabled {\\n    color: var(--color-canvas-50)\\n}\\n\\n.disabled\\\\:sl-text-canvas-100:disabled {\\n    color: var(--color-canvas-100)\\n}\\n\\n.disabled\\\\:sl-text-canvas-200:disabled {\\n    color: var(--color-canvas-200)\\n}\\n\\n.disabled\\\\:sl-text-canvas-300:disabled {\\n    color: var(--color-canvas-300)\\n}\\n\\n.disabled\\\\:sl-text-canvas-pure:disabled {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.disabled\\\\:sl-text-canvas:disabled {\\n    color: var(--color-canvas)\\n}\\n\\n.disabled\\\\:sl-text-canvas-dialog:disabled {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.disabled\\\\:sl-text-link:disabled {\\n    color: var(--color-link)\\n}\\n\\n.disabled\\\\:sl-text-link-dark:disabled {\\n    color: var(--color-link-dark)\\n}\\n\\n.sl-underline {\\n    text-decoration: underline\\n}\\n\\n.sl-line-through {\\n    text-decoration: line-through\\n}\\n\\n.sl-no-underline {\\n    text-decoration: none\\n}\\n\\n.sl-truncate {\\n    overflow: hidden;\\n    white-space: nowrap\\n}\\n\\n.sl-overflow-ellipsis,\\n.sl-truncate {\\n    text-overflow: ellipsis\\n}\\n\\n.sl-overflow-clip {\\n    text-overflow: clip\\n}\\n\\n.sl-uppercase {\\n    text-transform: uppercase\\n}\\n\\n.sl-lowercase {\\n    text-transform: lowercase\\n}\\n\\n.sl-capitalize {\\n    text-transform: capitalize\\n}\\n\\n.sl-normal-case {\\n    text-transform: none\\n}\\n\\n.sl-transform {\\n    transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\\n}\\n\\n.sl-transform,\\n.sl-transform-gpu {\\n    --tw-translate-x: 0;\\n    --tw-translate-y: 0;\\n    --tw-rotate: 0;\\n    --tw-skew-x: 0;\\n    --tw-skew-y: 0;\\n    --tw-scale-x: 1;\\n    --tw-scale-y: 1\\n}\\n\\n.sl-transform-gpu {\\n    transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\\n}\\n\\n.sl-transform-none {\\n    transform: none\\n}\\n\\n.sl-delay-75 {\\n    transition-delay: 75ms\\n}\\n\\n.sl-delay-150 {\\n    transition-delay: .15s\\n}\\n\\n.sl-delay-300 {\\n    transition-delay: .3s\\n}\\n\\n.sl-delay-500 {\\n    transition-delay: .5s\\n}\\n\\n.sl-delay-1000 {\\n    transition-delay: 1s\\n}\\n\\n.sl-duration-75 {\\n    transition-duration: 75ms\\n}\\n\\n.sl-duration-150 {\\n    transition-duration: .15s\\n}\\n\\n.sl-duration-300 {\\n    transition-duration: .3s\\n}\\n\\n.sl-duration-500 {\\n    transition-duration: .5s\\n}\\n\\n.sl-duration-1000 {\\n    transition-duration: 1s\\n}\\n\\n.sl-transition {\\n    transition-duration: .15s;\\n    transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;\\n    transition-timing-function: cubic-bezier(.4, 0, .2, 1)\\n}\\n\\n.sl-translate-x-0 {\\n    --tw-translate-x: 0px\\n}\\n\\n.sl-translate-x-1 {\\n    --tw-translate-x: 4px\\n}\\n\\n.sl-translate-x-2 {\\n    --tw-translate-x: 8px\\n}\\n\\n.sl-translate-x-3 {\\n    --tw-translate-x: 12px\\n}\\n\\n.sl-translate-x-4 {\\n    --tw-translate-x: 16px\\n}\\n\\n.sl-translate-x-5 {\\n    --tw-translate-x: 20px\\n}\\n\\n.sl-translate-x-6 {\\n    --tw-translate-x: 24px\\n}\\n\\n.sl-translate-x-7 {\\n    --tw-translate-x: 28px\\n}\\n\\n.sl-translate-x-8 {\\n    --tw-translate-x: 32px\\n}\\n\\n.sl-translate-x-9 {\\n    --tw-translate-x: 36px\\n}\\n\\n.sl-translate-x-10 {\\n    --tw-translate-x: 40px\\n}\\n\\n.sl-translate-x-11 {\\n    --tw-translate-x: 44px\\n}\\n\\n.sl-translate-x-12 {\\n    --tw-translate-x: 48px\\n}\\n\\n.sl-translate-x-14 {\\n    --tw-translate-x: 56px\\n}\\n\\n.sl-translate-x-16 {\\n    --tw-translate-x: 64px\\n}\\n\\n.sl-translate-x-20 {\\n    --tw-translate-x: 80px\\n}\\n\\n.sl-translate-x-24 {\\n    --tw-translate-x: 96px\\n}\\n\\n.sl-translate-x-28 {\\n    --tw-translate-x: 112px\\n}\\n\\n.sl-translate-x-32 {\\n    --tw-translate-x: 128px\\n}\\n\\n.sl-translate-x-36 {\\n    --tw-translate-x: 144px\\n}\\n\\n.sl-translate-x-40 {\\n    --tw-translate-x: 160px\\n}\\n\\n.sl-translate-x-44 {\\n    --tw-translate-x: 176px\\n}\\n\\n.sl-translate-x-48 {\\n    --tw-translate-x: 192px\\n}\\n\\n.sl-translate-x-52 {\\n    --tw-translate-x: 208px\\n}\\n\\n.sl-translate-x-56 {\\n    --tw-translate-x: 224px\\n}\\n\\n.sl-translate-x-60 {\\n    --tw-translate-x: 240px\\n}\\n\\n.sl-translate-x-64 {\\n    --tw-translate-x: 256px\\n}\\n\\n.sl-translate-x-72 {\\n    --tw-translate-x: 288px\\n}\\n\\n.sl-translate-x-80 {\\n    --tw-translate-x: 320px\\n}\\n\\n.sl-translate-x-96 {\\n    --tw-translate-x: 384px\\n}\\n\\n.sl-translate-x-px {\\n    --tw-translate-x: 1px\\n}\\n\\n.sl-translate-x-0\\\\.5 {\\n    --tw-translate-x: 2px\\n}\\n\\n.sl-translate-x-1\\\\.5 {\\n    --tw-translate-x: 6px\\n}\\n\\n.sl-translate-x-2\\\\.5 {\\n    --tw-translate-x: 10px\\n}\\n\\n.sl-translate-x-3\\\\.5 {\\n    --tw-translate-x: 14px\\n}\\n\\n.sl-translate-x-4\\\\.5 {\\n    --tw-translate-x: 18px\\n}\\n\\n.sl--translate-x-0 {\\n    --tw-translate-x: 0px\\n}\\n\\n.sl--translate-x-1 {\\n    --tw-translate-x: -4px\\n}\\n\\n.sl--translate-x-2 {\\n    --tw-translate-x: -8px\\n}\\n\\n.sl--translate-x-3 {\\n    --tw-translate-x: -12px\\n}\\n\\n.sl--translate-x-4 {\\n    --tw-translate-x: -16px\\n}\\n\\n.sl--translate-x-5 {\\n    --tw-translate-x: -20px\\n}\\n\\n.sl--translate-x-6 {\\n    --tw-translate-x: -24px\\n}\\n\\n.sl--translate-x-7 {\\n    --tw-translate-x: -28px\\n}\\n\\n.sl--translate-x-8 {\\n    --tw-translate-x: -32px\\n}\\n\\n.sl--translate-x-9 {\\n    --tw-translate-x: -36px\\n}\\n\\n.sl--translate-x-10 {\\n    --tw-translate-x: -40px\\n}\\n\\n.sl--translate-x-11 {\\n    --tw-translate-x: -44px\\n}\\n\\n.sl--translate-x-12 {\\n    --tw-translate-x: -48px\\n}\\n\\n.sl--translate-x-14 {\\n    --tw-translate-x: -56px\\n}\\n\\n.sl--translate-x-16 {\\n    --tw-translate-x: -64px\\n}\\n\\n.sl--translate-x-20 {\\n    --tw-translate-x: -80px\\n}\\n\\n.sl--translate-x-24 {\\n    --tw-translate-x: -96px\\n}\\n\\n.sl--translate-x-28 {\\n    --tw-translate-x: -112px\\n}\\n\\n.sl--translate-x-32 {\\n    --tw-translate-x: -128px\\n}\\n\\n.sl--translate-x-36 {\\n    --tw-translate-x: -144px\\n}\\n\\n.sl--translate-x-40 {\\n    --tw-translate-x: -160px\\n}\\n\\n.sl--translate-x-44 {\\n    --tw-translate-x: -176px\\n}\\n\\n.sl--translate-x-48 {\\n    --tw-translate-x: -192px\\n}\\n\\n.sl--translate-x-52 {\\n    --tw-translate-x: -208px\\n}\\n\\n.sl--translate-x-56 {\\n    --tw-translate-x: -224px\\n}\\n\\n.sl--translate-x-60 {\\n    --tw-translate-x: -240px\\n}\\n\\n.sl--translate-x-64 {\\n    --tw-translate-x: -256px\\n}\\n\\n.sl--translate-x-72 {\\n    --tw-translate-x: -288px\\n}\\n\\n.sl--translate-x-80 {\\n    --tw-translate-x: -320px\\n}\\n\\n.sl--translate-x-96 {\\n    --tw-translate-x: -384px\\n}\\n\\n.sl--translate-x-px {\\n    --tw-translate-x: -1px\\n}\\n\\n.sl--translate-x-0\\\\.5 {\\n    --tw-translate-x: -2px\\n}\\n\\n.sl--translate-x-1\\\\.5 {\\n    --tw-translate-x: -6px\\n}\\n\\n.sl--translate-x-2\\\\.5 {\\n    --tw-translate-x: -10px\\n}\\n\\n.sl--translate-x-3\\\\.5 {\\n    --tw-translate-x: -14px\\n}\\n\\n.sl--translate-x-4\\\\.5 {\\n    --tw-translate-x: -18px\\n}\\n\\n.sl-translate-y-0 {\\n    --tw-translate-y: 0px\\n}\\n\\n.sl-translate-y-1 {\\n    --tw-translate-y: 4px\\n}\\n\\n.sl-translate-y-2 {\\n    --tw-translate-y: 8px\\n}\\n\\n.sl-translate-y-3 {\\n    --tw-translate-y: 12px\\n}\\n\\n.sl-translate-y-4 {\\n    --tw-translate-y: 16px\\n}\\n\\n.sl-translate-y-5 {\\n    --tw-translate-y: 20px\\n}\\n\\n.sl-translate-y-6 {\\n    --tw-translate-y: 24px\\n}\\n\\n.sl-translate-y-7 {\\n    --tw-translate-y: 28px\\n}\\n\\n.sl-translate-y-8 {\\n    --tw-translate-y: 32px\\n}\\n\\n.sl-translate-y-9 {\\n    --tw-translate-y: 36px\\n}\\n\\n.sl-translate-y-10 {\\n    --tw-translate-y: 40px\\n}\\n\\n.sl-translate-y-11 {\\n    --tw-translate-y: 44px\\n}\\n\\n.sl-translate-y-12 {\\n    --tw-translate-y: 48px\\n}\\n\\n.sl-translate-y-14 {\\n    --tw-translate-y: 56px\\n}\\n\\n.sl-translate-y-16 {\\n    --tw-translate-y: 64px\\n}\\n\\n.sl-translate-y-20 {\\n    --tw-translate-y: 80px\\n}\\n\\n.sl-translate-y-24 {\\n    --tw-translate-y: 96px\\n}\\n\\n.sl-translate-y-28 {\\n    --tw-translate-y: 112px\\n}\\n\\n.sl-translate-y-32 {\\n    --tw-translate-y: 128px\\n}\\n\\n.sl-translate-y-36 {\\n    --tw-translate-y: 144px\\n}\\n\\n.sl-translate-y-40 {\\n    --tw-translate-y: 160px\\n}\\n\\n.sl-translate-y-44 {\\n    --tw-translate-y: 176px\\n}\\n\\n.sl-translate-y-48 {\\n    --tw-translate-y: 192px\\n}\\n\\n.sl-translate-y-52 {\\n    --tw-translate-y: 208px\\n}\\n\\n.sl-translate-y-56 {\\n    --tw-translate-y: 224px\\n}\\n\\n.sl-translate-y-60 {\\n    --tw-translate-y: 240px\\n}\\n\\n.sl-translate-y-64 {\\n    --tw-translate-y: 256px\\n}\\n\\n.sl-translate-y-72 {\\n    --tw-translate-y: 288px\\n}\\n\\n.sl-translate-y-80 {\\n    --tw-translate-y: 320px\\n}\\n\\n.sl-translate-y-96 {\\n    --tw-translate-y: 384px\\n}\\n\\n.sl-translate-y-px {\\n    --tw-translate-y: 1px\\n}\\n\\n.sl-translate-y-0\\\\.5 {\\n    --tw-translate-y: 2px\\n}\\n\\n.sl-translate-y-1\\\\.5 {\\n    --tw-translate-y: 6px\\n}\\n\\n.sl-translate-y-2\\\\.5 {\\n    --tw-translate-y: 10px\\n}\\n\\n.sl-translate-y-3\\\\.5 {\\n    --tw-translate-y: 14px\\n}\\n\\n.sl-translate-y-4\\\\.5 {\\n    --tw-translate-y: 18px\\n}\\n\\n.sl--translate-y-0 {\\n    --tw-translate-y: 0px\\n}\\n\\n.sl--translate-y-1 {\\n    --tw-translate-y: -4px\\n}\\n\\n.sl--translate-y-2 {\\n    --tw-translate-y: -8px\\n}\\n\\n.sl--translate-y-3 {\\n    --tw-translate-y: -12px\\n}\\n\\n.sl--translate-y-4 {\\n    --tw-translate-y: -16px\\n}\\n\\n.sl--translate-y-5 {\\n    --tw-translate-y: -20px\\n}\\n\\n.sl--translate-y-6 {\\n    --tw-translate-y: -24px\\n}\\n\\n.sl--translate-y-7 {\\n    --tw-translate-y: -28px\\n}\\n\\n.sl--translate-y-8 {\\n    --tw-translate-y: -32px\\n}\\n\\n.sl--translate-y-9 {\\n    --tw-translate-y: -36px\\n}\\n\\n.sl--translate-y-10 {\\n    --tw-translate-y: -40px\\n}\\n\\n.sl--translate-y-11 {\\n    --tw-translate-y: -44px\\n}\\n\\n.sl--translate-y-12 {\\n    --tw-translate-y: -48px\\n}\\n\\n.sl--translate-y-14 {\\n    --tw-translate-y: -56px\\n}\\n\\n.sl--translate-y-16 {\\n    --tw-translate-y: -64px\\n}\\n\\n.sl--translate-y-20 {\\n    --tw-translate-y: -80px\\n}\\n\\n.sl--translate-y-24 {\\n    --tw-translate-y: -96px\\n}\\n\\n.sl--translate-y-28 {\\n    --tw-translate-y: -112px\\n}\\n\\n.sl--translate-y-32 {\\n    --tw-translate-y: -128px\\n}\\n\\n.sl--translate-y-36 {\\n    --tw-translate-y: -144px\\n}\\n\\n.sl--translate-y-40 {\\n    --tw-translate-y: -160px\\n}\\n\\n.sl--translate-y-44 {\\n    --tw-translate-y: -176px\\n}\\n\\n.sl--translate-y-48 {\\n    --tw-translate-y: -192px\\n}\\n\\n.sl--translate-y-52 {\\n    --tw-translate-y: -208px\\n}\\n\\n.sl--translate-y-56 {\\n    --tw-translate-y: -224px\\n}\\n\\n.sl--translate-y-60 {\\n    --tw-translate-y: -240px\\n}\\n\\n.sl--translate-y-64 {\\n    --tw-translate-y: -256px\\n}\\n\\n.sl--translate-y-72 {\\n    --tw-translate-y: -288px\\n}\\n\\n.sl--translate-y-80 {\\n    --tw-translate-y: -320px\\n}\\n\\n.sl--translate-y-96 {\\n    --tw-translate-y: -384px\\n}\\n\\n.sl--translate-y-px {\\n    --tw-translate-y: -1px\\n}\\n\\n.sl--translate-y-0\\\\.5 {\\n    --tw-translate-y: -2px\\n}\\n\\n.sl--translate-y-1\\\\.5 {\\n    --tw-translate-y: -6px\\n}\\n\\n.sl--translate-y-2\\\\.5 {\\n    --tw-translate-y: -10px\\n}\\n\\n.sl--translate-y-3\\\\.5 {\\n    --tw-translate-y: -14px\\n}\\n\\n.sl--translate-y-4\\\\.5 {\\n    --tw-translate-y: -18px\\n}\\n\\n.hover\\\\:sl-translate-x-0:hover {\\n    --tw-translate-x: 0px\\n}\\n\\n.hover\\\\:sl-translate-x-1:hover {\\n    --tw-translate-x: 4px\\n}\\n\\n.hover\\\\:sl-translate-x-2:hover {\\n    --tw-translate-x: 8px\\n}\\n\\n.hover\\\\:sl-translate-x-3:hover {\\n    --tw-translate-x: 12px\\n}\\n\\n.hover\\\\:sl-translate-x-4:hover {\\n    --tw-translate-x: 16px\\n}\\n\\n.hover\\\\:sl-translate-x-5:hover {\\n    --tw-translate-x: 20px\\n}\\n\\n.hover\\\\:sl-translate-x-6:hover {\\n    --tw-translate-x: 24px\\n}\\n\\n.hover\\\\:sl-translate-x-7:hover {\\n    --tw-translate-x: 28px\\n}\\n\\n.hover\\\\:sl-translate-x-8:hover {\\n    --tw-translate-x: 32px\\n}\\n\\n.hover\\\\:sl-translate-x-9:hover {\\n    --tw-translate-x: 36px\\n}\\n\\n.hover\\\\:sl-translate-x-10:hover {\\n    --tw-translate-x: 40px\\n}\\n\\n.hover\\\\:sl-translate-x-11:hover {\\n    --tw-translate-x: 44px\\n}\\n\\n.hover\\\\:sl-translate-x-12:hover {\\n    --tw-translate-x: 48px\\n}\\n\\n.hover\\\\:sl-translate-x-14:hover {\\n    --tw-translate-x: 56px\\n}\\n\\n.hover\\\\:sl-translate-x-16:hover {\\n    --tw-translate-x: 64px\\n}\\n\\n.hover\\\\:sl-translate-x-20:hover {\\n    --tw-translate-x: 80px\\n}\\n\\n.hover\\\\:sl-translate-x-24:hover {\\n    --tw-translate-x: 96px\\n}\\n\\n.hover\\\\:sl-translate-x-28:hover {\\n    --tw-translate-x: 112px\\n}\\n\\n.hover\\\\:sl-translate-x-32:hover {\\n    --tw-translate-x: 128px\\n}\\n\\n.hover\\\\:sl-translate-x-36:hover {\\n    --tw-translate-x: 144px\\n}\\n\\n.hover\\\\:sl-translate-x-40:hover {\\n    --tw-translate-x: 160px\\n}\\n\\n.hover\\\\:sl-translate-x-44:hover {\\n    --tw-translate-x: 176px\\n}\\n\\n.hover\\\\:sl-translate-x-48:hover {\\n    --tw-translate-x: 192px\\n}\\n\\n.hover\\\\:sl-translate-x-52:hover {\\n    --tw-translate-x: 208px\\n}\\n\\n.hover\\\\:sl-translate-x-56:hover {\\n    --tw-translate-x: 224px\\n}\\n\\n.hover\\\\:sl-translate-x-60:hover {\\n    --tw-translate-x: 240px\\n}\\n\\n.hover\\\\:sl-translate-x-64:hover {\\n    --tw-translate-x: 256px\\n}\\n\\n.hover\\\\:sl-translate-x-72:hover {\\n    --tw-translate-x: 288px\\n}\\n\\n.hover\\\\:sl-translate-x-80:hover {\\n    --tw-translate-x: 320px\\n}\\n\\n.hover\\\\:sl-translate-x-96:hover {\\n    --tw-translate-x: 384px\\n}\\n\\n.hover\\\\:sl-translate-x-px:hover {\\n    --tw-translate-x: 1px\\n}\\n\\n.hover\\\\:sl-translate-x-0\\\\.5:hover {\\n    --tw-translate-x: 2px\\n}\\n\\n.hover\\\\:sl-translate-x-1\\\\.5:hover {\\n    --tw-translate-x: 6px\\n}\\n\\n.hover\\\\:sl-translate-x-2\\\\.5:hover {\\n    --tw-translate-x: 10px\\n}\\n\\n.hover\\\\:sl-translate-x-3\\\\.5:hover {\\n    --tw-translate-x: 14px\\n}\\n\\n.hover\\\\:sl-translate-x-4\\\\.5:hover {\\n    --tw-translate-x: 18px\\n}\\n\\n.hover\\\\:sl--translate-x-0:hover {\\n    --tw-translate-x: 0px\\n}\\n\\n.hover\\\\:sl--translate-x-1:hover {\\n    --tw-translate-x: -4px\\n}\\n\\n.hover\\\\:sl--translate-x-2:hover {\\n    --tw-translate-x: -8px\\n}\\n\\n.hover\\\\:sl--translate-x-3:hover {\\n    --tw-translate-x: -12px\\n}\\n\\n.hover\\\\:sl--translate-x-4:hover {\\n    --tw-translate-x: -16px\\n}\\n\\n.hover\\\\:sl--translate-x-5:hover {\\n    --tw-translate-x: -20px\\n}\\n\\n.hover\\\\:sl--translate-x-6:hover {\\n    --tw-translate-x: -24px\\n}\\n\\n.hover\\\\:sl--translate-x-7:hover {\\n    --tw-translate-x: -28px\\n}\\n\\n.hover\\\\:sl--translate-x-8:hover {\\n    --tw-translate-x: -32px\\n}\\n\\n.hover\\\\:sl--translate-x-9:hover {\\n    --tw-translate-x: -36px\\n}\\n\\n.hover\\\\:sl--translate-x-10:hover {\\n    --tw-translate-x: -40px\\n}\\n\\n.hover\\\\:sl--translate-x-11:hover {\\n    --tw-translate-x: -44px\\n}\\n\\n.hover\\\\:sl--translate-x-12:hover {\\n    --tw-translate-x: -48px\\n}\\n\\n.hover\\\\:sl--translate-x-14:hover {\\n    --tw-translate-x: -56px\\n}\\n\\n.hover\\\\:sl--translate-x-16:hover {\\n    --tw-translate-x: -64px\\n}\\n\\n.hover\\\\:sl--translate-x-20:hover {\\n    --tw-translate-x: -80px\\n}\\n\\n.hover\\\\:sl--translate-x-24:hover {\\n    --tw-translate-x: -96px\\n}\\n\\n.hover\\\\:sl--translate-x-28:hover {\\n    --tw-translate-x: -112px\\n}\\n\\n.hover\\\\:sl--translate-x-32:hover {\\n    --tw-translate-x: -128px\\n}\\n\\n.hover\\\\:sl--translate-x-36:hover {\\n    --tw-translate-x: -144px\\n}\\n\\n.hover\\\\:sl--translate-x-40:hover {\\n    --tw-translate-x: -160px\\n}\\n\\n.hover\\\\:sl--translate-x-44:hover {\\n    --tw-translate-x: -176px\\n}\\n\\n.hover\\\\:sl--translate-x-48:hover {\\n    --tw-translate-x: -192px\\n}\\n\\n.hover\\\\:sl--translate-x-52:hover {\\n    --tw-translate-x: -208px\\n}\\n\\n.hover\\\\:sl--translate-x-56:hover {\\n    --tw-translate-x: -224px\\n}\\n\\n.hover\\\\:sl--translate-x-60:hover {\\n    --tw-translate-x: -240px\\n}\\n\\n.hover\\\\:sl--translate-x-64:hover {\\n    --tw-translate-x: -256px\\n}\\n\\n.hover\\\\:sl--translate-x-72:hover {\\n    --tw-translate-x: -288px\\n}\\n\\n.hover\\\\:sl--translate-x-80:hover {\\n    --tw-translate-x: -320px\\n}\\n\\n.hover\\\\:sl--translate-x-96:hover {\\n    --tw-translate-x: -384px\\n}\\n\\n.hover\\\\:sl--translate-x-px:hover {\\n    --tw-translate-x: -1px\\n}\\n\\n.hover\\\\:sl--translate-x-0\\\\.5:hover {\\n    --tw-translate-x: -2px\\n}\\n\\n.hover\\\\:sl--translate-x-1\\\\.5:hover {\\n    --tw-translate-x: -6px\\n}\\n\\n.hover\\\\:sl--translate-x-2\\\\.5:hover {\\n    --tw-translate-x: -10px\\n}\\n\\n.hover\\\\:sl--translate-x-3\\\\.5:hover {\\n    --tw-translate-x: -14px\\n}\\n\\n.hover\\\\:sl--translate-x-4\\\\.5:hover {\\n    --tw-translate-x: -18px\\n}\\n\\n.hover\\\\:sl-translate-y-0:hover {\\n    --tw-translate-y: 0px\\n}\\n\\n.hover\\\\:sl-translate-y-1:hover {\\n    --tw-translate-y: 4px\\n}\\n\\n.hover\\\\:sl-translate-y-2:hover {\\n    --tw-translate-y: 8px\\n}\\n\\n.hover\\\\:sl-translate-y-3:hover {\\n    --tw-translate-y: 12px\\n}\\n\\n.hover\\\\:sl-translate-y-4:hover {\\n    --tw-translate-y: 16px\\n}\\n\\n.hover\\\\:sl-translate-y-5:hover {\\n    --tw-translate-y: 20px\\n}\\n\\n.hover\\\\:sl-translate-y-6:hover {\\n    --tw-translate-y: 24px\\n}\\n\\n.hover\\\\:sl-translate-y-7:hover {\\n    --tw-translate-y: 28px\\n}\\n\\n.hover\\\\:sl-translate-y-8:hover {\\n    --tw-translate-y: 32px\\n}\\n\\n.hover\\\\:sl-translate-y-9:hover {\\n    --tw-translate-y: 36px\\n}\\n\\n.hover\\\\:sl-translate-y-10:hover {\\n    --tw-translate-y: 40px\\n}\\n\\n.hover\\\\:sl-translate-y-11:hover {\\n    --tw-translate-y: 44px\\n}\\n\\n.hover\\\\:sl-translate-y-12:hover {\\n    --tw-translate-y: 48px\\n}\\n\\n.hover\\\\:sl-translate-y-14:hover {\\n    --tw-translate-y: 56px\\n}\\n\\n.hover\\\\:sl-translate-y-16:hover {\\n    --tw-translate-y: 64px\\n}\\n\\n.hover\\\\:sl-translate-y-20:hover {\\n    --tw-translate-y: 80px\\n}\\n\\n.hover\\\\:sl-translate-y-24:hover {\\n    --tw-translate-y: 96px\\n}\\n\\n.hover\\\\:sl-translate-y-28:hover {\\n    --tw-translate-y: 112px\\n}\\n\\n.hover\\\\:sl-translate-y-32:hover {\\n    --tw-translate-y: 128px\\n}\\n\\n.hover\\\\:sl-translate-y-36:hover {\\n    --tw-translate-y: 144px\\n}\\n\\n.hover\\\\:sl-translate-y-40:hover {\\n    --tw-translate-y: 160px\\n}\\n\\n.hover\\\\:sl-translate-y-44:hover {\\n    --tw-translate-y: 176px\\n}\\n\\n.hover\\\\:sl-translate-y-48:hover {\\n    --tw-translate-y: 192px\\n}\\n\\n.hover\\\\:sl-translate-y-52:hover {\\n    --tw-translate-y: 208px\\n}\\n\\n.hover\\\\:sl-translate-y-56:hover {\\n    --tw-translate-y: 224px\\n}\\n\\n.hover\\\\:sl-translate-y-60:hover {\\n    --tw-translate-y: 240px\\n}\\n\\n.hover\\\\:sl-translate-y-64:hover {\\n    --tw-translate-y: 256px\\n}\\n\\n.hover\\\\:sl-translate-y-72:hover {\\n    --tw-translate-y: 288px\\n}\\n\\n.hover\\\\:sl-translate-y-80:hover {\\n    --tw-translate-y: 320px\\n}\\n\\n.hover\\\\:sl-translate-y-96:hover {\\n    --tw-translate-y: 384px\\n}\\n\\n.hover\\\\:sl-translate-y-px:hover {\\n    --tw-translate-y: 1px\\n}\\n\\n.hover\\\\:sl-translate-y-0\\\\.5:hover {\\n    --tw-translate-y: 2px\\n}\\n\\n.hover\\\\:sl-translate-y-1\\\\.5:hover {\\n    --tw-translate-y: 6px\\n}\\n\\n.hover\\\\:sl-translate-y-2\\\\.5:hover {\\n    --tw-translate-y: 10px\\n}\\n\\n.hover\\\\:sl-translate-y-3\\\\.5:hover {\\n    --tw-translate-y: 14px\\n}\\n\\n.hover\\\\:sl-translate-y-4\\\\.5:hover {\\n    --tw-translate-y: 18px\\n}\\n\\n.hover\\\\:sl--translate-y-0:hover {\\n    --tw-translate-y: 0px\\n}\\n\\n.hover\\\\:sl--translate-y-1:hover {\\n    --tw-translate-y: -4px\\n}\\n\\n.hover\\\\:sl--translate-y-2:hover {\\n    --tw-translate-y: -8px\\n}\\n\\n.hover\\\\:sl--translate-y-3:hover {\\n    --tw-translate-y: -12px\\n}\\n\\n.hover\\\\:sl--translate-y-4:hover {\\n    --tw-translate-y: -16px\\n}\\n\\n.hover\\\\:sl--translate-y-5:hover {\\n    --tw-translate-y: -20px\\n}\\n\\n.hover\\\\:sl--translate-y-6:hover {\\n    --tw-translate-y: -24px\\n}\\n\\n.hover\\\\:sl--translate-y-7:hover {\\n    --tw-translate-y: -28px\\n}\\n\\n.hover\\\\:sl--translate-y-8:hover {\\n    --tw-translate-y: -32px\\n}\\n\\n.hover\\\\:sl--translate-y-9:hover {\\n    --tw-translate-y: -36px\\n}\\n\\n.hover\\\\:sl--translate-y-10:hover {\\n    --tw-translate-y: -40px\\n}\\n\\n.hover\\\\:sl--translate-y-11:hover {\\n    --tw-translate-y: -44px\\n}\\n\\n.hover\\\\:sl--translate-y-12:hover {\\n    --tw-translate-y: -48px\\n}\\n\\n.hover\\\\:sl--translate-y-14:hover {\\n    --tw-translate-y: -56px\\n}\\n\\n.hover\\\\:sl--translate-y-16:hover {\\n    --tw-translate-y: -64px\\n}\\n\\n.hover\\\\:sl--translate-y-20:hover {\\n    --tw-translate-y: -80px\\n}\\n\\n.hover\\\\:sl--translate-y-24:hover {\\n    --tw-translate-y: -96px\\n}\\n\\n.hover\\\\:sl--translate-y-28:hover {\\n    --tw-translate-y: -112px\\n}\\n\\n.hover\\\\:sl--translate-y-32:hover {\\n    --tw-translate-y: -128px\\n}\\n\\n.hover\\\\:sl--translate-y-36:hover {\\n    --tw-translate-y: -144px\\n}\\n\\n.hover\\\\:sl--translate-y-40:hover {\\n    --tw-translate-y: -160px\\n}\\n\\n.hover\\\\:sl--translate-y-44:hover {\\n    --tw-translate-y: -176px\\n}\\n\\n.hover\\\\:sl--translate-y-48:hover {\\n    --tw-translate-y: -192px\\n}\\n\\n.hover\\\\:sl--translate-y-52:hover {\\n    --tw-translate-y: -208px\\n}\\n\\n.hover\\\\:sl--translate-y-56:hover {\\n    --tw-translate-y: -224px\\n}\\n\\n.hover\\\\:sl--translate-y-60:hover {\\n    --tw-translate-y: -240px\\n}\\n\\n.hover\\\\:sl--translate-y-64:hover {\\n    --tw-translate-y: -256px\\n}\\n\\n.hover\\\\:sl--translate-y-72:hover {\\n    --tw-translate-y: -288px\\n}\\n\\n.hover\\\\:sl--translate-y-80:hover {\\n    --tw-translate-y: -320px\\n}\\n\\n.hover\\\\:sl--translate-y-96:hover {\\n    --tw-translate-y: -384px\\n}\\n\\n.hover\\\\:sl--translate-y-px:hover {\\n    --tw-translate-y: -1px\\n}\\n\\n.hover\\\\:sl--translate-y-0\\\\.5:hover {\\n    --tw-translate-y: -2px\\n}\\n\\n.hover\\\\:sl--translate-y-1\\\\.5:hover {\\n    --tw-translate-y: -6px\\n}\\n\\n.hover\\\\:sl--translate-y-2\\\\.5:hover {\\n    --tw-translate-y: -10px\\n}\\n\\n.hover\\\\:sl--translate-y-3\\\\.5:hover {\\n    --tw-translate-y: -14px\\n}\\n\\n.hover\\\\:sl--translate-y-4\\\\.5:hover {\\n    --tw-translate-y: -18px\\n}\\n\\n.sl-select-none {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none\\n}\\n\\n.sl-select-text {\\n    -webkit-user-select: text;\\n    -moz-user-select: text;\\n    -ms-user-select: text;\\n    user-select: text\\n}\\n\\n.sl-select-all {\\n    -webkit-user-select: all;\\n    -moz-user-select: all;\\n    user-select: all\\n}\\n\\n.sl-select-auto {\\n    -webkit-user-select: auto;\\n    -moz-user-select: auto;\\n    -ms-user-select: auto;\\n    user-select: auto\\n}\\n\\n.sl-align-baseline {\\n    vertical-align: initial\\n}\\n\\n.sl-align-top {\\n    vertical-align: top\\n}\\n\\n.sl-align-middle {\\n    vertical-align: middle\\n}\\n\\n.sl-align-bottom {\\n    vertical-align: bottom\\n}\\n\\n.sl-align-text-top {\\n    vertical-align: text-top\\n}\\n\\n.sl-align-text-bottom {\\n    vertical-align: text-bottom\\n}\\n\\n.sl-visible {\\n    visibility: visible\\n}\\n\\n.sl-invisible {\\n    visibility: hidden\\n}\\n\\n.sl-group:hover .group-hover\\\\:sl-visible {\\n    visibility: visible\\n}\\n\\n.sl-group:hover .group-hover\\\\:sl-invisible {\\n    visibility: hidden\\n}\\n\\n.sl-group:focus .group-focus\\\\:sl-visible {\\n    visibility: visible\\n}\\n\\n.sl-group:focus .group-focus\\\\:sl-invisible {\\n    visibility: hidden\\n}\\n\\n.sl-whitespace-normal {\\n    white-space: normal\\n}\\n\\n.sl-whitespace-nowrap {\\n    white-space: nowrap\\n}\\n\\n.sl-whitespace-pre {\\n    white-space: pre\\n}\\n\\n.sl-whitespace-pre-line {\\n    white-space: pre-line\\n}\\n\\n.sl-whitespace-pre-wrap {\\n    white-space: pre-wrap\\n}\\n\\n.sl-w-0 {\\n    width: 0\\n}\\n\\n.sl-w-1 {\\n    width: 4px\\n}\\n\\n.sl-w-2 {\\n    width: 8px\\n}\\n\\n.sl-w-3 {\\n    width: 12px\\n}\\n\\n.sl-w-4 {\\n    width: 16px\\n}\\n\\n.sl-w-5 {\\n    width: 20px\\n}\\n\\n.sl-w-6 {\\n    width: 24px\\n}\\n\\n.sl-w-7 {\\n    width: 28px\\n}\\n\\n.sl-w-8 {\\n    width: 32px\\n}\\n\\n.sl-w-9 {\\n    width: 36px\\n}\\n\\n.sl-w-10 {\\n    width: 40px\\n}\\n\\n.sl-w-11 {\\n    width: 44px\\n}\\n\\n.sl-w-12 {\\n    width: 48px\\n}\\n\\n.sl-w-14 {\\n    width: 56px\\n}\\n\\n.sl-w-16 {\\n    width: 64px\\n}\\n\\n.sl-w-20 {\\n    width: 80px\\n}\\n\\n.sl-w-24 {\\n    width: 96px\\n}\\n\\n.sl-w-28 {\\n    width: 112px\\n}\\n\\n.sl-w-32 {\\n    width: 128px\\n}\\n\\n.sl-w-36 {\\n    width: 144px\\n}\\n\\n.sl-w-40 {\\n    width: 160px\\n}\\n\\n.sl-w-44 {\\n    width: 176px\\n}\\n\\n.sl-w-48 {\\n    width: 192px\\n}\\n\\n.sl-w-52 {\\n    width: 208px\\n}\\n\\n.sl-w-56 {\\n    width: 224px\\n}\\n\\n.sl-w-60 {\\n    width: 240px\\n}\\n\\n.sl-w-64 {\\n    width: 256px\\n}\\n\\n.sl-w-72 {\\n    width: 288px\\n}\\n\\n.sl-w-80 {\\n    width: 320px\\n}\\n\\n.sl-w-96 {\\n    width: 384px\\n}\\n\\n.sl-w-auto {\\n    width: auto\\n}\\n\\n.sl-w-px {\\n    width: 1px\\n}\\n\\n.sl-w-0\\\\.5 {\\n    width: 2px\\n}\\n\\n.sl-w-1\\\\.5 {\\n    width: 6px\\n}\\n\\n.sl-w-2\\\\.5 {\\n    width: 10px\\n}\\n\\n.sl-w-3\\\\.5 {\\n    width: 14px\\n}\\n\\n.sl-w-4\\\\.5 {\\n    width: 18px\\n}\\n\\n.sl-w-xs {\\n    width: 20px\\n}\\n\\n.sl-w-sm {\\n    width: 24px\\n}\\n\\n.sl-w-md {\\n    width: 32px\\n}\\n\\n.sl-w-lg {\\n    width: 36px\\n}\\n\\n.sl-w-xl {\\n    width: 44px\\n}\\n\\n.sl-w-2xl {\\n    width: 52px\\n}\\n\\n.sl-w-3xl {\\n    width: 60px\\n}\\n\\n.sl-w-1\\\\/2 {\\n    width: 50%\\n}\\n\\n.sl-w-1\\\\/3 {\\n    width: 33.333333%\\n}\\n\\n.sl-w-2\\\\/3 {\\n    width: 66.666667%\\n}\\n\\n.sl-w-1\\\\/4 {\\n    width: 25%\\n}\\n\\n.sl-w-2\\\\/4 {\\n    width: 50%\\n}\\n\\n.sl-w-3\\\\/4 {\\n    width: 75%\\n}\\n\\n.sl-w-1\\\\/5 {\\n    width: 20%\\n}\\n\\n.sl-w-2\\\\/5 {\\n    width: 40%\\n}\\n\\n.sl-w-3\\\\/5 {\\n    width: 60%\\n}\\n\\n.sl-w-4\\\\/5 {\\n    width: 80%\\n}\\n\\n.sl-w-1\\\\/6 {\\n    width: 16.666667%\\n}\\n\\n.sl-w-2\\\\/6 {\\n    width: 33.333333%\\n}\\n\\n.sl-w-3\\\\/6 {\\n    width: 50%\\n}\\n\\n.sl-w-4\\\\/6 {\\n    width: 66.666667%\\n}\\n\\n.sl-w-5\\\\/6 {\\n    width: 83.333333%\\n}\\n\\n.sl-w-full {\\n    width: 100%\\n}\\n\\n.sl-w-screen {\\n    width: 100vw\\n}\\n\\n.sl-w-min {\\n    width: -moz-min-content;\\n    width: min-content\\n}\\n\\n.sl-w-max {\\n    width: -moz-max-content;\\n    width: max-content\\n}\\n\\n.sl-break-normal {\\n    overflow-wrap: normal;\\n    word-break: normal\\n}\\n\\n.sl-break-words {\\n    overflow-wrap: break-word\\n}\\n\\n.sl-break-all {\\n    word-break: break-all\\n}\\n\\n.sl-z-0 {\\n    z-index: 0\\n}\\n\\n.sl-z-10 {\\n    z-index: 10\\n}\\n\\n.sl-z-20 {\\n    z-index: 20\\n}\\n\\n.sl-z-30 {\\n    z-index: 30\\n}\\n\\n.sl-z-40 {\\n    z-index: 40\\n}\\n\\n.sl-z-50 {\\n    z-index: 50\\n}\\n\\n.sl-z-auto {\\n    z-index: auto\\n}\\n\\n.focus\\\\:sl-z-0:focus {\\n    z-index: 0\\n}\\n\\n.focus\\\\:sl-z-10:focus {\\n    z-index: 10\\n}\\n\\n.focus\\\\:sl-z-20:focus {\\n    z-index: 20\\n}\\n\\n.focus\\\\:sl-z-30:focus {\\n    z-index: 30\\n}\\n\\n.focus\\\\:sl-z-40:focus {\\n    z-index: 40\\n}\\n\\n.focus\\\\:sl-z-50:focus {\\n    z-index: 50\\n}\\n\\n.focus\\\\:sl-z-auto:focus {\\n    z-index: auto\\n}\\n\\n:root {\\n    --font-prose: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";\\n    --font-ui: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";\\n    --font-mono: \\\"SF Mono\\\", ui-monospace, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    --font-code: var(--font-mono);\\n    --fs-paragraph-leading: 22px;\\n    --fs-paragraph: 16px;\\n    --fs-code: 14px;\\n    --fs-paragraph-small: 14px;\\n    --fs-paragraph-tiny: 12px;\\n    --lh-paragraph-leading: 1.875;\\n    --lh-paragraph: 1.625;\\n    --lh-code: 1.5;\\n    --lh-paragraph-small: 1.625;\\n    --lh-paragraph-tiny: 1.625;\\n    --color-code: var(--color-canvas-tint);\\n    --color-on-code: var(--color-text-heading)\\n}\\n\\n.sl-avatar--with-bg:before {\\n    background-color: var(--avatar-bg-color);\\n    bottom: 0;\\n    content: \\\" \\\";\\n    left: 0;\\n    opacity: var(--avatar-bg-opacity);\\n    position: absolute;\\n    right: 0;\\n    top: 0\\n}\\n\\n.sl-aspect-ratio:before {\\n    content: \\\"\\\";\\n    display: block;\\n    height: 0;\\n    padding-bottom: calc(1/var(--ratio)*100%)\\n}\\n\\n.sl-aspect-ratio>:not(style) {\\n    align-items: center;\\n    bottom: 0;\\n    display: flex;\\n    height: 100%;\\n    justify-content: center;\\n    left: 0;\\n    overflow: hidden;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    width: 100%\\n}\\n\\n.sl-aspect-ratio>img,\\n.sl-aspect-ratio>video {\\n    object-fit: cover\\n}\\n\\n.sl-badge {\\n    align-items: center;\\n    border-width: 1px;\\n    display: inline-flex;\\n    outline: 2px solid transparent;\\n    outline-offset: 2px\\n}\\n\\n.sl-badge a {\\n    color: var(--color-text-muted)\\n}\\n\\n.sl-badge a:hover {\\n    color: var(--color-text);\\n    cursor: pointer\\n}\\n\\n.sl-button {\\n    align-items: center;\\n    display: inline-flex;\\n    line-height: 0;\\n    outline: 2px solid transparent;\\n    outline-offset: 2px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap\\n}\\n\\n.sl-button-group>.sl-button:not(:first-child):not(:last-child) {\\n    border-radius: 0;\\n    border-right: 0\\n}\\n\\n.sl-button-group>.sl-button:first-child:not(:last-child) {\\n    border-bottom-right-radius: 0;\\n    border-right: 0;\\n    border-top-right-radius: 0\\n}\\n\\n.sl-button-group>.sl-button:last-child:not(:first-child) {\\n    border-bottom-left-radius: 0;\\n    border-top-left-radius: 0\\n}\\n\\n.sl-image--inverted {\\n    filter: invert(1) hue-rotate(180deg);\\n    mix-blend-mode: screen\\n}\\n\\n.Link,\\n.Link>code {\\n    color: var(--color-link)\\n}\\n\\n.Link:hover,\\n.Link:hover>code {\\n    color: var(--color-link-dark)\\n}\\n\\n.sl-link-heading:hover .sl-link-heading__icon {\\n    opacity: 1\\n}\\n\\n.sl-link-heading__icon {\\n    opacity: 0\\n}\\n\\n.sl-menu {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none\\n}\\n\\n.sl-menu--pointer-interactions .sl-menu-item:not(.sl-menu-item--disabled):hover {\\n    background-color: var(--color-primary);\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu--pointer-interactions .sl-menu-item:not(.sl-menu-item--disabled):hover .sl-menu-item__description {\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu--pointer-interactions .sl-menu-item:not(.sl-menu-item--disabled):hover .sl-menu-item__icon {\\n    color: var(--color-on-primary) !important\\n}\\n\\n.sl-menu-item__link-icon,\\n.sl-menu-item__meta-text {\\n    opacity: .6\\n}\\n\\n.sl-menu-item--disabled .sl-menu-item__title-wrapper {\\n    cursor: not-allowed;\\n    opacity: .5\\n}\\n\\n.sl-menu-item--disabled .sl-menu-item__meta-text {\\n    cursor: not-allowed;\\n    opacity: .4\\n}\\n\\n.sl-menu-item--focused {\\n    background-color: var(--color-primary);\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu-item--focused .sl-menu-item__link-icon,\\n.sl-menu-item--focused .sl-menu-item__meta-text {\\n    opacity: 1\\n}\\n\\n.sl-menu-item--focused .sl-menu-item__description {\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu-item--focused .sl-menu-item__icon {\\n    color: var(--color-on-primary) !important\\n}\\n\\n.sl-menu-item--submenu-active {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.sl-menu-item__title-wrapper {\\n    max-width: 250px\\n}\\n\\n.sl-menu-item__description {\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    display: -webkit-box;\\n    overflow: hidden\\n}\\n\\n.sl-popover {\\n    --tw-blur: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-brightness: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-contrast: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-grayscale: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-hue-rotate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-invert: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-saturate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-sepia: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-default1)) drop-shadow(var(--drop-shadow-default2));\\n    border-radius: 2px;\\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\\n}\\n\\n.sl-popover>:not(.sl-popover__tip) {\\n    border-radius: 2px;\\n    position: relative;\\n    z-index: 10\\n}\\n\\n.sl-prose {\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    --fs-paragraph: 1em;\\n    --fs-paragraph-small: 0.875em;\\n    --fs-code: 0.875em;\\n    font-family: var(--font-prose);\\n    font-size: 16px;\\n    line-height: var(--lh-paragraph)\\n}\\n\\n.sl-prose>:first-child {\\n    margin-top: 0\\n}\\n\\n.sl-prose>:last-child {\\n    margin-bottom: 0\\n}\\n\\n.sl-prose h1 {\\n    font-size: 2.25em\\n}\\n\\n.sl-prose>h1 {\\n    margin-bottom: 1.11em;\\n    margin-top: 0\\n}\\n\\n.sl-prose h2 {\\n    font-size: 1.75em;\\n    line-height: 1.3333333\\n}\\n\\n.sl-prose>h2 {\\n    margin-bottom: 1em;\\n    margin-top: 1.428em\\n}\\n\\n.sl-prose h3 {\\n    font-size: 1.25em\\n}\\n\\n.sl-prose>h3 {\\n    margin-bottom: .8em;\\n    margin-top: 2em\\n}\\n\\n.sl-prose h4 {\\n    font-size: 1em\\n}\\n\\n.sl-prose>h4 {\\n    margin-bottom: .5em;\\n    margin-top: 2em\\n}\\n\\n.sl-prose h2+*,\\n.sl-prose h3+*,\\n.sl-prose h4+* {\\n    margin-top: 0\\n}\\n\\n.sl-prose strong {\\n    font-weight: 600\\n}\\n\\n.sl-prose .sl-text-lg {\\n    font-size: .875em\\n}\\n\\n.sl-prose p {\\n    color: var(--color-text-paragraph);\\n    font-size: var(--fs-paragraph);\\n    margin-bottom: 1em;\\n    margin-top: 1em\\n}\\n\\n.sl-prose p:first-child {\\n    margin-top: 0\\n}\\n\\n.sl-prose p:last-child {\\n    margin-bottom: 0\\n}\\n\\n.sl-prose p>a>img {\\n    display: inline\\n}\\n\\n.sl-prose caption a,\\n.sl-prose figcaption a,\\n.sl-prose li a,\\n.sl-prose p a,\\n.sl-prose table a {\\n    color: var(--color-link)\\n}\\n\\n.sl-prose caption a:hover,\\n.sl-prose figcaption a:hover,\\n.sl-prose li a:hover,\\n.sl-prose p a:hover,\\n.sl-prose table a:hover {\\n    color: var(--color-link-dark)\\n}\\n\\n.sl-prose caption a,\\n.sl-prose figcaption a,\\n.sl-prose li a,\\n.sl-prose p a,\\n.sl-prose table a {\\n    --color-link: var(--color-text-primary);\\n    --color-link-dark: var(--color-primary-dark)\\n}\\n\\n.sl-prose hr {\\n    margin-bottom: 1em;\\n    margin-top: 1em\\n}\\n\\n.sl-prose .sl-live-code {\\n    margin: 1.25em -4px;\\n    table-layout: auto;\\n    width: 100%\\n}\\n\\n.sl-prose .sl-live-code__inner>pre {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl-prose .sl-callout,\\n.sl-prose ol,\\n.sl-prose ul {\\n    margin-bottom: 1.5em;\\n    margin-top: 1.5em\\n}\\n\\n.sl-prose ol,\\n.sl-prose ul {\\n    line-height: var(--lh-paragraph)\\n}\\n\\n.sl-prose ol li,\\n.sl-prose ul li {\\n    padding-left: 2em\\n}\\n\\n.sl-prose ol li {\\n    position: relative\\n}\\n\\n.sl-prose ol li:before {\\n    content: counter(list-item) \\\". \\\";\\n    font-variant-numeric: tabular-nums\\n}\\n\\n.sl-prose ul:not(.contains-task-list) li {\\n    position: relative\\n}\\n\\n.sl-prose ul:not(.contains-task-list) li:before {\\n    background-color: var(--color-text);\\n    border-radius: 50%;\\n    content: \\\"\\\";\\n    height: .375em;\\n    left: .75em;\\n    opacity: .7;\\n    position: absolute;\\n    top: .625em;\\n    width: .375em\\n}\\n\\n.sl-prose li {\\n    margin-bottom: 4px;\\n    margin-top: 4px;\\n    padding-left: 1.75em\\n}\\n\\n.sl-prose li p {\\n    display: inline;\\n    margin-bottom: .75em;\\n    margin-top: .75em\\n}\\n\\n.sl-prose li>:first-child {\\n    margin-top: 0\\n}\\n\\n.sl-prose>ol p+:last-child,\\n.sl-prose>ul p+:last-child {\\n    margin-bottom: .75em\\n}\\n\\n.sl-prose ol ol,\\n.sl-prose ol ul,\\n.sl-prose ul ol,\\n.sl-prose ul ul {\\n    margin-bottom: 2px;\\n    margin-top: 2px\\n}\\n\\n.sl-prose ul.contains-task-list input {\\n    margin-left: -1.875em;\\n    margin-right: .625em;\\n    position: relative;\\n    top: 1px\\n}\\n\\n.sl-prose ul.contains-task-list p {\\n    margin-top: 0\\n}\\n\\n.sl-prose figure {\\n    margin-bottom: 1.5em;\\n    margin-top: 1.5em\\n}\\n\\n.sl-prose figure figure,\\n.sl-prose figure img,\\n.sl-prose figure video {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl-prose figure>figcaption,\\n.sl-prose figure>figcaption p {\\n    color: var(--color-text-muted);\\n    font-size: var(--fs-paragraph-small);\\n    line-height: var(--lh-paragraph-small);\\n    margin-top: 8px;\\n    padding-left: 16px;\\n    padding-right: 16px;\\n    text-align: center\\n}\\n\\n.sl-prose blockquote p {\\n    margin-bottom: .5em;\\n    margin-top: .5em\\n}\\n\\n.sl-prose table {\\n    font-size: var(--fs-paragraph-small);\\n    margin-bottom: 1.5em;\\n    margin-left: -4px;\\n    margin-right: -4px;\\n    overflow-x: auto;\\n    table-layout: auto;\\n    width: 100%\\n}\\n\\n.sl-prose thead td,\\n.sl-prose thead th {\\n    color: var(--color-text-muted);\\n    font-size: .857em;\\n    font-weight: 500;\\n    padding: 8px 12px;\\n    text-transform: uppercase\\n}\\n\\n.sl-prose thead td:first-child,\\n.sl-prose thead th:first-child {\\n    padding-left: 4px\\n}\\n\\n.sl-prose tbody {\\n    border-radius: 5px;\\n    box-shadow: 0 0 0 1px var(--color-border, currentColor)\\n}\\n\\n.sl-prose tbody tr {\\n    border-top-width: 1px\\n}\\n\\n.sl-prose tbody tr:first-child {\\n    border-top: 0\\n}\\n\\n.sl-prose tbody tr:nth-child(2n) {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.sl-prose td {\\n    margin: .625em .75em;\\n    padding: 10px 12px;\\n    vertical-align: top\\n}\\n\\n.sl-prose td:not([align=center], [align=right]),\\n.sl-prose th:not([align=center], [align=right]) {\\n    text-align: left\\n}\\n\\n.sl-prose .mermaid {\\n    margin-bottom: 1.5em;\\n    margin-top: 1.5em\\n}\\n\\n.sl-prose .mermaid>svg {\\n    border-radius: 5px;\\n    border-width: 1px;\\n    height: auto !important;\\n    padding: 1.25em\\n}\\n\\n.sl-prose .sl-code-group .mermaid,\\n.sl-prose .sl-code-group pre {\\n    margin-top: 0\\n}\\n\\n.sl-svg-focus {\\n    filter: drop-shadow(0 0 1px hsla(var(--primary-h), 80%, 51%, .9))\\n}\\n\\n.sl-radio-group__radio:hover {\\n    cursor: pointer\\n}\\n\\n.sl-radio-group__radio--disabled {\\n    opacity: .6\\n}\\n\\n.sl-radio-group__radio--disabled:hover {\\n    cursor: not-allowed\\n}\\n\\n.sl-stack--horizontal.sl-stack--1>:not(style)~:not(style) {\\n    margin-left: 4px\\n}\\n\\n.sl-stack--horizontal.sl-stack--2>:not(style)~:not(style) {\\n    margin-left: 8px\\n}\\n\\n.sl-stack--horizontal.sl-stack--3>:not(style)~:not(style) {\\n    margin-left: 12px\\n}\\n\\n.sl-stack--horizontal.sl-stack--4>:not(style)~:not(style) {\\n    margin-left: 16px\\n}\\n\\n.sl-stack--horizontal.sl-stack--5>:not(style)~:not(style) {\\n    margin-left: 20px\\n}\\n\\n.sl-stack--horizontal.sl-stack--6>:not(style)~:not(style) {\\n    margin-left: 24px\\n}\\n\\n.sl-stack--horizontal.sl-stack--8>:not(style)~:not(style) {\\n    margin-left: 32px\\n}\\n\\n.sl-stack--horizontal.sl-stack--10>:not(style)~:not(style) {\\n    margin-left: 40px\\n}\\n\\n.sl-stack--horizontal.sl-stack--12>:not(style)~:not(style) {\\n    margin-left: 48px\\n}\\n\\n.sl-stack--horizontal.sl-stack--14>:not(style)~:not(style) {\\n    margin-left: 56px\\n}\\n\\n.sl-stack--horizontal.sl-stack--16>:not(style)~:not(style) {\\n    margin-left: 64px\\n}\\n\\n.sl-stack--horizontal.sl-stack--20>:not(style)~:not(style) {\\n    margin-left: 80px\\n}\\n\\n.sl-stack--horizontal.sl-stack--24>:not(style)~:not(style) {\\n    margin-left: 96px\\n}\\n\\n.sl-stack--horizontal.sl-stack--32>:not(style)~:not(style) {\\n    margin-left: 128px\\n}\\n\\n.sl-stack--vertical.sl-stack--1>:not(style)~:not(style) {\\n    margin-top: 4px\\n}\\n\\n.sl-stack--vertical.sl-stack--2>:not(style)~:not(style) {\\n    margin-top: 8px\\n}\\n\\n.sl-stack--vertical.sl-stack--3>:not(style)~:not(style) {\\n    margin-top: 12px\\n}\\n\\n.sl-stack--vertical.sl-stack--4>:not(style)~:not(style) {\\n    margin-top: 16px\\n}\\n\\n.sl-stack--vertical.sl-stack--5>:not(style)~:not(style) {\\n    margin-top: 20px\\n}\\n\\n.sl-stack--vertical.sl-stack--6>:not(style)~:not(style) {\\n    margin-top: 24px\\n}\\n\\n.sl-stack--vertical.sl-stack--8>:not(style)~:not(style) {\\n    margin-top: 32px\\n}\\n\\n.sl-stack--vertical.sl-stack--10>:not(style)~:not(style) {\\n    margin-top: 40px\\n}\\n\\n.sl-stack--vertical.sl-stack--12>:not(style)~:not(style) {\\n    margin-top: 48px\\n}\\n\\n.sl-stack--vertical.sl-stack--14>:not(style)~:not(style) {\\n    margin-top: 56px\\n}\\n\\n.sl-stack--vertical.sl-stack--16>:not(style)~:not(style) {\\n    margin-top: 64px\\n}\\n\\n.sl-stack--vertical.sl-stack--20>:not(style)~:not(style) {\\n    margin-top: 80px\\n}\\n\\n.sl-stack--vertical.sl-stack--24>:not(style)~:not(style) {\\n    margin-top: 96px\\n}\\n\\n.sl-stack--vertical.sl-stack--32>:not(style)~:not(style) {\\n    margin-top: 128px\\n}\\n\\n.sl-switch .sl-switch__indicator {\\n    transition: background-color .1s cubic-bezier(.4, 1, .75, .9)\\n}\\n\\n.sl-switch .sl-switch__indicator .sl-switch__icon {\\n    visibility: hidden\\n}\\n\\n.sl-switch .sl-switch__indicator:before {\\n    background-color: var(--color-canvas);\\n    border-radius: 50%;\\n    content: \\\"\\\";\\n    height: calc(100% - 4px);\\n    left: 0;\\n    margin: 2px;\\n    position: absolute;\\n    transition: left .1s cubic-bezier(.4, 1, .75, .9);\\n    width: calc(50% - 4px)\\n}\\n\\n.sl-switch input:checked:disabled~.sl-switch__indicator {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.sl-switch input:checked~.sl-switch__indicator {\\n    background-color: var(--color-primary)\\n}\\n\\n.sl-switch input:checked~.sl-switch__indicator .sl-switch__icon {\\n    visibility: visible\\n}\\n\\n.sl-switch input:checked~.sl-switch__indicator:before {\\n    left: 50%\\n}\\n\\n.sl-tooltip {\\n    --tw-blur: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-brightness: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-contrast: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-grayscale: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-hue-rotate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-invert: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-saturate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-sepia: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-default1)) drop-shadow(var(--drop-shadow-default2));\\n    border-radius: 2px;\\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n    font-size: 11px;\\n    max-width: 300px;\\n    padding: 4px 6px\\n}\\n\\n.sl-tooltip>:not(.sl-tooltip_tip) {\\n    position: relative;\\n    z-index: 10\\n}\\n\\n#apim_elements input,\\n#apim_elements textarea {\\n    background-color: initial\\n}\\n\\n.sl-focus-ring {\\n    --tw-ring-color: hsla(var(--primary-h), 80%, 61%, var(--tw-ring-opacity));\\n    --tw-ring-opacity: 0.5;\\n    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n    border-radius: 2px;\\n    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)\\n}\\n\\n:root,\\n[data-theme=light],\\n[data-theme=light] .sl-inverted .sl-inverted,\\n[data-theme=light] .sl-inverted .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 15%;\\n    --shadow-sm: 0px 0px 1px rgba(67, 90, 111, .3);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .25), 0px 0px 1px rgba(67, 90, 111, .3);\\n    --shadow-lg: 0 4px 17px rgba(67, 90, 111, .2), 0 2px 3px rgba(0, 0, 0, .1), inset 0 0 0 .5px var(--color-canvas-pure), 0 0 0 .5px rgba(0, 0, 0, .2);\\n    --shadow-xl: 0px 0px 1px rgba(67, 90, 111, .3), 0px 8px 10px -4px rgba(67, 90, 111, .45);\\n    --shadow-2xl: 0px 0px 1px rgba(67, 90, 111, .3), 0px 16px 24px -8px rgba(67, 90, 111, .45);\\n    --drop-shadow-default1: 0 0 0.5px rgba(0, 0, 0, .6);\\n    --drop-shadow-default2: 0 2px 5px rgba(67, 90, 111, .3);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 40%;\\n    --canvas-l: 100%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #fff;\\n    --color-canvas-tint: rgba(245, 247, 250, .5);\\n    --color-canvas-50: #f5f7fa;\\n    --color-canvas-100: #ebeef5;\\n    --color-canvas-200: #e0e6f0;\\n    --color-canvas-300: #d5ddeb;\\n    --color-canvas-400: #cbd5e7;\\n    --color-canvas-500: #c0cde2;\\n    --color-canvas-dialog: #fff;\\n    --color-border-dark: hsla(var(--canvas-h), 30%, 72%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 32%, 78%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 24%, 84%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 24%, 72%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 24%, 20%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 100%;\\n    --primary-l: 55%;\\n    --color-text-primary: #0081cc;\\n    --color-primary-dark: #1891d8;\\n    --color-primary-darker: #126fa5;\\n    --color-primary: #19abff;\\n    --color-primary-light: #52bfff;\\n    --color-primary-tint: rgba(77, 190, 255, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 37%;\\n    --color-text-success: #05c779;\\n    --color-success-dark: #138b5b;\\n    --color-success-darker: #0f6c47;\\n    --color-success: #05b870;\\n    --color-success-light: #06db86;\\n    --color-success-tint: rgba(81, 251, 183, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 56%;\\n    --color-text-warning: #c2470a;\\n    --color-warning-dark: #d35d22;\\n    --color-warning-darker: #9e461a;\\n    --color-warning: #f46d2a;\\n    --color-warning-light: #f7925f;\\n    --color-warning-tint: rgba(246, 139, 85, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 63%;\\n    --color-text-danger: #bc1010;\\n    --color-danger-dark: #d83b3b;\\n    --color-danger-darker: #af2323;\\n    --color-danger: #f05151;\\n    --color-danger-light: #f58e8e;\\n    --color-danger-tint: rgba(241, 91, 91, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n:root .sl-inverted,\\n[data-theme=light] .sl-inverted,\\n[data-theme=light] .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 86%;\\n    --shadow-sm: 0px 0px 1px rgba(11, 13, 19, .5);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .35), 0px 0px 1px rgba(11, 13, 19, .4);\\n    --shadow-lg: 0 2px 14px rgba(0, 0, 0, .55), 0 0 0 0.5px hsla(0, 0%, 100%, .2);\\n    --shadow-xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 8px 10px -4px rgba(11, 13, 19, .55);\\n    --shadow-2xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 16px 24px -8px rgba(11, 13, 19, .55);\\n    --drop-shadow-default1: 0 0 0.5px hsla(0, 0%, 100%, .5);\\n    --drop-shadow-default2: 0 3px 8px rgba(0, 0, 0, .6);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 32%;\\n    --canvas-l: 10%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #0c1018;\\n    --color-canvas-tint: rgba(60, 76, 103, .2);\\n    --color-canvas-50: #3c4c67;\\n    --color-canvas-100: #2d394e;\\n    --color-canvas-200: #212a3b;\\n    --color-canvas-300: #19212e;\\n    --color-canvas-400: #171e2b;\\n    --color-canvas-500: #151c28;\\n    --color-canvas-dialog: #2d394e;\\n    --color-border-dark: hsla(var(--canvas-h), 24%, 23%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 26%, 28%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 19%, 34%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 19%, 30%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 19%, 80%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 90%;\\n    --primary-l: 51%;\\n    --color-text-primary: #66c7ff;\\n    --color-primary-dark: #1f83bd;\\n    --color-primary-darker: #186491;\\n    --color-primary: #12a0f3;\\n    --color-primary-light: #42b3f5;\\n    --color-primary-tint: rgba(85, 187, 246, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 67%;\\n    --color-text-success: #41f1ab;\\n    --color-success-dark: #47dca0;\\n    --color-success-darker: #24bc7f;\\n    --color-success: #62f3b9;\\n    --color-success-light: #a0f8d5;\\n    --color-success-tint: rgba(89, 243, 181, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 50%;\\n    --color-text-warning: #ec7d46;\\n    --color-warning-dark: #b55626;\\n    --color-warning-darker: #8b421d;\\n    --color-warning: #e75d18;\\n    --color-warning-light: #ec7d46;\\n    --color-warning-tint: rgba(238, 142, 93, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 43%;\\n    --color-text-danger: #e74b4b;\\n    --color-danger-dark: #972626;\\n    --color-danger-darker: #721d1d;\\n    --color-danger: #c11a1a;\\n    --color-danger-light: #e22828;\\n    --color-danger-tint: rgba(234, 98, 98, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n[data-theme=dark],\\n[data-theme=dark] .sl-inverted .sl-inverted,\\n[data-theme=dark] .sl-inverted .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 85%;\\n    --shadow-sm: 0px 0px 1px rgba(11, 13, 19, .5);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .35), 0px 0px 1px rgba(11, 13, 19, .4);\\n    --shadow-lg: 0 2px 14px rgba(0, 0, 0, .55), 0 0 0 0.5px hsla(0, 0%, 100%, .2);\\n    --shadow-xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 8px 10px -4px rgba(11, 13, 19, .55);\\n    --shadow-2xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 16px 24px -8px rgba(11, 13, 19, .55);\\n    --drop-shadow-default1: 0 0 0.5px hsla(0, 0%, 100%, .5);\\n    --drop-shadow-default2: 0 3px 8px rgba(0, 0, 0, .6);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 32%;\\n    --canvas-l: 8%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #090c11;\\n    --color-canvas-tint: rgba(57, 71, 96, .2);\\n    --color-canvas-50: #262f40;\\n    --color-canvas-100: #1a212d;\\n    --color-canvas-200: #121821;\\n    --color-canvas-300: #0e131a;\\n    --color-canvas-400: #0c1017;\\n    --color-canvas-500: #0c1017;\\n    --color-canvas-dialog: #1a212d;\\n    --color-border-dark: hsla(var(--canvas-h), 24%, 21%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 26%, 26%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 19%, 32%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 19%, 28%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 19%, 80%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 80%;\\n    --primary-l: 36%;\\n    --color-text-primary: #66c7ff;\\n    --color-primary-dark: #1c5a7d;\\n    --color-primary-darker: #154560;\\n    --color-primary: #126fa5;\\n    --color-primary-light: #1685c5;\\n    --color-primary-tint: rgba(21, 130, 193, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 37%;\\n    --color-text-success: #4be7a9;\\n    --color-success-dark: #145239;\\n    --color-success-darker: #10422e;\\n    --color-success: #0f6c47;\\n    --color-success-light: #128255;\\n    --color-success-tint: rgba(26, 188, 123, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 56%;\\n    --color-text-warning: #e28150;\\n    --color-warning-dark: #7d4021;\\n    --color-warning-darker: #61311a;\\n    --color-warning: #9e461a;\\n    --color-warning-light: #c1551f;\\n    --color-warning-tint: rgba(184, 81, 30, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 63%;\\n    --color-text-danger: #d55;\\n    --color-danger-dark: #892929;\\n    --color-danger-darker: #6a2020;\\n    --color-danger: #af2323;\\n    --color-danger-light: #d12929;\\n    --color-danger-tint: rgba(179, 35, 35, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n[data-theme=dark] .sl-inverted,\\n[data-theme=dark] .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 89%;\\n    --shadow-sm: 0px 0px 1px rgba(11, 13, 19, .5);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .35), 0px 0px 1px rgba(11, 13, 19, .4);\\n    --shadow-lg: 0 2px 14px rgba(0, 0, 0, .55), 0 0 0 0.5px hsla(0, 0%, 100%, .2);\\n    --shadow-xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 8px 10px -4px rgba(11, 13, 19, .55);\\n    --shadow-2xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 16px 24px -8px rgba(11, 13, 19, .55);\\n    --drop-shadow-default1: 0 0 0.5px hsla(0, 0%, 100%, .5);\\n    --drop-shadow-default2: 0 3px 8px rgba(0, 0, 0, .6);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 32%;\\n    --canvas-l: 13%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #111722;\\n    --color-canvas-tint: rgba(66, 83, 112, .2);\\n    --color-canvas-50: #2b374a;\\n    --color-canvas-100: #222b3a;\\n    --color-canvas-200: #1a212e;\\n    --color-canvas-300: #141a24;\\n    --color-canvas-400: #121721;\\n    --color-canvas-500: #121721;\\n    --color-canvas-dialog: #222b3a;\\n    --color-border-dark: hsla(var(--canvas-h), 24%, 26%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 26%, 31%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 19%, 37%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 19%, 33%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 19%, 80%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 80%;\\n    --primary-l: 33%;\\n    --color-text-primary: #66c7ff;\\n    --color-primary-dark: #1a5475;\\n    --color-primary-darker: #14425c;\\n    --color-primary: #116697;\\n    --color-primary-light: #147cb8;\\n    --color-primary-tint: rgba(21, 130, 193, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 67%;\\n    --color-text-success: #4be7a9;\\n    --color-success-dark: #25986a;\\n    --color-success-darker: #1c7350;\\n    --color-success: #1bc581;\\n    --color-success-light: #28e297;\\n    --color-success-tint: rgba(26, 188, 123, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 50%;\\n    --color-text-warning: #e28150;\\n    --color-warning-dark: #713a1e;\\n    --color-warning-darker: #552b16;\\n    --color-warning: #914018;\\n    --color-warning-light: #ab4c1c;\\n    --color-warning-tint: rgba(184, 81, 30, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 43%;\\n    --color-text-danger: #d55;\\n    --color-danger-dark: #5e1c1c;\\n    --color-danger-darker: #471515;\\n    --color-danger: #771818;\\n    --color-danger-light: #911d1d;\\n    --color-danger-tint: rgba(179, 35, 35, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n.sl-elements {\\n    font-size: 13px\\n}\\n\\n.sl-elements .svg-inline--fa {\\n    display: inline-block\\n}\\n\\n.sl-elements .DocsSkeleton {\\n    animation: skeleton-glow .5s linear infinite alternate;\\n    background: rgba(206, 217, 224, .2);\\n    background-clip: padding-box !important;\\n    border-color: rgba(206, 217, 224, .2) !important;\\n    border-radius: 2px;\\n    box-shadow: none !important;\\n    color: transparent !important;\\n    cursor: default;\\n    pointer-events: none;\\n    user-select: none\\n}\\n\\n.sl-elements .Model {\\n    --fs-code: 12px\\n}\\n\\n.sl-elements .ElementsTableOfContentsItem:hover {\\n    color: inherit;\\n    text-decoration: none\\n}\\n\\n.sl-elements .ParameterGrid {\\n    align-items: center;\\n    display: grid;\\n    grid-template-columns: fit-content(120px) 20px auto;\\n    margin-bottom: 16px;\\n    padding-bottom: 0;\\n    row-gap: 3px\\n}\\n\\n.sl-elements .TryItPanel>:nth-child(2) {\\n    overflow: auto\\n}\\n\\n.sl-elements .OperationParametersContent {\\n    max-height: 162px\\n}\\n\\n.sl-elements .Checkbox {\\n    max-width: 15px;\\n    padding-right: 3px\\n}\\n\\n.sl-elements .TextForCheckBox {\\n    padding-left: 9px;\\n    padding-top: 6px\\n}\\n\\n.sl-elements .TextRequestBody {\\n    margin-bottom: 16px;\\n    max-height: 200px;\\n    overflow-y: auto;\\n    padding-bottom: 0\\n}\\n\\n.sl-elements .HttpOperation .JsonSchemaViewer .sl-markdown-viewer p,\\n.sl-elements .HttpOperation__Parameters .sl-markdown-viewer p,\\n.sl-elements .Model .JsonSchemaViewer .sl-markdown-viewer p {\\n    font-size: 12px;\\n    line-height: 1.5em\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./source/src/app/components/Apis/Details/Documents/elements.css\"],\"names\":[],\"mappings\":\"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I;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IAC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AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;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\",\"sourcesContent\":[\"#apim_elements {\\n    margin: 32px;\\n}\\n\\n#apim_elements blockquote,\\n#apim_elements dd,\\n#apim_elements dl,\\n#apim_elements figure,\\n#apim_elements h1,\\n#apim_elements h2,\\n#apim_elements h3,\\n#apim_elements h4,\\n#apim_elements h5,\\n#apim_elements h6,\\n#apim_elements hr,\\n#apim_elements p,\\n#apim_elements pre {\\n    margin: 0\\n}\\n\\n#apim_elements button {\\n    background-color: initial;\\n    background-image: none\\n}\\n\\n:focus {\\n    outline: none\\n}\\n\\n#apim_elements fieldset,\\n#apim_elements l,\\n#apim_elements ul {\\n    margin: 0;\\n    padding: 0\\n}\\n\\n#apim_elements tol,\\n#apim_elements tul {\\n    list-style: none\\n}\\n\\n#apim_elements thtml {\\n    font-family: var(--font-ui);\\n    line-height: 1.5\\n}\\n\\n#apim_elements tbody {\\n    text-rendering: optimizeSpeed;\\n    font-family: inherit;\\n    line-height: inherit;\\n    margin: 0;\\n    min-height: 100vh\\n}\\n\\n#apim_elements t*,\\n#apim_elements t:after,\\n#apim_elements t:before {\\n    border: 0 solid var(--color-border, currentColor);\\n    box-sizing: border-box\\n}\\n\\n#apim_elements thr {\\n    border-top-width: 1px\\n}\\n\\n#apim_elements timg {\\n    border-style: solid\\n}\\n\\n#apim_elements ttextarea {\\n    resize: vertical\\n}\\n\\n#apim_elements input::-ms-input-placeholder,\\n#apim_elements textarea::-ms-input-placeholder {\\n    color: #a1a1aa\\n}\\n\\n#apim_elements input::placeholder,\\n#apim_elements textarea::placeholder {\\n    color: #a1a1aa\\n}\\n\\n#apim_elements [role=button],\\n#apim_elements button {\\n    cursor: pointer\\n}\\n\\n#apim_elements table {\\n    border-collapse: collapse\\n}\\n\\n#apim_elements a {\\n    color: inherit;\\n    text-decoration: inherit\\n}\\n\\n#apim_elements button,\\n#apim_elements input,\\n#apim_elements optgroup,\\n#apim_elements select,\\n#apim_elements textarea {\\n    color: inherit;\\n    line-height: inherit;\\n    padding: 0\\n}\\n\\n#apim_elements code,\\n#apim_elements kbd,\\n#apim_elements pre,\\n#apim_elements samp {\\n    font-family: var(--font-mono)\\n}\\n\\n#apim_elements audio,\\n#apim_elements canvas,\\n#apim_elements embed,\\n#apim_elements iframe,\\n#apim_elements img,\\n#apim_elements object,\\n#apim_elements svg,\\n#apim_elements video {\\n    display: block;\\n    vertical-align: middle\\n}\\n\\n#apim_elements img,\\n#apim_elements video {\\n    height: auto;\\n    max-width: 100%\\n}\\n\\n#apim_elements button {\\n    font-family: var(--font-ui)\\n}\\n\\n#apim_elements select {\\n    -moz-appearance: none;\\n    -webkit-appearance: none\\n}\\n\\n#apim_elements select::-ms-expand {\\n    display: none\\n}\\n\\n#apim_elements iframe {\\n    border: 0\\n}\\n\\n@media (prefers-reduced-motion:reduce) {\\n    * {\\n        animation-duration: .01ms !important;\\n        animation-iteration-count: 1 !important;\\n        scroll-behavior: auto !important;\\n        transition-duration: .01ms !important\\n    }\\n}\\n\\n.sl-content-center {\\n    align-content: center\\n}\\n\\n.sl-content-start {\\n    align-content: flex-start\\n}\\n\\n.sl-content-end {\\n    align-content: flex-end\\n}\\n\\n.sl-content-between {\\n    align-content: space-between\\n}\\n\\n.sl-content-around {\\n    align-content: space-around\\n}\\n\\n.sl-content-evenly {\\n    align-content: space-evenly\\n}\\n\\n.sl-items-start {\\n    align-items: flex-start\\n}\\n\\n.sl-items-end {\\n    align-items: flex-end\\n}\\n\\n.sl-items-center {\\n    align-items: center\\n}\\n\\n.sl-items-baseline {\\n    align-items: baseline\\n}\\n\\n.sl-items-stretch {\\n    align-items: stretch\\n}\\n\\n.sl-self-auto {\\n    align-self: auto\\n}\\n\\n.sl-self-start {\\n    align-self: flex-start\\n}\\n\\n.sl-self-end {\\n    align-self: flex-end\\n}\\n\\n.sl-self-center {\\n    align-self: center\\n}\\n\\n.sl-self-stretch {\\n    align-self: stretch\\n}\\n\\n.sl-bg-transparent {\\n    background-color: initial\\n}\\n\\n.sl-bg-current {\\n    background-color: currentColor\\n}\\n\\n.sl-bg-lighten-100 {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.sl-bg-darken-100 {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.sl-bg-primary {\\n    background-color: var(--color-primary)\\n}\\n\\n.sl-bg-primary-tint {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.sl-bg-primary-light {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.sl-bg-primary-dark {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.sl-bg-primary-darker {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.sl-bg-success {\\n    background-color: var(--color-success)\\n}\\n\\n.sl-bg-success-tint {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.sl-bg-success-light {\\n    background-color: var(--color-success-light)\\n}\\n\\n.sl-bg-success-dark {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.sl-bg-success-darker {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.sl-bg-warning {\\n    background-color: var(--color-warning)\\n}\\n\\n.sl-bg-warning-tint {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.sl-bg-warning-light {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.sl-bg-warning-dark {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.sl-bg-warning-darker {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.sl-bg-danger {\\n    background-color: var(--color-danger)\\n}\\n\\n.sl-bg-danger-tint {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.sl-bg-danger-light {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.sl-bg-danger-dark {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.sl-bg-danger-darker {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.sl-bg-code {\\n    background-color: var(--color-code)\\n}\\n\\n.sl-bg-on-code {\\n    background-color: var(--color-on-code)\\n}\\n\\n.sl-bg-on-primary {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.sl-bg-on-success {\\n    background-color: var(--color-on-success)\\n}\\n\\n.sl-bg-on-warning {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.sl-bg-on-danger {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.sl-bg-canvas-50 {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.sl-bg-canvas-100 {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.sl-bg-canvas-200 {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.sl-bg-canvas-300 {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.sl-bg-canvas-400 {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.sl-bg-canvas-500 {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.sl-bg-canvas-pure {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.sl-bg-canvas {\\n    background-color: var(--color-canvas)\\n}\\n\\n.sl-bg-canvas-tint {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.sl-bg-canvas-dialog {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.sl-bg-body {\\n    background-color: var(--color-text)\\n}\\n\\n.sl-bg-body-muted {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.sl-bg-body-light {\\n    background-color: var(--color-text-light)\\n}\\n\\n.hover\\\\:sl-bg-transparent:hover {\\n    background-color: initial\\n}\\n\\n.hover\\\\:sl-bg-current:hover {\\n    background-color: currentColor\\n}\\n\\n.hover\\\\:sl-bg-lighten-100:hover {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.hover\\\\:sl-bg-darken-100:hover {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.hover\\\\:sl-bg-primary:hover {\\n    background-color: var(--color-primary)\\n}\\n\\n.hover\\\\:sl-bg-primary-tint:hover {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.hover\\\\:sl-bg-primary-light:hover {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.hover\\\\:sl-bg-primary-dark:hover {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.hover\\\\:sl-bg-primary-darker:hover {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.hover\\\\:sl-bg-success:hover {\\n    background-color: var(--color-success)\\n}\\n\\n.hover\\\\:sl-bg-success-tint:hover {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.hover\\\\:sl-bg-success-light:hover {\\n    background-color: var(--color-success-light)\\n}\\n\\n.hover\\\\:sl-bg-success-dark:hover {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.hover\\\\:sl-bg-success-darker:hover {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.hover\\\\:sl-bg-warning:hover {\\n    background-color: var(--color-warning)\\n}\\n\\n.hover\\\\:sl-bg-warning-tint:hover {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.hover\\\\:sl-bg-warning-light:hover {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.hover\\\\:sl-bg-warning-dark:hover {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.hover\\\\:sl-bg-warning-darker:hover {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.hover\\\\:sl-bg-danger:hover {\\n    background-color: var(--color-danger)\\n}\\n\\n.hover\\\\:sl-bg-danger-tint:hover {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.hover\\\\:sl-bg-danger-light:hover {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.hover\\\\:sl-bg-danger-dark:hover {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.hover\\\\:sl-bg-danger-darker:hover {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.hover\\\\:sl-bg-code:hover {\\n    background-color: var(--color-code)\\n}\\n\\n.hover\\\\:sl-bg-on-code:hover {\\n    background-color: var(--color-on-code)\\n}\\n\\n.hover\\\\:sl-bg-on-primary:hover {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.hover\\\\:sl-bg-on-success:hover {\\n    background-color: var(--color-on-success)\\n}\\n\\n.hover\\\\:sl-bg-on-warning:hover {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.hover\\\\:sl-bg-on-danger:hover {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.hover\\\\:sl-bg-canvas-50:hover {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.hover\\\\:sl-bg-canvas-100:hover {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.hover\\\\:sl-bg-canvas-200:hover {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.hover\\\\:sl-bg-canvas-300:hover {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.hover\\\\:sl-bg-canvas-400:hover {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.hover\\\\:sl-bg-canvas-500:hover {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.hover\\\\:sl-bg-canvas-pure:hover {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.hover\\\\:sl-bg-canvas:hover {\\n    background-color: var(--color-canvas)\\n}\\n\\n.hover\\\\:sl-bg-canvas-tint:hover {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.hover\\\\:sl-bg-canvas-dialog:hover {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.hover\\\\:sl-bg-body:hover {\\n    background-color: var(--color-text)\\n}\\n\\n.hover\\\\:sl-bg-body-muted:hover {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.hover\\\\:sl-bg-body-light:hover {\\n    background-color: var(--color-text-light)\\n}\\n\\n.focus\\\\:sl-bg-transparent:focus {\\n    background-color: initial\\n}\\n\\n.focus\\\\:sl-bg-current:focus {\\n    background-color: currentColor\\n}\\n\\n.focus\\\\:sl-bg-lighten-100:focus {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.focus\\\\:sl-bg-darken-100:focus {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.focus\\\\:sl-bg-primary:focus {\\n    background-color: var(--color-primary)\\n}\\n\\n.focus\\\\:sl-bg-primary-tint:focus {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.focus\\\\:sl-bg-primary-light:focus {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.focus\\\\:sl-bg-primary-dark:focus {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.focus\\\\:sl-bg-primary-darker:focus {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.focus\\\\:sl-bg-success:focus {\\n    background-color: var(--color-success)\\n}\\n\\n.focus\\\\:sl-bg-success-tint:focus {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.focus\\\\:sl-bg-success-light:focus {\\n    background-color: var(--color-success-light)\\n}\\n\\n.focus\\\\:sl-bg-success-dark:focus {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.focus\\\\:sl-bg-success-darker:focus {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.focus\\\\:sl-bg-warning:focus {\\n    background-color: var(--color-warning)\\n}\\n\\n.focus\\\\:sl-bg-warning-tint:focus {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.focus\\\\:sl-bg-warning-light:focus {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.focus\\\\:sl-bg-warning-dark:focus {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.focus\\\\:sl-bg-warning-darker:focus {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.focus\\\\:sl-bg-danger:focus {\\n    background-color: var(--color-danger)\\n}\\n\\n.focus\\\\:sl-bg-danger-tint:focus {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.focus\\\\:sl-bg-danger-light:focus {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.focus\\\\:sl-bg-danger-dark:focus {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.focus\\\\:sl-bg-danger-darker:focus {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.focus\\\\:sl-bg-code:focus {\\n    background-color: var(--color-code)\\n}\\n\\n.focus\\\\:sl-bg-on-code:focus {\\n    background-color: var(--color-on-code)\\n}\\n\\n.focus\\\\:sl-bg-on-primary:focus {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.focus\\\\:sl-bg-on-success:focus {\\n    background-color: var(--color-on-success)\\n}\\n\\n.focus\\\\:sl-bg-on-warning:focus {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.focus\\\\:sl-bg-on-danger:focus {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.focus\\\\:sl-bg-canvas-50:focus {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.focus\\\\:sl-bg-canvas-100:focus {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.focus\\\\:sl-bg-canvas-200:focus {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.focus\\\\:sl-bg-canvas-300:focus {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.focus\\\\:sl-bg-canvas-400:focus {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.focus\\\\:sl-bg-canvas-500:focus {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.focus\\\\:sl-bg-canvas-pure:focus {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.focus\\\\:sl-bg-canvas:focus {\\n    background-color: var(--color-canvas)\\n}\\n\\n.focus\\\\:sl-bg-canvas-tint:focus {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.focus\\\\:sl-bg-canvas-dialog:focus {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.focus\\\\:sl-bg-body:focus {\\n    background-color: var(--color-text)\\n}\\n\\n.focus\\\\:sl-bg-body-muted:focus {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.focus\\\\:sl-bg-body-light:focus {\\n    background-color: var(--color-text-light)\\n}\\n\\n.active\\\\:sl-bg-transparent:active {\\n    background-color: initial\\n}\\n\\n.active\\\\:sl-bg-current:active {\\n    background-color: currentColor\\n}\\n\\n.active\\\\:sl-bg-lighten-100:active {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.active\\\\:sl-bg-darken-100:active {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.active\\\\:sl-bg-primary:active {\\n    background-color: var(--color-primary)\\n}\\n\\n.active\\\\:sl-bg-primary-tint:active {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.active\\\\:sl-bg-primary-light:active {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.active\\\\:sl-bg-primary-dark:active {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.active\\\\:sl-bg-primary-darker:active {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.active\\\\:sl-bg-success:active {\\n    background-color: var(--color-success)\\n}\\n\\n.active\\\\:sl-bg-success-tint:active {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.active\\\\:sl-bg-success-light:active {\\n    background-color: var(--color-success-light)\\n}\\n\\n.active\\\\:sl-bg-success-dark:active {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.active\\\\:sl-bg-success-darker:active {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.active\\\\:sl-bg-warning:active {\\n    background-color: var(--color-warning)\\n}\\n\\n.active\\\\:sl-bg-warning-tint:active {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.active\\\\:sl-bg-warning-light:active {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.active\\\\:sl-bg-warning-dark:active {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.active\\\\:sl-bg-warning-darker:active {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.active\\\\:sl-bg-danger:active {\\n    background-color: var(--color-danger)\\n}\\n\\n.active\\\\:sl-bg-danger-tint:active {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.active\\\\:sl-bg-danger-light:active {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.active\\\\:sl-bg-danger-dark:active {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.active\\\\:sl-bg-danger-darker:active {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.active\\\\:sl-bg-code:active {\\n    background-color: var(--color-code)\\n}\\n\\n.active\\\\:sl-bg-on-code:active {\\n    background-color: var(--color-on-code)\\n}\\n\\n.active\\\\:sl-bg-on-primary:active {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.active\\\\:sl-bg-on-success:active {\\n    background-color: var(--color-on-success)\\n}\\n\\n.active\\\\:sl-bg-on-warning:active {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.active\\\\:sl-bg-on-danger:active {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.active\\\\:sl-bg-canvas-50:active {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.active\\\\:sl-bg-canvas-100:active {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.active\\\\:sl-bg-canvas-200:active {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.active\\\\:sl-bg-canvas-300:active {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.active\\\\:sl-bg-canvas-400:active {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.active\\\\:sl-bg-canvas-500:active {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.active\\\\:sl-bg-canvas-pure:active {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.active\\\\:sl-bg-canvas:active {\\n    background-color: var(--color-canvas)\\n}\\n\\n.active\\\\:sl-bg-canvas-tint:active {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.active\\\\:sl-bg-canvas-dialog:active {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.active\\\\:sl-bg-body:active {\\n    background-color: var(--color-text)\\n}\\n\\n.active\\\\:sl-bg-body-muted:active {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.active\\\\:sl-bg-body-light:active {\\n    background-color: var(--color-text-light)\\n}\\n\\n.disabled\\\\:sl-bg-transparent:disabled {\\n    background-color: initial\\n}\\n\\n.disabled\\\\:sl-bg-current:disabled {\\n    background-color: currentColor\\n}\\n\\n.disabled\\\\:sl-bg-lighten-100:disabled {\\n    background-color: var(--color-lighten-100)\\n}\\n\\n.disabled\\\\:sl-bg-darken-100:disabled {\\n    background-color: var(--color-darken-100)\\n}\\n\\n.disabled\\\\:sl-bg-primary:disabled {\\n    background-color: var(--color-primary)\\n}\\n\\n.disabled\\\\:sl-bg-primary-tint:disabled {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.disabled\\\\:sl-bg-primary-light:disabled {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.disabled\\\\:sl-bg-primary-dark:disabled {\\n    background-color: var(--color-primary-dark)\\n}\\n\\n.disabled\\\\:sl-bg-primary-darker:disabled {\\n    background-color: var(--color-primary-darker)\\n}\\n\\n.disabled\\\\:sl-bg-success:disabled {\\n    background-color: var(--color-success)\\n}\\n\\n.disabled\\\\:sl-bg-success-tint:disabled {\\n    background-color: var(--color-success-tint)\\n}\\n\\n.disabled\\\\:sl-bg-success-light:disabled {\\n    background-color: var(--color-success-light)\\n}\\n\\n.disabled\\\\:sl-bg-success-dark:disabled {\\n    background-color: var(--color-success-dark)\\n}\\n\\n.disabled\\\\:sl-bg-success-darker:disabled {\\n    background-color: var(--color-success-darker)\\n}\\n\\n.disabled\\\\:sl-bg-warning:disabled {\\n    background-color: var(--color-warning)\\n}\\n\\n.disabled\\\\:sl-bg-warning-tint:disabled {\\n    background-color: var(--color-warning-tint)\\n}\\n\\n.disabled\\\\:sl-bg-warning-light:disabled {\\n    background-color: var(--color-warning-light)\\n}\\n\\n.disabled\\\\:sl-bg-warning-dark:disabled {\\n    background-color: var(--color-warning-dark)\\n}\\n\\n.disabled\\\\:sl-bg-warning-darker:disabled {\\n    background-color: var(--color-warning-darker)\\n}\\n\\n.disabled\\\\:sl-bg-danger:disabled {\\n    background-color: var(--color-danger)\\n}\\n\\n.disabled\\\\:sl-bg-danger-tint:disabled {\\n    background-color: var(--color-danger-tint)\\n}\\n\\n.disabled\\\\:sl-bg-danger-light:disabled {\\n    background-color: var(--color-danger-light)\\n}\\n\\n.disabled\\\\:sl-bg-danger-dark:disabled {\\n    background-color: var(--color-danger-dark)\\n}\\n\\n.disabled\\\\:sl-bg-danger-darker:disabled {\\n    background-color: var(--color-danger-darker)\\n}\\n\\n.disabled\\\\:sl-bg-code:disabled {\\n    background-color: var(--color-code)\\n}\\n\\n.disabled\\\\:sl-bg-on-code:disabled {\\n    background-color: var(--color-on-code)\\n}\\n\\n.disabled\\\\:sl-bg-on-primary:disabled {\\n    background-color: var(--color-on-primary)\\n}\\n\\n.disabled\\\\:sl-bg-on-success:disabled {\\n    background-color: var(--color-on-success)\\n}\\n\\n.disabled\\\\:sl-bg-on-warning:disabled {\\n    background-color: var(--color-on-warning)\\n}\\n\\n.disabled\\\\:sl-bg-on-danger:disabled {\\n    background-color: var(--color-on-danger)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-50:disabled {\\n    background-color: var(--color-canvas-50)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-100:disabled {\\n    background-color: var(--color-canvas-100)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-200:disabled {\\n    background-color: var(--color-canvas-200)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-300:disabled {\\n    background-color: var(--color-canvas-300)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-400:disabled {\\n    background-color: var(--color-canvas-400)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-500:disabled {\\n    background-color: var(--color-canvas-500)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-pure:disabled {\\n    background-color: var(--color-canvas-pure)\\n}\\n\\n.disabled\\\\:sl-bg-canvas:disabled {\\n    background-color: var(--color-canvas)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-tint:disabled {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.disabled\\\\:sl-bg-canvas-dialog:disabled {\\n    background-color: var(--color-canvas-dialog)\\n}\\n\\n.disabled\\\\:sl-bg-body:disabled {\\n    background-color: var(--color-text)\\n}\\n\\n.disabled\\\\:sl-bg-body-muted:disabled {\\n    background-color: var(--color-text-muted)\\n}\\n\\n.disabled\\\\:sl-bg-body-light:disabled {\\n    background-color: var(--color-text-light)\\n}\\n\\n.sl-bg-none {\\n    background-image: none\\n}\\n\\n.sl-bg-gradient-to-t {\\n    background-image: linear-gradient(to top, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-tr {\\n    background-image: linear-gradient(to top right, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-r {\\n    background-image: linear-gradient(to right, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-br {\\n    background-image: linear-gradient(to bottom right, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-b {\\n    background-image: linear-gradient(to bottom, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-bl {\\n    background-image: linear-gradient(to bottom left, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-l {\\n    background-image: linear-gradient(to left, var(--tw-gradient-stops))\\n}\\n\\n.sl-bg-gradient-to-tl {\\n    background-image: linear-gradient(to top left, var(--tw-gradient-stops))\\n}\\n\\n.sl-blur-0,\\n.sl-blur-none {\\n    --tw-blur: blur(0)\\n}\\n\\n.sl-blur-sm {\\n    --tw-blur: blur(4px)\\n}\\n\\n.sl-blur {\\n    --tw-blur: blur(8px)\\n}\\n\\n.sl-blur-md {\\n    --tw-blur: blur(12px)\\n}\\n\\n.sl-blur-lg {\\n    --tw-blur: blur(16px)\\n}\\n\\n.sl-blur-xl {\\n    --tw-blur: blur(24px)\\n}\\n\\n.sl-blur-2xl {\\n    --tw-blur: blur(40px)\\n}\\n\\n.sl-blur-3xl {\\n    --tw-blur: blur(64px)\\n}\\n\\n.sl-border-transparent {\\n    border-color: transparent\\n}\\n\\n.sl-border-current {\\n    border-color: currentColor\\n}\\n\\n.sl-border-lighten-100 {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.sl-border-darken-100 {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.sl-border-primary {\\n    border-color: var(--color-primary)\\n}\\n\\n.sl-border-primary-tint {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.sl-border-primary-light {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.sl-border-primary-dark {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.sl-border-primary-darker {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.sl-border-success {\\n    border-color: var(--color-success)\\n}\\n\\n.sl-border-success-tint {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.sl-border-success-light {\\n    border-color: var(--color-success-light)\\n}\\n\\n.sl-border-success-dark {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.sl-border-success-darker {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.sl-border-warning {\\n    border-color: var(--color-warning)\\n}\\n\\n.sl-border-warning-tint {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.sl-border-warning-light {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.sl-border-warning-dark {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.sl-border-warning-darker {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.sl-border-danger {\\n    border-color: var(--color-danger)\\n}\\n\\n.sl-border-danger-tint {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.sl-border-danger-light {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.sl-border-danger-dark {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.sl-border-danger-darker {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.sl-border-code {\\n    border-color: var(--color-code)\\n}\\n\\n.sl-border-on-code {\\n    border-color: var(--color-on-code)\\n}\\n\\n.sl-border-on-primary {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.sl-border-on-success {\\n    border-color: var(--color-on-success)\\n}\\n\\n.sl-border-on-warning {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.sl-border-on-danger {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.sl-border-light {\\n    border-color: var(--color-border-light)\\n}\\n\\n.sl-border-dark {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.sl-border-button {\\n    border-color: var(--color-border-button)\\n}\\n\\n.sl-border-input {\\n    border-color: var(--color-border-input)\\n}\\n\\n.sl-border-body {\\n    border-color: var(--color-text)\\n}\\n\\n.hover\\\\:sl-border-transparent:hover {\\n    border-color: transparent\\n}\\n\\n.hover\\\\:sl-border-current:hover {\\n    border-color: currentColor\\n}\\n\\n.hover\\\\:sl-border-lighten-100:hover {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.hover\\\\:sl-border-darken-100:hover {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.hover\\\\:sl-border-primary:hover {\\n    border-color: var(--color-primary)\\n}\\n\\n.hover\\\\:sl-border-primary-tint:hover {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.hover\\\\:sl-border-primary-light:hover {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.hover\\\\:sl-border-primary-dark:hover {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.hover\\\\:sl-border-primary-darker:hover {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.hover\\\\:sl-border-success:hover {\\n    border-color: var(--color-success)\\n}\\n\\n.hover\\\\:sl-border-success-tint:hover {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.hover\\\\:sl-border-success-light:hover {\\n    border-color: var(--color-success-light)\\n}\\n\\n.hover\\\\:sl-border-success-dark:hover {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.hover\\\\:sl-border-success-darker:hover {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.hover\\\\:sl-border-warning:hover {\\n    border-color: var(--color-warning)\\n}\\n\\n.hover\\\\:sl-border-warning-tint:hover {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.hover\\\\:sl-border-warning-light:hover {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.hover\\\\:sl-border-warning-dark:hover {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.hover\\\\:sl-border-warning-darker:hover {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.hover\\\\:sl-border-danger:hover {\\n    border-color: var(--color-danger)\\n}\\n\\n.hover\\\\:sl-border-danger-tint:hover {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.hover\\\\:sl-border-danger-light:hover {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.hover\\\\:sl-border-danger-dark:hover {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.hover\\\\:sl-border-danger-darker:hover {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.hover\\\\:sl-border-code:hover {\\n    border-color: var(--color-code)\\n}\\n\\n.hover\\\\:sl-border-on-code:hover {\\n    border-color: var(--color-on-code)\\n}\\n\\n.hover\\\\:sl-border-on-primary:hover {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.hover\\\\:sl-border-on-success:hover {\\n    border-color: var(--color-on-success)\\n}\\n\\n.hover\\\\:sl-border-on-warning:hover {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.hover\\\\:sl-border-on-danger:hover {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.hover\\\\:sl-border-light:hover {\\n    border-color: var(--color-border-light)\\n}\\n\\n.hover\\\\:sl-border-dark:hover {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.hover\\\\:sl-border-button:hover {\\n    border-color: var(--color-border-button)\\n}\\n\\n.hover\\\\:sl-border-input:hover {\\n    border-color: var(--color-border-input)\\n}\\n\\n.hover\\\\:sl-border-body:hover {\\n    border-color: var(--color-text)\\n}\\n\\n.focus\\\\:sl-border-transparent:focus {\\n    border-color: transparent\\n}\\n\\n.focus\\\\:sl-border-current:focus {\\n    border-color: currentColor\\n}\\n\\n.focus\\\\:sl-border-lighten-100:focus {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.focus\\\\:sl-border-darken-100:focus {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.focus\\\\:sl-border-primary:focus {\\n    border-color: var(--color-primary)\\n}\\n\\n.focus\\\\:sl-border-primary-tint:focus {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.focus\\\\:sl-border-primary-light:focus {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.focus\\\\:sl-border-primary-dark:focus {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.focus\\\\:sl-border-primary-darker:focus {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.focus\\\\:sl-border-success:focus {\\n    border-color: var(--color-success)\\n}\\n\\n.focus\\\\:sl-border-success-tint:focus {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.focus\\\\:sl-border-success-light:focus {\\n    border-color: var(--color-success-light)\\n}\\n\\n.focus\\\\:sl-border-success-dark:focus {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.focus\\\\:sl-border-success-darker:focus {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.focus\\\\:sl-border-warning:focus {\\n    border-color: var(--color-warning)\\n}\\n\\n.focus\\\\:sl-border-warning-tint:focus {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.focus\\\\:sl-border-warning-light:focus {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.focus\\\\:sl-border-warning-dark:focus {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.focus\\\\:sl-border-warning-darker:focus {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.focus\\\\:sl-border-danger:focus {\\n    border-color: var(--color-danger)\\n}\\n\\n.focus\\\\:sl-border-danger-tint:focus {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.focus\\\\:sl-border-danger-light:focus {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.focus\\\\:sl-border-danger-dark:focus {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.focus\\\\:sl-border-danger-darker:focus {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.focus\\\\:sl-border-code:focus {\\n    border-color: var(--color-code)\\n}\\n\\n.focus\\\\:sl-border-on-code:focus {\\n    border-color: var(--color-on-code)\\n}\\n\\n.focus\\\\:sl-border-on-primary:focus {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.focus\\\\:sl-border-on-success:focus {\\n    border-color: var(--color-on-success)\\n}\\n\\n.focus\\\\:sl-border-on-warning:focus {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.focus\\\\:sl-border-on-danger:focus {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.focus\\\\:sl-border-light:focus {\\n    border-color: var(--color-border-light)\\n}\\n\\n.focus\\\\:sl-border-dark:focus {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.focus\\\\:sl-border-button:focus {\\n    border-color: var(--color-border-button)\\n}\\n\\n.focus\\\\:sl-border-input:focus {\\n    border-color: var(--color-border-input)\\n}\\n\\n.focus\\\\:sl-border-body:focus {\\n    border-color: var(--color-text)\\n}\\n\\n.active\\\\:sl-border-transparent:active {\\n    border-color: transparent\\n}\\n\\n.active\\\\:sl-border-current:active {\\n    border-color: currentColor\\n}\\n\\n.active\\\\:sl-border-lighten-100:active {\\n    border-color: var(--color-lighten-100)\\n}\\n\\n.active\\\\:sl-border-darken-100:active {\\n    border-color: var(--color-darken-100)\\n}\\n\\n.active\\\\:sl-border-primary:active {\\n    border-color: var(--color-primary)\\n}\\n\\n.active\\\\:sl-border-primary-tint:active {\\n    border-color: var(--color-primary-tint)\\n}\\n\\n.active\\\\:sl-border-primary-light:active {\\n    border-color: var(--color-primary-light)\\n}\\n\\n.active\\\\:sl-border-primary-dark:active {\\n    border-color: var(--color-primary-dark)\\n}\\n\\n.active\\\\:sl-border-primary-darker:active {\\n    border-color: var(--color-primary-darker)\\n}\\n\\n.active\\\\:sl-border-success:active {\\n    border-color: var(--color-success)\\n}\\n\\n.active\\\\:sl-border-success-tint:active {\\n    border-color: var(--color-success-tint)\\n}\\n\\n.active\\\\:sl-border-success-light:active {\\n    border-color: var(--color-success-light)\\n}\\n\\n.active\\\\:sl-border-success-dark:active {\\n    border-color: var(--color-success-dark)\\n}\\n\\n.active\\\\:sl-border-success-darker:active {\\n    border-color: var(--color-success-darker)\\n}\\n\\n.active\\\\:sl-border-warning:active {\\n    border-color: var(--color-warning)\\n}\\n\\n.active\\\\:sl-border-warning-tint:active {\\n    border-color: var(--color-warning-tint)\\n}\\n\\n.active\\\\:sl-border-warning-light:active {\\n    border-color: var(--color-warning-light)\\n}\\n\\n.active\\\\:sl-border-warning-dark:active {\\n    border-color: var(--color-warning-dark)\\n}\\n\\n.active\\\\:sl-border-warning-darker:active {\\n    border-color: var(--color-warning-darker)\\n}\\n\\n.active\\\\:sl-border-danger:active {\\n    border-color: var(--color-danger)\\n}\\n\\n.active\\\\:sl-border-danger-tint:active {\\n    border-color: var(--color-danger-tint)\\n}\\n\\n.active\\\\:sl-border-danger-light:active {\\n    border-color: var(--color-danger-light)\\n}\\n\\n.active\\\\:sl-border-danger-dark:active {\\n    border-color: var(--color-danger-dark)\\n}\\n\\n.active\\\\:sl-border-danger-darker:active {\\n    border-color: var(--color-danger-darker)\\n}\\n\\n.active\\\\:sl-border-code:active {\\n    border-color: var(--color-code)\\n}\\n\\n.active\\\\:sl-border-on-code:active {\\n    border-color: var(--color-on-code)\\n}\\n\\n.active\\\\:sl-border-on-primary:active {\\n    border-color: var(--color-on-primary)\\n}\\n\\n.active\\\\:sl-border-on-success:active {\\n    border-color: var(--color-on-success)\\n}\\n\\n.active\\\\:sl-border-on-warning:active {\\n    border-color: var(--color-on-warning)\\n}\\n\\n.active\\\\:sl-border-on-danger:active {\\n    border-color: var(--color-on-danger)\\n}\\n\\n.active\\\\:sl-border-light:active {\\n    border-color: var(--color-border-light)\\n}\\n\\n.active\\\\:sl-border-dark:active {\\n    border-color: var(--color-border-dark)\\n}\\n\\n.active\\\\:sl-border-button:active {\\n    border-color: var(--color-border-button)\\n}\\n\\n.active\\\\:sl-border-input:active {\\n    border-color: var(--color-border-input)\\n}\\n\\n.active\\\\:sl-border-body:active {\\n    border-color: var(--color-text)\\n}\\n\\n.sl-rounded-none {\\n    border-radius: 0\\n}\\n\\n.sl-rounded-sm {\\n    border-radius: 1px\\n}\\n\\n.sl-rounded {\\n    border-radius: 2px\\n}\\n\\n.sl-rounded-lg {\\n    border-radius: 5px\\n}\\n\\n.sl-rounded-xl {\\n    border-radius: 7px\\n}\\n\\n.sl-rounded-full {\\n    border-radius: 9999px\\n}\\n\\n.sl-rounded-t-none {\\n    border-top-left-radius: 0;\\n    border-top-right-radius: 0\\n}\\n\\n.sl-rounded-r-none {\\n    border-bottom-right-radius: 0;\\n    border-top-right-radius: 0\\n}\\n\\n.sl-rounded-b-none {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0\\n}\\n\\n.sl-rounded-l-none {\\n    border-bottom-left-radius: 0;\\n    border-top-left-radius: 0\\n}\\n\\n.sl-rounded-t-sm {\\n    border-top-left-radius: 1px;\\n    border-top-right-radius: 1px\\n}\\n\\n.sl-rounded-r-sm {\\n    border-bottom-right-radius: 1px;\\n    border-top-right-radius: 1px\\n}\\n\\n.sl-rounded-b-sm {\\n    border-bottom-left-radius: 1px;\\n    border-bottom-right-radius: 1px\\n}\\n\\n.sl-rounded-l-sm {\\n    border-bottom-left-radius: 1px;\\n    border-top-left-radius: 1px\\n}\\n\\n.sl-rounded-t {\\n    border-top-left-radius: 2px\\n}\\n\\n.sl-rounded-r,\\n.sl-rounded-t {\\n    border-top-right-radius: 2px\\n}\\n\\n.sl-rounded-b,\\n.sl-rounded-r {\\n    border-bottom-right-radius: 2px\\n}\\n\\n.sl-rounded-b,\\n.sl-rounded-l {\\n    border-bottom-left-radius: 2px\\n}\\n\\n.sl-rounded-l {\\n    border-top-left-radius: 2px\\n}\\n\\n.sl-rounded-t-lg {\\n    border-top-left-radius: 5px;\\n    border-top-right-radius: 5px\\n}\\n\\n.sl-rounded-r-lg {\\n    border-bottom-right-radius: 5px;\\n    border-top-right-radius: 5px\\n}\\n\\n.sl-rounded-b-lg {\\n    border-bottom-left-radius: 5px;\\n    border-bottom-right-radius: 5px\\n}\\n\\n.sl-rounded-l-lg {\\n    border-bottom-left-radius: 5px;\\n    border-top-left-radius: 5px\\n}\\n\\n.sl-rounded-t-xl {\\n    border-top-left-radius: 7px;\\n    border-top-right-radius: 7px\\n}\\n\\n.sl-rounded-r-xl {\\n    border-bottom-right-radius: 7px;\\n    border-top-right-radius: 7px\\n}\\n\\n.sl-rounded-b-xl {\\n    border-bottom-left-radius: 7px;\\n    border-bottom-right-radius: 7px\\n}\\n\\n.sl-rounded-l-xl {\\n    border-bottom-left-radius: 7px;\\n    border-top-left-radius: 7px\\n}\\n\\n.sl-rounded-t-full {\\n    border-top-left-radius: 9999px;\\n    border-top-right-radius: 9999px\\n}\\n\\n.sl-rounded-r-full {\\n    border-bottom-right-radius: 9999px;\\n    border-top-right-radius: 9999px\\n}\\n\\n.sl-rounded-b-full {\\n    border-bottom-left-radius: 9999px;\\n    border-bottom-right-radius: 9999px\\n}\\n\\n.sl-rounded-l-full {\\n    border-bottom-left-radius: 9999px;\\n    border-top-left-radius: 9999px\\n}\\n\\n.sl-rounded-tl-none {\\n    border-top-left-radius: 0\\n}\\n\\n.sl-rounded-tr-none {\\n    border-top-right-radius: 0\\n}\\n\\n.sl-rounded-br-none {\\n    border-bottom-right-radius: 0\\n}\\n\\n.sl-rounded-bl-none {\\n    border-bottom-left-radius: 0\\n}\\n\\n.sl-rounded-tl-sm {\\n    border-top-left-radius: 1px\\n}\\n\\n.sl-rounded-tr-sm {\\n    border-top-right-radius: 1px\\n}\\n\\n.sl-rounded-br-sm {\\n    border-bottom-right-radius: 1px\\n}\\n\\n.sl-rounded-bl-sm {\\n    border-bottom-left-radius: 1px\\n}\\n\\n.sl-rounded-tl {\\n    border-top-left-radius: 2px\\n}\\n\\n.sl-rounded-tr {\\n    border-top-right-radius: 2px\\n}\\n\\n.sl-rounded-br {\\n    border-bottom-right-radius: 2px\\n}\\n\\n.sl-rounded-bl {\\n    border-bottom-left-radius: 2px\\n}\\n\\n.sl-rounded-tl-lg {\\n    border-top-left-radius: 5px\\n}\\n\\n.sl-rounded-tr-lg {\\n    border-top-right-radius: 5px\\n}\\n\\n.sl-rounded-br-lg {\\n    border-bottom-right-radius: 5px\\n}\\n\\n.sl-rounded-bl-lg {\\n    border-bottom-left-radius: 5px\\n}\\n\\n.sl-rounded-tl-xl {\\n    border-top-left-radius: 7px\\n}\\n\\n.sl-rounded-tr-xl {\\n    border-top-right-radius: 7px\\n}\\n\\n.sl-rounded-br-xl {\\n    border-bottom-right-radius: 7px\\n}\\n\\n.sl-rounded-bl-xl {\\n    border-bottom-left-radius: 7px\\n}\\n\\n.sl-rounded-tl-full {\\n    border-top-left-radius: 9999px\\n}\\n\\n.sl-rounded-tr-full {\\n    border-top-right-radius: 9999px\\n}\\n\\n.sl-rounded-br-full {\\n    border-bottom-right-radius: 9999px\\n}\\n\\n.sl-rounded-bl-full {\\n    border-bottom-left-radius: 9999px\\n}\\n\\n.sl-border-solid {\\n    border-style: solid\\n}\\n\\n.sl-border-dashed {\\n    border-style: dashed\\n}\\n\\n.sl-border-dotted {\\n    border-style: dotted\\n}\\n\\n.sl-border-double {\\n    border-style: double\\n}\\n\\n.sl-border-none {\\n    border-style: none\\n}\\n\\n.sl-border-0 {\\n    border-width: 0\\n}\\n\\n.sl-border-2 {\\n    border-width: 2px\\n}\\n\\n.sl-border-4 {\\n    border-width: 4px\\n}\\n\\n.sl-border-8 {\\n    border-width: 8px\\n}\\n\\n.sl-border {\\n    border-width: 1px\\n}\\n\\n.sl-border-t-0 {\\n    border-top-width: 0\\n}\\n\\n.sl-border-r-0 {\\n    border-right-width: 0\\n}\\n\\n.sl-border-b-0 {\\n    border-bottom-width: 0\\n}\\n\\n.sl-border-l-0 {\\n    border-left-width: 0\\n}\\n\\n.sl-border-t-2 {\\n    border-top-width: 2px\\n}\\n\\n.sl-border-r-2 {\\n    border-right-width: 2px\\n}\\n\\n.sl-border-b-2 {\\n    border-bottom-width: 2px\\n}\\n\\n.sl-border-l-2 {\\n    border-left-width: 2px\\n}\\n\\n.sl-border-t-4 {\\n    border-top-width: 4px\\n}\\n\\n.sl-border-r-4 {\\n    border-right-width: 4px\\n}\\n\\n.sl-border-b-4 {\\n    border-bottom-width: 4px\\n}\\n\\n.sl-border-l-4 {\\n    border-left-width: 4px\\n}\\n\\n.sl-border-t-8 {\\n    border-top-width: 8px\\n}\\n\\n.sl-border-r-8 {\\n    border-right-width: 8px\\n}\\n\\n.sl-border-b-8 {\\n    border-bottom-width: 8px\\n}\\n\\n.sl-border-l-8 {\\n    border-left-width: 8px\\n}\\n\\n.sl-border-t {\\n    border-top-width: 1px\\n}\\n\\n.sl-border-r {\\n    border-right-width: 1px\\n}\\n\\n.sl-border-b {\\n    border-bottom-width: 1px\\n}\\n\\n.sl-border-l {\\n    border-left-width: 1px\\n}\\n\\n* {\\n    --tw-shadow: 0 0 #0000\\n}\\n\\n.sl-shadow-sm {\\n    --tw-shadow: var(--shadow-sm);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.sl-shadow,\\n.sl-shadow-md {\\n    --tw-shadow: var(--shadow-md)\\n}\\n\\n.sl-shadow,\\n.sl-shadow-lg,\\n.sl-shadow-md {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.sl-shadow-lg {\\n    --tw-shadow: var(--shadow-lg)\\n}\\n\\n.sl-shadow-xl {\\n    --tw-shadow: var(--shadow-xl)\\n}\\n\\n.sl-shadow-2xl,\\n.sl-shadow-xl {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.sl-shadow-2xl {\\n    --tw-shadow: var(--shadow-2xl)\\n}\\n\\n.hover\\\\:sl-shadow-sm:hover {\\n    --tw-shadow: var(--shadow-sm);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.hover\\\\:sl-shadow-md:hover,\\n.hover\\\\:sl-shadow:hover {\\n    --tw-shadow: var(--shadow-md)\\n}\\n\\n.hover\\\\:sl-shadow-lg:hover,\\n.hover\\\\:sl-shadow-md:hover,\\n.hover\\\\:sl-shadow:hover {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.hover\\\\:sl-shadow-lg:hover {\\n    --tw-shadow: var(--shadow-lg)\\n}\\n\\n.hover\\\\:sl-shadow-xl:hover {\\n    --tw-shadow: var(--shadow-xl)\\n}\\n\\n.hover\\\\:sl-shadow-2xl:hover,\\n.hover\\\\:sl-shadow-xl:hover {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.hover\\\\:sl-shadow-2xl:hover {\\n    --tw-shadow: var(--shadow-2xl)\\n}\\n\\n.focus\\\\:sl-shadow-sm:focus {\\n    --tw-shadow: var(--shadow-sm);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.focus\\\\:sl-shadow-md:focus,\\n.focus\\\\:sl-shadow:focus {\\n    --tw-shadow: var(--shadow-md)\\n}\\n\\n.focus\\\\:sl-shadow-lg:focus,\\n.focus\\\\:sl-shadow-md:focus,\\n.focus\\\\:sl-shadow:focus {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.focus\\\\:sl-shadow-lg:focus {\\n    --tw-shadow: var(--shadow-lg)\\n}\\n\\n.focus\\\\:sl-shadow-xl:focus {\\n    --tw-shadow: var(--shadow-xl)\\n}\\n\\n.focus\\\\:sl-shadow-2xl:focus,\\n.focus\\\\:sl-shadow-xl:focus {\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\\n}\\n\\n.focus\\\\:sl-shadow-2xl:focus {\\n    --tw-shadow: var(--shadow-2xl)\\n}\\n\\n.sl-box-border {\\n    box-sizing: border-box\\n}\\n\\n.sl-box-content {\\n    box-sizing: initial\\n}\\n\\n.sl-cursor-auto {\\n    cursor: auto\\n}\\n\\n.sl-cursor {\\n    cursor: default\\n}\\n\\n.sl-cursor-pointer {\\n    cursor: pointer\\n}\\n\\n.sl-cursor-wait {\\n    cursor: wait\\n}\\n\\n.sl-cursor-text {\\n    cursor: text\\n}\\n\\n.sl-cursor-move {\\n    cursor: move\\n}\\n\\n.sl-cursor-not-allowed {\\n    cursor: not-allowed\\n}\\n\\n.sl-cursor-zoom-in {\\n    cursor: zoom-in\\n}\\n\\n.sl-cursor-zoom-out {\\n    cursor: zoom-out\\n}\\n\\n.sl-block {\\n    display: block\\n}\\n\\n.sl-inline-block {\\n    display: inline-block\\n}\\n\\n.sl-inline {\\n    display: inline\\n}\\n\\n.sl-flex {\\n    display: flex\\n}\\n\\n.sl-inline-flex {\\n    display: inline-flex\\n}\\n\\n.sl-table {\\n    display: table\\n}\\n\\n.sl-inline-table {\\n    display: inline-table\\n}\\n\\n.sl-table-caption {\\n    display: table-caption\\n}\\n\\n.sl-table-cell {\\n    display: table-cell\\n}\\n\\n.sl-table-column {\\n    display: table-column\\n}\\n\\n.sl-table-column-group {\\n    display: table-column-group\\n}\\n\\n.sl-table-footer-group {\\n    display: table-footer-group\\n}\\n\\n.sl-table-header-group {\\n    display: table-header-group\\n}\\n\\n.sl-table-row-group {\\n    display: table-row-group\\n}\\n\\n.sl-table-row {\\n    display: table-row\\n}\\n\\n.sl-flow-root {\\n    display: flow-root\\n}\\n\\n.sl-grid {\\n    display: grid\\n}\\n\\n.sl-inline-grid {\\n    display: inline-grid\\n}\\n\\n.sl-contents {\\n    display: contents\\n}\\n\\n.sl-list-item {\\n    display: list-item\\n}\\n\\n.sl-hidden {\\n    display: none\\n}\\n\\n.sl-drop-shadow {\\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-default1)) drop-shadow(var(--drop-shadow-default2))\\n}\\n\\n.sl-filter {\\n    --tw-blur: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-brightness: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-contrast: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-grayscale: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-hue-rotate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-invert: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-saturate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-sepia: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\\n}\\n\\n.sl-filter-none {\\n    filter: none\\n}\\n\\n.sl-flex-1 {\\n    flex: 1 1\\n}\\n\\n.sl-flex-auto {\\n    flex: 1 1 auto\\n}\\n\\n.sl-flex-initial {\\n    flex: 0 1 auto\\n}\\n\\n.sl-flex-none {\\n    flex: none\\n}\\n\\n.sl-flex-row {\\n    flex-direction: row\\n}\\n\\n.sl-flex-row-reverse {\\n    flex-direction: row-reverse\\n}\\n\\n.sl-flex-col {\\n    flex-direction: column\\n}\\n\\n.sl-flex-col-reverse {\\n    flex-direction: column-reverse\\n}\\n\\n.sl-flex-grow-0 {\\n    flex-grow: 0\\n}\\n\\n.sl-flex-grow {\\n    flex-grow: 1\\n}\\n\\n.sl-flex-shrink-0 {\\n    flex-shrink: 0\\n}\\n\\n.sl-flex-shrink {\\n    flex-shrink: 1\\n}\\n\\n.sl-flex-wrap {\\n    flex-wrap: wrap\\n}\\n\\n.sl-flex-wrap-reverse {\\n    flex-wrap: wrap-reverse\\n}\\n\\n.sl-flex-nowrap {\\n    flex-wrap: nowrap\\n}\\n\\n.sl-font-sans,\\n.sl-font-ui {\\n    font-family: var(--font-ui)\\n}\\n\\n.sl-font-prose {\\n    font-family: var(--font-prose)\\n}\\n\\n.sl-font-mono {\\n    font-family: var(--font-mono)\\n}\\n\\n.sl-text-2xs {\\n    font-size: 9px\\n}\\n\\n.sl-text-xs {\\n    font-size: 10px\\n}\\n\\n.sl-text-sm {\\n    font-size: 11px\\n}\\n\\n.sl-text-base {\\n    font-size: 12px\\n}\\n\\n.sl-text-lg {\\n    font-size: 14px\\n}\\n\\n.sl-text-xl {\\n    font-size: 16px\\n}\\n\\n.sl-text-2xl {\\n    font-size: 20px\\n}\\n\\n.sl-text-3xl {\\n    font-size: 24px\\n}\\n\\n.sl-text-4xl {\\n    font-size: 28px\\n}\\n\\n.sl-text-5xl {\\n    font-size: 36px\\n}\\n\\n.sl-text-6xl {\\n    font-size: 44px\\n}\\n\\n.sl-text-paragraph-leading {\\n    font-size: var(--fs-paragraph-leading)\\n}\\n\\n.sl-text-paragraph {\\n    font-size: var(--fs-paragraph)\\n}\\n\\n.sl-text-paragraph-small {\\n    font-size: var(--fs-paragraph-small)\\n}\\n\\n.sl-text-paragraph-tiny {\\n    font-size: var(--fs-paragraph-tiny)\\n}\\n\\n.sl-antialiased {\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale\\n}\\n\\n.sl-subpixel-antialiased {\\n    -webkit-font-smoothing: auto;\\n    -moz-osx-font-smoothing: auto\\n}\\n\\n.sl-italic {\\n    font-style: italic\\n}\\n\\n.sl-not-italic {\\n    font-style: normal\\n}\\n\\n.sl-font-light {\\n    font-weight: 300\\n}\\n\\n.sl-font-normal {\\n    font-weight: 400\\n}\\n\\n.sl-font-medium {\\n    font-weight: 500\\n}\\n\\n.sl-font-semibold {\\n    font-weight: 600\\n}\\n\\n.sl-font-bold {\\n    font-weight: 700\\n}\\n\\n.sl-h-0 {\\n    height: 0\\n}\\n\\n.sl-h-1 {\\n    height: 4px\\n}\\n\\n.sl-h-2 {\\n    height: 8px\\n}\\n\\n.sl-h-3 {\\n    height: 12px\\n}\\n\\n.sl-h-4 {\\n    height: 16px\\n}\\n\\n.sl-h-5 {\\n    height: 20px\\n}\\n\\n.sl-h-6 {\\n    height: 24px\\n}\\n\\n.sl-h-7 {\\n    height: 28px\\n}\\n\\n.sl-h-8 {\\n    height: 32px\\n}\\n\\n.sl-h-9 {\\n    height: 36px\\n}\\n\\n.sl-h-10 {\\n    height: 40px\\n}\\n\\n.sl-h-11 {\\n    height: 44px\\n}\\n\\n.sl-h-12 {\\n    height: 48px\\n}\\n\\n.sl-h-14 {\\n    height: 56px\\n}\\n\\n.sl-h-16 {\\n    height: 64px\\n}\\n\\n.sl-h-20 {\\n    height: 80px\\n}\\n\\n.sl-h-24 {\\n    height: 96px\\n}\\n\\n.sl-h-28 {\\n    height: 112px\\n}\\n\\n.sl-h-32 {\\n    height: 128px\\n}\\n\\n.sl-h-36 {\\n    height: 144px\\n}\\n\\n.sl-h-40 {\\n    height: 160px\\n}\\n\\n.sl-h-44 {\\n    height: 176px\\n}\\n\\n.sl-h-48 {\\n    height: 192px\\n}\\n\\n.sl-h-52 {\\n    height: 208px\\n}\\n\\n.sl-h-56 {\\n    height: 224px\\n}\\n\\n.sl-h-60 {\\n    height: 240px\\n}\\n\\n.sl-h-64 {\\n    height: 256px\\n}\\n\\n.sl-h-72 {\\n    height: 288px\\n}\\n\\n.sl-h-80 {\\n    height: 320px\\n}\\n\\n.sl-h-96 {\\n    height: 384px\\n}\\n\\n.sl-h-auto {\\n    height: auto\\n}\\n\\n.sl-h-px {\\n    height: 1px\\n}\\n\\n.sl-h-0\\\\.5 {\\n    height: 2px\\n}\\n\\n.sl-h-1\\\\.5 {\\n    height: 6px\\n}\\n\\n.sl-h-2\\\\.5 {\\n    height: 10px\\n}\\n\\n.sl-h-3\\\\.5 {\\n    height: 14px\\n}\\n\\n.sl-h-4\\\\.5 {\\n    height: 18px\\n}\\n\\n.sl-h-xs {\\n    height: 20px\\n}\\n\\n.sl-h-sm {\\n    height: 24px\\n}\\n\\n.sl-h-md {\\n    height: 32px\\n}\\n\\n.sl-h-lg {\\n    height: 36px\\n}\\n\\n.sl-h-xl {\\n    height: 44px\\n}\\n\\n.sl-h-2xl {\\n    height: 52px\\n}\\n\\n.sl-h-3xl {\\n    height: 60px\\n}\\n\\n.sl-h-full {\\n    height: 100%\\n}\\n\\n.sl-h-screen {\\n    height: 100vh\\n}\\n\\n.sl-inset-0 {\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    top: 0\\n}\\n\\n.sl-inset-1 {\\n    bottom: 4px;\\n    left: 4px;\\n    right: 4px;\\n    top: 4px\\n}\\n\\n.sl-inset-2 {\\n    bottom: 8px;\\n    left: 8px;\\n    right: 8px;\\n    top: 8px\\n}\\n\\n.sl-inset-3 {\\n    bottom: 12px;\\n    left: 12px;\\n    right: 12px;\\n    top: 12px\\n}\\n\\n.sl-inset-4 {\\n    bottom: 16px;\\n    left: 16px;\\n    right: 16px;\\n    top: 16px\\n}\\n\\n.sl-inset-5 {\\n    bottom: 20px;\\n    left: 20px;\\n    right: 20px;\\n    top: 20px\\n}\\n\\n.sl-inset-6 {\\n    bottom: 24px;\\n    left: 24px;\\n    right: 24px;\\n    top: 24px\\n}\\n\\n.sl-inset-7 {\\n    bottom: 28px;\\n    left: 28px;\\n    right: 28px;\\n    top: 28px\\n}\\n\\n.sl-inset-8 {\\n    bottom: 32px;\\n    left: 32px;\\n    right: 32px;\\n    top: 32px\\n}\\n\\n.sl-inset-9 {\\n    bottom: 36px;\\n    left: 36px;\\n    right: 36px;\\n    top: 36px\\n}\\n\\n.sl-inset-10 {\\n    bottom: 40px;\\n    left: 40px;\\n    right: 40px;\\n    top: 40px\\n}\\n\\n.sl-inset-11 {\\n    bottom: 44px;\\n    left: 44px;\\n    right: 44px;\\n    top: 44px\\n}\\n\\n.sl-inset-12 {\\n    bottom: 48px;\\n    left: 48px;\\n    right: 48px;\\n    top: 48px\\n}\\n\\n.sl-inset-14 {\\n    bottom: 56px;\\n    left: 56px;\\n    right: 56px;\\n    top: 56px\\n}\\n\\n.sl-inset-16 {\\n    bottom: 64px;\\n    left: 64px;\\n    right: 64px;\\n    top: 64px\\n}\\n\\n.sl-inset-20 {\\n    bottom: 80px;\\n    left: 80px;\\n    right: 80px;\\n    top: 80px\\n}\\n\\n.sl-inset-24 {\\n    bottom: 96px;\\n    left: 96px;\\n    right: 96px;\\n    top: 96px\\n}\\n\\n.sl-inset-28 {\\n    bottom: 112px;\\n    left: 112px;\\n    right: 112px;\\n    top: 112px\\n}\\n\\n.sl-inset-32 {\\n    bottom: 128px;\\n    left: 128px;\\n    right: 128px;\\n    top: 128px\\n}\\n\\n.sl-inset-36 {\\n    bottom: 144px;\\n    left: 144px;\\n    right: 144px;\\n    top: 144px\\n}\\n\\n.sl-inset-40 {\\n    bottom: 160px;\\n    left: 160px;\\n    right: 160px;\\n    top: 160px\\n}\\n\\n.sl-inset-44 {\\n    bottom: 176px;\\n    left: 176px;\\n    right: 176px;\\n    top: 176px\\n}\\n\\n.sl-inset-48 {\\n    bottom: 192px;\\n    left: 192px;\\n    right: 192px;\\n    top: 192px\\n}\\n\\n.sl-inset-52 {\\n    bottom: 208px;\\n    left: 208px;\\n    right: 208px;\\n    top: 208px\\n}\\n\\n.sl-inset-56 {\\n    bottom: 224px;\\n    left: 224px;\\n    right: 224px;\\n    top: 224px\\n}\\n\\n.sl-inset-60 {\\n    bottom: 240px;\\n    left: 240px;\\n    right: 240px;\\n    top: 240px\\n}\\n\\n.sl-inset-64 {\\n    bottom: 256px;\\n    left: 256px;\\n    right: 256px;\\n    top: 256px\\n}\\n\\n.sl-inset-72 {\\n    bottom: 288px;\\n    left: 288px;\\n    right: 288px;\\n    top: 288px\\n}\\n\\n.sl-inset-80 {\\n    bottom: 320px;\\n    left: 320px;\\n    right: 320px;\\n    top: 320px\\n}\\n\\n.sl-inset-96 {\\n    bottom: 384px;\\n    left: 384px;\\n    right: 384px;\\n    top: 384px\\n}\\n\\n.sl-inset-auto {\\n    bottom: auto;\\n    left: auto;\\n    right: auto;\\n    top: auto\\n}\\n\\n.sl-inset-px {\\n    bottom: 1px;\\n    left: 1px;\\n    right: 1px;\\n    top: 1px\\n}\\n\\n.sl-inset-0\\\\.5 {\\n    bottom: 2px;\\n    left: 2px;\\n    right: 2px;\\n    top: 2px\\n}\\n\\n.sl-inset-1\\\\.5 {\\n    bottom: 6px;\\n    left: 6px;\\n    right: 6px;\\n    top: 6px\\n}\\n\\n.sl-inset-2\\\\.5 {\\n    bottom: 10px;\\n    left: 10px;\\n    right: 10px;\\n    top: 10px\\n}\\n\\n.sl-inset-3\\\\.5 {\\n    bottom: 14px;\\n    left: 14px;\\n    right: 14px;\\n    top: 14px\\n}\\n\\n.sl-inset-4\\\\.5 {\\n    bottom: 18px;\\n    left: 18px;\\n    right: 18px;\\n    top: 18px\\n}\\n\\n.sl--inset-0 {\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    top: 0\\n}\\n\\n.sl--inset-1 {\\n    bottom: -4px;\\n    left: -4px;\\n    right: -4px;\\n    top: -4px\\n}\\n\\n.sl--inset-2 {\\n    bottom: -8px;\\n    left: -8px;\\n    right: -8px;\\n    top: -8px\\n}\\n\\n.sl--inset-3 {\\n    bottom: -12px;\\n    left: -12px;\\n    right: -12px;\\n    top: -12px\\n}\\n\\n.sl--inset-4 {\\n    bottom: -16px;\\n    left: -16px;\\n    right: -16px;\\n    top: -16px\\n}\\n\\n.sl--inset-5 {\\n    bottom: -20px;\\n    left: -20px;\\n    right: -20px;\\n    top: -20px\\n}\\n\\n.sl--inset-6 {\\n    bottom: -24px;\\n    left: -24px;\\n    right: -24px;\\n    top: -24px\\n}\\n\\n.sl--inset-7 {\\n    bottom: -28px;\\n    left: -28px;\\n    right: -28px;\\n    top: -28px\\n}\\n\\n.sl--inset-8 {\\n    bottom: -32px;\\n    left: -32px;\\n    right: -32px;\\n    top: -32px\\n}\\n\\n.sl--inset-9 {\\n    bottom: -36px;\\n    left: -36px;\\n    right: -36px;\\n    top: -36px\\n}\\n\\n.sl--inset-10 {\\n    bottom: -40px;\\n    left: -40px;\\n    right: -40px;\\n    top: -40px\\n}\\n\\n.sl--inset-11 {\\n    bottom: -44px;\\n    left: -44px;\\n    right: -44px;\\n    top: -44px\\n}\\n\\n.sl--inset-12 {\\n    bottom: -48px;\\n    left: -48px;\\n    right: -48px;\\n    top: -48px\\n}\\n\\n.sl--inset-14 {\\n    bottom: -56px;\\n    left: -56px;\\n    right: -56px;\\n    top: -56px\\n}\\n\\n.sl--inset-16 {\\n    bottom: -64px;\\n    left: -64px;\\n    right: -64px;\\n    top: -64px\\n}\\n\\n.sl--inset-20 {\\n    bottom: -80px;\\n    left: -80px;\\n    right: -80px;\\n    top: -80px\\n}\\n\\n.sl--inset-24 {\\n    bottom: -96px;\\n    left: -96px;\\n    right: -96px;\\n    top: -96px\\n}\\n\\n.sl--inset-28 {\\n    bottom: -112px;\\n    left: -112px;\\n    right: -112px;\\n    top: -112px\\n}\\n\\n.sl--inset-32 {\\n    bottom: -128px;\\n    left: -128px;\\n    right: -128px;\\n    top: -128px\\n}\\n\\n.sl--inset-36 {\\n    bottom: -144px;\\n    left: -144px;\\n    right: -144px;\\n    top: -144px\\n}\\n\\n.sl--inset-40 {\\n    bottom: -160px;\\n    left: -160px;\\n    right: -160px;\\n    top: -160px\\n}\\n\\n.sl--inset-44 {\\n    bottom: -176px;\\n    left: -176px;\\n    right: -176px;\\n    top: -176px\\n}\\n\\n.sl--inset-48 {\\n    bottom: -192px;\\n    left: -192px;\\n    right: -192px;\\n    top: -192px\\n}\\n\\n.sl--inset-52 {\\n    bottom: -208px;\\n    left: -208px;\\n    right: -208px;\\n    top: -208px\\n}\\n\\n.sl--inset-56 {\\n    bottom: -224px;\\n    left: -224px;\\n    right: -224px;\\n    top: -224px\\n}\\n\\n.sl--inset-60 {\\n    bottom: -240px;\\n    left: -240px;\\n    right: -240px;\\n    top: -240px\\n}\\n\\n.sl--inset-64 {\\n    bottom: -256px;\\n    left: -256px;\\n    right: -256px;\\n    top: -256px\\n}\\n\\n.sl--inset-72 {\\n    bottom: -288px;\\n    left: -288px;\\n    right: -288px;\\n    top: -288px\\n}\\n\\n.sl--inset-80 {\\n    bottom: -320px;\\n    left: -320px;\\n    right: -320px;\\n    top: -320px\\n}\\n\\n.sl--inset-96 {\\n    bottom: -384px;\\n    left: -384px;\\n    right: -384px;\\n    top: -384px\\n}\\n\\n.sl--inset-px {\\n    bottom: -1px;\\n    left: -1px;\\n    right: -1px;\\n    top: -1px\\n}\\n\\n.sl--inset-0\\\\.5 {\\n    bottom: -2px;\\n    left: -2px;\\n    right: -2px;\\n    top: -2px\\n}\\n\\n.sl--inset-1\\\\.5 {\\n    bottom: -6px;\\n    left: -6px;\\n    right: -6px;\\n    top: -6px\\n}\\n\\n.sl--inset-2\\\\.5 {\\n    bottom: -10px;\\n    left: -10px;\\n    right: -10px;\\n    top: -10px\\n}\\n\\n.sl--inset-3\\\\.5 {\\n    bottom: -14px;\\n    left: -14px;\\n    right: -14px;\\n    top: -14px\\n}\\n\\n.sl--inset-4\\\\.5 {\\n    bottom: -18px;\\n    left: -18px;\\n    right: -18px;\\n    top: -18px\\n}\\n\\n.sl-inset-y-0 {\\n    bottom: 0;\\n    top: 0\\n}\\n\\n.sl-inset-x-0 {\\n    left: 0;\\n    right: 0\\n}\\n\\n.sl-inset-y-1 {\\n    bottom: 4px;\\n    top: 4px\\n}\\n\\n.sl-inset-x-1 {\\n    left: 4px;\\n    right: 4px\\n}\\n\\n.sl-inset-y-2 {\\n    bottom: 8px;\\n    top: 8px\\n}\\n\\n.sl-inset-x-2 {\\n    left: 8px;\\n    right: 8px\\n}\\n\\n.sl-inset-y-3 {\\n    bottom: 12px;\\n    top: 12px\\n}\\n\\n.sl-inset-x-3 {\\n    left: 12px;\\n    right: 12px\\n}\\n\\n.sl-inset-y-4 {\\n    bottom: 16px;\\n    top: 16px\\n}\\n\\n.sl-inset-x-4 {\\n    left: 16px;\\n    right: 16px\\n}\\n\\n.sl-inset-y-5 {\\n    bottom: 20px;\\n    top: 20px\\n}\\n\\n.sl-inset-x-5 {\\n    left: 20px;\\n    right: 20px\\n}\\n\\n.sl-inset-y-6 {\\n    bottom: 24px;\\n    top: 24px\\n}\\n\\n.sl-inset-x-6 {\\n    left: 24px;\\n    right: 24px\\n}\\n\\n.sl-inset-y-7 {\\n    bottom: 28px;\\n    top: 28px\\n}\\n\\n.sl-inset-x-7 {\\n    left: 28px;\\n    right: 28px\\n}\\n\\n.sl-inset-y-8 {\\n    bottom: 32px;\\n    top: 32px\\n}\\n\\n.sl-inset-x-8 {\\n    left: 32px;\\n    right: 32px\\n}\\n\\n.sl-inset-y-9 {\\n    bottom: 36px;\\n    top: 36px\\n}\\n\\n.sl-inset-x-9 {\\n    left: 36px;\\n    right: 36px\\n}\\n\\n.sl-inset-y-10 {\\n    bottom: 40px;\\n    top: 40px\\n}\\n\\n.sl-inset-x-10 {\\n    left: 40px;\\n    right: 40px\\n}\\n\\n.sl-inset-y-11 {\\n    bottom: 44px;\\n    top: 44px\\n}\\n\\n.sl-inset-x-11 {\\n    left: 44px;\\n    right: 44px\\n}\\n\\n.sl-inset-y-12 {\\n    bottom: 48px;\\n    top: 48px\\n}\\n\\n.sl-inset-x-12 {\\n    left: 48px;\\n    right: 48px\\n}\\n\\n.sl-inset-y-14 {\\n    bottom: 56px;\\n    top: 56px\\n}\\n\\n.sl-inset-x-14 {\\n    left: 56px;\\n    right: 56px\\n}\\n\\n.sl-inset-y-16 {\\n    bottom: 64px;\\n    top: 64px\\n}\\n\\n.sl-inset-x-16 {\\n    left: 64px;\\n    right: 64px\\n}\\n\\n.sl-inset-y-20 {\\n    bottom: 80px;\\n    top: 80px\\n}\\n\\n.sl-inset-x-20 {\\n    left: 80px;\\n    right: 80px\\n}\\n\\n.sl-inset-y-24 {\\n    bottom: 96px;\\n    top: 96px\\n}\\n\\n.sl-inset-x-24 {\\n    left: 96px;\\n    right: 96px\\n}\\n\\n.sl-inset-y-28 {\\n    bottom: 112px;\\n    top: 112px\\n}\\n\\n.sl-inset-x-28 {\\n    left: 112px;\\n    right: 112px\\n}\\n\\n.sl-inset-y-32 {\\n    bottom: 128px;\\n    top: 128px\\n}\\n\\n.sl-inset-x-32 {\\n    left: 128px;\\n    right: 128px\\n}\\n\\n.sl-inset-y-36 {\\n    bottom: 144px;\\n    top: 144px\\n}\\n\\n.sl-inset-x-36 {\\n    left: 144px;\\n    right: 144px\\n}\\n\\n.sl-inset-y-40 {\\n    bottom: 160px;\\n    top: 160px\\n}\\n\\n.sl-inset-x-40 {\\n    left: 160px;\\n    right: 160px\\n}\\n\\n.sl-inset-y-44 {\\n    bottom: 176px;\\n    top: 176px\\n}\\n\\n.sl-inset-x-44 {\\n    left: 176px;\\n    right: 176px\\n}\\n\\n.sl-inset-y-48 {\\n    bottom: 192px;\\n    top: 192px\\n}\\n\\n.sl-inset-x-48 {\\n    left: 192px;\\n    right: 192px\\n}\\n\\n.sl-inset-y-52 {\\n    bottom: 208px;\\n    top: 208px\\n}\\n\\n.sl-inset-x-52 {\\n    left: 208px;\\n    right: 208px\\n}\\n\\n.sl-inset-y-56 {\\n    bottom: 224px;\\n    top: 224px\\n}\\n\\n.sl-inset-x-56 {\\n    left: 224px;\\n    right: 224px\\n}\\n\\n.sl-inset-y-60 {\\n    bottom: 240px;\\n    top: 240px\\n}\\n\\n.sl-inset-x-60 {\\n    left: 240px;\\n    right: 240px\\n}\\n\\n.sl-inset-y-64 {\\n    bottom: 256px;\\n    top: 256px\\n}\\n\\n.sl-inset-x-64 {\\n    left: 256px;\\n    right: 256px\\n}\\n\\n.sl-inset-y-72 {\\n    bottom: 288px;\\n    top: 288px\\n}\\n\\n.sl-inset-x-72 {\\n    left: 288px;\\n    right: 288px\\n}\\n\\n.sl-inset-y-80 {\\n    bottom: 320px;\\n    top: 320px\\n}\\n\\n.sl-inset-x-80 {\\n    left: 320px;\\n    right: 320px\\n}\\n\\n.sl-inset-y-96 {\\n    bottom: 384px;\\n    top: 384px\\n}\\n\\n.sl-inset-x-96 {\\n    left: 384px;\\n    right: 384px\\n}\\n\\n.sl-inset-y-auto {\\n    bottom: auto;\\n    top: auto\\n}\\n\\n.sl-inset-x-auto {\\n    left: auto;\\n    right: auto\\n}\\n\\n.sl-inset-y-px {\\n    bottom: 1px;\\n    top: 1px\\n}\\n\\n.sl-inset-x-px {\\n    left: 1px;\\n    right: 1px\\n}\\n\\n.sl-inset-y-0\\\\.5 {\\n    bottom: 2px;\\n    top: 2px\\n}\\n\\n.sl-inset-x-0\\\\.5 {\\n    left: 2px;\\n    right: 2px\\n}\\n\\n.sl-inset-y-1\\\\.5 {\\n    bottom: 6px;\\n    top: 6px\\n}\\n\\n.sl-inset-x-1\\\\.5 {\\n    left: 6px;\\n    right: 6px\\n}\\n\\n.sl-inset-y-2\\\\.5 {\\n    bottom: 10px;\\n    top: 10px\\n}\\n\\n.sl-inset-x-2\\\\.5 {\\n    left: 10px;\\n    right: 10px\\n}\\n\\n.sl-inset-y-3\\\\.5 {\\n    bottom: 14px;\\n    top: 14px\\n}\\n\\n.sl-inset-x-3\\\\.5 {\\n    left: 14px;\\n    right: 14px\\n}\\n\\n.sl-inset-y-4\\\\.5 {\\n    bottom: 18px;\\n    top: 18px\\n}\\n\\n.sl-inset-x-4\\\\.5 {\\n    left: 18px;\\n    right: 18px\\n}\\n\\n.sl--inset-y-0 {\\n    bottom: 0;\\n    top: 0\\n}\\n\\n.sl--inset-x-0 {\\n    left: 0;\\n    right: 0\\n}\\n\\n.sl--inset-y-1 {\\n    bottom: -4px;\\n    top: -4px\\n}\\n\\n.sl--inset-x-1 {\\n    left: -4px;\\n    right: -4px\\n}\\n\\n.sl--inset-y-2 {\\n    bottom: -8px;\\n    top: -8px\\n}\\n\\n.sl--inset-x-2 {\\n    left: -8px;\\n    right: -8px\\n}\\n\\n.sl--inset-y-3 {\\n    bottom: -12px;\\n    top: -12px\\n}\\n\\n.sl--inset-x-3 {\\n    left: -12px;\\n    right: -12px\\n}\\n\\n.sl--inset-y-4 {\\n    bottom: -16px;\\n    top: -16px\\n}\\n\\n.sl--inset-x-4 {\\n    left: -16px;\\n    right: -16px\\n}\\n\\n.sl--inset-y-5 {\\n    bottom: -20px;\\n    top: -20px\\n}\\n\\n.sl--inset-x-5 {\\n    left: -20px;\\n    right: -20px\\n}\\n\\n.sl--inset-y-6 {\\n    bottom: -24px;\\n    top: -24px\\n}\\n\\n.sl--inset-x-6 {\\n    left: -24px;\\n    right: -24px\\n}\\n\\n.sl--inset-y-7 {\\n    bottom: -28px;\\n    top: -28px\\n}\\n\\n.sl--inset-x-7 {\\n    left: -28px;\\n    right: -28px\\n}\\n\\n.sl--inset-y-8 {\\n    bottom: -32px;\\n    top: -32px\\n}\\n\\n.sl--inset-x-8 {\\n    left: -32px;\\n    right: -32px\\n}\\n\\n.sl--inset-y-9 {\\n    bottom: -36px;\\n    top: -36px\\n}\\n\\n.sl--inset-x-9 {\\n    left: -36px;\\n    right: -36px\\n}\\n\\n.sl--inset-y-10 {\\n    bottom: -40px;\\n    top: -40px\\n}\\n\\n.sl--inset-x-10 {\\n    left: -40px;\\n    right: -40px\\n}\\n\\n.sl--inset-y-11 {\\n    bottom: -44px;\\n    top: -44px\\n}\\n\\n.sl--inset-x-11 {\\n    left: -44px;\\n    right: -44px\\n}\\n\\n.sl--inset-y-12 {\\n    bottom: -48px;\\n    top: -48px\\n}\\n\\n.sl--inset-x-12 {\\n    left: -48px;\\n    right: -48px\\n}\\n\\n.sl--inset-y-14 {\\n    bottom: -56px;\\n    top: -56px\\n}\\n\\n.sl--inset-x-14 {\\n    left: -56px;\\n    right: -56px\\n}\\n\\n.sl--inset-y-16 {\\n    bottom: -64px;\\n    top: -64px\\n}\\n\\n.sl--inset-x-16 {\\n    left: -64px;\\n    right: -64px\\n}\\n\\n.sl--inset-y-20 {\\n    bottom: -80px;\\n    top: -80px\\n}\\n\\n.sl--inset-x-20 {\\n    left: -80px;\\n    right: -80px\\n}\\n\\n.sl--inset-y-24 {\\n    bottom: -96px;\\n    top: -96px\\n}\\n\\n.sl--inset-x-24 {\\n    left: -96px;\\n    right: -96px\\n}\\n\\n.sl--inset-y-28 {\\n    bottom: -112px;\\n    top: -112px\\n}\\n\\n.sl--inset-x-28 {\\n    left: -112px;\\n    right: -112px\\n}\\n\\n.sl--inset-y-32 {\\n    bottom: -128px;\\n    top: -128px\\n}\\n\\n.sl--inset-x-32 {\\n    left: -128px;\\n    right: -128px\\n}\\n\\n.sl--inset-y-36 {\\n    bottom: -144px;\\n    top: -144px\\n}\\n\\n.sl--inset-x-36 {\\n    left: -144px;\\n    right: -144px\\n}\\n\\n.sl--inset-y-40 {\\n    bottom: -160px;\\n    top: -160px\\n}\\n\\n.sl--inset-x-40 {\\n    left: -160px;\\n    right: -160px\\n}\\n\\n.sl--inset-y-44 {\\n    bottom: -176px;\\n    top: -176px\\n}\\n\\n.sl--inset-x-44 {\\n    left: -176px;\\n    right: -176px\\n}\\n\\n.sl--inset-y-48 {\\n    bottom: -192px;\\n    top: -192px\\n}\\n\\n.sl--inset-x-48 {\\n    left: -192px;\\n    right: -192px\\n}\\n\\n.sl--inset-y-52 {\\n    bottom: -208px;\\n    top: -208px\\n}\\n\\n.sl--inset-x-52 {\\n    left: -208px;\\n    right: -208px\\n}\\n\\n.sl--inset-y-56 {\\n    bottom: -224px;\\n    top: -224px\\n}\\n\\n.sl--inset-x-56 {\\n    left: -224px;\\n    right: -224px\\n}\\n\\n.sl--inset-y-60 {\\n    bottom: -240px;\\n    top: -240px\\n}\\n\\n.sl--inset-x-60 {\\n    left: -240px;\\n    right: -240px\\n}\\n\\n.sl--inset-y-64 {\\n    bottom: -256px;\\n    top: -256px\\n}\\n\\n.sl--inset-x-64 {\\n    left: -256px;\\n    right: -256px\\n}\\n\\n.sl--inset-y-72 {\\n    bottom: -288px;\\n    top: -288px\\n}\\n\\n.sl--inset-x-72 {\\n    left: -288px;\\n    right: -288px\\n}\\n\\n.sl--inset-y-80 {\\n    bottom: -320px;\\n    top: -320px\\n}\\n\\n.sl--inset-x-80 {\\n    left: -320px;\\n    right: -320px\\n}\\n\\n.sl--inset-y-96 {\\n    bottom: -384px;\\n    top: -384px\\n}\\n\\n.sl--inset-x-96 {\\n    left: -384px;\\n    right: -384px\\n}\\n\\n.sl--inset-y-px {\\n    bottom: -1px;\\n    top: -1px\\n}\\n\\n.sl--inset-x-px {\\n    left: -1px;\\n    right: -1px\\n}\\n\\n.sl--inset-y-0\\\\.5 {\\n    bottom: -2px;\\n    top: -2px\\n}\\n\\n.sl--inset-x-0\\\\.5 {\\n    left: -2px;\\n    right: -2px\\n}\\n\\n.sl--inset-y-1\\\\.5 {\\n    bottom: -6px;\\n    top: -6px\\n}\\n\\n.sl--inset-x-1\\\\.5 {\\n    left: -6px;\\n    right: -6px\\n}\\n\\n.sl--inset-y-2\\\\.5 {\\n    bottom: -10px;\\n    top: -10px\\n}\\n\\n.sl--inset-x-2\\\\.5 {\\n    left: -10px;\\n    right: -10px\\n}\\n\\n.sl--inset-y-3\\\\.5 {\\n    bottom: -14px;\\n    top: -14px\\n}\\n\\n.sl--inset-x-3\\\\.5 {\\n    left: -14px;\\n    right: -14px\\n}\\n\\n.sl--inset-y-4\\\\.5 {\\n    bottom: -18px;\\n    top: -18px\\n}\\n\\n.sl--inset-x-4\\\\.5 {\\n    left: -18px;\\n    right: -18px\\n}\\n\\n.sl-top-0 {\\n    top: 0\\n}\\n\\n.sl-right-0 {\\n    right: 0\\n}\\n\\n.sl-bottom-0 {\\n    bottom: 0\\n}\\n\\n.sl-left-0 {\\n    left: 0\\n}\\n\\n.sl-top-1 {\\n    top: 4px\\n}\\n\\n.sl-right-1 {\\n    right: 4px\\n}\\n\\n.sl-bottom-1 {\\n    bottom: 4px\\n}\\n\\n.sl-left-1 {\\n    left: 4px\\n}\\n\\n.sl-top-2 {\\n    top: 8px\\n}\\n\\n.sl-right-2 {\\n    right: 8px\\n}\\n\\n.sl-bottom-2 {\\n    bottom: 8px\\n}\\n\\n.sl-left-2 {\\n    left: 8px\\n}\\n\\n.sl-top-3 {\\n    top: 12px\\n}\\n\\n.sl-right-3 {\\n    right: 12px\\n}\\n\\n.sl-bottom-3 {\\n    bottom: 12px\\n}\\n\\n.sl-left-3 {\\n    left: 12px\\n}\\n\\n.sl-top-4 {\\n    top: 16px\\n}\\n\\n.sl-right-4 {\\n    right: 16px\\n}\\n\\n.sl-bottom-4 {\\n    bottom: 16px\\n}\\n\\n.sl-left-4 {\\n    left: 16px\\n}\\n\\n.sl-top-5 {\\n    top: 20px\\n}\\n\\n.sl-right-5 {\\n    right: 20px\\n}\\n\\n.sl-bottom-5 {\\n    bottom: 20px\\n}\\n\\n.sl-left-5 {\\n    left: 20px\\n}\\n\\n.sl-top-6 {\\n    top: 24px\\n}\\n\\n.sl-right-6 {\\n    right: 24px\\n}\\n\\n.sl-bottom-6 {\\n    bottom: 24px\\n}\\n\\n.sl-left-6 {\\n    left: 24px\\n}\\n\\n.sl-top-7 {\\n    top: 28px\\n}\\n\\n.sl-right-7 {\\n    right: 28px\\n}\\n\\n.sl-bottom-7 {\\n    bottom: 28px\\n}\\n\\n.sl-left-7 {\\n    left: 28px\\n}\\n\\n.sl-top-8 {\\n    top: 32px\\n}\\n\\n.sl-right-8 {\\n    right: 32px\\n}\\n\\n.sl-bottom-8 {\\n    bottom: 32px\\n}\\n\\n.sl-left-8 {\\n    left: 32px\\n}\\n\\n.sl-top-9 {\\n    top: 36px\\n}\\n\\n.sl-right-9 {\\n    right: 36px\\n}\\n\\n.sl-bottom-9 {\\n    bottom: 36px\\n}\\n\\n.sl-left-9 {\\n    left: 36px\\n}\\n\\n.sl-top-10 {\\n    top: 40px\\n}\\n\\n.sl-right-10 {\\n    right: 40px\\n}\\n\\n.sl-bottom-10 {\\n    bottom: 40px\\n}\\n\\n.sl-left-10 {\\n    left: 40px\\n}\\n\\n.sl-top-11 {\\n    top: 44px\\n}\\n\\n.sl-right-11 {\\n    right: 44px\\n}\\n\\n.sl-bottom-11 {\\n    bottom: 44px\\n}\\n\\n.sl-left-11 {\\n    left: 44px\\n}\\n\\n.sl-top-12 {\\n    top: 48px\\n}\\n\\n.sl-right-12 {\\n    right: 48px\\n}\\n\\n.sl-bottom-12 {\\n    bottom: 48px\\n}\\n\\n.sl-left-12 {\\n    left: 48px\\n}\\n\\n.sl-top-14 {\\n    top: 56px\\n}\\n\\n.sl-right-14 {\\n    right: 56px\\n}\\n\\n.sl-bottom-14 {\\n    bottom: 56px\\n}\\n\\n.sl-left-14 {\\n    left: 56px\\n}\\n\\n.sl-top-16 {\\n    top: 64px\\n}\\n\\n.sl-right-16 {\\n    right: 64px\\n}\\n\\n.sl-bottom-16 {\\n    bottom: 64px\\n}\\n\\n.sl-left-16 {\\n    left: 64px\\n}\\n\\n.sl-top-20 {\\n    top: 80px\\n}\\n\\n.sl-right-20 {\\n    right: 80px\\n}\\n\\n.sl-bottom-20 {\\n    bottom: 80px\\n}\\n\\n.sl-left-20 {\\n    left: 80px\\n}\\n\\n.sl-top-24 {\\n    top: 96px\\n}\\n\\n.sl-right-24 {\\n    right: 96px\\n}\\n\\n.sl-bottom-24 {\\n    bottom: 96px\\n}\\n\\n.sl-left-24 {\\n    left: 96px\\n}\\n\\n.sl-top-28 {\\n    top: 112px\\n}\\n\\n.sl-right-28 {\\n    right: 112px\\n}\\n\\n.sl-bottom-28 {\\n    bottom: 112px\\n}\\n\\n.sl-left-28 {\\n    left: 112px\\n}\\n\\n.sl-top-32 {\\n    top: 128px\\n}\\n\\n.sl-right-32 {\\n    right: 128px\\n}\\n\\n.sl-bottom-32 {\\n    bottom: 128px\\n}\\n\\n.sl-left-32 {\\n    left: 128px\\n}\\n\\n.sl-top-36 {\\n    top: 144px\\n}\\n\\n.sl-right-36 {\\n    right: 144px\\n}\\n\\n.sl-bottom-36 {\\n    bottom: 144px\\n}\\n\\n.sl-left-36 {\\n    left: 144px\\n}\\n\\n.sl-top-40 {\\n    top: 160px\\n}\\n\\n.sl-right-40 {\\n    right: 160px\\n}\\n\\n.sl-bottom-40 {\\n    bottom: 160px\\n}\\n\\n.sl-left-40 {\\n    left: 160px\\n}\\n\\n.sl-top-44 {\\n    top: 176px\\n}\\n\\n.sl-right-44 {\\n    right: 176px\\n}\\n\\n.sl-bottom-44 {\\n    bottom: 176px\\n}\\n\\n.sl-left-44 {\\n    left: 176px\\n}\\n\\n.sl-top-48 {\\n    top: 192px\\n}\\n\\n.sl-right-48 {\\n    right: 192px\\n}\\n\\n.sl-bottom-48 {\\n    bottom: 192px\\n}\\n\\n.sl-left-48 {\\n    left: 192px\\n}\\n\\n.sl-top-52 {\\n    top: 208px\\n}\\n\\n.sl-right-52 {\\n    right: 208px\\n}\\n\\n.sl-bottom-52 {\\n    bottom: 208px\\n}\\n\\n.sl-left-52 {\\n    left: 208px\\n}\\n\\n.sl-top-56 {\\n    top: 224px\\n}\\n\\n.sl-right-56 {\\n    right: 224px\\n}\\n\\n.sl-bottom-56 {\\n    bottom: 224px\\n}\\n\\n.sl-left-56 {\\n    left: 224px\\n}\\n\\n.sl-top-60 {\\n    top: 240px\\n}\\n\\n.sl-right-60 {\\n    right: 240px\\n}\\n\\n.sl-bottom-60 {\\n    bottom: 240px\\n}\\n\\n.sl-left-60 {\\n    left: 240px\\n}\\n\\n.sl-top-64 {\\n    top: 256px\\n}\\n\\n.sl-right-64 {\\n    right: 256px\\n}\\n\\n.sl-bottom-64 {\\n    bottom: 256px\\n}\\n\\n.sl-left-64 {\\n    left: 256px\\n}\\n\\n.sl-top-72 {\\n    top: 288px\\n}\\n\\n.sl-right-72 {\\n    right: 288px\\n}\\n\\n.sl-bottom-72 {\\n    bottom: 288px\\n}\\n\\n.sl-left-72 {\\n    left: 288px\\n}\\n\\n.sl-top-80 {\\n    top: 320px\\n}\\n\\n.sl-right-80 {\\n    right: 320px\\n}\\n\\n.sl-bottom-80 {\\n    bottom: 320px\\n}\\n\\n.sl-left-80 {\\n    left: 320px\\n}\\n\\n.sl-top-96 {\\n    top: 384px\\n}\\n\\n.sl-right-96 {\\n    right: 384px\\n}\\n\\n.sl-bottom-96 {\\n    bottom: 384px\\n}\\n\\n.sl-left-96 {\\n    left: 384px\\n}\\n\\n.sl-top-auto {\\n    top: auto\\n}\\n\\n.sl-right-auto {\\n    right: auto\\n}\\n\\n.sl-bottom-auto {\\n    bottom: auto\\n}\\n\\n.sl-left-auto {\\n    left: auto\\n}\\n\\n.sl-top-px {\\n    top: 1px\\n}\\n\\n.sl-right-px {\\n    right: 1px\\n}\\n\\n.sl-bottom-px {\\n    bottom: 1px\\n}\\n\\n.sl-left-px {\\n    left: 1px\\n}\\n\\n.sl-top-0\\\\.5 {\\n    top: 2px\\n}\\n\\n.sl-right-0\\\\.5 {\\n    right: 2px\\n}\\n\\n.sl-bottom-0\\\\.5 {\\n    bottom: 2px\\n}\\n\\n.sl-left-0\\\\.5 {\\n    left: 2px\\n}\\n\\n.sl-top-1\\\\.5 {\\n    top: 6px\\n}\\n\\n.sl-right-1\\\\.5 {\\n    right: 6px\\n}\\n\\n.sl-bottom-1\\\\.5 {\\n    bottom: 6px\\n}\\n\\n.sl-left-1\\\\.5 {\\n    left: 6px\\n}\\n\\n.sl-top-2\\\\.5 {\\n    top: 10px\\n}\\n\\n.sl-right-2\\\\.5 {\\n    right: 10px\\n}\\n\\n.sl-bottom-2\\\\.5 {\\n    bottom: 10px\\n}\\n\\n.sl-left-2\\\\.5 {\\n    left: 10px\\n}\\n\\n.sl-top-3\\\\.5 {\\n    top: 14px\\n}\\n\\n.sl-right-3\\\\.5 {\\n    right: 14px\\n}\\n\\n.sl-bottom-3\\\\.5 {\\n    bottom: 14px\\n}\\n\\n.sl-left-3\\\\.5 {\\n    left: 14px\\n}\\n\\n.sl-top-4\\\\.5 {\\n    top: 18px\\n}\\n\\n.sl-right-4\\\\.5 {\\n    right: 18px\\n}\\n\\n.sl-bottom-4\\\\.5 {\\n    bottom: 18px\\n}\\n\\n.sl-left-4\\\\.5 {\\n    left: 18px\\n}\\n\\n.sl--top-0 {\\n    top: 0\\n}\\n\\n.sl--right-0 {\\n    right: 0\\n}\\n\\n.sl--bottom-0 {\\n    bottom: 0\\n}\\n\\n.sl--left-0 {\\n    left: 0\\n}\\n\\n.sl--top-1 {\\n    top: -4px\\n}\\n\\n.sl--right-1 {\\n    right: -4px\\n}\\n\\n.sl--bottom-1 {\\n    bottom: -4px\\n}\\n\\n.sl--left-1 {\\n    left: -4px\\n}\\n\\n.sl--top-2 {\\n    top: -8px\\n}\\n\\n.sl--right-2 {\\n    right: -8px\\n}\\n\\n.sl--bottom-2 {\\n    bottom: -8px\\n}\\n\\n.sl--left-2 {\\n    left: -8px\\n}\\n\\n.sl--top-3 {\\n    top: -12px\\n}\\n\\n.sl--right-3 {\\n    right: -12px\\n}\\n\\n.sl--bottom-3 {\\n    bottom: -12px\\n}\\n\\n.sl--left-3 {\\n    left: -12px\\n}\\n\\n.sl--top-4 {\\n    top: -16px\\n}\\n\\n.sl--right-4 {\\n    right: -16px\\n}\\n\\n.sl--bottom-4 {\\n    bottom: -16px\\n}\\n\\n.sl--left-4 {\\n    left: -16px\\n}\\n\\n.sl--top-5 {\\n    top: -20px\\n}\\n\\n.sl--right-5 {\\n    right: -20px\\n}\\n\\n.sl--bottom-5 {\\n    bottom: -20px\\n}\\n\\n.sl--left-5 {\\n    left: -20px\\n}\\n\\n.sl--top-6 {\\n    top: -24px\\n}\\n\\n.sl--right-6 {\\n    right: -24px\\n}\\n\\n.sl--bottom-6 {\\n    bottom: -24px\\n}\\n\\n.sl--left-6 {\\n    left: -24px\\n}\\n\\n.sl--top-7 {\\n    top: -28px\\n}\\n\\n.sl--right-7 {\\n    right: -28px\\n}\\n\\n.sl--bottom-7 {\\n    bottom: -28px\\n}\\n\\n.sl--left-7 {\\n    left: -28px\\n}\\n\\n.sl--top-8 {\\n    top: -32px\\n}\\n\\n.sl--right-8 {\\n    right: -32px\\n}\\n\\n.sl--bottom-8 {\\n    bottom: -32px\\n}\\n\\n.sl--left-8 {\\n    left: -32px\\n}\\n\\n.sl--top-9 {\\n    top: -36px\\n}\\n\\n.sl--right-9 {\\n    right: -36px\\n}\\n\\n.sl--bottom-9 {\\n    bottom: -36px\\n}\\n\\n.sl--left-9 {\\n    left: -36px\\n}\\n\\n.sl--top-10 {\\n    top: -40px\\n}\\n\\n.sl--right-10 {\\n    right: -40px\\n}\\n\\n.sl--bottom-10 {\\n    bottom: -40px\\n}\\n\\n.sl--left-10 {\\n    left: -40px\\n}\\n\\n.sl--top-11 {\\n    top: -44px\\n}\\n\\n.sl--right-11 {\\n    right: -44px\\n}\\n\\n.sl--bottom-11 {\\n    bottom: -44px\\n}\\n\\n.sl--left-11 {\\n    left: -44px\\n}\\n\\n.sl--top-12 {\\n    top: -48px\\n}\\n\\n.sl--right-12 {\\n    right: -48px\\n}\\n\\n.sl--bottom-12 {\\n    bottom: -48px\\n}\\n\\n.sl--left-12 {\\n    left: -48px\\n}\\n\\n.sl--top-14 {\\n    top: -56px\\n}\\n\\n.sl--right-14 {\\n    right: -56px\\n}\\n\\n.sl--bottom-14 {\\n    bottom: -56px\\n}\\n\\n.sl--left-14 {\\n    left: -56px\\n}\\n\\n.sl--top-16 {\\n    top: -64px\\n}\\n\\n.sl--right-16 {\\n    right: -64px\\n}\\n\\n.sl--bottom-16 {\\n    bottom: -64px\\n}\\n\\n.sl--left-16 {\\n    left: -64px\\n}\\n\\n.sl--top-20 {\\n    top: -80px\\n}\\n\\n.sl--right-20 {\\n    right: -80px\\n}\\n\\n.sl--bottom-20 {\\n    bottom: -80px\\n}\\n\\n.sl--left-20 {\\n    left: -80px\\n}\\n\\n.sl--top-24 {\\n    top: -96px\\n}\\n\\n.sl--right-24 {\\n    right: -96px\\n}\\n\\n.sl--bottom-24 {\\n    bottom: -96px\\n}\\n\\n.sl--left-24 {\\n    left: -96px\\n}\\n\\n.sl--top-28 {\\n    top: -112px\\n}\\n\\n.sl--right-28 {\\n    right: -112px\\n}\\n\\n.sl--bottom-28 {\\n    bottom: -112px\\n}\\n\\n.sl--left-28 {\\n    left: -112px\\n}\\n\\n.sl--top-32 {\\n    top: -128px\\n}\\n\\n.sl--right-32 {\\n    right: -128px\\n}\\n\\n.sl--bottom-32 {\\n    bottom: -128px\\n}\\n\\n.sl--left-32 {\\n    left: -128px\\n}\\n\\n.sl--top-36 {\\n    top: -144px\\n}\\n\\n.sl--right-36 {\\n    right: -144px\\n}\\n\\n.sl--bottom-36 {\\n    bottom: -144px\\n}\\n\\n.sl--left-36 {\\n    left: -144px\\n}\\n\\n.sl--top-40 {\\n    top: -160px\\n}\\n\\n.sl--right-40 {\\n    right: -160px\\n}\\n\\n.sl--bottom-40 {\\n    bottom: -160px\\n}\\n\\n.sl--left-40 {\\n    left: -160px\\n}\\n\\n.sl--top-44 {\\n    top: -176px\\n}\\n\\n.sl--right-44 {\\n    right: -176px\\n}\\n\\n.sl--bottom-44 {\\n    bottom: -176px\\n}\\n\\n.sl--left-44 {\\n    left: -176px\\n}\\n\\n.sl--top-48 {\\n    top: -192px\\n}\\n\\n.sl--right-48 {\\n    right: -192px\\n}\\n\\n.sl--bottom-48 {\\n    bottom: -192px\\n}\\n\\n.sl--left-48 {\\n    left: -192px\\n}\\n\\n.sl--top-52 {\\n    top: -208px\\n}\\n\\n.sl--right-52 {\\n    right: -208px\\n}\\n\\n.sl--bottom-52 {\\n    bottom: -208px\\n}\\n\\n.sl--left-52 {\\n    left: -208px\\n}\\n\\n.sl--top-56 {\\n    top: -224px\\n}\\n\\n.sl--right-56 {\\n    right: -224px\\n}\\n\\n.sl--bottom-56 {\\n    bottom: -224px\\n}\\n\\n.sl--left-56 {\\n    left: -224px\\n}\\n\\n.sl--top-60 {\\n    top: -240px\\n}\\n\\n.sl--right-60 {\\n    right: -240px\\n}\\n\\n.sl--bottom-60 {\\n    bottom: -240px\\n}\\n\\n.sl--left-60 {\\n    left: -240px\\n}\\n\\n.sl--top-64 {\\n    top: -256px\\n}\\n\\n.sl--right-64 {\\n    right: -256px\\n}\\n\\n.sl--bottom-64 {\\n    bottom: -256px\\n}\\n\\n.sl--left-64 {\\n    left: -256px\\n}\\n\\n.sl--top-72 {\\n    top: -288px\\n}\\n\\n.sl--right-72 {\\n    right: -288px\\n}\\n\\n.sl--bottom-72 {\\n    bottom: -288px\\n}\\n\\n.sl--left-72 {\\n    left: -288px\\n}\\n\\n.sl--top-80 {\\n    top: -320px\\n}\\n\\n.sl--right-80 {\\n    right: -320px\\n}\\n\\n.sl--bottom-80 {\\n    bottom: -320px\\n}\\n\\n.sl--left-80 {\\n    left: -320px\\n}\\n\\n.sl--top-96 {\\n    top: -384px\\n}\\n\\n.sl--right-96 {\\n    right: -384px\\n}\\n\\n.sl--bottom-96 {\\n    bottom: -384px\\n}\\n\\n.sl--left-96 {\\n    left: -384px\\n}\\n\\n.sl--top-px {\\n    top: -1px\\n}\\n\\n.sl--right-px {\\n    right: -1px\\n}\\n\\n.sl--bottom-px {\\n    bottom: -1px\\n}\\n\\n.sl--left-px {\\n    left: -1px\\n}\\n\\n.sl--top-0\\\\.5 {\\n    top: -2px\\n}\\n\\n.sl--right-0\\\\.5 {\\n    right: -2px\\n}\\n\\n.sl--bottom-0\\\\.5 {\\n    bottom: -2px\\n}\\n\\n.sl--left-0\\\\.5 {\\n    left: -2px\\n}\\n\\n.sl--top-1\\\\.5 {\\n    top: -6px\\n}\\n\\n.sl--right-1\\\\.5 {\\n    right: -6px\\n}\\n\\n.sl--bottom-1\\\\.5 {\\n    bottom: -6px\\n}\\n\\n.sl--left-1\\\\.5 {\\n    left: -6px\\n}\\n\\n.sl--top-2\\\\.5 {\\n    top: -10px\\n}\\n\\n.sl--right-2\\\\.5 {\\n    right: -10px\\n}\\n\\n.sl--bottom-2\\\\.5 {\\n    bottom: -10px\\n}\\n\\n.sl--left-2\\\\.5 {\\n    left: -10px\\n}\\n\\n.sl--top-3\\\\.5 {\\n    top: -14px\\n}\\n\\n.sl--right-3\\\\.5 {\\n    right: -14px\\n}\\n\\n.sl--bottom-3\\\\.5 {\\n    bottom: -14px\\n}\\n\\n.sl--left-3\\\\.5 {\\n    left: -14px\\n}\\n\\n.sl--top-4\\\\.5 {\\n    top: -18px\\n}\\n\\n.sl--right-4\\\\.5 {\\n    right: -18px\\n}\\n\\n.sl--bottom-4\\\\.5 {\\n    bottom: -18px\\n}\\n\\n.sl--left-4\\\\.5 {\\n    left: -18px\\n}\\n\\n.sl-justify-start {\\n    justify-content: flex-start\\n}\\n\\n.sl-justify-end {\\n    justify-content: flex-end\\n}\\n\\n.sl-justify-center {\\n    justify-content: center\\n}\\n\\n.sl-justify-between {\\n    justify-content: space-between\\n}\\n\\n.sl-justify-around {\\n    justify-content: space-around\\n}\\n\\n.sl-justify-evenly {\\n    justify-content: space-evenly\\n}\\n\\n.sl-justify-items-start {\\n    justify-items: start\\n}\\n\\n.sl-justify-items-end {\\n    justify-items: end\\n}\\n\\n.sl-justify-items-center {\\n    justify-items: center\\n}\\n\\n.sl-justify-items-stretch {\\n    justify-items: stretch\\n}\\n\\n.sl-justify-self-auto {\\n    justify-self: auto\\n}\\n\\n.sl-justify-self-start {\\n    justify-self: start\\n}\\n\\n.sl-justify-self-end {\\n    justify-self: end\\n}\\n\\n.sl-justify-self-center {\\n    justify-self: center\\n}\\n\\n.sl-justify-self-stretch {\\n    justify-self: stretch\\n}\\n\\n.sl-tracking-tight {\\n    letter-spacing: -.025em\\n}\\n\\n.sl-tracking-normal {\\n    letter-spacing: 0\\n}\\n\\n.sl-tracking-wide {\\n    letter-spacing: .025em\\n}\\n\\n.sl-leading-none {\\n    line-height: 1\\n}\\n\\n.sl-leading-tight {\\n    line-height: 1.2\\n}\\n\\n.sl-leading-snug {\\n    line-height: 1.375\\n}\\n\\n.sl-leading-normal {\\n    line-height: 1.5\\n}\\n\\n.sl-leading-relaxed {\\n    line-height: 1.625\\n}\\n\\n.sl-leading-loose {\\n    line-height: 2\\n}\\n\\n.sl-leading-paragraph-leading {\\n    line-height: var(--lh-paragraph-leading)\\n}\\n\\n.sl-leading-paragraph {\\n    line-height: var(--lh-paragraph)\\n}\\n\\n.sl-leading-paragraph-small {\\n    line-height: var(--lh-paragraph-small)\\n}\\n\\n.sl-leading-paragraph-tiny {\\n    line-height: var(--lh-paragraph-tiny)\\n}\\n\\n.sl-m-0 {\\n    margin: 0\\n}\\n\\n.sl-m-1 {\\n    margin: 4px\\n}\\n\\n.sl-m-2 {\\n    margin: 8px\\n}\\n\\n.sl-m-3 {\\n    margin: 12px\\n}\\n\\n.sl-m-4 {\\n    margin: 16px\\n}\\n\\n.sl-m-5 {\\n    margin: 20px\\n}\\n\\n.sl-m-6 {\\n    margin: 24px\\n}\\n\\n.sl-m-7 {\\n    margin: 28px\\n}\\n\\n.sl-m-8 {\\n    margin: 32px\\n}\\n\\n.sl-m-9 {\\n    margin: 36px\\n}\\n\\n.sl-m-10 {\\n    margin: 40px\\n}\\n\\n.sl-m-11 {\\n    margin: 44px\\n}\\n\\n.sl-m-12 {\\n    margin: 48px\\n}\\n\\n.sl-m-14 {\\n    margin: 56px\\n}\\n\\n.sl-m-16 {\\n    margin: 64px\\n}\\n\\n.sl-m-20 {\\n    margin: 80px\\n}\\n\\n.sl-m-24 {\\n    margin: 96px\\n}\\n\\n.sl-m-28 {\\n    margin: 112px\\n}\\n\\n.sl-m-32 {\\n    margin: 128px\\n}\\n\\n.sl-m-36 {\\n    margin: 144px\\n}\\n\\n.sl-m-40 {\\n    margin: 160px\\n}\\n\\n.sl-m-44 {\\n    margin: 176px\\n}\\n\\n.sl-m-48 {\\n    margin: 192px\\n}\\n\\n.sl-m-52 {\\n    margin: 208px\\n}\\n\\n.sl-m-56 {\\n    margin: 224px\\n}\\n\\n.sl-m-60 {\\n    margin: 240px\\n}\\n\\n.sl-m-64 {\\n    margin: 256px\\n}\\n\\n.sl-m-72 {\\n    margin: 288px\\n}\\n\\n.sl-m-80 {\\n    margin: 320px\\n}\\n\\n.sl-m-96 {\\n    margin: 384px\\n}\\n\\n.sl-m-auto {\\n    margin: auto\\n}\\n\\n.sl-m-px {\\n    margin: 1px\\n}\\n\\n.sl-m-0\\\\.5 {\\n    margin: 2px\\n}\\n\\n.sl-m-1\\\\.5 {\\n    margin: 6px\\n}\\n\\n.sl-m-2\\\\.5 {\\n    margin: 10px\\n}\\n\\n.sl-m-3\\\\.5 {\\n    margin: 14px\\n}\\n\\n.sl-m-4\\\\.5 {\\n    margin: 18px\\n}\\n\\n.sl--m-0 {\\n    margin: 0\\n}\\n\\n.sl--m-1 {\\n    margin: -4px\\n}\\n\\n.sl--m-2 {\\n    margin: -8px\\n}\\n\\n.sl--m-3 {\\n    margin: -12px\\n}\\n\\n.sl--m-4 {\\n    margin: -16px\\n}\\n\\n.sl--m-5 {\\n    margin: -20px\\n}\\n\\n.sl--m-6 {\\n    margin: -24px\\n}\\n\\n.sl--m-7 {\\n    margin: -28px\\n}\\n\\n.sl--m-8 {\\n    margin: -32px\\n}\\n\\n.sl--m-9 {\\n    margin: -36px\\n}\\n\\n.sl--m-10 {\\n    margin: -40px\\n}\\n\\n.sl--m-11 {\\n    margin: -44px\\n}\\n\\n.sl--m-12 {\\n    margin: -48px\\n}\\n\\n.sl--m-14 {\\n    margin: -56px\\n}\\n\\n.sl--m-16 {\\n    margin: -64px\\n}\\n\\n.sl--m-20 {\\n    margin: -80px\\n}\\n\\n.sl--m-24 {\\n    margin: -96px\\n}\\n\\n.sl--m-28 {\\n    margin: -112px\\n}\\n\\n.sl--m-32 {\\n    margin: -128px\\n}\\n\\n.sl--m-36 {\\n    margin: -144px\\n}\\n\\n.sl--m-40 {\\n    margin: -160px\\n}\\n\\n.sl--m-44 {\\n    margin: -176px\\n}\\n\\n.sl--m-48 {\\n    margin: -192px\\n}\\n\\n.sl--m-52 {\\n    margin: -208px\\n}\\n\\n.sl--m-56 {\\n    margin: -224px\\n}\\n\\n.sl--m-60 {\\n    margin: -240px\\n}\\n\\n.sl--m-64 {\\n    margin: -256px\\n}\\n\\n.sl--m-72 {\\n    margin: -288px\\n}\\n\\n.sl--m-80 {\\n    margin: -320px\\n}\\n\\n.sl--m-96 {\\n    margin: -384px\\n}\\n\\n.sl--m-px {\\n    margin: -1px\\n}\\n\\n.sl--m-0\\\\.5 {\\n    margin: -2px\\n}\\n\\n.sl--m-1\\\\.5 {\\n    margin: -6px\\n}\\n\\n.sl--m-2\\\\.5 {\\n    margin: -10px\\n}\\n\\n.sl--m-3\\\\.5 {\\n    margin: -14px\\n}\\n\\n.sl--m-4\\\\.5 {\\n    margin: -18px\\n}\\n\\n.sl-my-0 {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl-mx-0 {\\n    margin-left: 0;\\n    margin-right: 0\\n}\\n\\n.sl-my-1 {\\n    margin-bottom: 4px;\\n    margin-top: 4px\\n}\\n\\n.sl-mx-1 {\\n    margin-left: 4px;\\n    margin-right: 4px\\n}\\n\\n.sl-my-2 {\\n    margin-bottom: 8px;\\n    margin-top: 8px\\n}\\n\\n.sl-mx-2 {\\n    margin-left: 8px;\\n    margin-right: 8px\\n}\\n\\n.sl-my-3 {\\n    margin-bottom: 12px;\\n    margin-top: 12px\\n}\\n\\n.sl-mx-3 {\\n    margin-left: 12px;\\n    margin-right: 12px\\n}\\n\\n.sl-my-4 {\\n    margin-bottom: 16px;\\n    margin-top: 16px\\n}\\n\\n.sl-mx-4 {\\n    margin-left: 16px;\\n    margin-right: 16px\\n}\\n\\n.sl-my-5 {\\n    margin-bottom: 20px;\\n    margin-top: 20px\\n}\\n\\n.sl-mx-5 {\\n    margin-left: 20px;\\n    margin-right: 20px\\n}\\n\\n.sl-my-6 {\\n    margin-bottom: 24px;\\n    margin-top: 24px\\n}\\n\\n.sl-mx-6 {\\n    margin-left: 24px;\\n    margin-right: 24px\\n}\\n\\n.sl-my-7 {\\n    margin-bottom: 28px;\\n    margin-top: 28px\\n}\\n\\n.sl-mx-7 {\\n    margin-left: 28px;\\n    margin-right: 28px\\n}\\n\\n.sl-my-8 {\\n    margin-bottom: 32px;\\n    margin-top: 32px\\n}\\n\\n.sl-mx-8 {\\n    margin-left: 32px;\\n    margin-right: 32px\\n}\\n\\n.sl-my-9 {\\n    margin-bottom: 36px;\\n    margin-top: 36px\\n}\\n\\n.sl-mx-9 {\\n    margin-left: 36px;\\n    margin-right: 36px\\n}\\n\\n.sl-my-10 {\\n    margin-bottom: 40px;\\n    margin-top: 40px\\n}\\n\\n.sl-mx-10 {\\n    margin-left: 40px;\\n    margin-right: 40px\\n}\\n\\n.sl-my-11 {\\n    margin-bottom: 44px;\\n    margin-top: 44px\\n}\\n\\n.sl-mx-11 {\\n    margin-left: 44px;\\n    margin-right: 44px\\n}\\n\\n.sl-my-12 {\\n    margin-bottom: 48px;\\n    margin-top: 48px\\n}\\n\\n.sl-mx-12 {\\n    margin-left: 48px;\\n    margin-right: 48px\\n}\\n\\n.sl-my-14 {\\n    margin-bottom: 56px;\\n    margin-top: 56px\\n}\\n\\n.sl-mx-14 {\\n    margin-left: 56px;\\n    margin-right: 56px\\n}\\n\\n.sl-my-16 {\\n    margin-bottom: 64px;\\n    margin-top: 64px\\n}\\n\\n.sl-mx-16 {\\n    margin-left: 64px;\\n    margin-right: 64px\\n}\\n\\n.sl-my-20 {\\n    margin-bottom: 80px;\\n    margin-top: 80px\\n}\\n\\n.sl-mx-20 {\\n    margin-left: 80px;\\n    margin-right: 80px\\n}\\n\\n.sl-my-24 {\\n    margin-bottom: 96px;\\n    margin-top: 96px\\n}\\n\\n.sl-mx-24 {\\n    margin-left: 96px;\\n    margin-right: 96px\\n}\\n\\n.sl-my-28 {\\n    margin-bottom: 112px;\\n    margin-top: 112px\\n}\\n\\n.sl-mx-28 {\\n    margin-left: 112px;\\n    margin-right: 112px\\n}\\n\\n.sl-my-32 {\\n    margin-bottom: 128px;\\n    margin-top: 128px\\n}\\n\\n.sl-mx-32 {\\n    margin-left: 128px;\\n    margin-right: 128px\\n}\\n\\n.sl-my-36 {\\n    margin-bottom: 144px;\\n    margin-top: 144px\\n}\\n\\n.sl-mx-36 {\\n    margin-left: 144px;\\n    margin-right: 144px\\n}\\n\\n.sl-my-40 {\\n    margin-bottom: 160px;\\n    margin-top: 160px\\n}\\n\\n.sl-mx-40 {\\n    margin-left: 160px;\\n    margin-right: 160px\\n}\\n\\n.sl-my-44 {\\n    margin-bottom: 176px;\\n    margin-top: 176px\\n}\\n\\n.sl-mx-44 {\\n    margin-left: 176px;\\n    margin-right: 176px\\n}\\n\\n.sl-my-48 {\\n    margin-bottom: 192px;\\n    margin-top: 192px\\n}\\n\\n.sl-mx-48 {\\n    margin-left: 192px;\\n    margin-right: 192px\\n}\\n\\n.sl-my-52 {\\n    margin-bottom: 208px;\\n    margin-top: 208px\\n}\\n\\n.sl-mx-52 {\\n    margin-left: 208px;\\n    margin-right: 208px\\n}\\n\\n.sl-my-56 {\\n    margin-bottom: 224px;\\n    margin-top: 224px\\n}\\n\\n.sl-mx-56 {\\n    margin-left: 224px;\\n    margin-right: 224px\\n}\\n\\n.sl-my-60 {\\n    margin-bottom: 240px;\\n    margin-top: 240px\\n}\\n\\n.sl-mx-60 {\\n    margin-left: 240px;\\n    margin-right: 240px\\n}\\n\\n.sl-my-64 {\\n    margin-bottom: 256px;\\n    margin-top: 256px\\n}\\n\\n.sl-mx-64 {\\n    margin-left: 256px;\\n    margin-right: 256px\\n}\\n\\n.sl-my-72 {\\n    margin-bottom: 288px;\\n    margin-top: 288px\\n}\\n\\n.sl-mx-72 {\\n    margin-left: 288px;\\n    margin-right: 288px\\n}\\n\\n.sl-my-80 {\\n    margin-bottom: 320px;\\n    margin-top: 320px\\n}\\n\\n.sl-mx-80 {\\n    margin-left: 320px;\\n    margin-right: 320px\\n}\\n\\n.sl-my-96 {\\n    margin-bottom: 384px;\\n    margin-top: 384px\\n}\\n\\n.sl-mx-96 {\\n    margin-left: 384px;\\n    margin-right: 384px\\n}\\n\\n.sl-my-auto {\\n    margin-bottom: auto;\\n    margin-top: auto\\n}\\n\\n.sl-mx-auto {\\n    margin-left: auto;\\n    margin-right: auto\\n}\\n\\n.sl-my-px {\\n    margin-bottom: 1px;\\n    margin-top: 1px\\n}\\n\\n.sl-mx-px {\\n    margin-left: 1px;\\n    margin-right: 1px\\n}\\n\\n.sl-my-0\\\\.5 {\\n    margin-bottom: 2px;\\n    margin-top: 2px\\n}\\n\\n.sl-mx-0\\\\.5 {\\n    margin-left: 2px;\\n    margin-right: 2px\\n}\\n\\n.sl-my-1\\\\.5 {\\n    margin-bottom: 6px;\\n    margin-top: 6px\\n}\\n\\n.sl-mx-1\\\\.5 {\\n    margin-left: 6px;\\n    margin-right: 6px\\n}\\n\\n.sl-my-2\\\\.5 {\\n    margin-bottom: 10px;\\n    margin-top: 10px\\n}\\n\\n.sl-mx-2\\\\.5 {\\n    margin-left: 10px;\\n    margin-right: 10px\\n}\\n\\n.sl-my-3\\\\.5 {\\n    margin-bottom: 14px;\\n    margin-top: 14px\\n}\\n\\n.sl-mx-3\\\\.5 {\\n    margin-left: 14px;\\n    margin-right: 14px\\n}\\n\\n.sl-my-4\\\\.5 {\\n    margin-bottom: 18px;\\n    margin-top: 18px\\n}\\n\\n.sl-mx-4\\\\.5 {\\n    margin-left: 18px;\\n    margin-right: 18px\\n}\\n\\n.sl--my-0 {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl--mx-0 {\\n    margin-left: 0;\\n    margin-right: 0\\n}\\n\\n.sl--my-1 {\\n    margin-bottom: -4px;\\n    margin-top: -4px\\n}\\n\\n.sl--mx-1 {\\n    margin-left: -4px;\\n    margin-right: -4px\\n}\\n\\n.sl--my-2 {\\n    margin-bottom: -8px;\\n    margin-top: -8px\\n}\\n\\n.sl--mx-2 {\\n    margin-left: -8px;\\n    margin-right: -8px\\n}\\n\\n.sl--my-3 {\\n    margin-bottom: -12px;\\n    margin-top: -12px\\n}\\n\\n.sl--mx-3 {\\n    margin-left: -12px;\\n    margin-right: -12px\\n}\\n\\n.sl--my-4 {\\n    margin-bottom: -16px;\\n    margin-top: -16px\\n}\\n\\n.sl--mx-4 {\\n    margin-left: -16px;\\n    margin-right: -16px\\n}\\n\\n.sl--my-5 {\\n    margin-bottom: -20px;\\n    margin-top: -20px\\n}\\n\\n.sl--mx-5 {\\n    margin-left: -20px;\\n    margin-right: -20px\\n}\\n\\n.sl--my-6 {\\n    margin-bottom: -24px;\\n    margin-top: -24px\\n}\\n\\n.sl--mx-6 {\\n    margin-left: -24px;\\n    margin-right: -24px\\n}\\n\\n.sl--my-7 {\\n    margin-bottom: -28px;\\n    margin-top: -28px\\n}\\n\\n.sl--mx-7 {\\n    margin-left: -28px;\\n    margin-right: -28px\\n}\\n\\n.sl--my-8 {\\n    margin-bottom: -32px;\\n    margin-top: -32px\\n}\\n\\n.sl--mx-8 {\\n    margin-left: -32px;\\n    margin-right: -32px\\n}\\n\\n.sl--my-9 {\\n    margin-bottom: -36px;\\n    margin-top: -36px\\n}\\n\\n.sl--mx-9 {\\n    margin-left: -36px;\\n    margin-right: -36px\\n}\\n\\n.sl--my-10 {\\n    margin-bottom: -40px;\\n    margin-top: -40px\\n}\\n\\n.sl--mx-10 {\\n    margin-left: -40px;\\n    margin-right: -40px\\n}\\n\\n.sl--my-11 {\\n    margin-bottom: -44px;\\n    margin-top: -44px\\n}\\n\\n.sl--mx-11 {\\n    margin-left: -44px;\\n    margin-right: -44px\\n}\\n\\n.sl--my-12 {\\n    margin-bottom: -48px;\\n    margin-top: -48px\\n}\\n\\n.sl--mx-12 {\\n    margin-left: -48px;\\n    margin-right: -48px\\n}\\n\\n.sl--my-14 {\\n    margin-bottom: -56px;\\n    margin-top: -56px\\n}\\n\\n.sl--mx-14 {\\n    margin-left: -56px;\\n    margin-right: -56px\\n}\\n\\n.sl--my-16 {\\n    margin-bottom: -64px;\\n    margin-top: -64px\\n}\\n\\n.sl--mx-16 {\\n    margin-left: -64px;\\n    margin-right: -64px\\n}\\n\\n.sl--my-20 {\\n    margin-bottom: -80px;\\n    margin-top: -80px\\n}\\n\\n.sl--mx-20 {\\n    margin-left: -80px;\\n    margin-right: -80px\\n}\\n\\n.sl--my-24 {\\n    margin-bottom: -96px;\\n    margin-top: -96px\\n}\\n\\n.sl--mx-24 {\\n    margin-left: -96px;\\n    margin-right: -96px\\n}\\n\\n.sl--my-28 {\\n    margin-bottom: -112px;\\n    margin-top: -112px\\n}\\n\\n.sl--mx-28 {\\n    margin-left: -112px;\\n    margin-right: -112px\\n}\\n\\n.sl--my-32 {\\n    margin-bottom: -128px;\\n    margin-top: -128px\\n}\\n\\n.sl--mx-32 {\\n    margin-left: -128px;\\n    margin-right: -128px\\n}\\n\\n.sl--my-36 {\\n    margin-bottom: -144px;\\n    margin-top: -144px\\n}\\n\\n.sl--mx-36 {\\n    margin-left: -144px;\\n    margin-right: -144px\\n}\\n\\n.sl--my-40 {\\n    margin-bottom: -160px;\\n    margin-top: -160px\\n}\\n\\n.sl--mx-40 {\\n    margin-left: -160px;\\n    margin-right: -160px\\n}\\n\\n.sl--my-44 {\\n    margin-bottom: -176px;\\n    margin-top: -176px\\n}\\n\\n.sl--mx-44 {\\n    margin-left: -176px;\\n    margin-right: -176px\\n}\\n\\n.sl--my-48 {\\n    margin-bottom: -192px;\\n    margin-top: -192px\\n}\\n\\n.sl--mx-48 {\\n    margin-left: -192px;\\n    margin-right: -192px\\n}\\n\\n.sl--my-52 {\\n    margin-bottom: -208px;\\n    margin-top: -208px\\n}\\n\\n.sl--mx-52 {\\n    margin-left: -208px;\\n    margin-right: -208px\\n}\\n\\n.sl--my-56 {\\n    margin-bottom: -224px;\\n    margin-top: -224px\\n}\\n\\n.sl--mx-56 {\\n    margin-left: -224px;\\n    margin-right: -224px\\n}\\n\\n.sl--my-60 {\\n    margin-bottom: -240px;\\n    margin-top: -240px\\n}\\n\\n.sl--mx-60 {\\n    margin-left: -240px;\\n    margin-right: -240px\\n}\\n\\n.sl--my-64 {\\n    margin-bottom: -256px;\\n    margin-top: -256px\\n}\\n\\n.sl--mx-64 {\\n    margin-left: -256px;\\n    margin-right: -256px\\n}\\n\\n.sl--my-72 {\\n    margin-bottom: -288px;\\n    margin-top: -288px\\n}\\n\\n.sl--mx-72 {\\n    margin-left: -288px;\\n    margin-right: -288px\\n}\\n\\n.sl--my-80 {\\n    margin-bottom: -320px;\\n    margin-top: -320px\\n}\\n\\n.sl--mx-80 {\\n    margin-left: -320px;\\n    margin-right: -320px\\n}\\n\\n.sl--my-96 {\\n    margin-bottom: -384px;\\n    margin-top: -384px\\n}\\n\\n.sl--mx-96 {\\n    margin-left: -384px;\\n    margin-right: -384px\\n}\\n\\n.sl--my-px {\\n    margin-bottom: -1px;\\n    margin-top: -1px\\n}\\n\\n.sl--mx-px {\\n    margin-left: -1px;\\n    margin-right: -1px\\n}\\n\\n.sl--my-0\\\\.5 {\\n    margin-bottom: -2px;\\n    margin-top: -2px\\n}\\n\\n.sl--mx-0\\\\.5 {\\n    margin-left: -2px;\\n    margin-right: -2px\\n}\\n\\n.sl--my-1\\\\.5 {\\n    margin-bottom: -6px;\\n    margin-top: -6px\\n}\\n\\n.sl--mx-1\\\\.5 {\\n    margin-left: -6px;\\n    margin-right: -6px\\n}\\n\\n.sl--my-2\\\\.5 {\\n    margin-bottom: -10px;\\n    margin-top: -10px\\n}\\n\\n.sl--mx-2\\\\.5 {\\n    margin-left: -10px;\\n    margin-right: -10px\\n}\\n\\n.sl--my-3\\\\.5 {\\n    margin-bottom: -14px;\\n    margin-top: -14px\\n}\\n\\n.sl--mx-3\\\\.5 {\\n    margin-left: -14px;\\n    margin-right: -14px\\n}\\n\\n.sl--my-4\\\\.5 {\\n    margin-bottom: -18px;\\n    margin-top: -18px\\n}\\n\\n.sl--mx-4\\\\.5 {\\n    margin-left: -18px;\\n    margin-right: -18px\\n}\\n\\n.sl-mt-0 {\\n    margin-top: 0\\n}\\n\\n.sl-mr-0 {\\n    margin-right: 0\\n}\\n\\n.sl-mb-0 {\\n    margin-bottom: 0\\n}\\n\\n.sl-ml-0 {\\n    margin-left: 0\\n}\\n\\n.sl-mt-1 {\\n    margin-top: 4px\\n}\\n\\n.sl-mr-1 {\\n    margin-right: 4px\\n}\\n\\n.sl-mb-1 {\\n    margin-bottom: 4px\\n}\\n\\n.sl-ml-1 {\\n    margin-left: 4px\\n}\\n\\n.sl-mt-2 {\\n    margin-top: 8px\\n}\\n\\n.sl-mr-2 {\\n    margin-right: 8px\\n}\\n\\n.sl-mb-2 {\\n    margin-bottom: 8px\\n}\\n\\n.sl-ml-2 {\\n    margin-left: 8px\\n}\\n\\n.sl-mt-3 {\\n    margin-top: 12px\\n}\\n\\n.sl-mr-3 {\\n    margin-right: 12px\\n}\\n\\n.sl-mb-3 {\\n    margin-bottom: 12px\\n}\\n\\n.sl-ml-3 {\\n    margin-left: 12px\\n}\\n\\n.sl-mt-4 {\\n    margin-top: 16px\\n}\\n\\n.sl-mr-4 {\\n    margin-right: 16px\\n}\\n\\n.sl-mb-4 {\\n    margin-bottom: 16px\\n}\\n\\n.sl-ml-4 {\\n    margin-left: 16px\\n}\\n\\n.sl-mt-5 {\\n    margin-top: 20px\\n}\\n\\n.sl-mr-5 {\\n    margin-right: 20px\\n}\\n\\n.sl-mb-5 {\\n    margin-bottom: 20px\\n}\\n\\n.sl-ml-5 {\\n    margin-left: 20px\\n}\\n\\n.sl-mt-6 {\\n    margin-top: 24px\\n}\\n\\n.sl-mr-6 {\\n    margin-right: 24px\\n}\\n\\n.sl-mb-6 {\\n    margin-bottom: 24px\\n}\\n\\n.sl-ml-6 {\\n    margin-left: 24px\\n}\\n\\n.sl-mt-7 {\\n    margin-top: 28px\\n}\\n\\n.sl-mr-7 {\\n    margin-right: 28px\\n}\\n\\n.sl-mb-7 {\\n    margin-bottom: 28px\\n}\\n\\n.sl-ml-7 {\\n    margin-left: 28px\\n}\\n\\n.sl-mt-8 {\\n    margin-top: 32px\\n}\\n\\n.sl-mr-8 {\\n    margin-right: 32px\\n}\\n\\n.sl-mb-8 {\\n    margin-bottom: 32px\\n}\\n\\n.sl-ml-8 {\\n    margin-left: 32px\\n}\\n\\n.sl-mt-9 {\\n    margin-top: 36px\\n}\\n\\n.sl-mr-9 {\\n    margin-right: 36px\\n}\\n\\n.sl-mb-9 {\\n    margin-bottom: 36px\\n}\\n\\n.sl-ml-9 {\\n    margin-left: 36px\\n}\\n\\n.sl-mt-10 {\\n    margin-top: 40px\\n}\\n\\n.sl-mr-10 {\\n    margin-right: 40px\\n}\\n\\n.sl-mb-10 {\\n    margin-bottom: 40px\\n}\\n\\n.sl-ml-10 {\\n    margin-left: 40px\\n}\\n\\n.sl-mt-11 {\\n    margin-top: 44px\\n}\\n\\n.sl-mr-11 {\\n    margin-right: 44px\\n}\\n\\n.sl-mb-11 {\\n    margin-bottom: 44px\\n}\\n\\n.sl-ml-11 {\\n    margin-left: 44px\\n}\\n\\n.sl-mt-12 {\\n    margin-top: 48px\\n}\\n\\n.sl-mr-12 {\\n    margin-right: 48px\\n}\\n\\n.sl-mb-12 {\\n    margin-bottom: 48px\\n}\\n\\n.sl-ml-12 {\\n    margin-left: 48px\\n}\\n\\n.sl-mt-14 {\\n    margin-top: 56px\\n}\\n\\n.sl-mr-14 {\\n    margin-right: 56px\\n}\\n\\n.sl-mb-14 {\\n    margin-bottom: 56px\\n}\\n\\n.sl-ml-14 {\\n    margin-left: 56px\\n}\\n\\n.sl-mt-16 {\\n    margin-top: 64px\\n}\\n\\n.sl-mr-16 {\\n    margin-right: 64px\\n}\\n\\n.sl-mb-16 {\\n    margin-bottom: 64px\\n}\\n\\n.sl-ml-16 {\\n    margin-left: 64px\\n}\\n\\n.sl-mt-20 {\\n    margin-top: 80px\\n}\\n\\n.sl-mr-20 {\\n    margin-right: 80px\\n}\\n\\n.sl-mb-20 {\\n    margin-bottom: 80px\\n}\\n\\n.sl-ml-20 {\\n    margin-left: 80px\\n}\\n\\n.sl-mt-24 {\\n    margin-top: 96px\\n}\\n\\n.sl-mr-24 {\\n    margin-right: 96px\\n}\\n\\n.sl-mb-24 {\\n    margin-bottom: 96px\\n}\\n\\n.sl-ml-24 {\\n    margin-left: 96px\\n}\\n\\n.sl-mt-28 {\\n    margin-top: 112px\\n}\\n\\n.sl-mr-28 {\\n    margin-right: 112px\\n}\\n\\n.sl-mb-28 {\\n    margin-bottom: 112px\\n}\\n\\n.sl-ml-28 {\\n    margin-left: 112px\\n}\\n\\n.sl-mt-32 {\\n    margin-top: 128px\\n}\\n\\n.sl-mr-32 {\\n    margin-right: 128px\\n}\\n\\n.sl-mb-32 {\\n    margin-bottom: 128px\\n}\\n\\n.sl-ml-32 {\\n    margin-left: 128px\\n}\\n\\n.sl-mt-36 {\\n    margin-top: 144px\\n}\\n\\n.sl-mr-36 {\\n    margin-right: 144px\\n}\\n\\n.sl-mb-36 {\\n    margin-bottom: 144px\\n}\\n\\n.sl-ml-36 {\\n    margin-left: 144px\\n}\\n\\n.sl-mt-40 {\\n    margin-top: 160px\\n}\\n\\n.sl-mr-40 {\\n    margin-right: 160px\\n}\\n\\n.sl-mb-40 {\\n    margin-bottom: 160px\\n}\\n\\n.sl-ml-40 {\\n    margin-left: 160px\\n}\\n\\n.sl-mt-44 {\\n    margin-top: 176px\\n}\\n\\n.sl-mr-44 {\\n    margin-right: 176px\\n}\\n\\n.sl-mb-44 {\\n    margin-bottom: 176px\\n}\\n\\n.sl-ml-44 {\\n    margin-left: 176px\\n}\\n\\n.sl-mt-48 {\\n    margin-top: 192px\\n}\\n\\n.sl-mr-48 {\\n    margin-right: 192px\\n}\\n\\n.sl-mb-48 {\\n    margin-bottom: 192px\\n}\\n\\n.sl-ml-48 {\\n    margin-left: 192px\\n}\\n\\n.sl-mt-52 {\\n    margin-top: 208px\\n}\\n\\n.sl-mr-52 {\\n    margin-right: 208px\\n}\\n\\n.sl-mb-52 {\\n    margin-bottom: 208px\\n}\\n\\n.sl-ml-52 {\\n    margin-left: 208px\\n}\\n\\n.sl-mt-56 {\\n    margin-top: 224px\\n}\\n\\n.sl-mr-56 {\\n    margin-right: 224px\\n}\\n\\n.sl-mb-56 {\\n    margin-bottom: 224px\\n}\\n\\n.sl-ml-56 {\\n    margin-left: 224px\\n}\\n\\n.sl-mt-60 {\\n    margin-top: 240px\\n}\\n\\n.sl-mr-60 {\\n    margin-right: 240px\\n}\\n\\n.sl-mb-60 {\\n    margin-bottom: 240px\\n}\\n\\n.sl-ml-60 {\\n    margin-left: 240px\\n}\\n\\n.sl-mt-64 {\\n    margin-top: 256px\\n}\\n\\n.sl-mr-64 {\\n    margin-right: 256px\\n}\\n\\n.sl-mb-64 {\\n    margin-bottom: 256px\\n}\\n\\n.sl-ml-64 {\\n    margin-left: 256px\\n}\\n\\n.sl-mt-72 {\\n    margin-top: 288px\\n}\\n\\n.sl-mr-72 {\\n    margin-right: 288px\\n}\\n\\n.sl-mb-72 {\\n    margin-bottom: 288px\\n}\\n\\n.sl-ml-72 {\\n    margin-left: 288px\\n}\\n\\n.sl-mt-80 {\\n    margin-top: 320px\\n}\\n\\n.sl-mr-80 {\\n    margin-right: 320px\\n}\\n\\n.sl-mb-80 {\\n    margin-bottom: 320px\\n}\\n\\n.sl-ml-80 {\\n    margin-left: 320px\\n}\\n\\n.sl-mt-96 {\\n    margin-top: 384px\\n}\\n\\n.sl-mr-96 {\\n    margin-right: 384px\\n}\\n\\n.sl-mb-96 {\\n    margin-bottom: 384px\\n}\\n\\n.sl-ml-96 {\\n    margin-left: 384px\\n}\\n\\n.sl-mt-auto {\\n    margin-top: auto\\n}\\n\\n.sl-mr-auto {\\n    margin-right: auto\\n}\\n\\n.sl-mb-auto {\\n    margin-bottom: auto\\n}\\n\\n.sl-ml-auto {\\n    margin-left: auto\\n}\\n\\n.sl-mt-px {\\n    margin-top: 1px\\n}\\n\\n.sl-mr-px {\\n    margin-right: 1px\\n}\\n\\n.sl-mb-px {\\n    margin-bottom: 1px\\n}\\n\\n.sl-ml-px {\\n    margin-left: 1px\\n}\\n\\n.sl-mt-0\\\\.5 {\\n    margin-top: 2px\\n}\\n\\n.sl-mr-0\\\\.5 {\\n    margin-right: 2px\\n}\\n\\n.sl-mb-0\\\\.5 {\\n    margin-bottom: 2px\\n}\\n\\n.sl-ml-0\\\\.5 {\\n    margin-left: 2px\\n}\\n\\n.sl-mt-1\\\\.5 {\\n    margin-top: 6px\\n}\\n\\n.sl-mr-1\\\\.5 {\\n    margin-right: 6px\\n}\\n\\n.sl-mb-1\\\\.5 {\\n    margin-bottom: 6px\\n}\\n\\n.sl-ml-1\\\\.5 {\\n    margin-left: 6px\\n}\\n\\n.sl-mt-2\\\\.5 {\\n    margin-top: 10px\\n}\\n\\n.sl-mr-2\\\\.5 {\\n    margin-right: 10px\\n}\\n\\n.sl-mb-2\\\\.5 {\\n    margin-bottom: 10px\\n}\\n\\n.sl-ml-2\\\\.5 {\\n    margin-left: 10px\\n}\\n\\n.sl-mt-3\\\\.5 {\\n    margin-top: 14px\\n}\\n\\n.sl-mr-3\\\\.5 {\\n    margin-right: 14px\\n}\\n\\n.sl-mb-3\\\\.5 {\\n    margin-bottom: 14px\\n}\\n\\n.sl-ml-3\\\\.5 {\\n    margin-left: 14px\\n}\\n\\n.sl-mt-4\\\\.5 {\\n    margin-top: 18px\\n}\\n\\n.sl-mr-4\\\\.5 {\\n    margin-right: 18px\\n}\\n\\n.sl-mb-4\\\\.5 {\\n    margin-bottom: 18px\\n}\\n\\n.sl-ml-4\\\\.5 {\\n    margin-left: 18px\\n}\\n\\n.sl--mt-0 {\\n    margin-top: 0\\n}\\n\\n.sl--mr-0 {\\n    margin-right: 0\\n}\\n\\n.sl--mb-0 {\\n    margin-bottom: 0\\n}\\n\\n.sl--ml-0 {\\n    margin-left: 0\\n}\\n\\n.sl--mt-1 {\\n    margin-top: -4px\\n}\\n\\n.sl--mr-1 {\\n    margin-right: -4px\\n}\\n\\n.sl--mb-1 {\\n    margin-bottom: -4px\\n}\\n\\n.sl--ml-1 {\\n    margin-left: -4px\\n}\\n\\n.sl--mt-2 {\\n    margin-top: -8px\\n}\\n\\n.sl--mr-2 {\\n    margin-right: -8px\\n}\\n\\n.sl--mb-2 {\\n    margin-bottom: -8px\\n}\\n\\n.sl--ml-2 {\\n    margin-left: -8px\\n}\\n\\n.sl--mt-3 {\\n    margin-top: -12px\\n}\\n\\n.sl--mr-3 {\\n    margin-right: -12px\\n}\\n\\n.sl--mb-3 {\\n    margin-bottom: -12px\\n}\\n\\n.sl--ml-3 {\\n    margin-left: -12px\\n}\\n\\n.sl--mt-4 {\\n    margin-top: -16px\\n}\\n\\n.sl--mr-4 {\\n    margin-right: -16px\\n}\\n\\n.sl--mb-4 {\\n    margin-bottom: -16px\\n}\\n\\n.sl--ml-4 {\\n    margin-left: -16px\\n}\\n\\n.sl--mt-5 {\\n    margin-top: -20px\\n}\\n\\n.sl--mr-5 {\\n    margin-right: -20px\\n}\\n\\n.sl--mb-5 {\\n    margin-bottom: -20px\\n}\\n\\n.sl--ml-5 {\\n    margin-left: -20px\\n}\\n\\n.sl--mt-6 {\\n    margin-top: -24px\\n}\\n\\n.sl--mr-6 {\\n    margin-right: -24px\\n}\\n\\n.sl--mb-6 {\\n    margin-bottom: -24px\\n}\\n\\n.sl--ml-6 {\\n    margin-left: -24px\\n}\\n\\n.sl--mt-7 {\\n    margin-top: -28px\\n}\\n\\n.sl--mr-7 {\\n    margin-right: -28px\\n}\\n\\n.sl--mb-7 {\\n    margin-bottom: -28px\\n}\\n\\n.sl--ml-7 {\\n    margin-left: -28px\\n}\\n\\n.sl--mt-8 {\\n    margin-top: -32px\\n}\\n\\n.sl--mr-8 {\\n    margin-right: -32px\\n}\\n\\n.sl--mb-8 {\\n    margin-bottom: -32px\\n}\\n\\n.sl--ml-8 {\\n    margin-left: -32px\\n}\\n\\n.sl--mt-9 {\\n    margin-top: -36px\\n}\\n\\n.sl--mr-9 {\\n    margin-right: -36px\\n}\\n\\n.sl--mb-9 {\\n    margin-bottom: -36px\\n}\\n\\n.sl--ml-9 {\\n    margin-left: -36px\\n}\\n\\n.sl--mt-10 {\\n    margin-top: -40px\\n}\\n\\n.sl--mr-10 {\\n    margin-right: -40px\\n}\\n\\n.sl--mb-10 {\\n    margin-bottom: -40px\\n}\\n\\n.sl--ml-10 {\\n    margin-left: -40px\\n}\\n\\n.sl--mt-11 {\\n    margin-top: -44px\\n}\\n\\n.sl--mr-11 {\\n    margin-right: -44px\\n}\\n\\n.sl--mb-11 {\\n    margin-bottom: -44px\\n}\\n\\n.sl--ml-11 {\\n    margin-left: -44px\\n}\\n\\n.sl--mt-12 {\\n    margin-top: -48px\\n}\\n\\n.sl--mr-12 {\\n    margin-right: -48px\\n}\\n\\n.sl--mb-12 {\\n    margin-bottom: -48px\\n}\\n\\n.sl--ml-12 {\\n    margin-left: -48px\\n}\\n\\n.sl--mt-14 {\\n    margin-top: -56px\\n}\\n\\n.sl--mr-14 {\\n    margin-right: -56px\\n}\\n\\n.sl--mb-14 {\\n    margin-bottom: -56px\\n}\\n\\n.sl--ml-14 {\\n    margin-left: -56px\\n}\\n\\n.sl--mt-16 {\\n    margin-top: -64px\\n}\\n\\n.sl--mr-16 {\\n    margin-right: -64px\\n}\\n\\n.sl--mb-16 {\\n    margin-bottom: -64px\\n}\\n\\n.sl--ml-16 {\\n    margin-left: -64px\\n}\\n\\n.sl--mt-20 {\\n    margin-top: -80px\\n}\\n\\n.sl--mr-20 {\\n    margin-right: -80px\\n}\\n\\n.sl--mb-20 {\\n    margin-bottom: -80px\\n}\\n\\n.sl--ml-20 {\\n    margin-left: -80px\\n}\\n\\n.sl--mt-24 {\\n    margin-top: -96px\\n}\\n\\n.sl--mr-24 {\\n    margin-right: -96px\\n}\\n\\n.sl--mb-24 {\\n    margin-bottom: -96px\\n}\\n\\n.sl--ml-24 {\\n    margin-left: -96px\\n}\\n\\n.sl--mt-28 {\\n    margin-top: -112px\\n}\\n\\n.sl--mr-28 {\\n    margin-right: -112px\\n}\\n\\n.sl--mb-28 {\\n    margin-bottom: -112px\\n}\\n\\n.sl--ml-28 {\\n    margin-left: -112px\\n}\\n\\n.sl--mt-32 {\\n    margin-top: -128px\\n}\\n\\n.sl--mr-32 {\\n    margin-right: -128px\\n}\\n\\n.sl--mb-32 {\\n    margin-bottom: -128px\\n}\\n\\n.sl--ml-32 {\\n    margin-left: -128px\\n}\\n\\n.sl--mt-36 {\\n    margin-top: -144px\\n}\\n\\n.sl--mr-36 {\\n    margin-right: -144px\\n}\\n\\n.sl--mb-36 {\\n    margin-bottom: -144px\\n}\\n\\n.sl--ml-36 {\\n    margin-left: -144px\\n}\\n\\n.sl--mt-40 {\\n    margin-top: -160px\\n}\\n\\n.sl--mr-40 {\\n    margin-right: -160px\\n}\\n\\n.sl--mb-40 {\\n    margin-bottom: -160px\\n}\\n\\n.sl--ml-40 {\\n    margin-left: -160px\\n}\\n\\n.sl--mt-44 {\\n    margin-top: -176px\\n}\\n\\n.sl--mr-44 {\\n    margin-right: -176px\\n}\\n\\n.sl--mb-44 {\\n    margin-bottom: -176px\\n}\\n\\n.sl--ml-44 {\\n    margin-left: -176px\\n}\\n\\n.sl--mt-48 {\\n    margin-top: -192px\\n}\\n\\n.sl--mr-48 {\\n    margin-right: -192px\\n}\\n\\n.sl--mb-48 {\\n    margin-bottom: -192px\\n}\\n\\n.sl--ml-48 {\\n    margin-left: -192px\\n}\\n\\n.sl--mt-52 {\\n    margin-top: -208px\\n}\\n\\n.sl--mr-52 {\\n    margin-right: -208px\\n}\\n\\n.sl--mb-52 {\\n    margin-bottom: -208px\\n}\\n\\n.sl--ml-52 {\\n    margin-left: -208px\\n}\\n\\n.sl--mt-56 {\\n    margin-top: -224px\\n}\\n\\n.sl--mr-56 {\\n    margin-right: -224px\\n}\\n\\n.sl--mb-56 {\\n    margin-bottom: -224px\\n}\\n\\n.sl--ml-56 {\\n    margin-left: -224px\\n}\\n\\n.sl--mt-60 {\\n    margin-top: -240px\\n}\\n\\n.sl--mr-60 {\\n    margin-right: -240px\\n}\\n\\n.sl--mb-60 {\\n    margin-bottom: -240px\\n}\\n\\n.sl--ml-60 {\\n    margin-left: -240px\\n}\\n\\n.sl--mt-64 {\\n    margin-top: -256px\\n}\\n\\n.sl--mr-64 {\\n    margin-right: -256px\\n}\\n\\n.sl--mb-64 {\\n    margin-bottom: -256px\\n}\\n\\n.sl--ml-64 {\\n    margin-left: -256px\\n}\\n\\n.sl--mt-72 {\\n    margin-top: -288px\\n}\\n\\n.sl--mr-72 {\\n    margin-right: -288px\\n}\\n\\n.sl--mb-72 {\\n    margin-bottom: -288px\\n}\\n\\n.sl--ml-72 {\\n    margin-left: -288px\\n}\\n\\n.sl--mt-80 {\\n    margin-top: -320px\\n}\\n\\n.sl--mr-80 {\\n    margin-right: -320px\\n}\\n\\n.sl--mb-80 {\\n    margin-bottom: -320px\\n}\\n\\n.sl--ml-80 {\\n    margin-left: -320px\\n}\\n\\n.sl--mt-96 {\\n    margin-top: -384px\\n}\\n\\n.sl--mr-96 {\\n    margin-right: -384px\\n}\\n\\n.sl--mb-96 {\\n    margin-bottom: -384px\\n}\\n\\n.sl--ml-96 {\\n    margin-left: -384px\\n}\\n\\n.sl--mt-px {\\n    margin-top: -1px\\n}\\n\\n.sl--mr-px {\\n    margin-right: -1px\\n}\\n\\n.sl--mb-px {\\n    margin-bottom: -1px\\n}\\n\\n.sl--ml-px {\\n    margin-left: -1px\\n}\\n\\n.sl--mt-0\\\\.5 {\\n    margin-top: -2px\\n}\\n\\n.sl--mr-0\\\\.5 {\\n    margin-right: -2px\\n}\\n\\n.sl--mb-0\\\\.5 {\\n    margin-bottom: -2px\\n}\\n\\n.sl--ml-0\\\\.5 {\\n    margin-left: -2px\\n}\\n\\n.sl--mt-1\\\\.5 {\\n    margin-top: -6px\\n}\\n\\n.sl--mr-1\\\\.5 {\\n    margin-right: -6px\\n}\\n\\n.sl--mb-1\\\\.5 {\\n    margin-bottom: -6px\\n}\\n\\n.sl--ml-1\\\\.5 {\\n    margin-left: -6px\\n}\\n\\n.sl--mt-2\\\\.5 {\\n    margin-top: -10px\\n}\\n\\n.sl--mr-2\\\\.5 {\\n    margin-right: -10px\\n}\\n\\n.sl--mb-2\\\\.5 {\\n    margin-bottom: -10px\\n}\\n\\n.sl--ml-2\\\\.5 {\\n    margin-left: -10px\\n}\\n\\n.sl--mt-3\\\\.5 {\\n    margin-top: -14px\\n}\\n\\n.sl--mr-3\\\\.5 {\\n    margin-right: -14px\\n}\\n\\n.sl--mb-3\\\\.5 {\\n    margin-bottom: -14px\\n}\\n\\n.sl--ml-3\\\\.5 {\\n    margin-left: -14px\\n}\\n\\n.sl--mt-4\\\\.5 {\\n    margin-top: -18px\\n}\\n\\n.sl--mr-4\\\\.5 {\\n    margin-right: -18px\\n}\\n\\n.sl--mb-4\\\\.5 {\\n    margin-bottom: -18px\\n}\\n\\n.sl--ml-4\\\\.5 {\\n    margin-left: -18px\\n}\\n\\n.sl-max-h-full {\\n    max-height: 100%\\n}\\n\\n.sl-max-h-screen {\\n    max-height: 100vh\\n}\\n\\n.sl-max-w-none {\\n    max-width: none\\n}\\n\\n.sl-max-w-full {\\n    max-width: 100%\\n}\\n\\n.sl-max-w-min {\\n    max-width: -moz-min-content;\\n    max-width: min-content\\n}\\n\\n.sl-max-w-max {\\n    max-width: -moz-max-content;\\n    max-width: max-content\\n}\\n\\n.sl-max-w-prose {\\n    max-width: 65ch\\n}\\n\\n.sl-min-h-full {\\n    min-height: 100%\\n}\\n\\n.sl-min-h-screen {\\n    min-height: 100vh\\n}\\n\\n.sl-min-w-full {\\n    min-width: 100%\\n}\\n\\n.sl-min-w-min {\\n    min-width: -moz-min-content;\\n    min-width: min-content\\n}\\n\\n.sl-min-w-max {\\n    min-width: -moz-max-content;\\n    min-width: max-content\\n}\\n\\n.sl-object-contain {\\n    object-fit: contain\\n}\\n\\n.sl-object-cover {\\n    object-fit: cover\\n}\\n\\n.sl-object-fill {\\n    object-fit: fill\\n}\\n\\n.sl-object-none {\\n    object-fit: none\\n}\\n\\n.sl-object-scale-down {\\n    object-fit: scale-down\\n}\\n\\n.sl-object-bottom {\\n    object-position: bottom\\n}\\n\\n.sl-object-center {\\n    object-position: center\\n}\\n\\n.sl-object-left {\\n    object-position: left\\n}\\n\\n.sl-object-left-bottom {\\n    object-position: left bottom\\n}\\n\\n.sl-object-left-top {\\n    object-position: left top\\n}\\n\\n.sl-object-right {\\n    object-position: right\\n}\\n\\n.sl-object-right-bottom {\\n    object-position: right bottom\\n}\\n\\n.sl-object-right-top {\\n    object-position: right top\\n}\\n\\n.sl-object-top {\\n    object-position: top\\n}\\n\\n.sl-opacity-0 {\\n    opacity: 0\\n}\\n\\n.sl-opacity-5 {\\n    opacity: .05\\n}\\n\\n.sl-opacity-10 {\\n    opacity: .1\\n}\\n\\n.sl-opacity-20 {\\n    opacity: .2\\n}\\n\\n.sl-opacity-30 {\\n    opacity: .3\\n}\\n\\n.sl-opacity-40 {\\n    opacity: .4\\n}\\n\\n.sl-opacity-50 {\\n    opacity: .5\\n}\\n\\n.sl-opacity-60 {\\n    opacity: .6\\n}\\n\\n.sl-opacity-70 {\\n    opacity: .7\\n}\\n\\n.sl-opacity-90 {\\n    opacity: .9\\n}\\n\\n.sl-opacity-100 {\\n    opacity: 1\\n}\\n\\n.hover\\\\:sl-opacity-0:hover {\\n    opacity: 0\\n}\\n\\n.hover\\\\:sl-opacity-5:hover {\\n    opacity: .05\\n}\\n\\n.hover\\\\:sl-opacity-10:hover {\\n    opacity: .1\\n}\\n\\n.hover\\\\:sl-opacity-20:hover {\\n    opacity: .2\\n}\\n\\n.hover\\\\:sl-opacity-30:hover {\\n    opacity: .3\\n}\\n\\n.hover\\\\:sl-opacity-40:hover {\\n    opacity: .4\\n}\\n\\n.hover\\\\:sl-opacity-50:hover {\\n    opacity: .5\\n}\\n\\n.hover\\\\:sl-opacity-60:hover {\\n    opacity: .6\\n}\\n\\n.hover\\\\:sl-opacity-70:hover {\\n    opacity: .7\\n}\\n\\n.hover\\\\:sl-opacity-90:hover {\\n    opacity: .9\\n}\\n\\n.hover\\\\:sl-opacity-100:hover {\\n    opacity: 1\\n}\\n\\n.focus\\\\:sl-opacity-0:focus {\\n    opacity: 0\\n}\\n\\n.focus\\\\:sl-opacity-5:focus {\\n    opacity: .05\\n}\\n\\n.focus\\\\:sl-opacity-10:focus {\\n    opacity: .1\\n}\\n\\n.focus\\\\:sl-opacity-20:focus {\\n    opacity: .2\\n}\\n\\n.focus\\\\:sl-opacity-30:focus {\\n    opacity: .3\\n}\\n\\n.focus\\\\:sl-opacity-40:focus {\\n    opacity: .4\\n}\\n\\n.focus\\\\:sl-opacity-50:focus {\\n    opacity: .5\\n}\\n\\n.focus\\\\:sl-opacity-60:focus {\\n    opacity: .6\\n}\\n\\n.focus\\\\:sl-opacity-70:focus {\\n    opacity: .7\\n}\\n\\n.focus\\\\:sl-opacity-90:focus {\\n    opacity: .9\\n}\\n\\n.focus\\\\:sl-opacity-100:focus {\\n    opacity: 1\\n}\\n\\n.active\\\\:sl-opacity-0:active {\\n    opacity: 0\\n}\\n\\n.active\\\\:sl-opacity-5:active {\\n    opacity: .05\\n}\\n\\n.active\\\\:sl-opacity-10:active {\\n    opacity: .1\\n}\\n\\n.active\\\\:sl-opacity-20:active {\\n    opacity: .2\\n}\\n\\n.active\\\\:sl-opacity-30:active {\\n    opacity: .3\\n}\\n\\n.active\\\\:sl-opacity-40:active {\\n    opacity: .4\\n}\\n\\n.active\\\\:sl-opacity-50:active {\\n    opacity: .5\\n}\\n\\n.active\\\\:sl-opacity-60:active {\\n    opacity: .6\\n}\\n\\n.active\\\\:sl-opacity-70:active {\\n    opacity: .7\\n}\\n\\n.active\\\\:sl-opacity-90:active {\\n    opacity: .9\\n}\\n\\n.active\\\\:sl-opacity-100:active {\\n    opacity: 1\\n}\\n\\n.disabled\\\\:sl-opacity-0:disabled {\\n    opacity: 0\\n}\\n\\n.disabled\\\\:sl-opacity-5:disabled {\\n    opacity: .05\\n}\\n\\n.disabled\\\\:sl-opacity-10:disabled {\\n    opacity: .1\\n}\\n\\n.disabled\\\\:sl-opacity-20:disabled {\\n    opacity: .2\\n}\\n\\n.disabled\\\\:sl-opacity-30:disabled {\\n    opacity: .3\\n}\\n\\n.disabled\\\\:sl-opacity-40:disabled {\\n    opacity: .4\\n}\\n\\n.disabled\\\\:sl-opacity-50:disabled {\\n    opacity: .5\\n}\\n\\n.disabled\\\\:sl-opacity-60:disabled {\\n    opacity: .6\\n}\\n\\n.disabled\\\\:sl-opacity-70:disabled {\\n    opacity: .7\\n}\\n\\n.disabled\\\\:sl-opacity-90:disabled {\\n    opacity: .9\\n}\\n\\n.disabled\\\\:sl-opacity-100:disabled {\\n    opacity: 1\\n}\\n\\n.sl-outline-none {\\n    outline: 2px solid transparent;\\n    outline-offset: 2px\\n}\\n\\n.sl-overflow-auto {\\n    overflow: auto\\n}\\n\\n.sl-overflow-hidden {\\n    overflow: hidden\\n}\\n\\n.sl-overflow-visible {\\n    overflow: visible\\n}\\n\\n.sl-overflow-scroll {\\n    overflow: scroll\\n}\\n\\n.sl-overflow-x-auto {\\n    overflow-x: auto\\n}\\n\\n.sl-overflow-y-auto {\\n    overflow-y: auto\\n}\\n\\n.sl-overflow-x-hidden {\\n    overflow-x: hidden\\n}\\n\\n.sl-overflow-y-hidden {\\n    overflow-y: hidden\\n}\\n\\n.sl-overflow-x-visible {\\n    overflow-x: visible\\n}\\n\\n.sl-overflow-y-visible {\\n    overflow-y: visible\\n}\\n\\n.sl-overflow-x-scroll {\\n    overflow-x: scroll\\n}\\n\\n.sl-overflow-y-scroll {\\n    overflow-y: scroll\\n}\\n\\n.sl-overscroll-auto {\\n    overscroll-behavior: auto\\n}\\n\\n.sl-overscroll-contain {\\n    overscroll-behavior: contain\\n}\\n\\n.sl-overscroll-none {\\n    overscroll-behavior: none\\n}\\n\\n.sl-overscroll-y-auto {\\n    overscroll-behavior-y: auto\\n}\\n\\n.sl-overscroll-y-contain {\\n    overscroll-behavior-y: contain\\n}\\n\\n.sl-overscroll-y-none {\\n    overscroll-behavior-y: none\\n}\\n\\n.sl-overscroll-x-auto {\\n    overscroll-behavior-x: auto\\n}\\n\\n.sl-overscroll-x-contain {\\n    overscroll-behavior-x: contain\\n}\\n\\n.sl-overscroll-x-none {\\n    overscroll-behavior-x: none\\n}\\n\\n.sl-p-0 {\\n    padding: 0\\n}\\n\\n.sl-p-1 {\\n    padding: 4px\\n}\\n\\n.sl-p-2 {\\n    padding: 8px\\n}\\n\\n.sl-p-3 {\\n    padding: 12px\\n}\\n\\n.sl-p-4 {\\n    padding: 16px\\n}\\n\\n.sl-p-5 {\\n    padding: 20px\\n}\\n\\n.sl-p-6 {\\n    padding: 24px\\n}\\n\\n.sl-p-7 {\\n    padding: 28px\\n}\\n\\n.sl-p-8 {\\n    padding: 32px\\n}\\n\\n.sl-p-9 {\\n    padding: 36px\\n}\\n\\n.sl-p-10 {\\n    padding: 40px\\n}\\n\\n.sl-p-11 {\\n    padding: 44px\\n}\\n\\n.sl-p-12 {\\n    padding: 48px\\n}\\n\\n.sl-p-14 {\\n    padding: 56px\\n}\\n\\n.sl-p-16 {\\n    padding: 64px\\n}\\n\\n.sl-p-20 {\\n    padding: 80px\\n}\\n\\n.sl-p-24 {\\n    padding: 96px\\n}\\n\\n.sl-p-28 {\\n    padding: 112px\\n}\\n\\n.sl-p-32 {\\n    padding: 128px\\n}\\n\\n.sl-p-36 {\\n    padding: 144px\\n}\\n\\n.sl-p-40 {\\n    padding: 160px\\n}\\n\\n.sl-p-44 {\\n    padding: 176px\\n}\\n\\n.sl-p-48 {\\n    padding: 192px\\n}\\n\\n.sl-p-52 {\\n    padding: 208px\\n}\\n\\n.sl-p-56 {\\n    padding: 224px\\n}\\n\\n.sl-p-60 {\\n    padding: 240px\\n}\\n\\n.sl-p-64 {\\n    padding: 256px\\n}\\n\\n.sl-p-72 {\\n    padding: 288px\\n}\\n\\n.sl-p-80 {\\n    padding: 320px\\n}\\n\\n.sl-p-96 {\\n    padding: 384px\\n}\\n\\n.sl-p-px {\\n    padding: 1px\\n}\\n\\n.sl-p-0\\\\.5 {\\n    padding: 2px\\n}\\n\\n.sl-p-1\\\\.5 {\\n    padding: 6px\\n}\\n\\n.sl-p-2\\\\.5 {\\n    padding: 10px\\n}\\n\\n.sl-p-3\\\\.5 {\\n    padding: 14px\\n}\\n\\n.sl-p-4\\\\.5 {\\n    padding: 18px\\n}\\n\\n.sl-py-0 {\\n    padding-bottom: 0;\\n    padding-top: 0\\n}\\n\\n.sl-px-0 {\\n    padding-left: 0;\\n    padding-right: 0\\n}\\n\\n.sl-py-1 {\\n    padding-bottom: 4px;\\n    padding-top: 4px\\n}\\n\\n.sl-px-1 {\\n    padding-left: 4px;\\n    padding-right: 4px\\n}\\n\\n.sl-py-2 {\\n    padding-bottom: 8px;\\n    padding-top: 8px\\n}\\n\\n.sl-px-2 {\\n    padding-left: 8px;\\n    padding-right: 8px\\n}\\n\\n.sl-py-3 {\\n    padding-bottom: 12px;\\n    padding-top: 12px\\n}\\n\\n.sl-px-3 {\\n    padding-left: 12px;\\n    padding-right: 12px\\n}\\n\\n.sl-py-4 {\\n    padding-bottom: 16px;\\n    padding-top: 16px\\n}\\n\\n.sl-px-4 {\\n    padding-left: 16px;\\n    padding-right: 16px\\n}\\n\\n.sl-py-5 {\\n    padding-bottom: 20px;\\n    padding-top: 20px\\n}\\n\\n.sl-px-5 {\\n    padding-left: 20px;\\n    padding-right: 20px\\n}\\n\\n.sl-py-6 {\\n    padding-bottom: 24px;\\n    padding-top: 24px\\n}\\n\\n.sl-px-6 {\\n    padding-left: 24px;\\n    padding-right: 24px\\n}\\n\\n.sl-py-7 {\\n    padding-bottom: 28px;\\n    padding-top: 28px\\n}\\n\\n.sl-px-7 {\\n    padding-left: 28px;\\n    padding-right: 28px\\n}\\n\\n.sl-py-8 {\\n    padding-bottom: 32px;\\n    padding-top: 32px\\n}\\n\\n.sl-px-8 {\\n    padding-left: 32px;\\n    padding-right: 32px\\n}\\n\\n.sl-py-9 {\\n    padding-bottom: 36px;\\n    padding-top: 36px\\n}\\n\\n.sl-px-9 {\\n    padding-left: 36px;\\n    padding-right: 36px\\n}\\n\\n.sl-py-10 {\\n    padding-bottom: 40px;\\n    padding-top: 40px\\n}\\n\\n.sl-px-10 {\\n    padding-left: 40px;\\n    padding-right: 40px\\n}\\n\\n.sl-py-11 {\\n    padding-bottom: 44px;\\n    padding-top: 44px\\n}\\n\\n.sl-px-11 {\\n    padding-left: 44px;\\n    padding-right: 44px\\n}\\n\\n.sl-py-12 {\\n    padding-bottom: 48px;\\n    padding-top: 48px\\n}\\n\\n.sl-px-12 {\\n    padding-left: 48px;\\n    padding-right: 48px\\n}\\n\\n.sl-py-14 {\\n    padding-bottom: 56px;\\n    padding-top: 56px\\n}\\n\\n.sl-px-14 {\\n    padding-left: 56px;\\n    padding-right: 56px\\n}\\n\\n.sl-py-16 {\\n    padding-bottom: 64px;\\n    padding-top: 64px\\n}\\n\\n.sl-px-16 {\\n    padding-left: 64px;\\n    padding-right: 64px\\n}\\n\\n.sl-py-20 {\\n    padding-bottom: 80px;\\n    padding-top: 80px\\n}\\n\\n.sl-px-20 {\\n    padding-left: 80px;\\n    padding-right: 80px\\n}\\n\\n.sl-py-24 {\\n    padding-bottom: 96px;\\n    padding-top: 96px\\n}\\n\\n.sl-px-24 {\\n    padding-left: 96px;\\n    padding-right: 96px\\n}\\n\\n.sl-py-28 {\\n    padding-bottom: 112px;\\n    padding-top: 112px\\n}\\n\\n.sl-px-28 {\\n    padding-left: 112px;\\n    padding-right: 112px\\n}\\n\\n.sl-py-32 {\\n    padding-bottom: 128px;\\n    padding-top: 128px\\n}\\n\\n.sl-px-32 {\\n    padding-left: 128px;\\n    padding-right: 128px\\n}\\n\\n.sl-py-36 {\\n    padding-bottom: 144px;\\n    padding-top: 144px\\n}\\n\\n.sl-px-36 {\\n    padding-left: 144px;\\n    padding-right: 144px\\n}\\n\\n.sl-py-40 {\\n    padding-bottom: 160px;\\n    padding-top: 160px\\n}\\n\\n.sl-px-40 {\\n    padding-left: 160px;\\n    padding-right: 160px\\n}\\n\\n.sl-py-44 {\\n    padding-bottom: 176px;\\n    padding-top: 176px\\n}\\n\\n.sl-px-44 {\\n    padding-left: 176px;\\n    padding-right: 176px\\n}\\n\\n.sl-py-48 {\\n    padding-bottom: 192px;\\n    padding-top: 192px\\n}\\n\\n.sl-px-48 {\\n    padding-left: 192px;\\n    padding-right: 192px\\n}\\n\\n.sl-py-52 {\\n    padding-bottom: 208px;\\n    padding-top: 208px\\n}\\n\\n.sl-px-52 {\\n    padding-left: 208px;\\n    padding-right: 208px\\n}\\n\\n.sl-py-56 {\\n    padding-bottom: 224px;\\n    padding-top: 224px\\n}\\n\\n.sl-px-56 {\\n    padding-left: 224px;\\n    padding-right: 224px\\n}\\n\\n.sl-py-60 {\\n    padding-bottom: 240px;\\n    padding-top: 240px\\n}\\n\\n.sl-px-60 {\\n    padding-left: 240px;\\n    padding-right: 240px\\n}\\n\\n.sl-py-64 {\\n    padding-bottom: 256px;\\n    padding-top: 256px\\n}\\n\\n.sl-px-64 {\\n    padding-left: 256px;\\n    padding-right: 256px\\n}\\n\\n.sl-py-72 {\\n    padding-bottom: 288px;\\n    padding-top: 288px\\n}\\n\\n.sl-px-72 {\\n    padding-left: 288px;\\n    padding-right: 288px\\n}\\n\\n.sl-py-80 {\\n    padding-bottom: 320px;\\n    padding-top: 320px\\n}\\n\\n.sl-px-80 {\\n    padding-left: 320px;\\n    padding-right: 320px\\n}\\n\\n.sl-py-96 {\\n    padding-bottom: 384px;\\n    padding-top: 384px\\n}\\n\\n.sl-px-96 {\\n    padding-left: 384px;\\n    padding-right: 384px\\n}\\n\\n.sl-py-px {\\n    padding-bottom: 1px;\\n    padding-top: 1px\\n}\\n\\n.sl-px-px {\\n    padding-left: 1px;\\n    padding-right: 1px\\n}\\n\\n.sl-py-0\\\\.5 {\\n    padding-bottom: 2px;\\n    padding-top: 2px\\n}\\n\\n.sl-px-0\\\\.5 {\\n    padding-left: 2px;\\n    padding-right: 2px\\n}\\n\\n.sl-py-1\\\\.5 {\\n    padding-bottom: 6px;\\n    padding-top: 6px\\n}\\n\\n.sl-px-1\\\\.5 {\\n    padding-left: 6px;\\n    padding-right: 6px\\n}\\n\\n.sl-py-2\\\\.5 {\\n    padding-bottom: 10px;\\n    padding-top: 10px\\n}\\n\\n.sl-px-2\\\\.5 {\\n    padding-left: 10px;\\n    padding-right: 10px\\n}\\n\\n.sl-py-3\\\\.5 {\\n    padding-bottom: 14px;\\n    padding-top: 14px\\n}\\n\\n.sl-px-3\\\\.5 {\\n    padding-left: 14px;\\n    padding-right: 14px\\n}\\n\\n.sl-py-4\\\\.5 {\\n    padding-bottom: 18px;\\n    padding-top: 18px\\n}\\n\\n.sl-px-4\\\\.5 {\\n    padding-left: 18px;\\n    padding-right: 18px\\n}\\n\\n.sl-pt-0 {\\n    padding-top: 0\\n}\\n\\n.sl-pr-0 {\\n    padding-right: 0\\n}\\n\\n.sl-pb-0 {\\n    padding-bottom: 0\\n}\\n\\n.sl-pl-0 {\\n    padding-left: 0\\n}\\n\\n.sl-pt-1 {\\n    padding-top: 4px\\n}\\n\\n.sl-pr-1 {\\n    padding-right: 4px\\n}\\n\\n.sl-pb-1 {\\n    padding-bottom: 4px\\n}\\n\\n.sl-pl-1 {\\n    padding-left: 4px\\n}\\n\\n.sl-pt-2 {\\n    padding-top: 8px\\n}\\n\\n.sl-pr-2 {\\n    padding-right: 8px\\n}\\n\\n.sl-pb-2 {\\n    padding-bottom: 8px\\n}\\n\\n.sl-pl-2 {\\n    padding-left: 8px\\n}\\n\\n.sl-pt-3 {\\n    padding-top: 12px\\n}\\n\\n.sl-pr-3 {\\n    padding-right: 12px\\n}\\n\\n.sl-pb-3 {\\n    padding-bottom: 12px\\n}\\n\\n.sl-pl-3 {\\n    padding-left: 12px\\n}\\n\\n.sl-pt-4 {\\n    padding-top: 16px\\n}\\n\\n.sl-pr-4 {\\n    padding-right: 16px\\n}\\n\\n.sl-pb-4 {\\n    padding-bottom: 16px\\n}\\n\\n.sl-pl-4 {\\n    padding-left: 16px\\n}\\n\\n.sl-pt-5 {\\n    padding-top: 20px\\n}\\n\\n.sl-pr-5 {\\n    padding-right: 20px\\n}\\n\\n.sl-pb-5 {\\n    padding-bottom: 20px\\n}\\n\\n.sl-pl-5 {\\n    padding-left: 20px\\n}\\n\\n.sl-pt-6 {\\n    padding-top: 24px\\n}\\n\\n.sl-pr-6 {\\n    padding-right: 24px\\n}\\n\\n.sl-pb-6 {\\n    padding-bottom: 24px\\n}\\n\\n.sl-pl-6 {\\n    padding-left: 24px\\n}\\n\\n.sl-pt-7 {\\n    padding-top: 28px\\n}\\n\\n.sl-pr-7 {\\n    padding-right: 28px\\n}\\n\\n.sl-pb-7 {\\n    padding-bottom: 28px\\n}\\n\\n.sl-pl-7 {\\n    padding-left: 28px\\n}\\n\\n.sl-pt-8 {\\n    padding-top: 32px\\n}\\n\\n.sl-pr-8 {\\n    padding-right: 32px\\n}\\n\\n.sl-pb-8 {\\n    padding-bottom: 32px\\n}\\n\\n.sl-pl-8 {\\n    padding-left: 32px\\n}\\n\\n.sl-pt-9 {\\n    padding-top: 36px\\n}\\n\\n.sl-pr-9 {\\n    padding-right: 36px\\n}\\n\\n.sl-pb-9 {\\n    padding-bottom: 36px\\n}\\n\\n.sl-pl-9 {\\n    padding-left: 36px\\n}\\n\\n.sl-pt-10 {\\n    padding-top: 40px\\n}\\n\\n.sl-pr-10 {\\n    padding-right: 40px\\n}\\n\\n.sl-pb-10 {\\n    padding-bottom: 40px\\n}\\n\\n.sl-pl-10 {\\n    padding-left: 40px\\n}\\n\\n.sl-pt-11 {\\n    padding-top: 44px\\n}\\n\\n.sl-pr-11 {\\n    padding-right: 44px\\n}\\n\\n.sl-pb-11 {\\n    padding-bottom: 44px\\n}\\n\\n.sl-pl-11 {\\n    padding-left: 44px\\n}\\n\\n.sl-pt-12 {\\n    padding-top: 48px\\n}\\n\\n.sl-pr-12 {\\n    padding-right: 48px\\n}\\n\\n.sl-pb-12 {\\n    padding-bottom: 48px\\n}\\n\\n.sl-pl-12 {\\n    padding-left: 48px\\n}\\n\\n.sl-pt-14 {\\n    padding-top: 56px\\n}\\n\\n.sl-pr-14 {\\n    padding-right: 56px\\n}\\n\\n.sl-pb-14 {\\n    padding-bottom: 56px\\n}\\n\\n.sl-pl-14 {\\n    padding-left: 56px\\n}\\n\\n.sl-pt-16 {\\n    padding-top: 64px\\n}\\n\\n.sl-pr-16 {\\n    padding-right: 64px\\n}\\n\\n.sl-pb-16 {\\n    padding-bottom: 64px\\n}\\n\\n.sl-pl-16 {\\n    padding-left: 64px\\n}\\n\\n.sl-pt-20 {\\n    padding-top: 80px\\n}\\n\\n.sl-pr-20 {\\n    padding-right: 80px\\n}\\n\\n.sl-pb-20 {\\n    padding-bottom: 80px\\n}\\n\\n.sl-pl-20 {\\n    padding-left: 80px\\n}\\n\\n.sl-pt-24 {\\n    padding-top: 96px\\n}\\n\\n.sl-pr-24 {\\n    padding-right: 96px\\n}\\n\\n.sl-pb-24 {\\n    padding-bottom: 96px\\n}\\n\\n.sl-pl-24 {\\n    padding-left: 96px\\n}\\n\\n.sl-pt-28 {\\n    padding-top: 112px\\n}\\n\\n.sl-pr-28 {\\n    padding-right: 112px\\n}\\n\\n.sl-pb-28 {\\n    padding-bottom: 112px\\n}\\n\\n.sl-pl-28 {\\n    padding-left: 112px\\n}\\n\\n.sl-pt-32 {\\n    padding-top: 128px\\n}\\n\\n.sl-pr-32 {\\n    padding-right: 128px\\n}\\n\\n.sl-pb-32 {\\n    padding-bottom: 128px\\n}\\n\\n.sl-pl-32 {\\n    padding-left: 128px\\n}\\n\\n.sl-pt-36 {\\n    padding-top: 144px\\n}\\n\\n.sl-pr-36 {\\n    padding-right: 144px\\n}\\n\\n.sl-pb-36 {\\n    padding-bottom: 144px\\n}\\n\\n.sl-pl-36 {\\n    padding-left: 144px\\n}\\n\\n.sl-pt-40 {\\n    padding-top: 160px\\n}\\n\\n.sl-pr-40 {\\n    padding-right: 160px\\n}\\n\\n.sl-pb-40 {\\n    padding-bottom: 160px\\n}\\n\\n.sl-pl-40 {\\n    padding-left: 160px\\n}\\n\\n.sl-pt-44 {\\n    padding-top: 176px\\n}\\n\\n.sl-pr-44 {\\n    padding-right: 176px\\n}\\n\\n.sl-pb-44 {\\n    padding-bottom: 176px\\n}\\n\\n.sl-pl-44 {\\n    padding-left: 176px\\n}\\n\\n.sl-pt-48 {\\n    padding-top: 192px\\n}\\n\\n.sl-pr-48 {\\n    padding-right: 192px\\n}\\n\\n.sl-pb-48 {\\n    padding-bottom: 192px\\n}\\n\\n.sl-pl-48 {\\n    padding-left: 192px\\n}\\n\\n.sl-pt-52 {\\n    padding-top: 208px\\n}\\n\\n.sl-pr-52 {\\n    padding-right: 208px\\n}\\n\\n.sl-pb-52 {\\n    padding-bottom: 208px\\n}\\n\\n.sl-pl-52 {\\n    padding-left: 208px\\n}\\n\\n.sl-pt-56 {\\n    padding-top: 224px\\n}\\n\\n.sl-pr-56 {\\n    padding-right: 224px\\n}\\n\\n.sl-pb-56 {\\n    padding-bottom: 224px\\n}\\n\\n.sl-pl-56 {\\n    padding-left: 224px\\n}\\n\\n.sl-pt-60 {\\n    padding-top: 240px\\n}\\n\\n.sl-pr-60 {\\n    padding-right: 240px\\n}\\n\\n.sl-pb-60 {\\n    padding-bottom: 240px\\n}\\n\\n.sl-pl-60 {\\n    padding-left: 240px\\n}\\n\\n.sl-pt-64 {\\n    padding-top: 256px\\n}\\n\\n.sl-pr-64 {\\n    padding-right: 256px\\n}\\n\\n.sl-pb-64 {\\n    padding-bottom: 256px\\n}\\n\\n.sl-pl-64 {\\n    padding-left: 256px\\n}\\n\\n.sl-pt-72 {\\n    padding-top: 288px\\n}\\n\\n.sl-pr-72 {\\n    padding-right: 288px\\n}\\n\\n.sl-pb-72 {\\n    padding-bottom: 288px\\n}\\n\\n.sl-pl-72 {\\n    padding-left: 288px\\n}\\n\\n.sl-pt-80 {\\n    padding-top: 320px\\n}\\n\\n.sl-pr-80 {\\n    padding-right: 320px\\n}\\n\\n.sl-pb-80 {\\n    padding-bottom: 320px\\n}\\n\\n.sl-pl-80 {\\n    padding-left: 320px\\n}\\n\\n.sl-pt-96 {\\n    padding-top: 384px\\n}\\n\\n.sl-pr-96 {\\n    padding-right: 384px\\n}\\n\\n.sl-pb-96 {\\n    padding-bottom: 384px\\n}\\n\\n.sl-pl-96 {\\n    padding-left: 384px\\n}\\n\\n.sl-pt-px {\\n    padding-top: 1px\\n}\\n\\n.sl-pr-px {\\n    padding-right: 1px\\n}\\n\\n.sl-pb-px {\\n    padding-bottom: 1px\\n}\\n\\n.sl-pl-px {\\n    padding-left: 1px\\n}\\n\\n.sl-pt-0\\\\.5 {\\n    padding-top: 2px\\n}\\n\\n.sl-pr-0\\\\.5 {\\n    padding-right: 2px\\n}\\n\\n.sl-pb-0\\\\.5 {\\n    padding-bottom: 2px\\n}\\n\\n.sl-pl-0\\\\.5 {\\n    padding-left: 2px\\n}\\n\\n.sl-pt-1\\\\.5 {\\n    padding-top: 6px\\n}\\n\\n.sl-pr-1\\\\.5 {\\n    padding-right: 6px\\n}\\n\\n.sl-pb-1\\\\.5 {\\n    padding-bottom: 6px\\n}\\n\\n.sl-pl-1\\\\.5 {\\n    padding-left: 6px\\n}\\n\\n.sl-pt-2\\\\.5 {\\n    padding-top: 10px\\n}\\n\\n.sl-pr-2\\\\.5 {\\n    padding-right: 10px\\n}\\n\\n.sl-pb-2\\\\.5 {\\n    padding-bottom: 10px\\n}\\n\\n.sl-pl-2\\\\.5 {\\n    padding-left: 10px\\n}\\n\\n.sl-pt-3\\\\.5 {\\n    padding-top: 14px\\n}\\n\\n.sl-pr-3\\\\.5 {\\n    padding-right: 14px\\n}\\n\\n.sl-pb-3\\\\.5 {\\n    padding-bottom: 14px\\n}\\n\\n.sl-pl-3\\\\.5 {\\n    padding-left: 14px\\n}\\n\\n.sl-pt-4\\\\.5 {\\n    padding-top: 18px\\n}\\n\\n.sl-pr-4\\\\.5 {\\n    padding-right: 18px\\n}\\n\\n.sl-pb-4\\\\.5 {\\n    padding-bottom: 18px\\n}\\n\\n.sl-pl-4\\\\.5 {\\n    padding-left: 18px\\n}\\n\\n.sl-placeholder::-ms-input-placeholder {\\n    color: var(--color-text-light)\\n}\\n\\n.sl-placeholder::placeholder {\\n    color: var(--color-text-light)\\n}\\n\\n.sl-placeholder-primary::-ms-input-placeholder {\\n    color: #3898ff\\n}\\n\\n.sl-placeholder-primary::placeholder {\\n    color: #3898ff\\n}\\n\\n.sl-placeholder-success::-ms-input-placeholder {\\n    color: #0ea06f\\n}\\n\\n.sl-placeholder-success::placeholder {\\n    color: #0ea06f\\n}\\n\\n.sl-placeholder-warning::-ms-input-placeholder {\\n    color: #f3602b\\n}\\n\\n.sl-placeholder-warning::placeholder {\\n    color: #f3602b\\n}\\n\\n.sl-placeholder-danger::-ms-input-placeholder {\\n    color: #f05151\\n}\\n\\n.sl-placeholder-danger::placeholder {\\n    color: #f05151\\n}\\n\\n.sl-pointer-events-none {\\n    pointer-events: none\\n}\\n\\n.sl-pointer-events-auto {\\n    pointer-events: auto\\n}\\n\\n.sl-static {\\n    position: static\\n}\\n\\n.sl-fixed {\\n    position: fixed\\n}\\n\\n.sl-absolute {\\n    position: absolute\\n}\\n\\n.sl-relative {\\n    position: relative\\n}\\n\\n.sl-sticky {\\n    position: -webkit-sticky;\\n    position: sticky\\n}\\n\\n.sl-resize-none {\\n    resize: none\\n}\\n\\n.sl-resize-y {\\n    resize: vertical\\n}\\n\\n.sl-resize-x {\\n    resize: horizontal\\n}\\n\\n.sl-resize {\\n    resize: both\\n}\\n\\n.sl-ring-primary {\\n    --tw-ring-color: hsla(var(--primary-h), 80%, 61%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-success {\\n    --tw-ring-color: hsla(var(--success-h), 84%, 34%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-warning {\\n    --tw-ring-color: hsla(var(--warning-h), 89%, 56%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-danger {\\n    --tw-ring-color: hsla(var(--danger-h), 84%, 63%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-primary:focus {\\n    --tw-ring-color: hsla(var(--primary-h), 80%, 61%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-success:focus {\\n    --tw-ring-color: hsla(var(--success-h), 84%, 34%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-warning:focus {\\n    --tw-ring-color: hsla(var(--warning-h), 89%, 56%, var(--tw-ring-opacity))\\n}\\n\\n.focus\\\\:sl-ring-danger:focus {\\n    --tw-ring-color: hsla(var(--danger-h), 84%, 63%, var(--tw-ring-opacity))\\n}\\n\\n.sl-ring-opacity-0 {\\n    --tw-ring-opacity: 0\\n}\\n\\n.sl-ring-opacity-5 {\\n    --tw-ring-opacity: 0.05\\n}\\n\\n.sl-ring-opacity-10 {\\n    --tw-ring-opacity: 0.1\\n}\\n\\n.sl-ring-opacity-20 {\\n    --tw-ring-opacity: 0.2\\n}\\n\\n.sl-ring-opacity-30 {\\n    --tw-ring-opacity: 0.3\\n}\\n\\n.sl-ring-opacity-40 {\\n    --tw-ring-opacity: 0.4\\n}\\n\\n.sl-ring-opacity-50 {\\n    --tw-ring-opacity: 0.5\\n}\\n\\n.sl-ring-opacity-60 {\\n    --tw-ring-opacity: 0.6\\n}\\n\\n.sl-ring-opacity-70 {\\n    --tw-ring-opacity: 0.7\\n}\\n\\n.sl-ring-opacity-90 {\\n    --tw-ring-opacity: 0.9\\n}\\n\\n.sl-ring-opacity-100 {\\n    --tw-ring-opacity: 1\\n}\\n\\n.focus\\\\:sl-ring-opacity-0:focus {\\n    --tw-ring-opacity: 0\\n}\\n\\n.focus\\\\:sl-ring-opacity-5:focus {\\n    --tw-ring-opacity: 0.05\\n}\\n\\n.focus\\\\:sl-ring-opacity-10:focus {\\n    --tw-ring-opacity: 0.1\\n}\\n\\n.focus\\\\:sl-ring-opacity-20:focus {\\n    --tw-ring-opacity: 0.2\\n}\\n\\n.focus\\\\:sl-ring-opacity-30:focus {\\n    --tw-ring-opacity: 0.3\\n}\\n\\n.focus\\\\:sl-ring-opacity-40:focus {\\n    --tw-ring-opacity: 0.4\\n}\\n\\n.focus\\\\:sl-ring-opacity-50:focus {\\n    --tw-ring-opacity: 0.5\\n}\\n\\n.focus\\\\:sl-ring-opacity-60:focus {\\n    --tw-ring-opacity: 0.6\\n}\\n\\n.focus\\\\:sl-ring-opacity-70:focus {\\n    --tw-ring-opacity: 0.7\\n}\\n\\n.focus\\\\:sl-ring-opacity-90:focus {\\n    --tw-ring-opacity: 0.9\\n}\\n\\n.focus\\\\:sl-ring-opacity-100:focus {\\n    --tw-ring-opacity: 1\\n}\\n\\n* {\\n    --tw-ring-inset: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-ring-offset-width: 0px;\\n    --tw-ring-offset-color: #fff;\\n    --tw-ring-color: rgba(147, 197, 253, .5);\\n    --tw-ring-offset-shadow: 0 0 #0000;\\n    --tw-ring-shadow: 0 0 #0000\\n}\\n\\n.sl-ring {\\n    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)\\n}\\n\\n.sl-ring-inset {\\n    --tw-ring-inset: inset\\n}\\n\\n.focus\\\\:sl-ring:focus {\\n    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)\\n}\\n\\n.focus\\\\:sl-ring-inset:focus {\\n    --tw-ring-inset: inset\\n}\\n\\n.sl-stroke-transparent {\\n    stroke: transparent\\n}\\n\\n.sl-stroke-current {\\n    stroke: currentColor\\n}\\n\\n.sl-stroke-lighten-100 {\\n    stroke: var(--color-lighten-100)\\n}\\n\\n.sl-stroke-darken-100 {\\n    stroke: var(--color-darken-100)\\n}\\n\\n.sl-stroke-primary {\\n    stroke: var(--color-primary)\\n}\\n\\n.sl-stroke-primary-tint {\\n    stroke: var(--color-primary-tint)\\n}\\n\\n.sl-stroke-primary-light {\\n    stroke: var(--color-primary-light)\\n}\\n\\n.sl-stroke-primary-dark {\\n    stroke: var(--color-primary-dark)\\n}\\n\\n.sl-stroke-primary-darker {\\n    stroke: var(--color-primary-darker)\\n}\\n\\n.sl-stroke-success {\\n    stroke: var(--color-success)\\n}\\n\\n.sl-stroke-success-tint {\\n    stroke: var(--color-success-tint)\\n}\\n\\n.sl-stroke-success-light {\\n    stroke: var(--color-success-light)\\n}\\n\\n.sl-stroke-success-dark {\\n    stroke: var(--color-success-dark)\\n}\\n\\n.sl-stroke-success-darker {\\n    stroke: var(--color-success-darker)\\n}\\n\\n.sl-stroke-warning {\\n    stroke: var(--color-warning)\\n}\\n\\n.sl-stroke-warning-tint {\\n    stroke: var(--color-warning-tint)\\n}\\n\\n.sl-stroke-warning-light {\\n    stroke: var(--color-warning-light)\\n}\\n\\n.sl-stroke-warning-dark {\\n    stroke: var(--color-warning-dark)\\n}\\n\\n.sl-stroke-warning-darker {\\n    stroke: var(--color-warning-darker)\\n}\\n\\n.sl-stroke-danger {\\n    stroke: var(--color-danger)\\n}\\n\\n.sl-stroke-danger-tint {\\n    stroke: var(--color-danger-tint)\\n}\\n\\n.sl-stroke-danger-light {\\n    stroke: var(--color-danger-light)\\n}\\n\\n.sl-stroke-danger-dark {\\n    stroke: var(--color-danger-dark)\\n}\\n\\n.sl-stroke-danger-darker {\\n    stroke: var(--color-danger-darker)\\n}\\n\\n.sl-stroke-code {\\n    stroke: var(--color-code)\\n}\\n\\n.sl-stroke-on-code {\\n    stroke: var(--color-on-code)\\n}\\n\\n.sl-stroke-on-primary {\\n    stroke: var(--color-on-primary)\\n}\\n\\n.sl-stroke-on-success {\\n    stroke: var(--color-on-success)\\n}\\n\\n.sl-stroke-on-warning {\\n    stroke: var(--color-on-warning)\\n}\\n\\n.sl-stroke-on-danger {\\n    stroke: var(--color-on-danger)\\n}\\n\\n.sl-stroke-text {\\n    stroke: var(--color-text)\\n}\\n\\n.sl-table-auto {\\n    table-layout: auto\\n}\\n\\n.sl-table-fixed {\\n    table-layout: fixed\\n}\\n\\n.sl-text-left {\\n    text-align: left\\n}\\n\\n.sl-text-center {\\n    text-align: center\\n}\\n\\n.sl-text-right {\\n    text-align: right\\n}\\n\\n.sl-text-justify {\\n    text-align: justify\\n}\\n\\n.sl-text-transparent {\\n    color: transparent\\n}\\n\\n.sl-text-current {\\n    color: currentColor\\n}\\n\\n.sl-text-lighten-100 {\\n    color: var(--color-lighten-100)\\n}\\n\\n.sl-text-darken-100 {\\n    color: var(--color-darken-100)\\n}\\n\\n.sl-text-primary {\\n    color: var(--color-primary)\\n}\\n\\n.sl-text-primary-tint {\\n    color: var(--color-primary-tint)\\n}\\n\\n.sl-text-primary-light {\\n    color: var(--color-primary-light)\\n}\\n\\n.sl-text-primary-dark {\\n    color: var(--color-primary-dark)\\n}\\n\\n.sl-text-primary-darker {\\n    color: var(--color-primary-darker)\\n}\\n\\n.sl-text-success {\\n    color: var(--color-success)\\n}\\n\\n.sl-text-success-tint {\\n    color: var(--color-success-tint)\\n}\\n\\n.sl-text-success-light {\\n    color: var(--color-success-light)\\n}\\n\\n.sl-text-success-dark {\\n    color: var(--color-success-dark)\\n}\\n\\n.sl-text-success-darker {\\n    color: var(--color-success-darker)\\n}\\n\\n.sl-text-warning {\\n    color: var(--color-warning)\\n}\\n\\n.sl-text-warning-tint {\\n    color: var(--color-warning-tint)\\n}\\n\\n.sl-text-warning-light {\\n    color: var(--color-warning-light)\\n}\\n\\n.sl-text-warning-dark {\\n    color: var(--color-warning-dark)\\n}\\n\\n.sl-text-warning-darker {\\n    color: var(--color-warning-darker)\\n}\\n\\n.sl-text-danger {\\n    color: var(--color-danger)\\n}\\n\\n.sl-text-danger-tint {\\n    color: var(--color-danger-tint)\\n}\\n\\n.sl-text-danger-light {\\n    color: var(--color-danger-light)\\n}\\n\\n.sl-text-danger-dark {\\n    color: var(--color-danger-dark)\\n}\\n\\n.sl-text-danger-darker {\\n    color: var(--color-danger-darker)\\n}\\n\\n.sl-text-code {\\n    color: var(--color-code)\\n}\\n\\n.sl-text-on-code {\\n    color: var(--color-on-code)\\n}\\n\\n.sl-text-on-primary {\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-text-on-success {\\n    color: var(--color-on-success)\\n}\\n\\n.sl-text-on-warning {\\n    color: var(--color-on-warning)\\n}\\n\\n.sl-text-on-danger {\\n    color: var(--color-on-danger)\\n}\\n\\n.sl-text-body {\\n    color: var(--color-text)\\n}\\n\\n.sl-text-muted {\\n    color: var(--color-text-muted)\\n}\\n\\n.sl-text-light {\\n    color: var(--color-text-light)\\n}\\n\\n.sl-text-heading {\\n    color: var(--color-text-heading)\\n}\\n\\n.sl-text-paragraph {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.sl-text-canvas-50 {\\n    color: var(--color-canvas-50)\\n}\\n\\n.sl-text-canvas-100 {\\n    color: var(--color-canvas-100)\\n}\\n\\n.sl-text-canvas-200 {\\n    color: var(--color-canvas-200)\\n}\\n\\n.sl-text-canvas-300 {\\n    color: var(--color-canvas-300)\\n}\\n\\n.sl-text-canvas-pure {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.sl-text-canvas {\\n    color: var(--color-canvas)\\n}\\n\\n.sl-text-canvas-dialog {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.sl-text-link {\\n    color: var(--color-link)\\n}\\n\\n.sl-text-link-dark {\\n    color: var(--color-link-dark)\\n}\\n\\n.hover\\\\:sl-text-transparent:hover {\\n    color: transparent\\n}\\n\\n.hover\\\\:sl-text-current:hover {\\n    color: currentColor\\n}\\n\\n.hover\\\\:sl-text-lighten-100:hover {\\n    color: var(--color-lighten-100)\\n}\\n\\n.hover\\\\:sl-text-darken-100:hover {\\n    color: var(--color-darken-100)\\n}\\n\\n.hover\\\\:sl-text-primary:hover {\\n    color: var(--color-primary)\\n}\\n\\n.hover\\\\:sl-text-primary-tint:hover {\\n    color: var(--color-primary-tint)\\n}\\n\\n.hover\\\\:sl-text-primary-light:hover {\\n    color: var(--color-primary-light)\\n}\\n\\n.hover\\\\:sl-text-primary-dark:hover {\\n    color: var(--color-primary-dark)\\n}\\n\\n.hover\\\\:sl-text-primary-darker:hover {\\n    color: var(--color-primary-darker)\\n}\\n\\n.hover\\\\:sl-text-success:hover {\\n    color: var(--color-success)\\n}\\n\\n.hover\\\\:sl-text-success-tint:hover {\\n    color: var(--color-success-tint)\\n}\\n\\n.hover\\\\:sl-text-success-light:hover {\\n    color: var(--color-success-light)\\n}\\n\\n.hover\\\\:sl-text-success-dark:hover {\\n    color: var(--color-success-dark)\\n}\\n\\n.hover\\\\:sl-text-success-darker:hover {\\n    color: var(--color-success-darker)\\n}\\n\\n.hover\\\\:sl-text-warning:hover {\\n    color: var(--color-warning)\\n}\\n\\n.hover\\\\:sl-text-warning-tint:hover {\\n    color: var(--color-warning-tint)\\n}\\n\\n.hover\\\\:sl-text-warning-light:hover {\\n    color: var(--color-warning-light)\\n}\\n\\n.hover\\\\:sl-text-warning-dark:hover {\\n    color: var(--color-warning-dark)\\n}\\n\\n.hover\\\\:sl-text-warning-darker:hover {\\n    color: var(--color-warning-darker)\\n}\\n\\n.hover\\\\:sl-text-danger:hover {\\n    color: var(--color-danger)\\n}\\n\\n.hover\\\\:sl-text-danger-tint:hover {\\n    color: var(--color-danger-tint)\\n}\\n\\n.hover\\\\:sl-text-danger-light:hover {\\n    color: var(--color-danger-light)\\n}\\n\\n.hover\\\\:sl-text-danger-dark:hover {\\n    color: var(--color-danger-dark)\\n}\\n\\n.hover\\\\:sl-text-danger-darker:hover {\\n    color: var(--color-danger-darker)\\n}\\n\\n.hover\\\\:sl-text-code:hover {\\n    color: var(--color-code)\\n}\\n\\n.hover\\\\:sl-text-on-code:hover {\\n    color: var(--color-on-code)\\n}\\n\\n.hover\\\\:sl-text-on-primary:hover {\\n    color: var(--color-on-primary)\\n}\\n\\n.hover\\\\:sl-text-on-success:hover {\\n    color: var(--color-on-success)\\n}\\n\\n.hover\\\\:sl-text-on-warning:hover {\\n    color: var(--color-on-warning)\\n}\\n\\n.hover\\\\:sl-text-on-danger:hover {\\n    color: var(--color-on-danger)\\n}\\n\\n.hover\\\\:sl-text-body:hover {\\n    color: var(--color-text)\\n}\\n\\n.hover\\\\:sl-text-muted:hover {\\n    color: var(--color-text-muted)\\n}\\n\\n.hover\\\\:sl-text-light:hover {\\n    color: var(--color-text-light)\\n}\\n\\n.hover\\\\:sl-text-heading:hover {\\n    color: var(--color-text-heading)\\n}\\n\\n.hover\\\\:sl-text-paragraph:hover {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.hover\\\\:sl-text-canvas-50:hover {\\n    color: var(--color-canvas-50)\\n}\\n\\n.hover\\\\:sl-text-canvas-100:hover {\\n    color: var(--color-canvas-100)\\n}\\n\\n.hover\\\\:sl-text-canvas-200:hover {\\n    color: var(--color-canvas-200)\\n}\\n\\n.hover\\\\:sl-text-canvas-300:hover {\\n    color: var(--color-canvas-300)\\n}\\n\\n.hover\\\\:sl-text-canvas-pure:hover {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.hover\\\\:sl-text-canvas:hover {\\n    color: var(--color-canvas)\\n}\\n\\n.hover\\\\:sl-text-canvas-dialog:hover {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.hover\\\\:sl-text-link:hover {\\n    color: var(--color-link)\\n}\\n\\n.hover\\\\:sl-text-link-dark:hover {\\n    color: var(--color-link-dark)\\n}\\n\\n.focus\\\\:sl-text-transparent:focus {\\n    color: transparent\\n}\\n\\n.focus\\\\:sl-text-current:focus {\\n    color: currentColor\\n}\\n\\n.focus\\\\:sl-text-lighten-100:focus {\\n    color: var(--color-lighten-100)\\n}\\n\\n.focus\\\\:sl-text-darken-100:focus {\\n    color: var(--color-darken-100)\\n}\\n\\n.focus\\\\:sl-text-primary:focus {\\n    color: var(--color-primary)\\n}\\n\\n.focus\\\\:sl-text-primary-tint:focus {\\n    color: var(--color-primary-tint)\\n}\\n\\n.focus\\\\:sl-text-primary-light:focus {\\n    color: var(--color-primary-light)\\n}\\n\\n.focus\\\\:sl-text-primary-dark:focus {\\n    color: var(--color-primary-dark)\\n}\\n\\n.focus\\\\:sl-text-primary-darker:focus {\\n    color: var(--color-primary-darker)\\n}\\n\\n.focus\\\\:sl-text-success:focus {\\n    color: var(--color-success)\\n}\\n\\n.focus\\\\:sl-text-success-tint:focus {\\n    color: var(--color-success-tint)\\n}\\n\\n.focus\\\\:sl-text-success-light:focus {\\n    color: var(--color-success-light)\\n}\\n\\n.focus\\\\:sl-text-success-dark:focus {\\n    color: var(--color-success-dark)\\n}\\n\\n.focus\\\\:sl-text-success-darker:focus {\\n    color: var(--color-success-darker)\\n}\\n\\n.focus\\\\:sl-text-warning:focus {\\n    color: var(--color-warning)\\n}\\n\\n.focus\\\\:sl-text-warning-tint:focus {\\n    color: var(--color-warning-tint)\\n}\\n\\n.focus\\\\:sl-text-warning-light:focus {\\n    color: var(--color-warning-light)\\n}\\n\\n.focus\\\\:sl-text-warning-dark:focus {\\n    color: var(--color-warning-dark)\\n}\\n\\n.focus\\\\:sl-text-warning-darker:focus {\\n    color: var(--color-warning-darker)\\n}\\n\\n.focus\\\\:sl-text-danger:focus {\\n    color: var(--color-danger)\\n}\\n\\n.focus\\\\:sl-text-danger-tint:focus {\\n    color: var(--color-danger-tint)\\n}\\n\\n.focus\\\\:sl-text-danger-light:focus {\\n    color: var(--color-danger-light)\\n}\\n\\n.focus\\\\:sl-text-danger-dark:focus {\\n    color: var(--color-danger-dark)\\n}\\n\\n.focus\\\\:sl-text-danger-darker:focus {\\n    color: var(--color-danger-darker)\\n}\\n\\n.focus\\\\:sl-text-code:focus {\\n    color: var(--color-code)\\n}\\n\\n.focus\\\\:sl-text-on-code:focus {\\n    color: var(--color-on-code)\\n}\\n\\n.focus\\\\:sl-text-on-primary:focus {\\n    color: var(--color-on-primary)\\n}\\n\\n.focus\\\\:sl-text-on-success:focus {\\n    color: var(--color-on-success)\\n}\\n\\n.focus\\\\:sl-text-on-warning:focus {\\n    color: var(--color-on-warning)\\n}\\n\\n.focus\\\\:sl-text-on-danger:focus {\\n    color: var(--color-on-danger)\\n}\\n\\n.focus\\\\:sl-text-body:focus {\\n    color: var(--color-text)\\n}\\n\\n.focus\\\\:sl-text-muted:focus {\\n    color: var(--color-text-muted)\\n}\\n\\n.focus\\\\:sl-text-light:focus {\\n    color: var(--color-text-light)\\n}\\n\\n.focus\\\\:sl-text-heading:focus {\\n    color: var(--color-text-heading)\\n}\\n\\n.focus\\\\:sl-text-paragraph:focus {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.focus\\\\:sl-text-canvas-50:focus {\\n    color: var(--color-canvas-50)\\n}\\n\\n.focus\\\\:sl-text-canvas-100:focus {\\n    color: var(--color-canvas-100)\\n}\\n\\n.focus\\\\:sl-text-canvas-200:focus {\\n    color: var(--color-canvas-200)\\n}\\n\\n.focus\\\\:sl-text-canvas-300:focus {\\n    color: var(--color-canvas-300)\\n}\\n\\n.focus\\\\:sl-text-canvas-pure:focus {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.focus\\\\:sl-text-canvas:focus {\\n    color: var(--color-canvas)\\n}\\n\\n.focus\\\\:sl-text-canvas-dialog:focus {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.focus\\\\:sl-text-link:focus {\\n    color: var(--color-link)\\n}\\n\\n.focus\\\\:sl-text-link-dark:focus {\\n    color: var(--color-link-dark)\\n}\\n\\n.disabled\\\\:sl-text-transparent:disabled {\\n    color: transparent\\n}\\n\\n.disabled\\\\:sl-text-current:disabled {\\n    color: currentColor\\n}\\n\\n.disabled\\\\:sl-text-lighten-100:disabled {\\n    color: var(--color-lighten-100)\\n}\\n\\n.disabled\\\\:sl-text-darken-100:disabled {\\n    color: var(--color-darken-100)\\n}\\n\\n.disabled\\\\:sl-text-primary:disabled {\\n    color: var(--color-primary)\\n}\\n\\n.disabled\\\\:sl-text-primary-tint:disabled {\\n    color: var(--color-primary-tint)\\n}\\n\\n.disabled\\\\:sl-text-primary-light:disabled {\\n    color: var(--color-primary-light)\\n}\\n\\n.disabled\\\\:sl-text-primary-dark:disabled {\\n    color: var(--color-primary-dark)\\n}\\n\\n.disabled\\\\:sl-text-primary-darker:disabled {\\n    color: var(--color-primary-darker)\\n}\\n\\n.disabled\\\\:sl-text-success:disabled {\\n    color: var(--color-success)\\n}\\n\\n.disabled\\\\:sl-text-success-tint:disabled {\\n    color: var(--color-success-tint)\\n}\\n\\n.disabled\\\\:sl-text-success-light:disabled {\\n    color: var(--color-success-light)\\n}\\n\\n.disabled\\\\:sl-text-success-dark:disabled {\\n    color: var(--color-success-dark)\\n}\\n\\n.disabled\\\\:sl-text-success-darker:disabled {\\n    color: var(--color-success-darker)\\n}\\n\\n.disabled\\\\:sl-text-warning:disabled {\\n    color: var(--color-warning)\\n}\\n\\n.disabled\\\\:sl-text-warning-tint:disabled {\\n    color: var(--color-warning-tint)\\n}\\n\\n.disabled\\\\:sl-text-warning-light:disabled {\\n    color: var(--color-warning-light)\\n}\\n\\n.disabled\\\\:sl-text-warning-dark:disabled {\\n    color: var(--color-warning-dark)\\n}\\n\\n.disabled\\\\:sl-text-warning-darker:disabled {\\n    color: var(--color-warning-darker)\\n}\\n\\n.disabled\\\\:sl-text-danger:disabled {\\n    color: var(--color-danger)\\n}\\n\\n.disabled\\\\:sl-text-danger-tint:disabled {\\n    color: var(--color-danger-tint)\\n}\\n\\n.disabled\\\\:sl-text-danger-light:disabled {\\n    color: var(--color-danger-light)\\n}\\n\\n.disabled\\\\:sl-text-danger-dark:disabled {\\n    color: var(--color-danger-dark)\\n}\\n\\n.disabled\\\\:sl-text-danger-darker:disabled {\\n    color: var(--color-danger-darker)\\n}\\n\\n.disabled\\\\:sl-text-code:disabled {\\n    color: var(--color-code)\\n}\\n\\n.disabled\\\\:sl-text-on-code:disabled {\\n    color: var(--color-on-code)\\n}\\n\\n.disabled\\\\:sl-text-on-primary:disabled {\\n    color: var(--color-on-primary)\\n}\\n\\n.disabled\\\\:sl-text-on-success:disabled {\\n    color: var(--color-on-success)\\n}\\n\\n.disabled\\\\:sl-text-on-warning:disabled {\\n    color: var(--color-on-warning)\\n}\\n\\n.disabled\\\\:sl-text-on-danger:disabled {\\n    color: var(--color-on-danger)\\n}\\n\\n.disabled\\\\:sl-text-body:disabled {\\n    color: var(--color-text)\\n}\\n\\n.disabled\\\\:sl-text-muted:disabled {\\n    color: var(--color-text-muted)\\n}\\n\\n.disabled\\\\:sl-text-light:disabled {\\n    color: var(--color-text-light)\\n}\\n\\n.disabled\\\\:sl-text-heading:disabled {\\n    color: var(--color-text-heading)\\n}\\n\\n.disabled\\\\:sl-text-paragraph:disabled {\\n    color: var(--color-text-paragraph)\\n}\\n\\n.disabled\\\\:sl-text-canvas-50:disabled {\\n    color: var(--color-canvas-50)\\n}\\n\\n.disabled\\\\:sl-text-canvas-100:disabled {\\n    color: var(--color-canvas-100)\\n}\\n\\n.disabled\\\\:sl-text-canvas-200:disabled {\\n    color: var(--color-canvas-200)\\n}\\n\\n.disabled\\\\:sl-text-canvas-300:disabled {\\n    color: var(--color-canvas-300)\\n}\\n\\n.disabled\\\\:sl-text-canvas-pure:disabled {\\n    color: var(--color-canvas-pure)\\n}\\n\\n.disabled\\\\:sl-text-canvas:disabled {\\n    color: var(--color-canvas)\\n}\\n\\n.disabled\\\\:sl-text-canvas-dialog:disabled {\\n    color: var(--color-canvas-dialog)\\n}\\n\\n.disabled\\\\:sl-text-link:disabled {\\n    color: var(--color-link)\\n}\\n\\n.disabled\\\\:sl-text-link-dark:disabled {\\n    color: var(--color-link-dark)\\n}\\n\\n.sl-underline {\\n    text-decoration: underline\\n}\\n\\n.sl-line-through {\\n    text-decoration: line-through\\n}\\n\\n.sl-no-underline {\\n    text-decoration: none\\n}\\n\\n.sl-truncate {\\n    overflow: hidden;\\n    white-space: nowrap\\n}\\n\\n.sl-overflow-ellipsis,\\n.sl-truncate {\\n    text-overflow: ellipsis\\n}\\n\\n.sl-overflow-clip {\\n    text-overflow: clip\\n}\\n\\n.sl-uppercase {\\n    text-transform: uppercase\\n}\\n\\n.sl-lowercase {\\n    text-transform: lowercase\\n}\\n\\n.sl-capitalize {\\n    text-transform: capitalize\\n}\\n\\n.sl-normal-case {\\n    text-transform: none\\n}\\n\\n.sl-transform {\\n    transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\\n}\\n\\n.sl-transform,\\n.sl-transform-gpu {\\n    --tw-translate-x: 0;\\n    --tw-translate-y: 0;\\n    --tw-rotate: 0;\\n    --tw-skew-x: 0;\\n    --tw-skew-y: 0;\\n    --tw-scale-x: 1;\\n    --tw-scale-y: 1\\n}\\n\\n.sl-transform-gpu {\\n    transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\\n}\\n\\n.sl-transform-none {\\n    transform: none\\n}\\n\\n.sl-delay-75 {\\n    transition-delay: 75ms\\n}\\n\\n.sl-delay-150 {\\n    transition-delay: .15s\\n}\\n\\n.sl-delay-300 {\\n    transition-delay: .3s\\n}\\n\\n.sl-delay-500 {\\n    transition-delay: .5s\\n}\\n\\n.sl-delay-1000 {\\n    transition-delay: 1s\\n}\\n\\n.sl-duration-75 {\\n    transition-duration: 75ms\\n}\\n\\n.sl-duration-150 {\\n    transition-duration: .15s\\n}\\n\\n.sl-duration-300 {\\n    transition-duration: .3s\\n}\\n\\n.sl-duration-500 {\\n    transition-duration: .5s\\n}\\n\\n.sl-duration-1000 {\\n    transition-duration: 1s\\n}\\n\\n.sl-transition {\\n    transition-duration: .15s;\\n    transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;\\n    transition-timing-function: cubic-bezier(.4, 0, .2, 1)\\n}\\n\\n.sl-translate-x-0 {\\n    --tw-translate-x: 0px\\n}\\n\\n.sl-translate-x-1 {\\n    --tw-translate-x: 4px\\n}\\n\\n.sl-translate-x-2 {\\n    --tw-translate-x: 8px\\n}\\n\\n.sl-translate-x-3 {\\n    --tw-translate-x: 12px\\n}\\n\\n.sl-translate-x-4 {\\n    --tw-translate-x: 16px\\n}\\n\\n.sl-translate-x-5 {\\n    --tw-translate-x: 20px\\n}\\n\\n.sl-translate-x-6 {\\n    --tw-translate-x: 24px\\n}\\n\\n.sl-translate-x-7 {\\n    --tw-translate-x: 28px\\n}\\n\\n.sl-translate-x-8 {\\n    --tw-translate-x: 32px\\n}\\n\\n.sl-translate-x-9 {\\n    --tw-translate-x: 36px\\n}\\n\\n.sl-translate-x-10 {\\n    --tw-translate-x: 40px\\n}\\n\\n.sl-translate-x-11 {\\n    --tw-translate-x: 44px\\n}\\n\\n.sl-translate-x-12 {\\n    --tw-translate-x: 48px\\n}\\n\\n.sl-translate-x-14 {\\n    --tw-translate-x: 56px\\n}\\n\\n.sl-translate-x-16 {\\n    --tw-translate-x: 64px\\n}\\n\\n.sl-translate-x-20 {\\n    --tw-translate-x: 80px\\n}\\n\\n.sl-translate-x-24 {\\n    --tw-translate-x: 96px\\n}\\n\\n.sl-translate-x-28 {\\n    --tw-translate-x: 112px\\n}\\n\\n.sl-translate-x-32 {\\n    --tw-translate-x: 128px\\n}\\n\\n.sl-translate-x-36 {\\n    --tw-translate-x: 144px\\n}\\n\\n.sl-translate-x-40 {\\n    --tw-translate-x: 160px\\n}\\n\\n.sl-translate-x-44 {\\n    --tw-translate-x: 176px\\n}\\n\\n.sl-translate-x-48 {\\n    --tw-translate-x: 192px\\n}\\n\\n.sl-translate-x-52 {\\n    --tw-translate-x: 208px\\n}\\n\\n.sl-translate-x-56 {\\n    --tw-translate-x: 224px\\n}\\n\\n.sl-translate-x-60 {\\n    --tw-translate-x: 240px\\n}\\n\\n.sl-translate-x-64 {\\n    --tw-translate-x: 256px\\n}\\n\\n.sl-translate-x-72 {\\n    --tw-translate-x: 288px\\n}\\n\\n.sl-translate-x-80 {\\n    --tw-translate-x: 320px\\n}\\n\\n.sl-translate-x-96 {\\n    --tw-translate-x: 384px\\n}\\n\\n.sl-translate-x-px {\\n    --tw-translate-x: 1px\\n}\\n\\n.sl-translate-x-0\\\\.5 {\\n    --tw-translate-x: 2px\\n}\\n\\n.sl-translate-x-1\\\\.5 {\\n    --tw-translate-x: 6px\\n}\\n\\n.sl-translate-x-2\\\\.5 {\\n    --tw-translate-x: 10px\\n}\\n\\n.sl-translate-x-3\\\\.5 {\\n    --tw-translate-x: 14px\\n}\\n\\n.sl-translate-x-4\\\\.5 {\\n    --tw-translate-x: 18px\\n}\\n\\n.sl--translate-x-0 {\\n    --tw-translate-x: 0px\\n}\\n\\n.sl--translate-x-1 {\\n    --tw-translate-x: -4px\\n}\\n\\n.sl--translate-x-2 {\\n    --tw-translate-x: -8px\\n}\\n\\n.sl--translate-x-3 {\\n    --tw-translate-x: -12px\\n}\\n\\n.sl--translate-x-4 {\\n    --tw-translate-x: -16px\\n}\\n\\n.sl--translate-x-5 {\\n    --tw-translate-x: -20px\\n}\\n\\n.sl--translate-x-6 {\\n    --tw-translate-x: -24px\\n}\\n\\n.sl--translate-x-7 {\\n    --tw-translate-x: -28px\\n}\\n\\n.sl--translate-x-8 {\\n    --tw-translate-x: -32px\\n}\\n\\n.sl--translate-x-9 {\\n    --tw-translate-x: -36px\\n}\\n\\n.sl--translate-x-10 {\\n    --tw-translate-x: -40px\\n}\\n\\n.sl--translate-x-11 {\\n    --tw-translate-x: -44px\\n}\\n\\n.sl--translate-x-12 {\\n    --tw-translate-x: -48px\\n}\\n\\n.sl--translate-x-14 {\\n    --tw-translate-x: -56px\\n}\\n\\n.sl--translate-x-16 {\\n    --tw-translate-x: -64px\\n}\\n\\n.sl--translate-x-20 {\\n    --tw-translate-x: -80px\\n}\\n\\n.sl--translate-x-24 {\\n    --tw-translate-x: -96px\\n}\\n\\n.sl--translate-x-28 {\\n    --tw-translate-x: -112px\\n}\\n\\n.sl--translate-x-32 {\\n    --tw-translate-x: -128px\\n}\\n\\n.sl--translate-x-36 {\\n    --tw-translate-x: -144px\\n}\\n\\n.sl--translate-x-40 {\\n    --tw-translate-x: -160px\\n}\\n\\n.sl--translate-x-44 {\\n    --tw-translate-x: -176px\\n}\\n\\n.sl--translate-x-48 {\\n    --tw-translate-x: -192px\\n}\\n\\n.sl--translate-x-52 {\\n    --tw-translate-x: -208px\\n}\\n\\n.sl--translate-x-56 {\\n    --tw-translate-x: -224px\\n}\\n\\n.sl--translate-x-60 {\\n    --tw-translate-x: -240px\\n}\\n\\n.sl--translate-x-64 {\\n    --tw-translate-x: -256px\\n}\\n\\n.sl--translate-x-72 {\\n    --tw-translate-x: -288px\\n}\\n\\n.sl--translate-x-80 {\\n    --tw-translate-x: -320px\\n}\\n\\n.sl--translate-x-96 {\\n    --tw-translate-x: -384px\\n}\\n\\n.sl--translate-x-px {\\n    --tw-translate-x: -1px\\n}\\n\\n.sl--translate-x-0\\\\.5 {\\n    --tw-translate-x: -2px\\n}\\n\\n.sl--translate-x-1\\\\.5 {\\n    --tw-translate-x: -6px\\n}\\n\\n.sl--translate-x-2\\\\.5 {\\n    --tw-translate-x: -10px\\n}\\n\\n.sl--translate-x-3\\\\.5 {\\n    --tw-translate-x: -14px\\n}\\n\\n.sl--translate-x-4\\\\.5 {\\n    --tw-translate-x: -18px\\n}\\n\\n.sl-translate-y-0 {\\n    --tw-translate-y: 0px\\n}\\n\\n.sl-translate-y-1 {\\n    --tw-translate-y: 4px\\n}\\n\\n.sl-translate-y-2 {\\n    --tw-translate-y: 8px\\n}\\n\\n.sl-translate-y-3 {\\n    --tw-translate-y: 12px\\n}\\n\\n.sl-translate-y-4 {\\n    --tw-translate-y: 16px\\n}\\n\\n.sl-translate-y-5 {\\n    --tw-translate-y: 20px\\n}\\n\\n.sl-translate-y-6 {\\n    --tw-translate-y: 24px\\n}\\n\\n.sl-translate-y-7 {\\n    --tw-translate-y: 28px\\n}\\n\\n.sl-translate-y-8 {\\n    --tw-translate-y: 32px\\n}\\n\\n.sl-translate-y-9 {\\n    --tw-translate-y: 36px\\n}\\n\\n.sl-translate-y-10 {\\n    --tw-translate-y: 40px\\n}\\n\\n.sl-translate-y-11 {\\n    --tw-translate-y: 44px\\n}\\n\\n.sl-translate-y-12 {\\n    --tw-translate-y: 48px\\n}\\n\\n.sl-translate-y-14 {\\n    --tw-translate-y: 56px\\n}\\n\\n.sl-translate-y-16 {\\n    --tw-translate-y: 64px\\n}\\n\\n.sl-translate-y-20 {\\n    --tw-translate-y: 80px\\n}\\n\\n.sl-translate-y-24 {\\n    --tw-translate-y: 96px\\n}\\n\\n.sl-translate-y-28 {\\n    --tw-translate-y: 112px\\n}\\n\\n.sl-translate-y-32 {\\n    --tw-translate-y: 128px\\n}\\n\\n.sl-translate-y-36 {\\n    --tw-translate-y: 144px\\n}\\n\\n.sl-translate-y-40 {\\n    --tw-translate-y: 160px\\n}\\n\\n.sl-translate-y-44 {\\n    --tw-translate-y: 176px\\n}\\n\\n.sl-translate-y-48 {\\n    --tw-translate-y: 192px\\n}\\n\\n.sl-translate-y-52 {\\n    --tw-translate-y: 208px\\n}\\n\\n.sl-translate-y-56 {\\n    --tw-translate-y: 224px\\n}\\n\\n.sl-translate-y-60 {\\n    --tw-translate-y: 240px\\n}\\n\\n.sl-translate-y-64 {\\n    --tw-translate-y: 256px\\n}\\n\\n.sl-translate-y-72 {\\n    --tw-translate-y: 288px\\n}\\n\\n.sl-translate-y-80 {\\n    --tw-translate-y: 320px\\n}\\n\\n.sl-translate-y-96 {\\n    --tw-translate-y: 384px\\n}\\n\\n.sl-translate-y-px {\\n    --tw-translate-y: 1px\\n}\\n\\n.sl-translate-y-0\\\\.5 {\\n    --tw-translate-y: 2px\\n}\\n\\n.sl-translate-y-1\\\\.5 {\\n    --tw-translate-y: 6px\\n}\\n\\n.sl-translate-y-2\\\\.5 {\\n    --tw-translate-y: 10px\\n}\\n\\n.sl-translate-y-3\\\\.5 {\\n    --tw-translate-y: 14px\\n}\\n\\n.sl-translate-y-4\\\\.5 {\\n    --tw-translate-y: 18px\\n}\\n\\n.sl--translate-y-0 {\\n    --tw-translate-y: 0px\\n}\\n\\n.sl--translate-y-1 {\\n    --tw-translate-y: -4px\\n}\\n\\n.sl--translate-y-2 {\\n    --tw-translate-y: -8px\\n}\\n\\n.sl--translate-y-3 {\\n    --tw-translate-y: -12px\\n}\\n\\n.sl--translate-y-4 {\\n    --tw-translate-y: -16px\\n}\\n\\n.sl--translate-y-5 {\\n    --tw-translate-y: -20px\\n}\\n\\n.sl--translate-y-6 {\\n    --tw-translate-y: -24px\\n}\\n\\n.sl--translate-y-7 {\\n    --tw-translate-y: -28px\\n}\\n\\n.sl--translate-y-8 {\\n    --tw-translate-y: -32px\\n}\\n\\n.sl--translate-y-9 {\\n    --tw-translate-y: -36px\\n}\\n\\n.sl--translate-y-10 {\\n    --tw-translate-y: -40px\\n}\\n\\n.sl--translate-y-11 {\\n    --tw-translate-y: -44px\\n}\\n\\n.sl--translate-y-12 {\\n    --tw-translate-y: -48px\\n}\\n\\n.sl--translate-y-14 {\\n    --tw-translate-y: -56px\\n}\\n\\n.sl--translate-y-16 {\\n    --tw-translate-y: -64px\\n}\\n\\n.sl--translate-y-20 {\\n    --tw-translate-y: -80px\\n}\\n\\n.sl--translate-y-24 {\\n    --tw-translate-y: -96px\\n}\\n\\n.sl--translate-y-28 {\\n    --tw-translate-y: -112px\\n}\\n\\n.sl--translate-y-32 {\\n    --tw-translate-y: -128px\\n}\\n\\n.sl--translate-y-36 {\\n    --tw-translate-y: -144px\\n}\\n\\n.sl--translate-y-40 {\\n    --tw-translate-y: -160px\\n}\\n\\n.sl--translate-y-44 {\\n    --tw-translate-y: -176px\\n}\\n\\n.sl--translate-y-48 {\\n    --tw-translate-y: -192px\\n}\\n\\n.sl--translate-y-52 {\\n    --tw-translate-y: -208px\\n}\\n\\n.sl--translate-y-56 {\\n    --tw-translate-y: -224px\\n}\\n\\n.sl--translate-y-60 {\\n    --tw-translate-y: -240px\\n}\\n\\n.sl--translate-y-64 {\\n    --tw-translate-y: -256px\\n}\\n\\n.sl--translate-y-72 {\\n    --tw-translate-y: -288px\\n}\\n\\n.sl--translate-y-80 {\\n    --tw-translate-y: -320px\\n}\\n\\n.sl--translate-y-96 {\\n    --tw-translate-y: -384px\\n}\\n\\n.sl--translate-y-px {\\n    --tw-translate-y: -1px\\n}\\n\\n.sl--translate-y-0\\\\.5 {\\n    --tw-translate-y: -2px\\n}\\n\\n.sl--translate-y-1\\\\.5 {\\n    --tw-translate-y: -6px\\n}\\n\\n.sl--translate-y-2\\\\.5 {\\n    --tw-translate-y: -10px\\n}\\n\\n.sl--translate-y-3\\\\.5 {\\n    --tw-translate-y: -14px\\n}\\n\\n.sl--translate-y-4\\\\.5 {\\n    --tw-translate-y: -18px\\n}\\n\\n.hover\\\\:sl-translate-x-0:hover {\\n    --tw-translate-x: 0px\\n}\\n\\n.hover\\\\:sl-translate-x-1:hover {\\n    --tw-translate-x: 4px\\n}\\n\\n.hover\\\\:sl-translate-x-2:hover {\\n    --tw-translate-x: 8px\\n}\\n\\n.hover\\\\:sl-translate-x-3:hover {\\n    --tw-translate-x: 12px\\n}\\n\\n.hover\\\\:sl-translate-x-4:hover {\\n    --tw-translate-x: 16px\\n}\\n\\n.hover\\\\:sl-translate-x-5:hover {\\n    --tw-translate-x: 20px\\n}\\n\\n.hover\\\\:sl-translate-x-6:hover {\\n    --tw-translate-x: 24px\\n}\\n\\n.hover\\\\:sl-translate-x-7:hover {\\n    --tw-translate-x: 28px\\n}\\n\\n.hover\\\\:sl-translate-x-8:hover {\\n    --tw-translate-x: 32px\\n}\\n\\n.hover\\\\:sl-translate-x-9:hover {\\n    --tw-translate-x: 36px\\n}\\n\\n.hover\\\\:sl-translate-x-10:hover {\\n    --tw-translate-x: 40px\\n}\\n\\n.hover\\\\:sl-translate-x-11:hover {\\n    --tw-translate-x: 44px\\n}\\n\\n.hover\\\\:sl-translate-x-12:hover {\\n    --tw-translate-x: 48px\\n}\\n\\n.hover\\\\:sl-translate-x-14:hover {\\n    --tw-translate-x: 56px\\n}\\n\\n.hover\\\\:sl-translate-x-16:hover {\\n    --tw-translate-x: 64px\\n}\\n\\n.hover\\\\:sl-translate-x-20:hover {\\n    --tw-translate-x: 80px\\n}\\n\\n.hover\\\\:sl-translate-x-24:hover {\\n    --tw-translate-x: 96px\\n}\\n\\n.hover\\\\:sl-translate-x-28:hover {\\n    --tw-translate-x: 112px\\n}\\n\\n.hover\\\\:sl-translate-x-32:hover {\\n    --tw-translate-x: 128px\\n}\\n\\n.hover\\\\:sl-translate-x-36:hover {\\n    --tw-translate-x: 144px\\n}\\n\\n.hover\\\\:sl-translate-x-40:hover {\\n    --tw-translate-x: 160px\\n}\\n\\n.hover\\\\:sl-translate-x-44:hover {\\n    --tw-translate-x: 176px\\n}\\n\\n.hover\\\\:sl-translate-x-48:hover {\\n    --tw-translate-x: 192px\\n}\\n\\n.hover\\\\:sl-translate-x-52:hover {\\n    --tw-translate-x: 208px\\n}\\n\\n.hover\\\\:sl-translate-x-56:hover {\\n    --tw-translate-x: 224px\\n}\\n\\n.hover\\\\:sl-translate-x-60:hover {\\n    --tw-translate-x: 240px\\n}\\n\\n.hover\\\\:sl-translate-x-64:hover {\\n    --tw-translate-x: 256px\\n}\\n\\n.hover\\\\:sl-translate-x-72:hover {\\n    --tw-translate-x: 288px\\n}\\n\\n.hover\\\\:sl-translate-x-80:hover {\\n    --tw-translate-x: 320px\\n}\\n\\n.hover\\\\:sl-translate-x-96:hover {\\n    --tw-translate-x: 384px\\n}\\n\\n.hover\\\\:sl-translate-x-px:hover {\\n    --tw-translate-x: 1px\\n}\\n\\n.hover\\\\:sl-translate-x-0\\\\.5:hover {\\n    --tw-translate-x: 2px\\n}\\n\\n.hover\\\\:sl-translate-x-1\\\\.5:hover {\\n    --tw-translate-x: 6px\\n}\\n\\n.hover\\\\:sl-translate-x-2\\\\.5:hover {\\n    --tw-translate-x: 10px\\n}\\n\\n.hover\\\\:sl-translate-x-3\\\\.5:hover {\\n    --tw-translate-x: 14px\\n}\\n\\n.hover\\\\:sl-translate-x-4\\\\.5:hover {\\n    --tw-translate-x: 18px\\n}\\n\\n.hover\\\\:sl--translate-x-0:hover {\\n    --tw-translate-x: 0px\\n}\\n\\n.hover\\\\:sl--translate-x-1:hover {\\n    --tw-translate-x: -4px\\n}\\n\\n.hover\\\\:sl--translate-x-2:hover {\\n    --tw-translate-x: -8px\\n}\\n\\n.hover\\\\:sl--translate-x-3:hover {\\n    --tw-translate-x: -12px\\n}\\n\\n.hover\\\\:sl--translate-x-4:hover {\\n    --tw-translate-x: -16px\\n}\\n\\n.hover\\\\:sl--translate-x-5:hover {\\n    --tw-translate-x: -20px\\n}\\n\\n.hover\\\\:sl--translate-x-6:hover {\\n    --tw-translate-x: -24px\\n}\\n\\n.hover\\\\:sl--translate-x-7:hover {\\n    --tw-translate-x: -28px\\n}\\n\\n.hover\\\\:sl--translate-x-8:hover {\\n    --tw-translate-x: -32px\\n}\\n\\n.hover\\\\:sl--translate-x-9:hover {\\n    --tw-translate-x: -36px\\n}\\n\\n.hover\\\\:sl--translate-x-10:hover {\\n    --tw-translate-x: -40px\\n}\\n\\n.hover\\\\:sl--translate-x-11:hover {\\n    --tw-translate-x: -44px\\n}\\n\\n.hover\\\\:sl--translate-x-12:hover {\\n    --tw-translate-x: -48px\\n}\\n\\n.hover\\\\:sl--translate-x-14:hover {\\n    --tw-translate-x: -56px\\n}\\n\\n.hover\\\\:sl--translate-x-16:hover {\\n    --tw-translate-x: -64px\\n}\\n\\n.hover\\\\:sl--translate-x-20:hover {\\n    --tw-translate-x: -80px\\n}\\n\\n.hover\\\\:sl--translate-x-24:hover {\\n    --tw-translate-x: -96px\\n}\\n\\n.hover\\\\:sl--translate-x-28:hover {\\n    --tw-translate-x: -112px\\n}\\n\\n.hover\\\\:sl--translate-x-32:hover {\\n    --tw-translate-x: -128px\\n}\\n\\n.hover\\\\:sl--translate-x-36:hover {\\n    --tw-translate-x: -144px\\n}\\n\\n.hover\\\\:sl--translate-x-40:hover {\\n    --tw-translate-x: -160px\\n}\\n\\n.hover\\\\:sl--translate-x-44:hover {\\n    --tw-translate-x: -176px\\n}\\n\\n.hover\\\\:sl--translate-x-48:hover {\\n    --tw-translate-x: -192px\\n}\\n\\n.hover\\\\:sl--translate-x-52:hover {\\n    --tw-translate-x: -208px\\n}\\n\\n.hover\\\\:sl--translate-x-56:hover {\\n    --tw-translate-x: -224px\\n}\\n\\n.hover\\\\:sl--translate-x-60:hover {\\n    --tw-translate-x: -240px\\n}\\n\\n.hover\\\\:sl--translate-x-64:hover {\\n    --tw-translate-x: -256px\\n}\\n\\n.hover\\\\:sl--translate-x-72:hover {\\n    --tw-translate-x: -288px\\n}\\n\\n.hover\\\\:sl--translate-x-80:hover {\\n    --tw-translate-x: -320px\\n}\\n\\n.hover\\\\:sl--translate-x-96:hover {\\n    --tw-translate-x: -384px\\n}\\n\\n.hover\\\\:sl--translate-x-px:hover {\\n    --tw-translate-x: -1px\\n}\\n\\n.hover\\\\:sl--translate-x-0\\\\.5:hover {\\n    --tw-translate-x: -2px\\n}\\n\\n.hover\\\\:sl--translate-x-1\\\\.5:hover {\\n    --tw-translate-x: -6px\\n}\\n\\n.hover\\\\:sl--translate-x-2\\\\.5:hover {\\n    --tw-translate-x: -10px\\n}\\n\\n.hover\\\\:sl--translate-x-3\\\\.5:hover {\\n    --tw-translate-x: -14px\\n}\\n\\n.hover\\\\:sl--translate-x-4\\\\.5:hover {\\n    --tw-translate-x: -18px\\n}\\n\\n.hover\\\\:sl-translate-y-0:hover {\\n    --tw-translate-y: 0px\\n}\\n\\n.hover\\\\:sl-translate-y-1:hover {\\n    --tw-translate-y: 4px\\n}\\n\\n.hover\\\\:sl-translate-y-2:hover {\\n    --tw-translate-y: 8px\\n}\\n\\n.hover\\\\:sl-translate-y-3:hover {\\n    --tw-translate-y: 12px\\n}\\n\\n.hover\\\\:sl-translate-y-4:hover {\\n    --tw-translate-y: 16px\\n}\\n\\n.hover\\\\:sl-translate-y-5:hover {\\n    --tw-translate-y: 20px\\n}\\n\\n.hover\\\\:sl-translate-y-6:hover {\\n    --tw-translate-y: 24px\\n}\\n\\n.hover\\\\:sl-translate-y-7:hover {\\n    --tw-translate-y: 28px\\n}\\n\\n.hover\\\\:sl-translate-y-8:hover {\\n    --tw-translate-y: 32px\\n}\\n\\n.hover\\\\:sl-translate-y-9:hover {\\n    --tw-translate-y: 36px\\n}\\n\\n.hover\\\\:sl-translate-y-10:hover {\\n    --tw-translate-y: 40px\\n}\\n\\n.hover\\\\:sl-translate-y-11:hover {\\n    --tw-translate-y: 44px\\n}\\n\\n.hover\\\\:sl-translate-y-12:hover {\\n    --tw-translate-y: 48px\\n}\\n\\n.hover\\\\:sl-translate-y-14:hover {\\n    --tw-translate-y: 56px\\n}\\n\\n.hover\\\\:sl-translate-y-16:hover {\\n    --tw-translate-y: 64px\\n}\\n\\n.hover\\\\:sl-translate-y-20:hover {\\n    --tw-translate-y: 80px\\n}\\n\\n.hover\\\\:sl-translate-y-24:hover {\\n    --tw-translate-y: 96px\\n}\\n\\n.hover\\\\:sl-translate-y-28:hover {\\n    --tw-translate-y: 112px\\n}\\n\\n.hover\\\\:sl-translate-y-32:hover {\\n    --tw-translate-y: 128px\\n}\\n\\n.hover\\\\:sl-translate-y-36:hover {\\n    --tw-translate-y: 144px\\n}\\n\\n.hover\\\\:sl-translate-y-40:hover {\\n    --tw-translate-y: 160px\\n}\\n\\n.hover\\\\:sl-translate-y-44:hover {\\n    --tw-translate-y: 176px\\n}\\n\\n.hover\\\\:sl-translate-y-48:hover {\\n    --tw-translate-y: 192px\\n}\\n\\n.hover\\\\:sl-translate-y-52:hover {\\n    --tw-translate-y: 208px\\n}\\n\\n.hover\\\\:sl-translate-y-56:hover {\\n    --tw-translate-y: 224px\\n}\\n\\n.hover\\\\:sl-translate-y-60:hover {\\n    --tw-translate-y: 240px\\n}\\n\\n.hover\\\\:sl-translate-y-64:hover {\\n    --tw-translate-y: 256px\\n}\\n\\n.hover\\\\:sl-translate-y-72:hover {\\n    --tw-translate-y: 288px\\n}\\n\\n.hover\\\\:sl-translate-y-80:hover {\\n    --tw-translate-y: 320px\\n}\\n\\n.hover\\\\:sl-translate-y-96:hover {\\n    --tw-translate-y: 384px\\n}\\n\\n.hover\\\\:sl-translate-y-px:hover {\\n    --tw-translate-y: 1px\\n}\\n\\n.hover\\\\:sl-translate-y-0\\\\.5:hover {\\n    --tw-translate-y: 2px\\n}\\n\\n.hover\\\\:sl-translate-y-1\\\\.5:hover {\\n    --tw-translate-y: 6px\\n}\\n\\n.hover\\\\:sl-translate-y-2\\\\.5:hover {\\n    --tw-translate-y: 10px\\n}\\n\\n.hover\\\\:sl-translate-y-3\\\\.5:hover {\\n    --tw-translate-y: 14px\\n}\\n\\n.hover\\\\:sl-translate-y-4\\\\.5:hover {\\n    --tw-translate-y: 18px\\n}\\n\\n.hover\\\\:sl--translate-y-0:hover {\\n    --tw-translate-y: 0px\\n}\\n\\n.hover\\\\:sl--translate-y-1:hover {\\n    --tw-translate-y: -4px\\n}\\n\\n.hover\\\\:sl--translate-y-2:hover {\\n    --tw-translate-y: -8px\\n}\\n\\n.hover\\\\:sl--translate-y-3:hover {\\n    --tw-translate-y: -12px\\n}\\n\\n.hover\\\\:sl--translate-y-4:hover {\\n    --tw-translate-y: -16px\\n}\\n\\n.hover\\\\:sl--translate-y-5:hover {\\n    --tw-translate-y: -20px\\n}\\n\\n.hover\\\\:sl--translate-y-6:hover {\\n    --tw-translate-y: -24px\\n}\\n\\n.hover\\\\:sl--translate-y-7:hover {\\n    --tw-translate-y: -28px\\n}\\n\\n.hover\\\\:sl--translate-y-8:hover {\\n    --tw-translate-y: -32px\\n}\\n\\n.hover\\\\:sl--translate-y-9:hover {\\n    --tw-translate-y: -36px\\n}\\n\\n.hover\\\\:sl--translate-y-10:hover {\\n    --tw-translate-y: -40px\\n}\\n\\n.hover\\\\:sl--translate-y-11:hover {\\n    --tw-translate-y: -44px\\n}\\n\\n.hover\\\\:sl--translate-y-12:hover {\\n    --tw-translate-y: -48px\\n}\\n\\n.hover\\\\:sl--translate-y-14:hover {\\n    --tw-translate-y: -56px\\n}\\n\\n.hover\\\\:sl--translate-y-16:hover {\\n    --tw-translate-y: -64px\\n}\\n\\n.hover\\\\:sl--translate-y-20:hover {\\n    --tw-translate-y: -80px\\n}\\n\\n.hover\\\\:sl--translate-y-24:hover {\\n    --tw-translate-y: -96px\\n}\\n\\n.hover\\\\:sl--translate-y-28:hover {\\n    --tw-translate-y: -112px\\n}\\n\\n.hover\\\\:sl--translate-y-32:hover {\\n    --tw-translate-y: -128px\\n}\\n\\n.hover\\\\:sl--translate-y-36:hover {\\n    --tw-translate-y: -144px\\n}\\n\\n.hover\\\\:sl--translate-y-40:hover {\\n    --tw-translate-y: -160px\\n}\\n\\n.hover\\\\:sl--translate-y-44:hover {\\n    --tw-translate-y: -176px\\n}\\n\\n.hover\\\\:sl--translate-y-48:hover {\\n    --tw-translate-y: -192px\\n}\\n\\n.hover\\\\:sl--translate-y-52:hover {\\n    --tw-translate-y: -208px\\n}\\n\\n.hover\\\\:sl--translate-y-56:hover {\\n    --tw-translate-y: -224px\\n}\\n\\n.hover\\\\:sl--translate-y-60:hover {\\n    --tw-translate-y: -240px\\n}\\n\\n.hover\\\\:sl--translate-y-64:hover {\\n    --tw-translate-y: -256px\\n}\\n\\n.hover\\\\:sl--translate-y-72:hover {\\n    --tw-translate-y: -288px\\n}\\n\\n.hover\\\\:sl--translate-y-80:hover {\\n    --tw-translate-y: -320px\\n}\\n\\n.hover\\\\:sl--translate-y-96:hover {\\n    --tw-translate-y: -384px\\n}\\n\\n.hover\\\\:sl--translate-y-px:hover {\\n    --tw-translate-y: -1px\\n}\\n\\n.hover\\\\:sl--translate-y-0\\\\.5:hover {\\n    --tw-translate-y: -2px\\n}\\n\\n.hover\\\\:sl--translate-y-1\\\\.5:hover {\\n    --tw-translate-y: -6px\\n}\\n\\n.hover\\\\:sl--translate-y-2\\\\.5:hover {\\n    --tw-translate-y: -10px\\n}\\n\\n.hover\\\\:sl--translate-y-3\\\\.5:hover {\\n    --tw-translate-y: -14px\\n}\\n\\n.hover\\\\:sl--translate-y-4\\\\.5:hover {\\n    --tw-translate-y: -18px\\n}\\n\\n.sl-select-none {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none\\n}\\n\\n.sl-select-text {\\n    -webkit-user-select: text;\\n    -moz-user-select: text;\\n    -ms-user-select: text;\\n    user-select: text\\n}\\n\\n.sl-select-all {\\n    -webkit-user-select: all;\\n    -moz-user-select: all;\\n    user-select: all\\n}\\n\\n.sl-select-auto {\\n    -webkit-user-select: auto;\\n    -moz-user-select: auto;\\n    -ms-user-select: auto;\\n    user-select: auto\\n}\\n\\n.sl-align-baseline {\\n    vertical-align: initial\\n}\\n\\n.sl-align-top {\\n    vertical-align: top\\n}\\n\\n.sl-align-middle {\\n    vertical-align: middle\\n}\\n\\n.sl-align-bottom {\\n    vertical-align: bottom\\n}\\n\\n.sl-align-text-top {\\n    vertical-align: text-top\\n}\\n\\n.sl-align-text-bottom {\\n    vertical-align: text-bottom\\n}\\n\\n.sl-visible {\\n    visibility: visible\\n}\\n\\n.sl-invisible {\\n    visibility: hidden\\n}\\n\\n.sl-group:hover .group-hover\\\\:sl-visible {\\n    visibility: visible\\n}\\n\\n.sl-group:hover .group-hover\\\\:sl-invisible {\\n    visibility: hidden\\n}\\n\\n.sl-group:focus .group-focus\\\\:sl-visible {\\n    visibility: visible\\n}\\n\\n.sl-group:focus .group-focus\\\\:sl-invisible {\\n    visibility: hidden\\n}\\n\\n.sl-whitespace-normal {\\n    white-space: normal\\n}\\n\\n.sl-whitespace-nowrap {\\n    white-space: nowrap\\n}\\n\\n.sl-whitespace-pre {\\n    white-space: pre\\n}\\n\\n.sl-whitespace-pre-line {\\n    white-space: pre-line\\n}\\n\\n.sl-whitespace-pre-wrap {\\n    white-space: pre-wrap\\n}\\n\\n.sl-w-0 {\\n    width: 0\\n}\\n\\n.sl-w-1 {\\n    width: 4px\\n}\\n\\n.sl-w-2 {\\n    width: 8px\\n}\\n\\n.sl-w-3 {\\n    width: 12px\\n}\\n\\n.sl-w-4 {\\n    width: 16px\\n}\\n\\n.sl-w-5 {\\n    width: 20px\\n}\\n\\n.sl-w-6 {\\n    width: 24px\\n}\\n\\n.sl-w-7 {\\n    width: 28px\\n}\\n\\n.sl-w-8 {\\n    width: 32px\\n}\\n\\n.sl-w-9 {\\n    width: 36px\\n}\\n\\n.sl-w-10 {\\n    width: 40px\\n}\\n\\n.sl-w-11 {\\n    width: 44px\\n}\\n\\n.sl-w-12 {\\n    width: 48px\\n}\\n\\n.sl-w-14 {\\n    width: 56px\\n}\\n\\n.sl-w-16 {\\n    width: 64px\\n}\\n\\n.sl-w-20 {\\n    width: 80px\\n}\\n\\n.sl-w-24 {\\n    width: 96px\\n}\\n\\n.sl-w-28 {\\n    width: 112px\\n}\\n\\n.sl-w-32 {\\n    width: 128px\\n}\\n\\n.sl-w-36 {\\n    width: 144px\\n}\\n\\n.sl-w-40 {\\n    width: 160px\\n}\\n\\n.sl-w-44 {\\n    width: 176px\\n}\\n\\n.sl-w-48 {\\n    width: 192px\\n}\\n\\n.sl-w-52 {\\n    width: 208px\\n}\\n\\n.sl-w-56 {\\n    width: 224px\\n}\\n\\n.sl-w-60 {\\n    width: 240px\\n}\\n\\n.sl-w-64 {\\n    width: 256px\\n}\\n\\n.sl-w-72 {\\n    width: 288px\\n}\\n\\n.sl-w-80 {\\n    width: 320px\\n}\\n\\n.sl-w-96 {\\n    width: 384px\\n}\\n\\n.sl-w-auto {\\n    width: auto\\n}\\n\\n.sl-w-px {\\n    width: 1px\\n}\\n\\n.sl-w-0\\\\.5 {\\n    width: 2px\\n}\\n\\n.sl-w-1\\\\.5 {\\n    width: 6px\\n}\\n\\n.sl-w-2\\\\.5 {\\n    width: 10px\\n}\\n\\n.sl-w-3\\\\.5 {\\n    width: 14px\\n}\\n\\n.sl-w-4\\\\.5 {\\n    width: 18px\\n}\\n\\n.sl-w-xs {\\n    width: 20px\\n}\\n\\n.sl-w-sm {\\n    width: 24px\\n}\\n\\n.sl-w-md {\\n    width: 32px\\n}\\n\\n.sl-w-lg {\\n    width: 36px\\n}\\n\\n.sl-w-xl {\\n    width: 44px\\n}\\n\\n.sl-w-2xl {\\n    width: 52px\\n}\\n\\n.sl-w-3xl {\\n    width: 60px\\n}\\n\\n.sl-w-1\\\\/2 {\\n    width: 50%\\n}\\n\\n.sl-w-1\\\\/3 {\\n    width: 33.333333%\\n}\\n\\n.sl-w-2\\\\/3 {\\n    width: 66.666667%\\n}\\n\\n.sl-w-1\\\\/4 {\\n    width: 25%\\n}\\n\\n.sl-w-2\\\\/4 {\\n    width: 50%\\n}\\n\\n.sl-w-3\\\\/4 {\\n    width: 75%\\n}\\n\\n.sl-w-1\\\\/5 {\\n    width: 20%\\n}\\n\\n.sl-w-2\\\\/5 {\\n    width: 40%\\n}\\n\\n.sl-w-3\\\\/5 {\\n    width: 60%\\n}\\n\\n.sl-w-4\\\\/5 {\\n    width: 80%\\n}\\n\\n.sl-w-1\\\\/6 {\\n    width: 16.666667%\\n}\\n\\n.sl-w-2\\\\/6 {\\n    width: 33.333333%\\n}\\n\\n.sl-w-3\\\\/6 {\\n    width: 50%\\n}\\n\\n.sl-w-4\\\\/6 {\\n    width: 66.666667%\\n}\\n\\n.sl-w-5\\\\/6 {\\n    width: 83.333333%\\n}\\n\\n.sl-w-full {\\n    width: 100%\\n}\\n\\n.sl-w-screen {\\n    width: 100vw\\n}\\n\\n.sl-w-min {\\n    width: -moz-min-content;\\n    width: min-content\\n}\\n\\n.sl-w-max {\\n    width: -moz-max-content;\\n    width: max-content\\n}\\n\\n.sl-break-normal {\\n    overflow-wrap: normal;\\n    word-break: normal\\n}\\n\\n.sl-break-words {\\n    overflow-wrap: break-word\\n}\\n\\n.sl-break-all {\\n    word-break: break-all\\n}\\n\\n.sl-z-0 {\\n    z-index: 0\\n}\\n\\n.sl-z-10 {\\n    z-index: 10\\n}\\n\\n.sl-z-20 {\\n    z-index: 20\\n}\\n\\n.sl-z-30 {\\n    z-index: 30\\n}\\n\\n.sl-z-40 {\\n    z-index: 40\\n}\\n\\n.sl-z-50 {\\n    z-index: 50\\n}\\n\\n.sl-z-auto {\\n    z-index: auto\\n}\\n\\n.focus\\\\:sl-z-0:focus {\\n    z-index: 0\\n}\\n\\n.focus\\\\:sl-z-10:focus {\\n    z-index: 10\\n}\\n\\n.focus\\\\:sl-z-20:focus {\\n    z-index: 20\\n}\\n\\n.focus\\\\:sl-z-30:focus {\\n    z-index: 30\\n}\\n\\n.focus\\\\:sl-z-40:focus {\\n    z-index: 40\\n}\\n\\n.focus\\\\:sl-z-50:focus {\\n    z-index: 50\\n}\\n\\n.focus\\\\:sl-z-auto:focus {\\n    z-index: auto\\n}\\n\\n:root {\\n    --font-prose: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";\\n    --font-ui: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";\\n    --font-mono: \\\"SF Mono\\\", ui-monospace, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n    --font-code: var(--font-mono);\\n    --fs-paragraph-leading: 22px;\\n    --fs-paragraph: 16px;\\n    --fs-code: 14px;\\n    --fs-paragraph-small: 14px;\\n    --fs-paragraph-tiny: 12px;\\n    --lh-paragraph-leading: 1.875;\\n    --lh-paragraph: 1.625;\\n    --lh-code: 1.5;\\n    --lh-paragraph-small: 1.625;\\n    --lh-paragraph-tiny: 1.625;\\n    --color-code: var(--color-canvas-tint);\\n    --color-on-code: var(--color-text-heading)\\n}\\n\\n.sl-avatar--with-bg:before {\\n    background-color: var(--avatar-bg-color);\\n    bottom: 0;\\n    content: \\\" \\\";\\n    left: 0;\\n    opacity: var(--avatar-bg-opacity);\\n    position: absolute;\\n    right: 0;\\n    top: 0\\n}\\n\\n.sl-aspect-ratio:before {\\n    content: \\\"\\\";\\n    display: block;\\n    height: 0;\\n    padding-bottom: calc(1/var(--ratio)*100%)\\n}\\n\\n.sl-aspect-ratio>:not(style) {\\n    align-items: center;\\n    bottom: 0;\\n    display: flex;\\n    height: 100%;\\n    justify-content: center;\\n    left: 0;\\n    overflow: hidden;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    width: 100%\\n}\\n\\n.sl-aspect-ratio>img,\\n.sl-aspect-ratio>video {\\n    object-fit: cover\\n}\\n\\n.sl-badge {\\n    align-items: center;\\n    border-width: 1px;\\n    display: inline-flex;\\n    outline: 2px solid transparent;\\n    outline-offset: 2px\\n}\\n\\n.sl-badge a {\\n    color: var(--color-text-muted)\\n}\\n\\n.sl-badge a:hover {\\n    color: var(--color-text);\\n    cursor: pointer\\n}\\n\\n.sl-button {\\n    align-items: center;\\n    display: inline-flex;\\n    line-height: 0;\\n    outline: 2px solid transparent;\\n    outline-offset: 2px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap\\n}\\n\\n.sl-button-group>.sl-button:not(:first-child):not(:last-child) {\\n    border-radius: 0;\\n    border-right: 0\\n}\\n\\n.sl-button-group>.sl-button:first-child:not(:last-child) {\\n    border-bottom-right-radius: 0;\\n    border-right: 0;\\n    border-top-right-radius: 0\\n}\\n\\n.sl-button-group>.sl-button:last-child:not(:first-child) {\\n    border-bottom-left-radius: 0;\\n    border-top-left-radius: 0\\n}\\n\\n.sl-image--inverted {\\n    filter: invert(1) hue-rotate(180deg);\\n    mix-blend-mode: screen\\n}\\n\\n.Link,\\n.Link>code {\\n    color: var(--color-link)\\n}\\n\\n.Link:hover,\\n.Link:hover>code {\\n    color: var(--color-link-dark)\\n}\\n\\n.sl-link-heading:hover .sl-link-heading__icon {\\n    opacity: 1\\n}\\n\\n.sl-link-heading__icon {\\n    opacity: 0\\n}\\n\\n.sl-menu {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none\\n}\\n\\n.sl-menu--pointer-interactions .sl-menu-item:not(.sl-menu-item--disabled):hover {\\n    background-color: var(--color-primary);\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu--pointer-interactions .sl-menu-item:not(.sl-menu-item--disabled):hover .sl-menu-item__description {\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu--pointer-interactions .sl-menu-item:not(.sl-menu-item--disabled):hover .sl-menu-item__icon {\\n    color: var(--color-on-primary) !important\\n}\\n\\n.sl-menu-item__link-icon,\\n.sl-menu-item__meta-text {\\n    opacity: .6\\n}\\n\\n.sl-menu-item--disabled .sl-menu-item__title-wrapper {\\n    cursor: not-allowed;\\n    opacity: .5\\n}\\n\\n.sl-menu-item--disabled .sl-menu-item__meta-text {\\n    cursor: not-allowed;\\n    opacity: .4\\n}\\n\\n.sl-menu-item--focused {\\n    background-color: var(--color-primary);\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu-item--focused .sl-menu-item__link-icon,\\n.sl-menu-item--focused .sl-menu-item__meta-text {\\n    opacity: 1\\n}\\n\\n.sl-menu-item--focused .sl-menu-item__description {\\n    color: var(--color-on-primary)\\n}\\n\\n.sl-menu-item--focused .sl-menu-item__icon {\\n    color: var(--color-on-primary) !important\\n}\\n\\n.sl-menu-item--submenu-active {\\n    background-color: var(--color-primary-tint)\\n}\\n\\n.sl-menu-item__title-wrapper {\\n    max-width: 250px\\n}\\n\\n.sl-menu-item__description {\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    display: -webkit-box;\\n    overflow: hidden\\n}\\n\\n.sl-popover {\\n    --tw-blur: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-brightness: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-contrast: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-grayscale: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-hue-rotate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-invert: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-saturate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-sepia: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-default1)) drop-shadow(var(--drop-shadow-default2));\\n    border-radius: 2px;\\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\\n}\\n\\n.sl-popover>:not(.sl-popover__tip) {\\n    border-radius: 2px;\\n    position: relative;\\n    z-index: 10\\n}\\n\\n.sl-prose {\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    --fs-paragraph: 1em;\\n    --fs-paragraph-small: 0.875em;\\n    --fs-code: 0.875em;\\n    font-family: var(--font-prose);\\n    font-size: 16px;\\n    line-height: var(--lh-paragraph)\\n}\\n\\n.sl-prose>:first-child {\\n    margin-top: 0\\n}\\n\\n.sl-prose>:last-child {\\n    margin-bottom: 0\\n}\\n\\n.sl-prose h1 {\\n    font-size: 2.25em\\n}\\n\\n.sl-prose>h1 {\\n    margin-bottom: 1.11em;\\n    margin-top: 0\\n}\\n\\n.sl-prose h2 {\\n    font-size: 1.75em;\\n    line-height: 1.3333333\\n}\\n\\n.sl-prose>h2 {\\n    margin-bottom: 1em;\\n    margin-top: 1.428em\\n}\\n\\n.sl-prose h3 {\\n    font-size: 1.25em\\n}\\n\\n.sl-prose>h3 {\\n    margin-bottom: .8em;\\n    margin-top: 2em\\n}\\n\\n.sl-prose h4 {\\n    font-size: 1em\\n}\\n\\n.sl-prose>h4 {\\n    margin-bottom: .5em;\\n    margin-top: 2em\\n}\\n\\n.sl-prose h2+*,\\n.sl-prose h3+*,\\n.sl-prose h4+* {\\n    margin-top: 0\\n}\\n\\n.sl-prose strong {\\n    font-weight: 600\\n}\\n\\n.sl-prose .sl-text-lg {\\n    font-size: .875em\\n}\\n\\n.sl-prose p {\\n    color: var(--color-text-paragraph);\\n    font-size: var(--fs-paragraph);\\n    margin-bottom: 1em;\\n    margin-top: 1em\\n}\\n\\n.sl-prose p:first-child {\\n    margin-top: 0\\n}\\n\\n.sl-prose p:last-child {\\n    margin-bottom: 0\\n}\\n\\n.sl-prose p>a>img {\\n    display: inline\\n}\\n\\n.sl-prose caption a,\\n.sl-prose figcaption a,\\n.sl-prose li a,\\n.sl-prose p a,\\n.sl-prose table a {\\n    color: var(--color-link)\\n}\\n\\n.sl-prose caption a:hover,\\n.sl-prose figcaption a:hover,\\n.sl-prose li a:hover,\\n.sl-prose p a:hover,\\n.sl-prose table a:hover {\\n    color: var(--color-link-dark)\\n}\\n\\n.sl-prose caption a,\\n.sl-prose figcaption a,\\n.sl-prose li a,\\n.sl-prose p a,\\n.sl-prose table a {\\n    --color-link: var(--color-text-primary);\\n    --color-link-dark: var(--color-primary-dark)\\n}\\n\\n.sl-prose hr {\\n    margin-bottom: 1em;\\n    margin-top: 1em\\n}\\n\\n.sl-prose .sl-live-code {\\n    margin: 1.25em -4px;\\n    table-layout: auto;\\n    width: 100%\\n}\\n\\n.sl-prose .sl-live-code__inner>pre {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl-prose .sl-callout,\\n.sl-prose ol,\\n.sl-prose ul {\\n    margin-bottom: 1.5em;\\n    margin-top: 1.5em\\n}\\n\\n.sl-prose ol,\\n.sl-prose ul {\\n    line-height: var(--lh-paragraph)\\n}\\n\\n.sl-prose ol li,\\n.sl-prose ul li {\\n    padding-left: 2em\\n}\\n\\n.sl-prose ol li {\\n    position: relative\\n}\\n\\n.sl-prose ol li:before {\\n    content: counter(list-item) \\\". \\\";\\n    font-variant-numeric: tabular-nums\\n}\\n\\n.sl-prose ul:not(.contains-task-list) li {\\n    position: relative\\n}\\n\\n.sl-prose ul:not(.contains-task-list) li:before {\\n    background-color: var(--color-text);\\n    border-radius: 50%;\\n    content: \\\"\\\";\\n    height: .375em;\\n    left: .75em;\\n    opacity: .7;\\n    position: absolute;\\n    top: .625em;\\n    width: .375em\\n}\\n\\n.sl-prose li {\\n    margin-bottom: 4px;\\n    margin-top: 4px;\\n    padding-left: 1.75em\\n}\\n\\n.sl-prose li p {\\n    display: inline;\\n    margin-bottom: .75em;\\n    margin-top: .75em\\n}\\n\\n.sl-prose li>:first-child {\\n    margin-top: 0\\n}\\n\\n.sl-prose>ol p+:last-child,\\n.sl-prose>ul p+:last-child {\\n    margin-bottom: .75em\\n}\\n\\n.sl-prose ol ol,\\n.sl-prose ol ul,\\n.sl-prose ul ol,\\n.sl-prose ul ul {\\n    margin-bottom: 2px;\\n    margin-top: 2px\\n}\\n\\n.sl-prose ul.contains-task-list input {\\n    margin-left: -1.875em;\\n    margin-right: .625em;\\n    position: relative;\\n    top: 1px\\n}\\n\\n.sl-prose ul.contains-task-list p {\\n    margin-top: 0\\n}\\n\\n.sl-prose figure {\\n    margin-bottom: 1.5em;\\n    margin-top: 1.5em\\n}\\n\\n.sl-prose figure figure,\\n.sl-prose figure img,\\n.sl-prose figure video {\\n    margin-bottom: 0;\\n    margin-top: 0\\n}\\n\\n.sl-prose figure>figcaption,\\n.sl-prose figure>figcaption p {\\n    color: var(--color-text-muted);\\n    font-size: var(--fs-paragraph-small);\\n    line-height: var(--lh-paragraph-small);\\n    margin-top: 8px;\\n    padding-left: 16px;\\n    padding-right: 16px;\\n    text-align: center\\n}\\n\\n.sl-prose blockquote p {\\n    margin-bottom: .5em;\\n    margin-top: .5em\\n}\\n\\n.sl-prose table {\\n    font-size: var(--fs-paragraph-small);\\n    margin-bottom: 1.5em;\\n    margin-left: -4px;\\n    margin-right: -4px;\\n    overflow-x: auto;\\n    table-layout: auto;\\n    width: 100%\\n}\\n\\n.sl-prose thead td,\\n.sl-prose thead th {\\n    color: var(--color-text-muted);\\n    font-size: .857em;\\n    font-weight: 500;\\n    padding: 8px 12px;\\n    text-transform: uppercase\\n}\\n\\n.sl-prose thead td:first-child,\\n.sl-prose thead th:first-child {\\n    padding-left: 4px\\n}\\n\\n.sl-prose tbody {\\n    border-radius: 5px;\\n    box-shadow: 0 0 0 1px var(--color-border, currentColor)\\n}\\n\\n.sl-prose tbody tr {\\n    border-top-width: 1px\\n}\\n\\n.sl-prose tbody tr:first-child {\\n    border-top: 0\\n}\\n\\n.sl-prose tbody tr:nth-child(2n) {\\n    background-color: var(--color-canvas-tint)\\n}\\n\\n.sl-prose td {\\n    margin: .625em .75em;\\n    padding: 10px 12px;\\n    vertical-align: top\\n}\\n\\n.sl-prose td:not([align=center], [align=right]),\\n.sl-prose th:not([align=center], [align=right]) {\\n    text-align: left\\n}\\n\\n.sl-prose .mermaid {\\n    margin-bottom: 1.5em;\\n    margin-top: 1.5em\\n}\\n\\n.sl-prose .mermaid>svg {\\n    border-radius: 5px;\\n    border-width: 1px;\\n    height: auto !important;\\n    padding: 1.25em\\n}\\n\\n.sl-prose .sl-code-group .mermaid,\\n.sl-prose .sl-code-group pre {\\n    margin-top: 0\\n}\\n\\n.sl-svg-focus {\\n    filter: drop-shadow(0 0 1px hsla(var(--primary-h), 80%, 51%, .9))\\n}\\n\\n.sl-radio-group__radio:hover {\\n    cursor: pointer\\n}\\n\\n.sl-radio-group__radio--disabled {\\n    opacity: .6\\n}\\n\\n.sl-radio-group__radio--disabled:hover {\\n    cursor: not-allowed\\n}\\n\\n.sl-stack--horizontal.sl-stack--1>:not(style)~:not(style) {\\n    margin-left: 4px\\n}\\n\\n.sl-stack--horizontal.sl-stack--2>:not(style)~:not(style) {\\n    margin-left: 8px\\n}\\n\\n.sl-stack--horizontal.sl-stack--3>:not(style)~:not(style) {\\n    margin-left: 12px\\n}\\n\\n.sl-stack--horizontal.sl-stack--4>:not(style)~:not(style) {\\n    margin-left: 16px\\n}\\n\\n.sl-stack--horizontal.sl-stack--5>:not(style)~:not(style) {\\n    margin-left: 20px\\n}\\n\\n.sl-stack--horizontal.sl-stack--6>:not(style)~:not(style) {\\n    margin-left: 24px\\n}\\n\\n.sl-stack--horizontal.sl-stack--8>:not(style)~:not(style) {\\n    margin-left: 32px\\n}\\n\\n.sl-stack--horizontal.sl-stack--10>:not(style)~:not(style) {\\n    margin-left: 40px\\n}\\n\\n.sl-stack--horizontal.sl-stack--12>:not(style)~:not(style) {\\n    margin-left: 48px\\n}\\n\\n.sl-stack--horizontal.sl-stack--14>:not(style)~:not(style) {\\n    margin-left: 56px\\n}\\n\\n.sl-stack--horizontal.sl-stack--16>:not(style)~:not(style) {\\n    margin-left: 64px\\n}\\n\\n.sl-stack--horizontal.sl-stack--20>:not(style)~:not(style) {\\n    margin-left: 80px\\n}\\n\\n.sl-stack--horizontal.sl-stack--24>:not(style)~:not(style) {\\n    margin-left: 96px\\n}\\n\\n.sl-stack--horizontal.sl-stack--32>:not(style)~:not(style) {\\n    margin-left: 128px\\n}\\n\\n.sl-stack--vertical.sl-stack--1>:not(style)~:not(style) {\\n    margin-top: 4px\\n}\\n\\n.sl-stack--vertical.sl-stack--2>:not(style)~:not(style) {\\n    margin-top: 8px\\n}\\n\\n.sl-stack--vertical.sl-stack--3>:not(style)~:not(style) {\\n    margin-top: 12px\\n}\\n\\n.sl-stack--vertical.sl-stack--4>:not(style)~:not(style) {\\n    margin-top: 16px\\n}\\n\\n.sl-stack--vertical.sl-stack--5>:not(style)~:not(style) {\\n    margin-top: 20px\\n}\\n\\n.sl-stack--vertical.sl-stack--6>:not(style)~:not(style) {\\n    margin-top: 24px\\n}\\n\\n.sl-stack--vertical.sl-stack--8>:not(style)~:not(style) {\\n    margin-top: 32px\\n}\\n\\n.sl-stack--vertical.sl-stack--10>:not(style)~:not(style) {\\n    margin-top: 40px\\n}\\n\\n.sl-stack--vertical.sl-stack--12>:not(style)~:not(style) {\\n    margin-top: 48px\\n}\\n\\n.sl-stack--vertical.sl-stack--14>:not(style)~:not(style) {\\n    margin-top: 56px\\n}\\n\\n.sl-stack--vertical.sl-stack--16>:not(style)~:not(style) {\\n    margin-top: 64px\\n}\\n\\n.sl-stack--vertical.sl-stack--20>:not(style)~:not(style) {\\n    margin-top: 80px\\n}\\n\\n.sl-stack--vertical.sl-stack--24>:not(style)~:not(style) {\\n    margin-top: 96px\\n}\\n\\n.sl-stack--vertical.sl-stack--32>:not(style)~:not(style) {\\n    margin-top: 128px\\n}\\n\\n.sl-switch .sl-switch__indicator {\\n    transition: background-color .1s cubic-bezier(.4, 1, .75, .9)\\n}\\n\\n.sl-switch .sl-switch__indicator .sl-switch__icon {\\n    visibility: hidden\\n}\\n\\n.sl-switch .sl-switch__indicator:before {\\n    background-color: var(--color-canvas);\\n    border-radius: 50%;\\n    content: \\\"\\\";\\n    height: calc(100% - 4px);\\n    left: 0;\\n    margin: 2px;\\n    position: absolute;\\n    transition: left .1s cubic-bezier(.4, 1, .75, .9);\\n    width: calc(50% - 4px)\\n}\\n\\n.sl-switch input:checked:disabled~.sl-switch__indicator {\\n    background-color: var(--color-primary-light)\\n}\\n\\n.sl-switch input:checked~.sl-switch__indicator {\\n    background-color: var(--color-primary)\\n}\\n\\n.sl-switch input:checked~.sl-switch__indicator .sl-switch__icon {\\n    visibility: visible\\n}\\n\\n.sl-switch input:checked~.sl-switch__indicator:before {\\n    left: 50%\\n}\\n\\n.sl-tooltip {\\n    --tw-blur: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-brightness: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-contrast: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-grayscale: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-hue-rotate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-invert: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-saturate: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-sepia: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: var(--tw-empty, /*!*/\\n    /*!*/\\n    );\\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-default1)) drop-shadow(var(--drop-shadow-default2));\\n    border-radius: 2px;\\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n    font-size: 11px;\\n    max-width: 300px;\\n    padding: 4px 6px\\n}\\n\\n.sl-tooltip>:not(.sl-tooltip_tip) {\\n    position: relative;\\n    z-index: 10\\n}\\n\\n#apim_elements input,\\n#apim_elements textarea {\\n    background-color: initial\\n}\\n\\n.sl-focus-ring {\\n    --tw-ring-color: hsla(var(--primary-h), 80%, 61%, var(--tw-ring-opacity));\\n    --tw-ring-opacity: 0.5;\\n    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n    border-radius: 2px;\\n    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)\\n}\\n\\n:root,\\n[data-theme=light],\\n[data-theme=light] .sl-inverted .sl-inverted,\\n[data-theme=light] .sl-inverted .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 15%;\\n    --shadow-sm: 0px 0px 1px rgba(67, 90, 111, .3);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .25), 0px 0px 1px rgba(67, 90, 111, .3);\\n    --shadow-lg: 0 4px 17px rgba(67, 90, 111, .2), 0 2px 3px rgba(0, 0, 0, .1), inset 0 0 0 .5px var(--color-canvas-pure), 0 0 0 .5px rgba(0, 0, 0, .2);\\n    --shadow-xl: 0px 0px 1px rgba(67, 90, 111, .3), 0px 8px 10px -4px rgba(67, 90, 111, .45);\\n    --shadow-2xl: 0px 0px 1px rgba(67, 90, 111, .3), 0px 16px 24px -8px rgba(67, 90, 111, .45);\\n    --drop-shadow-default1: 0 0 0.5px rgba(0, 0, 0, .6);\\n    --drop-shadow-default2: 0 2px 5px rgba(67, 90, 111, .3);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 40%;\\n    --canvas-l: 100%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #fff;\\n    --color-canvas-tint: rgba(245, 247, 250, .5);\\n    --color-canvas-50: #f5f7fa;\\n    --color-canvas-100: #ebeef5;\\n    --color-canvas-200: #e0e6f0;\\n    --color-canvas-300: #d5ddeb;\\n    --color-canvas-400: #cbd5e7;\\n    --color-canvas-500: #c0cde2;\\n    --color-canvas-dialog: #fff;\\n    --color-border-dark: hsla(var(--canvas-h), 30%, 72%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 32%, 78%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 24%, 84%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 24%, 72%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 24%, 20%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 100%;\\n    --primary-l: 55%;\\n    --color-text-primary: #0081cc;\\n    --color-primary-dark: #1891d8;\\n    --color-primary-darker: #126fa5;\\n    --color-primary: #19abff;\\n    --color-primary-light: #52bfff;\\n    --color-primary-tint: rgba(77, 190, 255, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 37%;\\n    --color-text-success: #05c779;\\n    --color-success-dark: #138b5b;\\n    --color-success-darker: #0f6c47;\\n    --color-success: #05b870;\\n    --color-success-light: #06db86;\\n    --color-success-tint: rgba(81, 251, 183, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 56%;\\n    --color-text-warning: #c2470a;\\n    --color-warning-dark: #d35d22;\\n    --color-warning-darker: #9e461a;\\n    --color-warning: #f46d2a;\\n    --color-warning-light: #f7925f;\\n    --color-warning-tint: rgba(246, 139, 85, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 63%;\\n    --color-text-danger: #bc1010;\\n    --color-danger-dark: #d83b3b;\\n    --color-danger-darker: #af2323;\\n    --color-danger: #f05151;\\n    --color-danger-light: #f58e8e;\\n    --color-danger-tint: rgba(241, 91, 91, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n:root .sl-inverted,\\n[data-theme=light] .sl-inverted,\\n[data-theme=light] .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 86%;\\n    --shadow-sm: 0px 0px 1px rgba(11, 13, 19, .5);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .35), 0px 0px 1px rgba(11, 13, 19, .4);\\n    --shadow-lg: 0 2px 14px rgba(0, 0, 0, .55), 0 0 0 0.5px hsla(0, 0%, 100%, .2);\\n    --shadow-xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 8px 10px -4px rgba(11, 13, 19, .55);\\n    --shadow-2xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 16px 24px -8px rgba(11, 13, 19, .55);\\n    --drop-shadow-default1: 0 0 0.5px hsla(0, 0%, 100%, .5);\\n    --drop-shadow-default2: 0 3px 8px rgba(0, 0, 0, .6);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 32%;\\n    --canvas-l: 10%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #0c1018;\\n    --color-canvas-tint: rgba(60, 76, 103, .2);\\n    --color-canvas-50: #3c4c67;\\n    --color-canvas-100: #2d394e;\\n    --color-canvas-200: #212a3b;\\n    --color-canvas-300: #19212e;\\n    --color-canvas-400: #171e2b;\\n    --color-canvas-500: #151c28;\\n    --color-canvas-dialog: #2d394e;\\n    --color-border-dark: hsla(var(--canvas-h), 24%, 23%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 26%, 28%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 19%, 34%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 19%, 30%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 19%, 80%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 90%;\\n    --primary-l: 51%;\\n    --color-text-primary: #66c7ff;\\n    --color-primary-dark: #1f83bd;\\n    --color-primary-darker: #186491;\\n    --color-primary: #12a0f3;\\n    --color-primary-light: #42b3f5;\\n    --color-primary-tint: rgba(85, 187, 246, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 67%;\\n    --color-text-success: #41f1ab;\\n    --color-success-dark: #47dca0;\\n    --color-success-darker: #24bc7f;\\n    --color-success: #62f3b9;\\n    --color-success-light: #a0f8d5;\\n    --color-success-tint: rgba(89, 243, 181, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 50%;\\n    --color-text-warning: #ec7d46;\\n    --color-warning-dark: #b55626;\\n    --color-warning-darker: #8b421d;\\n    --color-warning: #e75d18;\\n    --color-warning-light: #ec7d46;\\n    --color-warning-tint: rgba(238, 142, 93, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 43%;\\n    --color-text-danger: #e74b4b;\\n    --color-danger-dark: #972626;\\n    --color-danger-darker: #721d1d;\\n    --color-danger: #c11a1a;\\n    --color-danger-light: #e22828;\\n    --color-danger-tint: rgba(234, 98, 98, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n[data-theme=dark],\\n[data-theme=dark] .sl-inverted .sl-inverted,\\n[data-theme=dark] .sl-inverted .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 85%;\\n    --shadow-sm: 0px 0px 1px rgba(11, 13, 19, .5);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .35), 0px 0px 1px rgba(11, 13, 19, .4);\\n    --shadow-lg: 0 2px 14px rgba(0, 0, 0, .55), 0 0 0 0.5px hsla(0, 0%, 100%, .2);\\n    --shadow-xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 8px 10px -4px rgba(11, 13, 19, .55);\\n    --shadow-2xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 16px 24px -8px rgba(11, 13, 19, .55);\\n    --drop-shadow-default1: 0 0 0.5px hsla(0, 0%, 100%, .5);\\n    --drop-shadow-default2: 0 3px 8px rgba(0, 0, 0, .6);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 32%;\\n    --canvas-l: 8%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #090c11;\\n    --color-canvas-tint: rgba(57, 71, 96, .2);\\n    --color-canvas-50: #262f40;\\n    --color-canvas-100: #1a212d;\\n    --color-canvas-200: #121821;\\n    --color-canvas-300: #0e131a;\\n    --color-canvas-400: #0c1017;\\n    --color-canvas-500: #0c1017;\\n    --color-canvas-dialog: #1a212d;\\n    --color-border-dark: hsla(var(--canvas-h), 24%, 21%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 26%, 26%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 19%, 32%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 19%, 28%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 19%, 80%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 80%;\\n    --primary-l: 36%;\\n    --color-text-primary: #66c7ff;\\n    --color-primary-dark: #1c5a7d;\\n    --color-primary-darker: #154560;\\n    --color-primary: #126fa5;\\n    --color-primary-light: #1685c5;\\n    --color-primary-tint: rgba(21, 130, 193, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 37%;\\n    --color-text-success: #4be7a9;\\n    --color-success-dark: #145239;\\n    --color-success-darker: #10422e;\\n    --color-success: #0f6c47;\\n    --color-success-light: #128255;\\n    --color-success-tint: rgba(26, 188, 123, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 56%;\\n    --color-text-warning: #e28150;\\n    --color-warning-dark: #7d4021;\\n    --color-warning-darker: #61311a;\\n    --color-warning: #9e461a;\\n    --color-warning-light: #c1551f;\\n    --color-warning-tint: rgba(184, 81, 30, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 63%;\\n    --color-text-danger: #d55;\\n    --color-danger-dark: #892929;\\n    --color-danger-darker: #6a2020;\\n    --color-danger: #af2323;\\n    --color-danger-light: #d12929;\\n    --color-danger-tint: rgba(179, 35, 35, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n[data-theme=dark] .sl-inverted,\\n[data-theme=dark] .sl-inverted .sl-inverted .sl-inverted {\\n    --text-h: 0;\\n    --text-s: 0%;\\n    --text-l: 89%;\\n    --shadow-sm: 0px 0px 1px rgba(11, 13, 19, .5);\\n    --shadow-md: 0px 2px 4px -2px rgba(0, 0, 0, .35), 0px 0px 1px rgba(11, 13, 19, .4);\\n    --shadow-lg: 0 2px 14px rgba(0, 0, 0, .55), 0 0 0 0.5px hsla(0, 0%, 100%, .2);\\n    --shadow-xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 8px 10px -4px rgba(11, 13, 19, .55);\\n    --shadow-2xl: 0px 0px 1px rgba(11, 13, 19, .4), 0px 16px 24px -8px rgba(11, 13, 19, .55);\\n    --drop-shadow-default1: 0 0 0.5px hsla(0, 0%, 100%, .5);\\n    --drop-shadow-default2: 0 3px 8px rgba(0, 0, 0, .6);\\n    --color-text-heading: hsla(var(--text-h), var(--text-s), max(3, calc(var(--text-l) - 15)), 1);\\n    --color-text: hsla(var(--text-h), var(--text-s), var(--text-l), 1);\\n    --color-text-paragraph: hsla(var(--text-h), var(--text-s), var(--text-l), 0.9);\\n    --color-text-muted: hsla(var(--text-h), var(--text-s), var(--text-l), 0.7);\\n    --color-text-light: hsla(var(--text-h), var(--text-s), var(--text-l), 0.55);\\n    --color-text-disabled: hsla(var(--text-h), var(--text-s), var(--text-l), 0.3);\\n    --canvas-h: 218;\\n    --canvas-s: 32%;\\n    --canvas-l: 13%;\\n    --color-canvas: hsla(var(--canvas-h), var(--canvas-s), var(--canvas-l), 1);\\n    --color-canvas-pure: #111722;\\n    --color-canvas-tint: rgba(66, 83, 112, .2);\\n    --color-canvas-50: #2b374a;\\n    --color-canvas-100: #222b3a;\\n    --color-canvas-200: #1a212e;\\n    --color-canvas-300: #141a24;\\n    --color-canvas-400: #121721;\\n    --color-canvas-500: #121721;\\n    --color-canvas-dialog: #222b3a;\\n    --color-border-dark: hsla(var(--canvas-h), 24%, 26%, 0.5);\\n    --color-border: hsla(var(--canvas-h), 26%, 31%, 0.5);\\n    --color-border-light: hsla(var(--canvas-h), 19%, 37%, 0.5);\\n    --color-border-input: hsla(var(--canvas-h), 19%, 33%, 0.8);\\n    --color-border-button: hsla(var(--canvas-h), 19%, 80%, 0.65);\\n    --primary-h: 202;\\n    --primary-s: 80%;\\n    --primary-l: 33%;\\n    --color-text-primary: #66c7ff;\\n    --color-primary-dark: #1a5475;\\n    --color-primary-darker: #14425c;\\n    --color-primary: #116697;\\n    --color-primary-light: #147cb8;\\n    --color-primary-tint: rgba(21, 130, 193, .25);\\n    --color-on-primary: #fff;\\n    --success-h: 156;\\n    --success-s: 95%;\\n    --success-l: 67%;\\n    --color-text-success: #4be7a9;\\n    --color-success-dark: #25986a;\\n    --color-success-darker: #1c7350;\\n    --color-success: #1bc581;\\n    --color-success-light: #28e297;\\n    --color-success-tint: rgba(26, 188, 123, .25);\\n    --color-on-success: #fff;\\n    --warning-h: 20;\\n    --warning-s: 90%;\\n    --warning-l: 50%;\\n    --color-text-warning: #e28150;\\n    --color-warning-dark: #713a1e;\\n    --color-warning-darker: #552b16;\\n    --color-warning: #914018;\\n    --color-warning-light: #ab4c1c;\\n    --color-warning-tint: rgba(184, 81, 30, .25);\\n    --color-on-warning: #fff;\\n    --danger-h: 0;\\n    --danger-s: 84%;\\n    --danger-l: 43%;\\n    --color-text-danger: #d55;\\n    --color-danger-dark: #5e1c1c;\\n    --color-danger-darker: #471515;\\n    --color-danger: #771818;\\n    --color-danger-light: #911d1d;\\n    --color-danger-tint: rgba(179, 35, 35, .25);\\n    --color-on-danger: #fff;\\n    color: var(--color-text)\\n}\\n\\n.sl-elements {\\n    font-size: 13px\\n}\\n\\n.sl-elements .svg-inline--fa {\\n    display: inline-block\\n}\\n\\n.sl-elements .DocsSkeleton {\\n    animation: skeleton-glow .5s linear infinite alternate;\\n    background: rgba(206, 217, 224, .2);\\n    background-clip: padding-box !important;\\n    border-color: rgba(206, 217, 224, .2) !important;\\n    border-radius: 2px;\\n    box-shadow: none !important;\\n    color: transparent !important;\\n    cursor: default;\\n    pointer-events: none;\\n    user-select: none\\n}\\n\\n.sl-elements .Model {\\n    --fs-code: 12px\\n}\\n\\n.sl-elements .ElementsTableOfContentsItem:hover {\\n    color: inherit;\\n    text-decoration: none\\n}\\n\\n.sl-elements .ParameterGrid {\\n    align-items: center;\\n    display: grid;\\n    grid-template-columns: fit-content(120px) 20px auto;\\n    margin-bottom: 16px;\\n    padding-bottom: 0;\\n    row-gap: 3px\\n}\\n\\n.sl-elements .TryItPanel>:nth-child(2) {\\n    overflow: auto\\n}\\n\\n.sl-elements .OperationParametersContent {\\n    max-height: 162px\\n}\\n\\n.sl-elements .Checkbox {\\n    max-width: 15px;\\n    padding-right: 3px\\n}\\n\\n.sl-elements .TextForCheckBox {\\n    padding-left: 9px;\\n    padding-top: 6px\\n}\\n\\n.sl-elements .TextRequestBody {\\n    margin-bottom: 16px;\\n    max-height: 200px;\\n    overflow-y: auto;\\n    padding-bottom: 0\\n}\\n\\n.sl-elements .HttpOperation .JsonSchemaViewer .sl-markdown-viewer p,\\n.sl-elements .HttpOperation__Parameters .sl-markdown-viewer p,\\n.sl-elements .Model .JsonSchemaViewer .sl-markdown-viewer p {\\n    font-size: 12px;\\n    line-height: 1.5em\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext, Suspense, lazy } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactHtmlParser from 'react-html-parser';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TableRow from '@material-ui/core/TableRow';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Utils from 'AppData/Utils';\nimport Configuration from 'Config';\nimport HTMLRender from 'AppComponents/Shared/HTMLRender';\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"ViewReactMD\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    paper: {\n        marginTop: 20,\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n    leftCell: {\n        width: 150,\n    },\n    summaryView: {\n        'wordBreak': 'break-word',\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes,\n        fullScreen,\n        intl,\n        match: {\n            params: { documentId },\n        },\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [code, setCode] = useState('');\n    const [doc, setDoc] = useState(null);\n    const [isFileAvailable, setIsFileAvailable] = useState(true);\n    const restAPI = isAPIProduct ? new APIProduct() : new API();\n    \n    useEffect(() => {\n        const docPromise = restAPI.getDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                const { body } = doc;\n                setDoc(body);\n                if (body.sourceType === 'MARKDOWN' || body.sourceType === 'INLINE') loadContentForDoc();\n\n                if (body.sourceType === 'FILE') {\n                    const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n                    promised_get_content\n                        .then((done) => {\n                            setIsFileAvailable(true);\n                        })\n                        .catch((error) => {\n                            console.error(error);\n                            setIsFileAvailable(false);\n                        });\n                 }\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, [documentId]);\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    const handleDownload = () => {\n        const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n        promised_get_content\n            .then(response => {\n                Utils.forceDownload(response);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(\n                        intl.formatMessage({\n                            id: 'Apis.Details.Documents.View.error.downloading',\n                            defaultMessage: 'Error downloading the file',\n                        }),\n                    );\n                }\n            });\n    };\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    return (\n        doc && (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Link to={listingPath} className={classes.titleLink}>\n                            <Typography variant=\"h5\" component='h2' align=\"left\" className={classes.mainTitle}>\n                                <FormattedMessage id=\"Apis.Details.Documents.View.heading\" defaultMessage=\"Documents\" />\n                            </Typography>\n                        </Link>\n                        <Icon>keyboard_arrow_right</Icon>\n                        <Typography variant=\"h5\" component='h3'>{doc.name}</Typography>\n                    </div>\n                    <Paper className={classes.paper}>\n                        <Table className={classes.table}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className={classes.leftCell}>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.name\"\n                                                defaultMessage=\"Name\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.name}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.summary\"\n                                                defaultMessage=\"Summary\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell className={classes.summaryView}>\n                                        <Typography variant=\"body1\">{doc.summary}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.catogery\"\n                                                defaultMessage=\"Categorized as\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            {doc.type === 'OTHER' ? doc.otherTypeName : doc.type}\n                                        </Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.source\"\n                                                defaultMessage=\"Source Type\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.sourceType}</Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Paper>\n\n                    <Paper className={classes.paper}>\n                        {doc.sourceType === 'MARKDOWN' && (\n                            <Suspense fallback={<CircularProgress />}>\n                                <ReactMarkdown escapeHtml>{code}</ReactMarkdown>\n                            </Suspense>\n                        )}\n                        {doc.sourceType === 'INLINE' && <HTMLRender html={code} />}\n                        {doc.sourceType === 'URL' && (\n                            <a className={classes.displayURL} href={doc.sourceUrl} target=\"_blank\">\n                                {doc.sourceUrl}\n                                <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                            </a>\n                        )}\n                        {doc.sourceType === 'FILE' && (\n                            <Button\n                                variant=\"contained\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={handleDownload}\n                                disabled={!isFileAvailable}\n                            >\n                                <FormattedMessage\n                                    id=\"Apis.Details.Documents.View.btn.download\"\n                                    defaultMessage=\"Download\"\n                                />\n\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                        )}\n                    </Paper>\n                </div>\n            </React.Fragment>\n        )\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\n/* eslint-disable consistent-return */\n/*\n * Copyright (c) 2022, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react'\nimport ReactHtmlParser from 'react-html-parser';\nimport Configuration from 'Config';\n\n/**\n * Render html content.\n * @param {int} props Props passing down from parent components.\n * @returns {JSX} React render output.\n */\nexport default function HTMLRender(props) {\n    const {html} = props;\n    // Extract html parser props from settings.json\n    const { decodeEntities, tagsNotAllowed } = (Configuration.app && \n        Configuration.app.reactHTMLParser) ? Configuration.app.reactHTMLParser : {\n            decodeEntities: true,\n            tagsNotAllowed: [],\n        };\n    /**\n     * Adds two numbers together.\n     * https://www.npmjs.com/package/react-html-parser\n     * @param {node} node node passed from react-html-parser\n     * @param {int} index node index.\n     * @returns {HTMLElement} HTML element to render.\n     */\n    function transform(node, index) {\n        if (node.type === 'tag' && tagsNotAllowed.includes(node.name)) {\n            return null;\n        }\n    }\n    return (\n        <>{ReactHtmlParser(html, { transform, decodeEntities })}</>\n    )\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash.isempty';\nimport MarkdownEditor from './MarkdownEditor';\nimport { FormattedMessage } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"EditContentTextEditor\" */));\n\nfunction EditContent(props) {\n    const [doc, setDoc] = useState(null);\n    const {\n        history: {\n            location: { state, pathname },\n            replace,\n        },\n    } = props;\n    useEffect(() => {\n        // Check if we want to show the add content screen in the case of coming from GoToEdit.jsx with history -> state props\n\n        if (!isEmpty(state)) {\n            const { doc } = state;\n            if (doc) {\n                setDoc(doc);\n            }\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {doc && doc.sourceType === 'MARKDOWN' && (\n                <MarkdownEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n            )}\n            {doc && doc.sourceType === 'INLINE' && (\n                <Suspense\n                    fallback={<Progress />}\n                >\n                    <TextEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n                </Suspense>\n            )}\n        </React.Fragment>\n    );\n}\nexport default withRouter(EditContent);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\nimport Operation from './Operation';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginRight: theme.spacing(1),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n});\n\n/**\n * This class defined for operation List\n */\nclass Operations extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        const { api } = props;\n        const { operations } = api;\n        const operationCopy = [...operations];\n        operationCopy.sort((a, b) => ((a.target + a.verb > b.target + b.verb) ? 1 : -1));\n        this.state = {\n            notFound: false,\n            apiPolicies: [],\n            operations: operationCopy,\n            apiThrottlingPolicy: api.apiThrottlingPolicy,\n            filterKeyWord: '',\n            isSaving: false,\n            sharedScopes: [],\n            apiScopesByName: {},\n            sharedScopesByName: {},\n        };\n\n        this.newApi = new Api();\n        this.handleUpdateList = this.handleUpdateList.bind(this);\n        this.handleApiThrottlePolicy = this.handleApiThrottlePolicy.bind(this);\n        this.updateOperations = this.updateOperations.bind(this);\n        this.handleSaveAndDeployOperations = this.handleSaveAndDeployOperations.bind(this);\n    }\n\n    /**\n     *\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const apiScopesByNameList = {};\n        const promisedResPolicies = Api.policies('api');\n        promisedResPolicies\n            .then((policies) => {\n                this.setState({ apiPolicies: policies.obj.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n\n        for (const scopeObject of api.scopes) {\n            const modifiedScope = {};\n            modifiedScope.scope = scopeObject.scope;\n            modifiedScope.shared = scopeObject.shared;\n            apiScopesByNameList[scopeObject.scope.name] = modifiedScope;\n        }\n        this.setState({ apiScopesByName: apiScopesByNameList });\n        this.getAllSharedScopes();\n    }\n\n    /**\n     *\n     * @param {*} event\n     */\n    setFilterByKeyWord(event) {\n        this.setState({ filterKeyWord: event.target.value.toLowerCase() });\n    }\n\n    /**\n     * @memberof Operations\n     */\n    getAllSharedScopes() {\n        Api.getAllScopes()\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    const sharedScopesList = [];\n                    const sharedScopesByNameList = {};\n                    const shared = true;\n                    for (const scope of response.body.list) {\n                        const modifiedScope = {};\n                        modifiedScope.scope = scope;\n                        modifiedScope.shared = shared;\n                        sharedScopesList.push(modifiedScope);\n                        sharedScopesByNameList[scope.name] = modifiedScope;\n                    }\n                    this.setState({ sharedScopesByName: sharedScopesByNameList });\n                    this.setState({ sharedScopes: sharedScopesList });\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} throttlePolicy\n     * @memberof Operations\n     */\n    handleApiThrottlePolicy(apiThrottlingPolicy) {\n        this.setState({ apiThrottlingPolicy });\n    }\n\n    /**\n     *\n     * @param {*} newOperation\n     */\n    handleUpdateList(newOperation) {\n        const { operations, sharedScopesByName, apiScopesByName } = this.state;\n        const updatedList = operations.map(\n            (operation) => ((operation.target === newOperation.target && operation.verb === newOperation.verb)\n                ? newOperation : operation),\n        );\n\n        for (const selectedScope of newOperation.scopes) {\n            if (selectedScope\n                && !apiScopesByName[selectedScope]\n                && apiScopesByName[selectedScope] !== '') {\n                if (selectedScope in sharedScopesByName) {\n                    apiScopesByName[selectedScope] = sharedScopesByName[selectedScope];\n                }\n            }\n        }\n        this.setState({ apiScopesByName });\n        this.setState({ operations: updatedList });\n    }\n\n    /**\n     *\n     */\n    handleSaveAndDeployOperations() {\n        const { operations, apiThrottlingPolicy, apiScopesByName } = this.state;\n        const { api, history, updateAPI } = this.props;\n        this.setState({ isSaving: true });\n        this.updateApiScopes(operations);\n        const scopes = Object.keys(apiScopesByName).map((key) => { return apiScopesByName[key]; });\n        updateAPI({ operations, apiThrottlingPolicy, scopes }).finally(() => {\n            history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            });\n            this.setState({ isSaving: false });\n        })\n    };\n\n    /**\n     *\n     */\n    updateOperations() {\n        const { operations, apiThrottlingPolicy, apiScopesByName } = this.state;\n        const { updateAPI } = this.props;\n        this.setState({ isSaving: true });\n        this.updateApiScopes(operations);\n        const scopes = Object.keys(apiScopesByName).map((key) => { return apiScopesByName[key]; });\n        updateAPI({ operations, apiThrottlingPolicy, scopes }).finally(() => this.setState({ isSaving: false }));\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    updateApiScopes(apiOperations) {\n        const { apiScopesByName, sharedScopesByName } = this.state;\n        Object.keys(apiScopesByName).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const operation of apiOperations) {\n                // Checking if the scope resides in the operation\n                if (operation.scopes.includes(key)) {\n                    isScopeExistsInOperation = true;\n                    break;\n                }\n            }\n            // Checking if the scope exists in operation and is a shared scope\n            if (!isScopeExistsInOperation && (key in sharedScopesByName)) {\n                delete apiScopesByName[key];\n            }\n        });\n        this.setState({ apiScopesByName });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { api, resourceNotFoundMessage } = this.props;\n        const {\n            operations, apiPolicies, apiThrottlingPolicy, isSaving, filterKeyWord, notFound, sharedScopes,\n        } = this.state;\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFoundMessage} />;\n        }\n        if (!operations && apiPolicies.length === 0) {\n            return <Progress />;\n        }\n        const { classes } = this.props;\n        return (\n            <>\n                <Box pb={3}>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Operations.Operations.title'\n                            defaultMessage='Operations'\n                        />\n                    </Typography>\n                </Box>\n\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <APIRateLimiting\n                            operationRateLimits={apiPolicies}\n                            api={api}\n                            value={apiThrottlingPolicy}\n                            onChange={this.handleApiThrottlePolicy}\n                        />\n                    </Grid>\n                    <Grid item md={2}>\n                        <Box mt={4} pb={2}>\n                            <div className={classes.searchWrapper}>\n                                <TextField\n                                    id='outlined-full-width'\n                                    disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                    label='Operation'\n                                    placeholder='Filter Operations'\n                                    onChange={(e) => this.setFilterByKeyWord(e, api.operations)}\n                                    fullWidth\n                                    variant='outlined'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </div>\n                        </Box>\n                    </Grid>\n                    <Grid item md={12}>\n                        <Table>\n                            <TableRow>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.operation.operationName'\n                                            defaultMessage='Operation'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.OperationType'\n                                            defaultMessage='Operation Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.throttling.policy'\n                                            defaultMessage='Rate Limiting'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.scopes'\n                                            defaultMessage='Scope'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.authType'\n                                            defaultMessage='Security Enabled'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                            {operations.filter(\n                                (operation) => operation.target.toLowerCase().includes(filterKeyWord),\n                            ).map((item) => {\n                                return (\n                                    <Operation\n                                        operation={item}\n                                        handleUpdateList={this.handleUpdateList}\n                                        scopes={api.scopes}\n                                        sharedScopes={sharedScopes}\n                                        isOperationRateLimiting={!apiThrottlingPolicy}\n                                        apiPolicies={apiPolicies}\n                                    />\n                                );\n                            })}\n                        </Table>\n                    </Grid>\n                    <Grid container direction='row' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            {api.isRevision\n                                || isRestricted(['apim:api_create'], api) ? (\n                                    <Button\n                                        disabled\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.save'\n                                            defaultMessage='Save'\n                                        />\n                                    </Button>\n                                ) : (\n                                    <CustomSplitButton\n                                        advertiseInfo={api.advertiseInfo}\n                                        api={api}\n                                        handleSave={this.updateOperations}\n                                        handleSaveAndDeploy={this.handleSaveAndDeployOperations}\n                                        isUpdating={isSaving}\n                                    />\n                                )}\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nOperations.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        operations: PropTypes.arrayOf(PropTypes.shape({})),\n        scopes: PropTypes.arrayOf(PropTypes.string),\n        updateOperations: PropTypes.func,\n        policies: PropTypes.func,\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    resourceNotFoundMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(Operations)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 20,\n    },\n    scopes: {\n        width: 400,\n    },\n    dropDown: {\n        width: theme.spacing(11.25),\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        minWidth: 100,\n    },\n    chipActive: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.active,\n        minWidth: 100,\n        borderRadius: theme.shape.borderRadius,\n    },\n    paper: {\n        padding: 20,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    listItem: {\n        paddingLeft: 0,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    formControl: {\n        paddingRight: 0,\n        marginRight: 0,\n    },\n    resourceRoot: {\n        background: theme.palette.grey['100'],\n        paddingLeft: theme.spacing(),\n        paddingRight: theme.spacing(),\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: theme.spacing(),\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    pathDisplay: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    descriptionWrapper: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n    },\n    scopeSelect: {\n        width: '100%',\n    },\n    descriptionWrapperUp: {\n        paddingBottom: '0 !important',\n    },\n    addParamRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    propsForm: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    deleteLink: {\n        cursor: 'pointer',\n    },\n    row: {\n        '& td': {\n            borderBottom: 'none',\n            verticalAlign: 'bottom',\n            width: '33%',\n            paddingLeft: 0,\n        },\n    },\n});\n\n/**\n *\n */\nclass Operation extends React.Component {\n    /**\n     *\n     * @param {any} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSecurity: false,\n        };\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /**\n     *\n     * @param {*} operationAction event triggered for handle  Scope Change\n     */\n    handleScopeChange(operationAction) {\n        const { operation } = this.props;\n        const { data } = operationAction;\n        const { value } = data || {};\n        const defValue = value[0];\n        const newoperation = {\n            ...operation,\n            scopes: [...operation.scopes],\n        };\n        newoperation.scopes = defValue;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     *\n     * @param {*} e event triggered for handle  policy Change\n     */\n    handlePolicyChange(e) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        newoperation.throttlingPolicy = e.target.value;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @param {*} event event triggered for handle  policy Change\n     */\n    handleChange(event) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        const { checked } = event.target;\n        if (checked) {\n            newoperation.authType = 'Any';\n        } else {\n            newoperation.authType = 'None';\n        }\n        this.setState({\n            isSecurity: checked,\n        });\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            operation, theme, classes, apiPolicies, scopes, isOperationRateLimiting, sharedScopes, intl,\n        } = this.props;\n        const dropdownScopes = [...scopes];\n        const { isSecurity } = this.state;\n        const filteredApiScopes = dropdownScopes.filter((sharedScope) => !sharedScope.shared);\n        let chipColor = theme.custom.operationChipColor\n            ? theme.custom.operationChipColor[operation.verb.toLowerCase()]\n            : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(\n                theme.custom.operationChipColor[operation.verb.toLowerCase()],\n            );\n        }\n        return (\n            <TableRow style={{ borderStyle: 'hidden' }} data-testid={operation.target + '-tbl-row'}>\n                <TableCell>\n                    <Typography variant='body1'>\n                        {operation.target}\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Chip\n                        label={operation.verb}\n                        style={{\n                            backgroundColor: chipColor, color: chipTextColor, height: 20, width: 40, fontSize: 9,\n                        }}\n                        className={classes.chipActive}\n                    />\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={isOperationRateLimiting ? operation.throttlingPolicy : ''}\n                        disabled={(!isOperationRateLimiting || isRestricted(['apim:api_publish', 'apim:api_create']))}\n                        onChange={this.handlePolicyChange}\n                        fieldName='Throttling Policy'\n                    >\n                        {apiPolicies.map((policy) => (\n                            <MenuItem\n                                key={policy.name}\n                                value={policy.name}\n                            >\n                                {policy.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id='operation_scope'\n                        select\n                        SelectProps={{\n                            multiple: true,\n                            renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        }}\n                        fullWidth\n                        label={dropdownScopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                            id: 'Apis.Details.Operations.Operation.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Operations.Operation.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={operation.scopes}\n                        onChange={({ target: { value } }) => this.handleScopeChange({\n                            data: { value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.helperText'\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                        disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                    >\n                        <ListSubheader>\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.select.local'\n                                defaultMessage='API Scopes'\n                            />\n                        </ListSubheader>\n                        {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                            <MenuItem\n                                key={apiScope.scope.name}\n                                value={apiScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operation.scopes.includes(apiScope.scope.name)} color='primary' />\n                                {apiScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.operation.no.api.scope.available'\n                                        defaultMessage='No API scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                        <ListSubheader>\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.select.shared'\n                                defaultMessage='Shared Scopes'\n                            />\n                        </ListSubheader>\n                        {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                            <MenuItem\n                                key={sharedScope.scope.name}\n                                value={sharedScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operation.scopes.includes(sharedScope.scope.name)} color='primary' />\n                                {sharedScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.operation.no.sharedpi.scope.available'\n                                        defaultMessage='No shared scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                    </TextField>\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={(() => {\n                            if (operation.authType === 'None') {\n                                return false;\n                            }\n                            return true;\n                        })()}\n                        onChange={this.handleChange}\n                        value={isSecurity}\n                        color='primary'\n                        disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                        data-testid={operation.target + '-security-btn'}\n                    />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nOperation.propTypes = {\n    classes: PropTypes.shape({\n    }).isRequired,\n    operation: PropTypes.shape({\n        target: PropTypes.string,\n        verb: PropTypes.string,\n        throttlingPolicy: PropTypes.string,\n        auth: PropTypes.string,\n    }).isRequired,\n    apiPolicies: PropTypes.shape({\n    }).isRequired,\n    isOperationRateLimiting: PropTypes.shape({\n    }).isRequired,\n    scopes: PropTypes.shape({\n    }).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Operation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\n\nimport Resources from './Resources';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIOperations() {\n    return (\n        <>\n            <Box mb={4}>\n                <Typography id='itest-api-details-resources-head' variant='h4' component='h2' gutterBottom>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.APIOperations.title'\n                        defaultMessage='Resources'\n                    />\n                </Typography>\n            </Box>\n            <Resources />\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport LockIcon from '@material-ui/icons//Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { FormattedMessage } from 'react-intl';\nimport DescriptionAndSummary from './operationComponents/DescriptionAndSummary';\nimport OperationGovernance from './operationComponents/OperationGovernance';\nimport AWSLambdaSettings from './operationComponents/AWSLambdaSettings';\nimport Parameters from './operationComponents/Parameters';\nimport SOAPToRESTListing from './operationComponents/SOAPToREST/SOAPToRESTListing';\nimport { getOperationScopes } from '../operationUtils';\n\n/**\n *\n * Handle the operation UI\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nfunction Operation(props) {\n    const {\n        operation,\n        operationsDispatcher,\n        highlight,\n        operationRateLimits,\n        api,\n        disableDelete,\n        disableUpdate,\n        onMarkAsDelete,\n        markAsDelete,\n        hideParameters,\n        spec,\n        resourcePolicy,\n        resourcePoliciesDispatcher,\n        target,\n        verb,\n        arns,\n        resolvedSpec,\n        sharedScopes,\n        setFocusOperationLevel,\n        expandedResource,\n        setExpandedResource,\n    } = props;\n    const useStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb];\n        return {\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n            paperStyles: {\n                border: `1px solid ${backgroundColor}`,\n                borderBottom: '',\n            },\n            customDivider: {\n                backgroundColor,\n            },\n            linearProgress: {\n                height: '2px',\n            },\n            highlightSelected: {\n                backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n            },\n            contentNoMargin: {\n                margin: theme.spacing(0),\n            },\n            overlayUnmarkDelete: {\n                position: 'absolute',\n                zIndex: theme.zIndex.operationDeleteUndo,\n                right: '10%',\n            },\n            targetText: {\n                maxWidth: 180,\n                margin: '0px 20px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                textOverflow: 'ellipsis',\n                display: 'inline-block',\n            },\n            title: {\n                display: 'inline',\n                margin: `0 ${theme.spacing(5)}px`,\n            },\n        };\n    });\n    const apiOperation = api.operations[target] && api.operations[target][verb.toUpperCase()];\n    const isUsedInAPIProduct = apiOperation && Array.isArray(\n        apiOperation.usedProductIds,\n    ) && apiOperation.usedProductIds.length;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function toggleDelete(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        setExpandedResource(false);\n        onMarkAsDelete({ verb, target }, !markAsDelete);\n    }\n\n    const handleExpansion = (panel) => (event, isExpanded) => {\n        setExpandedResource(isExpanded ? panel : false);\n    };\n\n    const classes = useStyles();\n    return (\n        <>\n            {markAsDelete && (\n                <Box className={classes.overlayUnmarkDelete}>\n                    <Tooltip title='Marked for delete'>\n                        <Button onClick={toggleDelete} variant='outlined' style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.Operation.undo.delete'\n                                defaultMessage='Undo Delete'\n                            />\n                        </Button>\n                    </Tooltip>\n                </Box>\n            )}\n            <ExpansionPanel\n                expanded={expandedResource === verb + target}\n                onChange={handleExpansion(verb + target)}\n                disabled={markAsDelete}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={highlight ? classes.highlightSelected : ''}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    id={verb + target}\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={4} style={{ display: 'flex', alignItems: 'center' }}>\n                            <Badge\n                                invisible={!operation['x-wso2-new']}\n                                color='error'\n                                variant='dot'\n                                style={{ display: 'inline-block' }}\n                            >\n                                <Button\n                                    disableFocusRipple\n                                    variant='contained'\n                                    aria-label={'HTTP verb ' + verb}\n                                    size='small'\n                                    className={classes.customButton}\n                                >\n                                    {verb}\n                                </Button>\n                            </Badge>\n                            <Typography\n                                display='inline-block'\n                                variant='h6'\n                                component='div'\n                                gutterBottom\n                                className={classes.targetText}\n                                title={target}\n                            >\n                                {target}\n                                {(operation.summary && operation.summary !== '') && (\n                                    <Typography\n                                        display='inline-block'\n                                        style={{ margin: '0px 30px' }}\n                                        variant='caption'\n                                        gutterBottom\n                                    >\n                                        {operation.summary}\n                                    </Typography>\n                                )}\n                            </Typography>\n                        </Grid>\n                        {(isUsedInAPIProduct) ? (\n                            <Grid item md={3}>\n                                <Box display='flex' justifyContent='center'>\n                                    <ReportProblemOutlinedIcon fontSize='small' />\n                                    <Box display='flex' ml={1} mt={1 / 4} fontSize='caption.fontSize'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.Operation.this.operation.'\n                                            + 'used.in.products'}\n                                            defaultMessage={'This operation is used in {isUsedInAPIProduct} API '\n                                            + 'product(s)'}\n                                            values={{ isUsedInAPIProduct }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        ) : (\n                            <Grid item md={3} />\n                        )}\n                        <Grid item md={4}>\n                            <Typography\n                                display='inline'\n                                style={{ margin: '0px 30px' }}\n                                variant='caption'\n                                gutterBottom\n                            >\n                                <b>{ getOperationScopes(operation, spec).length !== 0 && 'Scope : ' }</b>\n                                { getOperationScopes(operation, spec).join(', ') }\n                            </Typography>\n                        </Grid>\n                        <Grid item md={1} justify='flex-end' alignItems='center' container>\n                            {!(disableDelete || markAsDelete) && (\n                                <Tooltip\n                                    title={\n                                        isUsedInAPIProduct\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.Operation.cannot.delete'\n                                                    + '.when.used.in.api.products'}\n                                                    defaultMessage='Cannot delete operation when used in an API product'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.components.Operation.Delete'\n                                                    defaultMessage='Delete'\n                                                />\n                                            )\n                                    }\n                                >\n                                    <div>\n                                        <IconButton\n                                            disabled={Boolean(isUsedInAPIProduct) || disableUpdate}\n                                            onClick={toggleDelete}\n                                            aria-label='delete operation'\n                                        >\n                                            <DeleteIcon fontSize='small' />\n                                        </IconButton>\n                                    </div>\n                                </Tooltip>\n                            )}\n                            <Tooltip\n                                title={\n                                    (operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none')\n                                        ? (\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.Operation.disable.security'\n                                                    + '.when.used.in.api.products'}\n                                                defaultMessage='Security enabled'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Resources.components.enabled.security'\n                                                defaultMessage='No security'\n                                            />\n                                        )\n                                }\n                                aria-label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Resources.components.Operation.security.operation'\n                                        defaultMessage='Security '\n                                    />\n                                )}\n                            >\n                                <IconButton\n                                    aria-label='Security'\n                                >\n                                    {(operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none')\n                                        ? <LockIcon fontSize='small' />\n                                        : <LockOpenIcon fontSize='small' />}\n                                </IconButton>\n                            </Tooltip>\n\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <ExpansionPanelDetails>\n                    <Grid spacing={2} container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <DescriptionAndSummary\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            disableUpdate={disableUpdate}\n                            target={target}\n                            verb={verb}\n                        />\n                        <OperationGovernance\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            operationRateLimits={operationRateLimits}\n                            api={api}\n                            disableUpdate={disableUpdate}\n                            spec={spec}\n                            target={target}\n                            verb={verb}\n                            sharedScopes={sharedScopes}\n                            setFocusOperationLevel={setFocusOperationLevel}\n                        />\n                        {!hideParameters && (\n                            <Parameters\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                api={api}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                                resolvedSpec={resolvedSpec}\n                            />\n                        )}\n                        {resourcePolicy && (\n                            <SOAPToRESTListing\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                resourcePolicy={resourcePolicy}\n                                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                            />\n                        )}\n                        {\n                            api.endpointConfig\n                            && api.endpointConfig.endpoint_type\n                            && api.endpointConfig.endpoint_type === 'awslambda'\n                            && (\n                                <AWSLambdaSettings\n                                    operation={operation}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                    arns={arns}\n                                />\n                            )\n                        }\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\nOperation.defaultProps = {\n    highlight: false,\n    disableUpdate: false,\n    hideParameters: false,\n    disableDelete: false,\n    onMarkAsDelete: () => {},\n    markAsDelete: false,\n    operationRateLimits: [], // Response body.list from apis policies for `api` throttling policies type\n};\nOperation.propTypes = {\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})), resourcePolicies: PropTypes.shape({}) })\n        .isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    onMarkAsDelete: PropTypes.func,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    markAsDelete: PropTypes.bool,\n    disableDelete: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    hideParameters: PropTypes.bool,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({\n        'x-wso2-new': PropTypes.bool,\n        summary: PropTypes.string,\n    }).isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    highlight: PropTypes.bool,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    arns: PropTypes.shape([]).isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    expandedResource: PropTypes.string.isRequired,\n    setExpandedResource: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Operation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n *\n * Renders the operation summary and description sections\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DescriptionAndSummary(props) {\n    const {\n        operation, operationsDispatcher, disableUpdate, target, verb,\n    } = props;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Summary\n                    {' '}\n                    {'&'}\n                    {' '}\n                    Description\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    margin='dense'\n                    fullWidth\n                    label='Description'\n                    multiline\n                    disabled={disableUpdate}\n                    rows='4'\n                    value={operation.description}\n                    variant='outlined'\n                    data-testid={'description-' + verb + target}\n                    onChange={\n                        ({ target: { value } }) => operationsDispatcher(\n                            { action: 'description', data: { target, verb, value } },\n                        )\n                    }\n                />\n            </Grid>\n            <Grid item md={5}>\n                <TextField\n                    label='Summary'\n                    margin='dense'\n                    variant='outlined'\n                    fullWidth\n                    disabled={disableUpdate}\n                    multiline\n                    rows='4'\n                    value={operation.summary}\n                    data-testid={'summary-' + verb + target}\n                    onChange={({ target: { value } }) => operationsDispatcher(\n                        { action: 'summary', data: { target, verb, value } },\n                    )}\n                />\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nDescriptionAndSummary.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n        spec: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nDescriptionAndSummary.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Link } from 'react-router-dom';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { getOperationScopes } from '../../operationUtils';\n\n/**\n *\n * Renders the security , throttling policies and scopes selection section in the operation collapsed page\n * @export\n * @param {*} props\n * @returns\n */\nexport default function OperationGovernance(props) {\n    const {\n        operation, operationsDispatcher, operationRateLimits, api, disableUpdate, spec, target, verb, sharedScopes,\n        setFocusOperationLevel,\n    } = props;\n    const operationScopes = getOperationScopes(operation, spec);\n    const isOperationRateLimiting = api.apiThrottlingPolicy === null;\n    const filteredApiScopes = api.scopes.filter((sharedScope) => !sharedScope.shared);\n    const intl = useIntl();\n    const scrollToTop = () => {\n        setFocusOperationLevel(true);\n        document.querySelector('#react-root').scrollTop = 195;\n    };\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography gutterBottom variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.OperationGovernance.title'\n                        defaultMessage='Operation Governance'\n                    />\n                    <Typography style={{ marginLeft: '10px' }} gutterBottom variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.OperationGovernance.subTitle'\n                            defaultMessage='(Security, Rate Limiting & Scopes)'\n                        />\n                    </Typography>\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                <FormControl disabled={disableUpdate} component='fieldset'>\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                data-testid={'security-' + verb + target}\n                                checked={operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none'}\n                                onChange={({ target: { checked } }) => operationsDispatcher({\n                                    action: 'authType',\n                                    data: { target, verb, value: checked },\n                                })}\n                                size='small'\n                                color='primary'\n                            />\n                        )}\n                        label='Security'\n                        labelPlacement='start'\n                    />\n                </FormControl>\n                <sup style={{ marginLeft: '10px' }}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.OperationGovernance.Security'\n                                + '.tooltip'}\n                                defaultMessage='This will enable/disable Application Level securities defined in the\n                                Runtime Configurations page.'\n                            />\n                        )}\n                        fontSize='small'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </sup>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <Box display='flex' flexDirection='row' alignItems='flex-start'>\n                    <TextField\n                        select\n                        fullWidth={!isOperationRateLimiting}\n                        SelectProps={{\n                            autoWidth: true,\n                            IconComponent: isOperationRateLimiting ? ArrowDropDownIcon : 'span',\n                        }}\n                        disabled={disableUpdate || !isOperationRateLimiting}\n                        label={\n                            isOperationRateLimiting\n                                ? intl.formatMessage({\n                                    id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy',\n                                    defaultMessage: 'Rate limiting policy',\n                                })\n                                : (\n                                    <div>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.governed.by'}\n                                            defaultMessage='Rate limiting is governed by '\n                                        />\n                                        <Box\n                                            fontWeight='fontWeightBold'\n                                            display='inline'\n                                            color='primary.main'\n                                            cursor='pointer'\n                                        >\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.API.level'}\n                                                defaultMessage='API Level'\n                                            />\n                                        </Box>\n                                    </div>\n                                )\n                        }\n                        value={\n                            isOperationRateLimiting\n                            && operation['x-throttling-tier']\n                                ? operation['x-throttling-tier']\n                                : ''\n                        }\n                        onChange={({ target: { value } }) => operationsDispatcher({\n                            action: 'throttlingPolicy',\n                            data: { target, verb, value },\n                        })}\n                        helperText={\n                            isOperationRateLimiting\n                                ? intl.formatMessage({\n                                    id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy.select',\n                                    defaultMessage: 'Select a rate limit policy for this operation',\n                                })\n                                : (\n                                    <span>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section1'}\n                                            defaultMessage='Use '\n                                        />\n                                        <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section2'}\n                                                defaultMessage='Operation Level'\n                                            />\n                                        </Box>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section3'}\n                                            defaultMessage=' rate limiting to '\n                                        />\n                                        <b>\n                                            <FormattedMessage\n                                                id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section4'}\n                                                defaultMessage='enable'\n                                            />\n                                        </b>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section5'}\n                                            defaultMessage=' rate limiting per operation'\n                                        />\n                                    </span>\n                                )\n                        }\n                        margin='dense'\n                        variant='outlined'\n                        id={verb + target + '-operation_throttling_policy'}\n                    >\n                        {operationRateLimits.map((rateLimit) => (\n                            <MenuItem\n                                key={rateLimit.name}\n                                value={rateLimit.name}\n                                id={verb + target + '-operation_throttling_policy-' + rateLimit.name}\n                            >\n                                {rateLimit.displayName}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    {!isOperationRateLimiting && (\n                        <Button onClick={scrollToTop}>\n                            <FormattedMessage\n                                id={\n                                    'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.rate.limiting.button.text'\n                                }\n                                defaultMessage='Change rate limiting level'\n                            />\n                            <ExpandLessIcon />\n                        </Button>\n                    )}\n                </Box>\n            </Grid>\n            <Grid item md={6} />\n            <Grid item md={1} />\n            <Grid item md={5}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? (\n                    <TextField\n                        select\n                        SelectProps={{\n                            multiple: true,\n                            renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        }}\n                        disabled={disableUpdate}\n                        fullWidth\n                        label={api.scopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={operationScopes}\n                        onChange={({ target: { value } }) => operationsDispatcher({\n                            action: 'scopes',\n                            data: { target, verb, value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.helperText'}\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                        id={verb + target + '-operation-scope-select'}\n                    >\n                        <ListSubheader>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.local'}\n                                defaultMessage='API Scopes'\n                            />\n                        </ListSubheader>\n                        {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                            <MenuItem\n                                id={verb + target + '-operation-scope-' + apiScope.scope.name}\n                                key={apiScope.scope.name}\n                                value={apiScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operationScopes.includes(apiScope.scope.name)} color='primary' />\n                                {apiScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.operation.no.api.scope.available'}\n                                        defaultMessage='No API scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                        <ListSubheader>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.shared'}\n                                defaultMessage='Shared Scopes'\n                            />\n                        </ListSubheader>\n                        {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                            <MenuItem\n                                key={sharedScope.scope.name}\n                                value={sharedScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operationScopes.includes(sharedScope.scope.name)} color='primary' />\n                                {sharedScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.operation.no.sharedpi.scope.available'}\n                                        defaultMessage='No shared scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                    </TextField>\n                ) : null }\n            </Grid>\n            <Grid item md={5} style={{ marginTop: '14px' }}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? !disableUpdate && (\n                    <Link to={`/apis/${api.id}/scopes/create`} target='_blank'>\n                        <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.create.new.scope'}\n                                defaultMessage='Create New Scope'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                ) : null}\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nOperationGovernance.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n    }).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})) }),\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nOperationGovernance.defaultProps = {\n    operationRateLimits: [],\n    api: { scopes: [] },\n    sharedScopes: [],\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * The renderInput function.\n * @param {any} inputProps The props that are being passed to the function.\n * @returns {any} HTML view of the inputs.\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    classes: PropTypes.shape({}).isRequired,\n    // eslint-disable-next-line react/forbid-prop-types, react/require-default-props\n    InputProps: PropTypes.shape({}),\n};\n\n/**\n * The renderSuggestion function.\n * @param {any} suggestionProps The props that are being passed to the function.\n * @returns {any} HTML view of the suggestions.\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, selectedItem,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    itemProps: PropTypes.shape({}).isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape('').isRequired,\n};\n\n/**\n * The getSuggestions function.\n * @param {any} value The value that are being passed to the function.\n * @param {any} arns The arns that are being passed to the function.\n * @returns {any} suggestion values.\n */\nfunction getSuggestions(value, { showEmpty = false } = {}, arns) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    return inputLength === 0 && !showEmpty\n        ? []\n        : arns.filter((suggestion) => {\n            const keep = count < 5 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1000,\n        marginTop: theme.spacing(-2),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n}));\n\n/**\n * The autocomplete component. This component lists the ARNs of a specific user role.\n * @returns {any} HTML view of the autocomplete component.\n * @param {any} props The input parameters.\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const {\n        operation,\n        operationsDispatcher,\n        target,\n        verb,\n        arns,\n    } = props;\n    const [timeout, setTimeout] = useState(50000);\n    useEffect(() => {\n        if (operation['x-amzn-resource-timeout']) {\n            setTimeout(operation['x-amzn-resource-timeout']);\n        }\n    }, []);\n    const handleTimeoutMin = (event) => {\n        if (event.target.value !== '') {\n            const minutes = parseInt(event.target.value, 10);\n            const seconds = (timeout / 1000) % 60;\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    const handleTimeoutSec = (event) => {\n        if (event.target.value !== '') {\n            const minutes = Math.floor((timeout / 1000) / 60);\n            const seconds = parseInt(event.target.value, 10);\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    return (\n        <>\n            <Grid item md={12} xs={12}>\n                <Typography variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.AWSLambdaSettings.Title'\n                        defaultMessage='AWS Lambda Settings'\n                    />\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={7} xs={7}>\n                <Downshift\n                    id='downshift-options'\n                    onSelect={(changes) => {\n                        if (changes !== null) {\n                            operationsDispatcher({\n                                action: 'amznResourceName',\n                                data: { target, verb, value: changes },\n                            });\n                        }\n                    }}\n                >\n                    {({\n                        clearSelection,\n                        getInputProps,\n                        getItemProps,\n                        getLabelProps,\n                        getMenuProps,\n                        highlightedIndex,\n                        inputValue,\n                        isOpen,\n                        openMenu,\n                        selectedItem,\n                    }) => {\n                        const {\n                            onBlur, onChange, onFocus, ...inputProps\n                        } = getInputProps({\n                            onChange: (event) => {\n                                operationsDispatcher({\n                                    action: 'amznResourceName',\n                                    data: { target, verb, value: event.target.value },\n                                });\n                                if (event.target.value === '') {\n                                    clearSelection();\n                                }\n                            },\n                            onBlur: () => {\n                                clearSelection();\n                            },\n                            value: operation['x-amzn-resource-name'],\n                            onFocus: openMenu,\n                            placeholder: 'Select or type an ARN',\n                        });\n                        return (\n                            <div className={classes.container}>\n                                {renderInput({\n                                    variant: 'outlined',\n                                    required: true,\n                                    fullWidth: true,\n                                    classes,\n                                    InputLabelProps: getLabelProps({ shrink: true }),\n                                    label: 'Amazon Resource Name (ARN)',\n                                    helperText: 'Select or type an ARN',\n                                    InputProps: {\n                                        onBlur,\n                                        onChange,\n                                        onFocus,\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <Icon className={classes.helpIcon}>keyboard_arrow_down</Icon>\n                                            </InputAdornment>\n                                        ),\n                                    },\n                                    inputProps,\n                                })}\n\n                                <div {...getMenuProps()}>\n                                    {isOpen ? (\n                                        <Paper className={classes.paper} square>\n                                            {getSuggestions(inputValue, { showEmpty: true }, arns)\n                                                .map((suggestion, index) => renderSuggestion({\n                                                    suggestion,\n                                                    index,\n                                                    itemProps: getItemProps({ item: suggestion }),\n                                                    highlightedIndex,\n                                                    selectedItem,\n                                                }))}\n                                        </Paper>\n                                    ) : null}\n                                </div>\n                            </div>\n                        );\n                    }}\n                </Downshift>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-min'\n                    label='min'\n                    variant='outlined'\n                    helperText='Set Timeout'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 15,\n                        step: 1,\n                    }}\n                    value={Math.floor((timeout / 1000) / 60)}\n                    onChange={(event) => {\n                        handleTimeoutMin(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-sec'\n                    label='sec'\n                    variant='outlined'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 59,\n                        step: 1,\n                    }}\n                    value={(timeout / 1000) % 60}\n                    onChange={(event) => {\n                        handleTimeoutSec(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1} />\n        </>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    operation: PropTypes.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    arns: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { getVersion } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport AddParameter from './AddParameter';\nimport ListParameters from './ListParameters';\n\n/**\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Parameters(props) {\n    const {\n        operation, spec, target, verb, operationsDispatcher, disableUpdate, resolvedSpec,\n    } = props;\n    const specVersion = getVersion(spec);\n    const haveParameters = (operation.parameters && operation.parameters.length !== 0) || operation.requestBody;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Parameters\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                {!disableUpdate && (\n                    <AddParameter\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        specVersion={specVersion}\n                    />\n                )}\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={11}>\n                {haveParameters && (\n                    <ListParameters\n                        disableUpdate={disableUpdate}\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        spec={spec}\n                        specVersion={specVersion}\n                        resolvedSpec={resolvedSpec}\n                    />\n                )}\n            </Grid>\n        </>\n    );\n}\n\nParameters.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n\nParameters.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n    iff,\n    getParameter,\n    getParameterTypes,\n    getSupportedDataTypes,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n    },\n    parameterContainer: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    checkBox: {\n        color: '#7c7c7c',\n    },\n}));\n\n/**\n *\n * Add resource parameter according to swagger spec\n * A unique parameter is defined by a combination of a name and param type and schema or content is required\n * OpenAPI 3.0 spec: https://swagger.io/specification/#parameterObject\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddParameter(props) {\n    const {\n        operation, operationsDispatcher, target, verb, specVersion, intl,\n    } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const initParameter = getParameter(specVersion);\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newParameterReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'in':\n            case 'name':\n            case 'required':\n                return { ...state, [type]: value };\n            case 'type': {\n                if (specVersion === '2.0') {\n                    return { ...state, [type]: value };\n                } else {\n                    return { ...state, schema: { [type]: value } };\n                }\n            }\n            case 'clear':\n                return initParameter;\n            default:\n                return state;\n        }\n    }\n    const [newParameter, newParameterDispatcher] = useReducer(newParameterReducer, initParameter);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    let isParameterExist = false;\n    const isParameterExistValue = operation.parameters && operation.parameters.map(\n        (operations) => (operations.in === newParameter.in && operations.name === newParameter.name),\n    );\n\n    if (isParameterExistValue && isParameterExistValue.includes(true)) {\n        isParameterExist = true;\n    } else {\n        isParameterExist = false;\n    }\n\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newParameterDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addNewParameter() {\n        if (newParameter.in === 'body') {\n            operationsDispatcher(specVersion === '2.0'\n                ? {\n                    action: 'parameter',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            name: newParameter.name,\n                            description: '',\n                            required: newParameter.required,\n                            in: newParameter.in,\n                            schema: {\n                                type: newParameter.type,\n                            },\n                        },\n                    },\n                }\n                : {\n                    action: 'requestBody',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            description: '',\n                            required: newParameter.required,\n                            content: { [newParameter.name]: { schema: { type: 'object' } } },\n                        },\n                    },\n                });\n        } else {\n            operationsDispatcher({ action: 'parameter', data: { target, verb, value: newParameter } });\n        }\n        clearInputs();\n    }\n\n    function isDisabled() {\n        if (specVersion === '2.0') {\n            return (!newParameter.name || !newParameter.type || !newParameter.in || isParameterExist);\n        }\n        return (!newParameter.name || !newParameter.schema.type || !newParameter.in || isParameterExist);\n    }\n\n    function getParameterNameHelperText(paramIn) {\n        if (isParameterExist) {\n            return intl.formatMessage({\n                id: 'Apis.Details.Resources.components.operationComponents.AddParameter.parameter.name.already.exists',\n                defaultMessage: 'Parameter name already exists',\n            });\n        }\n        if (paramIn === 'body') {\n            if (specVersion !== '2.0') {\n                return intl.formatMessage({\n                    id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.content.type',\n                    defaultMessage: 'Enter Content Type',\n                });\n            }\n        }\n        return intl.formatMessage({\n            id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.parameter.name',\n            defaultMessage: 'Enter Parameter Name',\n        });\n    }\n\n    return (\n        <Grid container direction='row' spacing={1} className={classes.parameterContainer}>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor={'param-' + verb + target} error={isParameterExist}>\n                        Parameter Type\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.in}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'in',\n                        }}\n                        id={'param-' + verb + target}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getParameterTypes(specVersion).map((paramType) => {\n                            if ((paramType === 'body' || paramType === 'formData')\n                                && !['post', 'put', 'patch'].includes(verb)) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem value={paramType} dense id={'param-' + verb + target + '/' + paramType}>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    {isParameterExist\n                        ? (\n                            <FormHelperText error>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.parameter.name.exists'\n                                    defaultMessage='Parameter type already exists'\n                                />\n                            </FormHelperText>\n                        )\n                        : (\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.select.parameter.type'\n                                    defaultMessage='Select the parameter type'\n                                />\n                            </FormHelperText>\n                        )}\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <TextField\n                    id={'name-' + verb + target}\n                    label={newParameter.in === 'body'\n                        ? iff(specVersion === '2.0',\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />,\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.content.type'\n                                defaultMessage='Content Type'\n                            />)\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />\n                        )}\n                    name='name'\n                    value={newParameter.name}\n                    onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                    helperText={getParameterNameHelperText(newParameter.in)}\n                    margin='dense'\n                    variant='outlined'\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            // key code 13 is for `Enter` key\n                            event.preventDefault(); // To prevent form submissions\n                            addNewParameter();\n                        }\n                    }}\n                    error={isParameterExist}\n                />\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor={'data-' + verb + target} error={isParameterExist}>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.data.type'\n                            defaultMessage='Data Type'\n                        />\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.schema !== undefined ? newParameter.schema.type : newParameter.type}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'type',\n                        }}\n                        id={'data-' + verb + target}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getSupportedDataTypes(specVersion, newParameter.in).map((paramType) => {\n                            return (\n                                <MenuItem value={paramType} dense id={'data-' + verb + target + '/' + paramType}>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    <FormHelperText>Select the data type</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormControlLabel\n                        className={classes.checkBox}\n                        control={(\n                            <Checkbox\n                                data-testid={'required-' + verb + target}\n                                checked={newParameter.required}\n                                onChange={\n                                    ({\n                                        target: { name, value },\n                                    }) => newParameterDispatcher({ type: name, value: !value })\n                                }\n                                value={newParameter.required}\n                                inputProps={{\n                                    name: 'required',\n                                }}\n                            />\n                        )}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.required'\n                                defaultMessage='Required'\n                            />\n                        )}\n                    />\n                    <FormHelperText>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.required.helper.text'\n                            defaultMessage='Check whether the parameter is required.'\n                        />\n                    </FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.AddParameter.add.tooltip'\n                            defaultMessage='Add new parameter'\n                        />\n                    )}\n                    placement='bottom'\n                    interactive\n                >\n                    <span>\n                        <Button\n                            style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                            disabled={isDisabled()}\n                            size='small'\n                            variant='outlined'\n                            aria-label='Add Parameter'\n                            color='primary'\n                            onClick={addNewParameter}\n                            id = {`param-${verb}${target}-add-btn`}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.AddParameter.add'\n                                defaultMessage='Add'\n                            />\n                        </Button>\n                    </span>\n                </Tooltip>\n                <sup>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddParameter.clear.inputs.tooltip'\n                                defaultMessage='Clear inputs'\n                            />\n                        )}\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <IconButton onClick={clearInputs} size='small' aria-label='clear-inputs'>\n                                <ClearIcon />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </sup>\n            </Grid>\n        </Grid>\n    );\n}\n\nAddParameter.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    specVersion: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default React.memo(injectIntl(AddParameter));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { FormattedMessage } from 'react-intl';\nimport { isRef } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport RequestBody from 'AppComponents/Apis/Details/Resources/components/operationComponents/RequestBody';\nimport Banner from 'AppComponents/Shared/Banner';\nimport EditParameter from './EditParameter';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ListParameters(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, hideParameterEdit, specVersion, resolvedSpec,\n    } = props;\n    const classes = useStyles();\n    const [editingParameter, setEditingParameter] = useState(null);\n    if (!resolvedSpec) {\n        return (\n            <Banner\n                disableActions\n                dense\n                type='error'\n                message={(\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.spec.error'\n                        defaultMessage='Error in resolving the definition!'\n                    />\n                )}\n            />\n        );\n    }\n    return (\n        <>\n            {editingParameter !== null && (\n                <EditParameter\n                    operationsDispatcher={operationsDispatcher}\n                    target={target}\n                    verb={verb}\n                    editingParameter={editingParameter}\n                    setEditingParameter={setEditingParameter}\n                    version={specVersion}\n                />\n            )}\n            <Table className={classes.table} aria-label='parameters list'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.type'\n                                defaultMessage='Parameter Type'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.name'\n                                defaultMessage='Name/Content Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.data.type'\n                                defaultMessage='Data Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.required'\n                                defaultMessage='Required'\n                            />\n                        </TableCell>\n                        {!disableUpdate && (\n                            <TableCell align='left'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.ListParameter.actions'\n                                    defaultMessage='Actions'\n                                />\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {operation.parameters\n                        && operation.parameters.map((parameter, index) => {\n                            const isRefParam = isRef(parameter);\n                            const paramCopy = isRefParam\n                                ? resolvedSpec.paths[target][verb].parameters[index] : parameter;\n                            return (\n                                <TableRow\n                                    key={paramCopy.name}\n                                    id={`param-list-${paramCopy.in}-${paramCopy.name}-${paramCopy.schema\n                                        ? paramCopy.schema.type : paramCopy.type}`}>\n                                    <TableCell align='left'>{capitalizeFirstLetter(paramCopy.in)}</TableCell>\n                                    <TableCell align='left'>{paramCopy.name}</TableCell>\n                                    <TableCell align='left'>\n                                        {capitalizeFirstLetter(paramCopy.schema\n                                            ? paramCopy.schema.type : paramCopy.type)}\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {paramCopy.required\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                        + '.ListParameter.yes'}\n                                                    defaultMessage='Yes'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                        + '.ListParameter.no'}\n                                                    defaultMessage='No'\n                                                />\n                                            )}\n                                    </TableCell>\n                                    {!disableUpdate && (\n                                        <TableCell align='left'>\n                                            {!isRefParam && (\n                                                <Tooltip title={(\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                                            + 'ListParameter.edit'}\n                                                        defaultMessage='Edit'\n                                                    />\n                                                )}\n                                                >\n                                                    <IconButton\n                                                        onClick={() => setEditingParameter(parameter)}\n                                                        fontSize='small'\n                                                    >\n                                                        <EditIcon fontSize='small' />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )}\n                                            <Tooltip title={(\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                        + '.ListParameter.delete'}\n                                                    defaultMessage='Delete'\n                                                />\n                                            )}\n                                            >\n                                                <IconButton\n                                                    disabled={disableUpdate}\n                                                    onClick={() => operationsDispatcher({\n                                                        action: 'deleteParameter',\n                                                        data: { target, verb, value: paramCopy },\n                                                    })}\n                                                    fontSize='small'\n                                                >\n                                                    <DeleteIcon fontSize='small' />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    )}\n                                </TableRow>\n                            );\n                        })}\n                    {operation.requestBody && (isRef(operation.requestBody)\n                        ? Object.entries(resolvedSpec.paths[target][verb].requestBody.content).map(\n                            ([contentType, content]) => {\n                                return (\n                                    <RequestBody\n                                        contentType={contentType}\n                                        content={content}\n                                        operation={operation}\n                                        disableUpdate={disableUpdate}\n                                        hideParameterEdit={hideParameterEdit}\n                                        operationsDispatcher={operationsDispatcher}\n                                        target={target}\n                                        verb={verb}\n                                    />\n                                );\n                            },\n                        ) : Object.entries(operation.requestBody.content).map(([contentType, content]) => {\n                            return (\n                                <RequestBody\n                                    contentType={contentType}\n                                    content={content}\n                                    operation={operation}\n                                    disableUpdate={disableUpdate}\n                                    hideParameterEdit={hideParameterEdit}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                />\n                            );\n                        }))}\n                </TableBody>\n            </Table>\n        </>\n    );\n}\n\nListParameters.defaultProps = {\n    hideParameterEdit: false,\n    disableUpdate: false,\n};\nListParameters.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    hideParameterEdit: PropTypes.bool,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n    specVersion: PropTypes.string.isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableRow from '@material-ui/core/TableRow';\n\n/**\n * Component to render the Request b\n *\n * */\nfunction RequestBody(props) {\n    const {\n        contentType, content, operation, disableUpdate, hideParameterEdit, operationsDispatcher, target, verb,\n    } = props;\n    return (\n        <TableRow key={contentType}>\n            <TableCell align='left'>\n                <FormattedMessage\n                    id='Apis.Details.Resources.components.operationComponents.ListParameter.body'\n                    defaultMessage='Body'\n                />\n            </TableCell>\n            <TableCell>{contentType}</TableCell>\n            <TableCell align='left'>{content.schema.type}</TableCell>\n            <TableCell align='left'>\n                {operation.requestBody.required\n                    ? (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.yes'}\n                            defaultMessage='Yes'\n                        />\n                    )\n                    : (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.no'}\n                            defaultMessage='No'\n                        />\n                    )}\n            </TableCell>\n            {!disableUpdate && (\n                <TableCell align='left'>\n                    {hideParameterEdit && (\n                        <Tooltip title='Edit'>\n                            <IconButton onClick={() => {}} fontSize='small'>\n                                <EditIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    <Tooltip title={(\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.delete'}\n                            defaultMessage='Delete'\n                        />\n                    )}\n                    >\n                        <IconButton\n                            disabled={disableUpdate}\n                            onClick={() => {\n                                operationsDispatcher({\n                                    action: 'requestBody',\n                                    data: {\n                                        target,\n                                        verb,\n                                        value: {\n                                            description: '',\n                                            required: false,\n                                            content: {},\n                                        },\n                                    },\n                                });\n                            }}\n                            fontSize='small'\n                        >\n                            <DeleteIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>\n            )}\n        </TableRow>\n    );\n}\n\nRequestBody.propTypes = {\n    contentType: PropTypes.string.isRequired,\n    content: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool.isRequired,\n    hideParameterEdit: PropTypes.bool.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nexport default RequestBody;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport {\n    getSupportedDataTypes,\n    getDataFormats,\n    iff,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n    subtleText: {\n        color: theme.palette.grey[400],\n    },\n}));\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function EditParameter(props) {\n    const {\n        operationsDispatcher, target, verb, editingParameter, setEditingParameter, version,\n    } = props;\n    /**\n     *\n     *\n     * @param {*} currentParameter\n     * @param {*} paramAction\n     */\n    function parameterActionReducer(currentParameter, paramAction) {\n        const { action, value } = paramAction;\n        const nextParameter = currentParameter.schema\n            ? { ...currentParameter, schema: { ...currentParameter.schema } } : { ...currentParameter };\n        switch (action) {\n            case 'description':\n            case 'required':\n                nextParameter[action] = value;\n                break;\n            case 'type':\n                if (nextParameter.schema) {\n                    nextParameter.schema[action] = value;\n                } else {\n                    nextParameter[action] = value;\n                }\n                break;\n            case 'format':\n                if (nextParameter.schema) {\n                    if (value) {\n                        nextParameter.schema[action] = value;\n                    } else {\n                        delete nextParameter.schema[action];\n                    }\n                } else if (value) {\n                    nextParameter[action] = value;\n                } else {\n                    delete nextParameter[action];\n                }\n                break;\n            default:\n                break;\n        }\n        return nextParameter;\n    }\n    const [parameter, parameterActionDispatcher] = useReducer(parameterActionReducer, editingParameter);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setEditingParameter(null);\n    };\n\n    /**\n     *\n     *\n     */\n    function handelDone() {\n        operationsDispatcher({ action: 'parameter', data: { target, verb, value: parameter } });\n        handleClose();\n    }\n    const isEditing = parameter !== null;\n    if (!isEditing) {\n        return null;\n    }\n    return (\n        <Dialog fullWidth maxWidth='md' open={isEditing} onClose={handleClose} aria-labelledby='edit-parameter'>\n            <DialogTitle disableTypography id='edit-parameter'>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.title'\n                        defaultMessage='Edit'\n                    />\n                    {' '}\n                    <Typography display='inline' variant='subtitle1'>\n                        {capitalizeFirstLetter(parameter.in)}\n                        {' '}\n                        :\n                        {parameter.name}\n                    </Typography>\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' spacing={2} justify='flex-start' alignItems='center'>\n                    <Grid item md={6}>\n                        <TextField\n                            value={capitalizeFirstLetter(parameter.in)}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.type'\n                                    defaultMessage='Parameter Type'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <TextField\n                            value={parameter.name}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.name'\n                                    defaultMessage='Name'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={12}>\n                        <TextField\n                            value={parameter.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.description'\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                parameterActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            required\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                        >\n                            <InputLabel required id='edit-parameter-type'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.data.type'\n                                    defaultMessage='Data Type'\n                                />\n                            </InputLabel>\n\n                            <Select\n                                value={parameter.schema ? parameter.schema.type : parameter.type}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'type',\n                                    id: 'edit-parameter-type',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getSupportedDataTypes(version, parameter.in).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'select.schema.data.type'}\n                                    defaultMessage='Select the Schema Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                            disabled={parameter.schema\n                                ? iff(\n                                    parameter.schema.type === 'boolean' || parameter.schema.type === 'object',\n                                    true,\n                                    false,\n                                )\n                                : iff(\n                                    parameter.type === 'boolean' || parameter.type === 'object',\n                                    true,\n                                    false,\n                                )}\n                        >\n                            <InputLabel id='edit-parameter-format'>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'data.format'}\n                                    defaultMessage='Data Format'\n                                />\n                            </InputLabel>\n                            <Select\n                                value={parameter.schema ? parameter.schema.format : parameter.format}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'format',\n                                    id: 'edit-parameter-format',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                <MenuItem value='' dense className={classes.subtleText}>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                            + 'select.format.of.data.type.none.option'}\n                                        defaultMessage='No Data Type'\n                                    />\n                                </MenuItem>\n                                {getDataFormats(\n                                    parameter.schema ? parameter.schema.type : parameter.type,\n                                ).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'select.format.of.data.type'}\n                                    defaultMessage='Select the Format of Data Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl component='fieldset'>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={parameter.required}\n                                        onChange={(\n                                            { target: { name, checked } },\n                                        ) => parameterActionDispatcher({ action: name, value: checked })}\n                                        value={parameter.required}\n                                        inputProps={{\n                                            name: 'required',\n                                        }}\n                                    />\n                                )}\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                            + 'required'}\n                                        defaultMessage='Required'\n                                    />\n                                )}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid container direction='row' justify='flex-end' alignItems='center'>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'use.done.button.to.persist.changes'}\n                                defaultMessage='Use DONE button in the page to persist changes'\n                            />\n                        </DialogContentText>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button size='small' onClick={handleClose} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.close'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button size='small' onClick={handelDone} variant='contained' color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.done'\n                        defaultMessage='Done'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nEditParameter.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    editingParameter: PropTypes.shape({}).isRequired,\n    setEditingParameter: PropTypes.func.isRequired,\n    version: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, Suspense, lazy, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport PolicyEditor from './PolicyEditor';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"SOAPToRESTMonaco\" */));\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SOAPToRESTListing(props) {\n    const { resourcePolicy, resourcePoliciesDispatcher } = props;\n    const [resourcePolicyIn, setResourcePolicyIn] = useState(resourcePolicy.in);\n    const [resourcePolicyOut, setResourcePolicyOut] = useState(resourcePolicy.out);\n    useEffect(() => {\n        setResourcePolicyIn(resourcePolicy.in);\n        setResourcePolicyOut(resourcePolicy.out);\n    }, [resourcePolicy]);\n    // Get use preference from OS https://material-ui.com/customization/palette/#user-preference\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [openEditor, setOpenEditor] = useState(false);\n    const [selectedTab, setTabIndex] = useState('in');\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: true,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const selectedPolicy = selectedTab === 'in' ? resourcePolicyIn : resourcePolicyOut;\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(50vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n    };\n\n    /**\n     *\n     *\n     * @param {*} content\n     */\n    function setPolicyContent(content) {\n        if (selectedTab === 'in') {\n            setResourcePolicyIn({ ...resourcePolicyIn, content });\n        } else {\n            setResourcePolicyOut({ ...resourcePolicyOut, content });\n        }\n    }\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Transformation Configurations\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Tabs\n                    value={selectedTab}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    onChange={(event, tab) => setTabIndex(tab)}\n                    aria-label='Resource mediation in/out tabs'\n                >\n                    <Tab value='in' label='In' />\n                    <Tab value='out' label='Out' />\n                </Tabs>\n                <Box p={1}>\n                    <Button onClick={() => setOpenEditor(true)} variant='outlined' size='small' color='primary'>\n                        Edit\n                        {' '}\n                        <EditIcon />\n                    </Button>\n                    {!openEditor && (\n                        <Paper elevation={4}>\n                            <Suspense fallback={<CircularProgress disableShrink />}>\n                                <MonacoEditor {...editorProps} />\n                            </Suspense>\n                        </Paper>\n                    )}\n                </Box>\n            </Grid>\n            <PolicyEditor\n                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                setPolicyContent={setPolicyContent}\n                selectedPolicy={selectedPolicy}\n                originalResourcePolicy={resourcePolicy[selectedTab]}\n                direction={selectedTab}\n                prefersDarkMode={prefersDarkMode}\n                onClose={() => setOpenEditor(false)}\n                open={openEditor}\n            />\n        </>\n    );\n}\n\nSOAPToRESTListing.defaultProps = {\n    disableUpdate: false,\n};\nSOAPToRESTListing.propTypes = {\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Suspense, lazy, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Banner from 'AppComponents/Shared/Banner';\nimport CloseConfirmation from './CloseConfirmation';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"PolicyEditorMonaco\" */));\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        // position: 'relative',\n        top: 'auto',\n        bottom: 0,\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Fade in ref={ref} {...props} />;\n});\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function PolicyEditor(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const {\n        open,\n        onClose,\n        prefersDarkMode,\n        originalResourcePolicy,\n        selectedPolicy,\n        setPolicyContent,\n        resourcePoliciesDispatcher,\n        direction,\n    } = props;\n    const [pageError, setPageError] = useState(null);\n    const [openConfirmation, setOpenConfirmation] = useState(false);\n    const [saving, setSaving] = useState(false);\n\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: saving,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(100vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n        onChange: setPolicyContent,\n    };\n\n    /**\n     *\n     *\n     */\n    function confirmAndClose() {\n        // No need to confirm if user have not done any changes\n        if (selectedPolicy.content !== originalResourcePolicy.content) {\n            setOpenConfirmation(true);\n        } else {\n            onClose();\n        }\n    }\n    /**\n     *\n     *\n     */\n    function save() {\n        setSaving(true);\n        api.updateResourcePolicy(selectedPolicy)\n            .then((response) => {\n                Alert.success('Resource policy updated successfully');\n                resourcePoliciesDispatcher({ action: 'update', data: { value: response.body, direction } });\n                onClose();\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = error.message || 'Something went wrong while updating resource policy!';\n                    Alert.error(message);\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => setSaving(false));\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={onClose} TransitionComponent={Transition}>\n            <AppBar position='fixed' color='default' className={classes.appBar}>\n                <Toolbar variant='dense'>\n                    <Grid container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <Grid item>\n                            <Button\n                                disabled={saving}\n                                variant='outlined'\n                                color='primary'\n                                className={classes.title}\n                                onClick={save}\n                            >\n                                save & close\n                                {saving && <CircularProgress size={18} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button color='inherit' className={classes.title} onClick={confirmAndClose}>\n                                close\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction='row' justify='center' alignItems='center'>\n                {pageError && (\n                    <Grid item xs={12}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            <Grid item xs={12}>\n                <Suspense fallback={<CircularProgress disableShrink />}>\n                    <MonacoEditor {...editorProps} />\n                </Suspense>\n            </Grid>\n            <CloseConfirmation\n                open={openConfirmation}\n                onClose={() => {\n                    setPolicyContent(originalResourcePolicy.content);\n                    setOpenConfirmation(false);\n                }}\n                closeEditor={onClose}\n            />\n        </Dialog>\n    );\n}\nPolicyEditor.defaultProps = {\n    open: false,\n    onClose: () => {},\n    prefersDarkMode: false,\n\n};\nPolicyEditor.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func,\n    prefersDarkMode: PropTypes.bool,\n    originalResourcePolicy: PropTypes.shape({}).isRequired,\n    selectedPolicy: PropTypes.shape({}).isRequired,\n    setPolicyContent: PropTypes.func.isRequired,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    direction: PropTypes.oneOf(['in', 'out']).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function CloseConfirmation(props) {\n    const { open, onClose, closeEditor } = props;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>Discard changes and Close</DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    All the unsaved changes will be lost\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color='primary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() => {\n                        onClose();\n                        closeEditor();\n                    }}\n                    color='primary'\n                    autoFocus\n                >\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nCloseConfirmation.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    closeEditor: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SpecErrors(props) {\n    const { specErrors } = props;\n    const [open, setOpen] = useState(false);\n    if (!specErrors || specErrors.length === 0) {\n        return null;\n    }\n    return (\n        <>\n            <sup>\n                <Tooltip title='Show errors'>\n                    <IconButton onClick={() => setOpen(true)} color='secondary' aria-label='Errors in spec'>\n                        <ErrorOutlineIcon color='error' />\n                    </IconButton>\n                </Tooltip>\n            </sup>\n            <Dialog maxWidth='md' aria-labelledby='confirmation-dialog-title' open={open}>\n                <DialogTitle id='confirmation-dialog-title'>\n                    <Typography display='inline' color='textPrimary' variant='h6'>\n                        Errors\n                        <Typography display='inline' variant='subtitle2'>\n                            {' '}\n                            in OpenAPI definition\n                        </Typography>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        {specErrors.map((error, index) => (\n                            <span key={error.description}>\n                                {index % 2 !== 0 && <Divider light variant='inset' />}\n                                <ListItem>\n                                    <ListItemText\n                                        primary={error.message}\n                                        primaryTypographyProps={{\n                                            color: 'error',\n                                        }}\n                                        inset\n                                    />\n                                </ListItem>\n                                <Box boxShadow={1} py={5} pr={5} border={1} borderColor='grey.500'>\n                                    <pre>\n                                        <code>\n                                            {error.description}\n                                        </code>\n                                    </pre>\n                                </Box>\n                            </span>\n                        ))}\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nSpecErrors.propTypes = {\n    specErrors: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.dark,\n        marginLeft: theme.spacing(2),\n        display: 'inline',\n    },\n}));\n\n/**\n *\n * Simply reders the edit api definition link in the bottom of the resources listing\n * @export\n * @param {*} props\n * @returns\n */\nexport default function GoToDefinitionLink(props) {\n    const { api, message } = props;\n    const classes = useStyles();\n    return (\n        <Box m={1}>\n            <Link to={`/apis/${api.id}/api definition`}>\n                <Typography className={classes.link} variant='caption'>\n                    {message}\n                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                </Typography>\n            </Link>\n        </Box>\n    );\n}\nGoToDefinitionLink.defaultProps = {\n    message: 'Edit API Definition',\n};\nGoToDefinitionLink.propTypes = {\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n    message: PropTypes.string,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport isEmpty from 'lodash.isempty';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport LockIcon from '@material-ui/icons//Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockOpenTwoToneIcon from '@material-ui/icons/LockOpenTwoTone';\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nexport default function OperationsSelector(props) {\n    const {\n        selectedOperations, setSelectedOperation, operations, enableSecurity, disableSecurity,\n    } = props;\n    const [apiFromContext] = useAPI();\n\n    // TODO: Following logic introduce a limitation in showing `indeterminate` icon state if user\n    // select all -> unchecked one operation -> recheck same operation again ~tmkb\n    const isIndeterminate = !isEmpty(selectedOperations);\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleSelector() {\n        setSelectedOperation(isIndeterminate ? {} : operations);\n    }\n\n    let operationCount = 0;\n    let operationWithSecurityCount = 0;\n\n    Object.entries(operations).forEach(([, verbObj]) => {\n        Object.entries(verbObj).forEach(([, operation]) => {\n            if (operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none') {\n                operationWithSecurityCount++;\n            }\n            operationCount++;\n        });\n    });\n\n    return (\n        <Grid container direction='row' justify='space-between' alignItems='center'>\n            <Grid item />\n            <Grid item>\n                <Box mr={17.25} display='flex'>\n                    { (operationWithSecurityCount === 0)\n                    && (\n                        <Tooltip\n                            title='Enable security for all'\n                        >\n                            <div>\n                                <IconButton\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    onClick={enableSecurity}\n                                    aria-label='enable security for all'\n                                    size='large'\n                                >\n                                    <LockOpenIcon />\n                                </IconButton>\n                            </div>\n                        </Tooltip>\n                    )}\n                    { (operationWithSecurityCount === operationCount)\n                    && (\n                        <Tooltip\n                            title='Disable security for all'\n                        >\n                            <div>\n                                <IconButton\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    onClick={disableSecurity}\n                                    aria-label='disable security for all'\n                                    size='large'\n                                >\n                                    <LockIcon />\n                                </IconButton>\n                            </div>\n                        </Tooltip>\n                    )}\n                    { (operationWithSecurityCount !== 0 && operationWithSecurityCount !== operationCount)\n                    && (\n                        <Tooltip\n                            title='Enable security for all'\n                        >\n                            <div>\n                                <IconButton\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    onClick={enableSecurity}\n                                    aria-label='enable security for all'\n                                    size='large'\n                                >\n                                    <LockOpenTwoToneIcon />\n                                </IconButton>\n                            </div>\n                        </Tooltip>\n                    )}\n                    <Tooltip title={isIndeterminate ? 'Clear selections' : 'Mark all for delete'}>\n                        <div>\n                            <IconButton\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                onClick={handleSelector}\n                                aria-label='Mark all for delete'\n                                size='large'\n                            >\n                                {isIndeterminate ? <ClearAllIcon /> : <DeleteSweepIcon />}\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nOperationsSelector.defaultProps = {};\n\nOperationsSelector.propTypes = {\n    selectedOperations: PropTypes.shape({}).isRequired,\n    setSelectedOperation: PropTypes.func.isRequired,\n    operations: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport Resources from 'AppComponents/Apis/Details/Resources/Resources';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIProductOperations() {\n    const [api, updateAPI] = useAPI();\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [isSaving, setIsSaving] = useState(false);\n    useEffect(() => {\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, []);\n\n    useEffect(() => {\n        setApiThrottlingPolicy(api.apiThrottlingPolicy);\n    }, [api.apiThrottlingPolicy]);\n\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n    return (\n        <Grid container spacing={4}>\n            <Grid item md={12}>\n                <Typography variant='h4' gutterBottom>\n                    Product Resources\n                </Typography>\n                <Box component='div' display='inline'>\n                    <Link to={'/api-products/' + api.id + '/resources/edit'}>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                        >\n                            <EditIcon />\n                            <FormattedMessage\n                                id='Apis.Details.Resources.Resources.edit.resources.button'\n                                defaultMessage='Edit Resources'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Grid>\n            <Grid item md={12}>\n                <APIRateLimiting\n                    operationRateLimits={operationRateLimits}\n                    api={api}\n                    isAPIProduct\n                    value={apiThrottlingPolicy}\n                    onChange={setApiThrottlingPolicy}\n                />\n            </Grid>\n            {!isRestricted(['apim:api_create'], api) && (\n                <Grid item md={12}>\n                    <Box ml={1}>\n                        <Button\n                            onClick={saveChanges}\n                            disabled={api.isRevision}\n                            variant='contained'\n                            size='small'\n                            color='primary'\n                        >\n                            Save\n                            {isSaving && <CircularProgress size={24} />}\n                        </Button>\n                        <Box display='inline' ml={1}>\n                            <Button\n                                size='small'\n                                variant='outlined'\n                                onClick={() => setApiThrottlingPolicy(api.apiThrottlingPolicy)}\n                            >\n                                Reset\n                            </Button>\n                        </Box>\n                    </Box>\n                </Grid>\n            )}\n\n            <Grid item md={12}>\n                <Resources\n                    hideAPIDefinitionLink\n                    disableUpdate\n                    disableRateLimiting\n                    operationProps={{ disableDelete: true }}\n                    disableMultiSelect\n                    disableAddOperation\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport cloneDeep from 'lodash.clonedeep';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport ProductResourcesEditWorkspace from './ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\n/**\n *\n *\n * @returns\n */\nfunction ProductResourcesEdit() {\n    const classes = useStyles();\n\n    // Get the current api product object from the context\n    const { api, updateAPI } = useContext(APIContext);\n    const apiCopy = cloneDeep(api);\n    const history = useHistory();\n    const { apis } = apiCopy;\n\n    // Define states\n    const [apiResources, setApiResources] = useState(apis);\n    const [isUpdating, setUpdating] = useState(false);\n    // Initialize the rest api libraries\n\n    const handleSave = () => {\n        setUpdating(true);\n\n        const updatePromise = updateAPI({ apis: apiResources }, true);\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    const handleSaveAndDeploy = () => {\n        setUpdating(true);\n\n        const updatePromise = updateAPI({ apis: apiResources }, true);\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            }).finally(() => history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            }));\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.ProductResources.ProductResourcesEdit.title'\n                        defaultMessage='Manage Resources'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.contentWrapper}>\n                <ProductResourcesEditWorkspace\n                    apiResources={apiResources}\n                    setApiResources={setApiResources}\n                    api={api}\n                />\n                <div className={classes.buttonWrapper}>\n                    <Grid container direction='row' alignItems='flex-start' spacing={1}>\n                        <Grid item>\n                            <div>\n                                <CustomSplitButton\n                                    advertiseInfo={api.advertiseInfo}\n                                    api={api}\n                                    handleSave={handleSave}\n                                    handleSaveAndDeploy={handleSaveAndDeploy}\n                                    isUpdating={isUpdating}\n                                    id='save-product-resources'\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesEdit.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductResourcesEdit;\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useContext, useEffect, useState, useReducer,\n} from 'react';\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link, withRouter } from 'react-router-dom';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport NewEndpointCreate from 'AppComponents/Apis/Details/Endpoints/NewEndpointCreate';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EndpointOverview from './EndpointOverview';\nimport { createEndpointConfig, getEndpointTemplateByType } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypesWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        margin: '2px',\n    },\n    root: {\n        flexGrow: 1,\n        paddingRight: '10px',\n    },\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: theme.spacing(2),\n    },\n    endpointValidityMessage: {\n        color: theme.palette.error.main,\n    },\n    errorMessageContainer: {\n        marginTop: theme.spacing(1),\n    },\n    implSelectRadio: {\n        padding: theme.spacing(1) / 2,\n    },\n});\n\nconst defaultSwagger = { paths: {} };\n\n/**\n * The base component of the endpoints view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction Endpoints(props) {\n    const { classes, intl, history } = props;\n    const { api, updateAPI } = useContext(APIContext);\n    const [swagger, setSwagger] = useState(defaultSwagger);\n    const [endpointValidity, setAPIEndpointsValid] = useState({ isValid: true, message: '' });\n    const [isUpdating, setUpdating] = useState(false);\n\n    const apiReducer = (initState, configAction) => {\n        const tmpEndpointConfig = cloneDeep(initState.endpointConfig);\n        const { action, value } = configAction;\n        switch (action) {\n            case 'production_endpoints':\n            case 'sandbox_endpoints': {\n                if (value) {\n                    return { ...initState, endpointConfig: { ...tmpEndpointConfig, [action]: value } };\n                }\n                delete tmpEndpointConfig[action];\n                return { ...initState, endpointConfig: { ...tmpEndpointConfig } };\n            }\n            case 'select_endpoint_category': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_lb_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'add_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_advance_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'remove_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'endpointImplementationType': { // set implementation status\n                const { endpointType, implementationType } = value;\n                const config = createEndpointConfig(endpointType);\n                if (endpointType === 'prototyped') {\n                    if (implementationType === 'mock') {\n                        api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                            setSwagger(res.obj);\n                        });\n                        return { ...initState, endpointConfig: config, endpointImplementationType: 'INLINE' };\n                    }\n                    return { ...initState, endpointConfig: config, endpointImplementationType: 'ENDPOINT' };\n                }\n                return { ...initState, endpointConfig: config };\n            }\n            case 'endpointSecurity': { // set endpoint security\n                const config = cloneDeep(initState.endpointConfig);\n                const tmpSecurityInfo = cloneDeep(value);\n                return { ...initState, endpointConfig: { ...config, endpoint_security: tmpSecurityInfo } };\n            }\n            case 'endpoint_type': { // set endpoint type\n                const config = getEndpointTemplateByType(\n                    value.category,\n                    value.endpointType === 'address',\n                    tmpEndpointConfig,\n                );\n                const endpointSecurity = cloneDeep(initState.endpointConfig.endpoint_security);\n                return { ...initState, endpointConfig: { ...config, endpoint_security: endpointSecurity } };\n            }\n            case 'set_inline_or_mocked_oas': {\n                const { endpointImplementationType, endpointConfig } = value;\n                if (endpointImplementationType === 'INLINE') {\n                    api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                        setSwagger(res.obj);\n                    });\n                }\n                return { ...initState, endpointConfig, endpointImplementationType };\n            }\n            case 'set_prototyped': {\n                const { endpointImplementationType, endpointConfig } = value;\n                return {\n                    ...initState,\n                    endpointImplementationType,\n                    endpointConfig,\n                };\n            }\n            case 'set_awsCredentials': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'select_endpoint_type': {\n                const { endpointImplementationType, endpointConfig } = value;\n                return {\n                    ...initState,\n                    endpointConfig,\n                    endpointImplementationType,\n                };\n            }\n            case 'set_service': {\n                return {\n                    ...initState,\n                    serviceInfo: value\n                };\n            }\n            default: {\n                return initState;\n            }\n        }\n    };\n    const [apiObject, apiDispatcher] = useReducer(apiReducer, api.toJSON());\n\n    /**\n     * Method to update the api.\n     *\n     * @param {boolean} isRedirect Used for dynamic endpoints to redirect to the runtime config page.\n     */\n    const handleSave = (isRedirect) => {\n        const { endpointConfig, endpointImplementationType, serviceInfo } = apiObject;\n        if (endpointConfig.endpoint_type === 'service') {\n            endpointConfig.endpoint_type = 'http';\n        }\n        setUpdating(true);\n        if (endpointImplementationType === 'INLINE' || endpointImplementationType === 'MOCKED_OAS') {\n            api.updateSwagger(swagger).then((resp) => {\n                setSwagger(resp.obj);\n            }).then(() => {\n                updateAPI({ endpointConfig, endpointImplementationType, serviceInfo });\n            }).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/policies');\n                }\n            });\n        } else {\n            const apiObjectCopy = cloneDeep(apiObject);\n            if (apiObjectCopy.endpointConfig.endpoint_type === 'service') {\n                apiObjectCopy.endpointConfig.endpoint_type = 'http';\n            }\n            updateAPI(apiObjectCopy).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/policies');\n                }\n            });\n        }\n    };\n\n    const handleSaveAndDeploy = () => {\n        const { endpointConfig, endpointImplementationType, endpointSecurity, serviceInfo } = apiObject;\n        if (endpointConfig.endpoint_type === 'service') {\n            endpointConfig.endpoint_type = 'http';\n        }\n        setUpdating(true);\n        if (endpointImplementationType === 'INLINE' || endpointImplementationType === 'MOCKED_OAS') {\n            api.updateSwagger(swagger).then((resp) => {\n                setSwagger(resp.obj);\n            }).then(() => {\n                updateAPI({ endpointConfig, endpointImplementationType, endpointSecurity, serviceInfo });\n            }).finally(() => history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            }));\n        } else {\n            const apiObjectCopy = cloneDeep(apiObject);\n            if (apiObjectCopy.endpointConfig.endpoint_type === 'service') {\n                apiObjectCopy.endpointConfig.endpoint_type = 'http';\n            }\n            updateAPI(apiObjectCopy).finally(() => history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            }));\n        }\n    };\n\n    /**\n     * Validate the provided endpoint config object.\n     *\n     * @param {any} endpointConfig The provided endpoint config for validation.\n     * @param {string} implementationType The api implementation type (INLINE/ENDPOINT/MOCKED_OAS)\n     * @return {{isValid: boolean, message: string}} The endpoint validity information.\n     * */\n    const validate = (implementationType) => {\n        const { endpointConfig } = apiObject;\n        if (endpointConfig && endpointConfig.endpoint_security) {\n            const { production, sandbox } = endpointConfig.endpoint_security;\n            if (production && production.enabled) {\n                if (production.type === 'OAUTH') {\n                    if (production.grantType === 'PASSWORD') {\n                        if (production.tokenUrl === null\n                            || production.tokenUrl === ''\n                            || production.clientId === null\n                            || production.clientSecret === null\n                            || production.username === null\n                            || production.username === ''\n                            || production.password === null) {\n                            return {\n                                isValid: false,\n                                message: intl.formatMessage({\n                                    id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.password.error',\n                                    defaultMessage: 'Endpoint Security Token URL'\n                                            + '/API Key/API Secret/Username/Password should not be empty',\n                                }),\n                            };\n                        }\n                    } else if (production.grantType === 'CLIENT_CREDENTIALS') {\n                        if (production.tokenUrl === null\n                            || production.tokenUrl === ''\n                            || production.clientId === null\n                            || production.clientSecret === null) {\n                            return {\n                                isValid: false,\n                                message: intl.formatMessage({\n                                    id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.client.error',\n                                    defaultMessage: 'Endpoint Security Token URL'\n                                            + '/API Key/API Secret should not be empty',\n                                }),\n                            };\n                        }\n                    }\n                } else if (production.username === '' || production.password === null) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.security.username.error',\n                            defaultMessage: 'Endpoint Security User Name/ Password should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (sandbox && sandbox.enabled) {\n                if (sandbox.type === 'OAUTH') {\n                    if (sandbox.grantType === 'PASSWORD') {\n                        if (sandbox.tokenUrl === null\n                            || sandbox.tokenUrl === ''\n                            || sandbox.clientId === null\n                            || sandbox.clientSecret === null\n                            || sandbox.username === null\n                            || sandbox.username === ''\n                            || sandbox.password === null) {\n                            return {\n                                isValid: false,\n                                message: intl.formatMessage({\n                                    id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.password.error',\n                                    defaultMessage: 'Endpoint Security Token URL'\n                                            + '/API Key/API Secret/Username/Password should not be empty',\n                                }),\n                            };\n                        }\n                    } else if (sandbox.grantType === 'CLIENT_CREDENTIALS') {\n                        if (sandbox.tokenUrl === null\n                            || sandbox.tokenUrl === ''\n                            || sandbox.clientId === null\n                            || sandbox.clientSecret === null) {\n                            return {\n                                isValid: false,\n                                message: intl.formatMessage({\n                                    id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.client.error',\n                                    defaultMessage: 'Endpoint Security Token URL'\n                                            + '/API Key/API Secret should not be empty',\n                                }),\n                            };\n                        }\n                    }\n                } else if (sandbox.username === '' || sandbox.password === null) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.security.username.error',\n                            defaultMessage: 'Endpoint Security User Name/ Password should not be empty',\n                        }),\n                    };\n                }\n            }\n        }\n        if (endpointConfig === null) {\n            return { isValid: true, message: '' };\n        }\n        const endpointType = endpointConfig.endpoint_type;\n        if (endpointType === 'awslambda') {\n            if (endpointConfig.access_method === 'stored') {\n                if (endpointConfig.amznAccessKey === '' || endpointConfig.amznSecretKey === ''\n                || endpointConfig.amznRegion === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.accessKey.secretKey.error',\n                            defaultMessage: 'Access Key, Secret Key and Region should not be empty',\n                        }),\n                    };\n                } else if (endpointConfig.amznAccessKey !== '' && endpointConfig.amznSecretKey === 'AWS_SECRET_KEY') {\n                    return {\n                        isValid: false,\n                        message: '',\n                    };\n                }\n            }\n            if (endpointConfig.assume_role && !(endpointConfig.amznRoleArn !== '' \n            && endpointConfig.amznRoleSessionName !== '' && endpointConfig.amznRoleRegion !== '')) {\n                return {\n                    isValid: false,\n                    message: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.Endpoints.missing.stsAssumeRole.config',\n                        defaultMessage: 'Role ARN, Role Session Name and Region should not be empty',\n                    }),\n                }\n            }\n        } else if (endpointType === 'load_balance') {\n            /**\n             * Checklist:\n             *  production/ sandbox endpoints should be an array.\n             *  production/ sandbox endpoint [0] must be present.\n             * */\n            if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.length > 0) {\n                if (!endpointConfig.production_endpoints[0].url\n                    || (endpointConfig.production_endpoints[0].url\n                        && endpointConfig.production_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.prod.endpoint.loadbalance',\n                            defaultMessage: 'Default Production Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints.length > 0) {\n                if (!endpointConfig.sandbox_endpoints[0].url\n                    || (endpointConfig.sandbox_endpoints[0].url && endpointConfig.sandbox_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.sandbox.endpoint.loadbalance',\n                            defaultMessage: 'Default Sandbox Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n        } else {\n            let isValidEndpoint = false;\n            if (endpointConfig.implementation_status === 'prototyped') {\n                if (implementationType === 'ENDPOINT') {\n                    if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.url === '') {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.prototype.url',\n                                defaultMessage: 'Prototype Endpoint URL should not be empty',\n                            }),\n                        };\n                    }\n                }\n                isValidEndpoint = true;\n            } else if (endpointConfig.production_endpoints && !endpointConfig.sandbox_endpoints) {\n                isValidEndpoint = endpointConfig.production_endpoints.url !== '';\n            } else if (endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== '';\n            } else if (!endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = false;\n            } else {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== ''\n                        || endpointConfig.production_endpoints.url !== '';\n            }\n            if (endpointConfig.sandbox_endpoints) {\n                isValidEndpoint &&= endpointConfig.sandbox_endpoints.url !== '';\n            }\n            if (endpointConfig.production_endpoints) {\n                isValidEndpoint &&= endpointConfig.production_endpoints.url !== '';\n            }\n            return !isValidEndpoint ? {\n                isValid: false,\n                message: intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.Endpoints.missing.endpoint.error',\n                    defaultMessage: 'Either one of Production or Sandbox Endpoints should be added.',\n                }),\n            } : { isValid: true, message: '' };\n        }\n        return {\n            isValid: true,\n            message: '',\n        };\n    };\n\n    useEffect(() => {\n        if (api.type !== 'WS') {\n            api.getSwagger(apiObject.id).then((resp) => {\n                setSwagger(resp.obj);\n            }).catch((err) => {\n                console.err(err);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        setAPIEndpointsValid(validate(apiObject.endpointImplementationType));\n    }, [apiObject]);\n\n    const saveAndRedirect = () => {\n        handleSave(true);\n    };\n    /**\n     * Method to update the swagger object.\n     *\n     * @param {any} swaggerObj The updated swagger object.\n     * */\n    const changeSwagger = (swaggerObj) => {\n        setSwagger(swaggerObj);\n    };\n\n    /**\n     * Generate endpoint configuration based on the selected endpoint type and set to the api object.\n     *\n     * @param {string} endpointType The endpoint type.\n     * @param {string} implementationType The endpoint implementationType. (Required only for prototype endpoints)\n     * */\n    const generateEndpointConfig = (endpointType, implementationType) => {\n        apiDispatcher({ action: 'endpointImplementationType', value: { endpointType, implementationType } });\n    };\n\n    return (\n        <>\n            {/* Since the api is set to the state in component did mount, check both the api and the apiObject. */}\n            {(api.endpointConfig === null && apiObject.endpointConfig === null)\n                ? <NewEndpointCreate generateEndpointConfig={generateEndpointConfig} apiType={apiObject.type} />\n                : (\n                    <div className={classes.root}>\n                        <Typography\n                            id='itest-api-details-endpoints-head'\n                            variant='h4'\n                            component='h2'\n                            align='left'\n                            gutterBottom\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Endpoints.endpoints.header'\n                                defaultMessage='Endpoints'\n                            />\n                        </Typography>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={12} className={classes.endpointsContainer}>\n                                    <EndpointOverview\n                                        swaggerDef={swagger}\n                                        updateSwagger={changeSwagger}\n                                        api={apiObject}\n                                        onChangeAPI={apiDispatcher}\n                                        endpointsDispatcher={apiDispatcher}\n                                        saveAndRedirect={saveAndRedirect}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {\n                                endpointValidity.isValid\n                                    ? <div />\n                                    : (\n                                        <Grid item className={classes.errorMessageContainer}>\n                                            <Typography className={classes.endpointValidityMessage}>\n                                                {endpointValidity.message}\n                                            </Typography>\n                                        </Grid>\n                                    )\n                            }\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    {api.isRevision || !endpointValidity.isValid\n                                        || isRestricted(['apim:api_create'], api) ? (\n                                            <Button\n                                                disabled\n                                                type='submit'\n                                                variant='contained'\n                                                color='primary'\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.save'\n                                                    defaultMessage='Save'\n                                                />\n                                            </Button>\n                                        ) : (\n                                            <CustomSplitButton\n                                                advertiseInfo={api.advertiseInfo}\n                                                api={api}\n                                                handleSave={handleSave}\n                                                handleSaveAndDeploy={handleSaveAndDeploy}\n                                                isUpdating={isUpdating}\n                                                id='endpoint-save-btn'\n                                            />\n                                        )}\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/overview'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                )}\n        </>\n\n    );\n}\n\nEndpoints.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.shape({}),\n        buttonSection: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(Endpoints)));\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n    Typography,\n    Grid,\n    withStyles,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    FormControl,\n    Divider,\n    Button,\n    Card,\n    CardContent,\n    CardActions,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => ({\n    inlineMessageContainer: {\n        marginBottom: theme.spacing(1),\n    },\n    endpointTypeCard: {\n        margin: theme.spacing(1),\n        maxWidth: theme.spacing(30),\n        transition: 'box-shadow 0.3s ease-in-out',\n        height: theme.spacing(40),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        height: theme.spacing(40),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n        borderTop: 'solid #e0e0e0 thin',\n    },\n});\n\n/**\n * Component to create new endpoint.\n * This component will render if the api object does not have an endpoint configuration, letting users to create a\n * new endpoint configuration based on their requirement.\n * Following endpoint types are supported.\n * 1. HTTP/ SOAP endpoints\n * 2. Prototyped/ Mock endpoints\n * 3. AWS Lambda endpoints\n * 4. Dynamic Endpoints\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction NewEndpointCreate(props) {\n    const {\n        classes,\n        intl,\n        generateEndpointConfig,\n        apiType,\n    } = props;\n    const [endpointImplType, setImplType] = useState('mock');\n    const endpointTypes = [\n        {\n            type: 'http',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint',\n                defaultMessage: 'HTTP/ REST Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint.description',\n                defaultMessage: 'A REST API endpoint based on a URI template.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST'],\n        },\n        {\n            type: 'service',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.service.endpoint',\n                defaultMessage: 'Service Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.service.endpoint.description',\n                defaultMessage: 'A REST API endpoint based on a Service in the service catalog.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST'],\n        },\n        {\n            type: 'address',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint',\n                defaultMessage: 'HTTP/ SOAP Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint.description',\n                defaultMessage: 'The direct URI of the web service.',\n            }),\n            options: null,\n            disabled: ['GRAPHQL', 'SSE'],\n        },\n        {\n            type: 'prototyped',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint',\n                defaultMessage: 'Mock Implementation',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint.description',\n                defaultMessage: 'Use the inbuilt JavaScript engine to prototype the API '\n                + 'The inbuilt JavaScript engine does support prototype SOAP APIs',\n            }),\n            options: null,\n            disabled: ['GRAPHQL', 'SSE'],\n        },\n        {\n            type: 'dynamic',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint',\n                defaultMessage: 'Dynamic Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint.description',\n                defaultMessage: 'If you need to send the request to the URI specified in the TO header.',\n            }),\n            options: null,\n            disabled: ['SSE'],\n        },\n        {\n            type: 'awslambda',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint',\n                defaultMessage: 'AWS Lambda Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint.description',\n                defaultMessage: 'If you need to invoke AWS Lambda functions through API gateway.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST', 'GRAPHQL', 'SSE'],\n        },\n    ];\n\n    const eligibleTypes = endpointTypes.filter((type) => !type.disabled.includes(apiType)).map((type) => {\n        return type;\n    });\n\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.titleWrapper}>\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.NewEndpointCreate.add.endpoints.header'\n                    defaultMessage='Select an Endpoint Type to Add'\n                />\n            </Typography>\n            <Grid container justify='flex-start' spacing={2}>\n                {eligibleTypes.map(((type) => {\n                    return (\n                        <Grid item className={classes.inlineMessageContainer}>\n                            <Card className={classes.endpointTypeCard}>\n                                <CardContent className={classes.cardContent}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        {type.name}\n                                    </Typography>\n                                    <Divider />\n                                    <Typography component='p' className={classes.content}>\n                                        {type.description}\n                                    </Typography>\n                                    {type.options\n                                        ? (\n                                            <div>\n                                                <FormControl component='fieldset' className={classes.formControl}>\n                                                    <RadioGroup\n                                                        aria-label='EndpointType'\n                                                        name='endpointType'\n                                                        className={classes.radioGroup}\n                                                        value={endpointImplType}\n                                                        onChange={(event) => { setImplType(event.target.value); }}\n                                                    >\n                                                        {type.options.filter((types) => !types.disabled\n                                                            .includes(apiType)).map(((option) => {\n                                                            return (\n                                                                <FormControlLabel\n                                                                    value={option.type}\n                                                                    control={<Radio color='primary' />}\n                                                                    label={option.name}\n                                                                />\n                                                            );\n                                                        }))}\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </div>\n                                        )\n                                        : <div /> }\n                                </CardContent>\n                                <CardActions className={classes.cardActions}>\n                                    <Button\n                                        color='primary'\n                                        className={classes.button}\n                                        onClick={() => generateEndpointConfig(type.type, endpointImplType)}\n                                        data-testid={type.name.replace(/\\s/g, '').toLowerCase() + '-add-btn'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.NewEndpointCreate.create.button'\n                                            defaultMessage='Add'\n                                        />\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    );\n                }))}\n            </Grid>\n        </>\n    );\n}\n\nNewEndpointCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    generateEndpointConfig: PropTypes.func.isRequired,\n    apiType: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(NewEndpointCreate));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useEffect, useState, useCallback,\n} from 'react';\nimport {\n    FormControl,\n    Grid,\n    Paper,\n    Typography,\n    withStyles,\n    Radio,\n    FormControlLabel,\n    Collapse,\n    RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, IconButton, Button, DialogActions, Icon,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Progress } from 'AppComponents/Shared';\nimport CONSTS from 'AppData/Constants';\n\nimport cloneDeep from 'lodash.clonedeep';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport ServiceCatalog from 'AppData/ServiceCatalog';\nimport Alert from 'AppComponents/Shared/Alert';\nimport MockImplEndpoints from 'AppComponents/Apis/Details/Endpoints/Prototype/MockImplEndpoints';\nimport {\n    getEndpointTypeProperty,\n    createEndpointConfig,\n    getEndpointTemplate,\n} from './endpointUtils';\nimport GeneralConfiguration from './GeneralConfiguration';\nimport LoadbalanceFailoverConfig from './LoadbalanceFailoverConfig';\nimport GenericEndpoint from './GenericEndpoint';\nimport AdvanceEndpointConfig from './AdvancedConfig/AdvanceEndpointConfig';\nimport EndpointSecurity from './GeneralConfiguration/EndpointSecurity';\nimport Credentials from './AWSLambda/Credentials.jsx';\nimport ServiceEndpoint from './ServiceEndpoint';\n\nconst styles = (theme) => ({\n    listing: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n    endpointContainer: {\n        paddingLeft: theme.spacing(2),\n        padding: theme.spacing(1),\n    },\n    endpointName: {\n        paddingLeft: theme.spacing(1),\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    endpointTypesWrapper: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    sandboxHeading: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    endpointsWrapperLeft: {\n        padding: theme.spacing(1),\n        borderRight: '#c4c4c4',\n        borderRightStyle: 'solid',\n        borderRightWidth: 'thin',\n    },\n    endpointsWrapperRight: {\n        padding: theme.spacing(1),\n    },\n    endpointsTypeSelectWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        padding: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    endpointTypesSelectWrapper: {\n        display: 'flex',\n    },\n    defaultEndpointWrapper: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    configDialogHeader: {\n        fontWeight: '600',\n    },\n    addLabel: {\n        padding: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    button: {\n        textTransform: 'none',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'http', value: 'HTTP/REST Endpoint' },\n    { key: 'default', value: 'Dynamic Endpoints' },\n    { key: 'address', value: 'HTTP/SOAP Endpoint' },\n    { key: 'prototyped', value: 'Prototype Endpoint' },\n    { key: 'INLINE', value: 'Mock Implementation' },\n    { key: 'awslambda', value: 'AWS Lambda' },\n    { key: 'service', value: 'Service Endpoint' },\n    { key: 'MOCKED_OAS', value: 'Mock Implementation' },\n];\n\n/**\n * The endpoint overview component. This component holds the views of endpoint creation and configuration.\n * @param {any} props The props that are being passed to the component.\n * @returns {any} HTML view of the endpoints overview.\n */\nfunction EndpointOverview(props) {\n    const {\n        classes,\n        api,\n        endpointsDispatcher,\n        swaggerDef,\n        updateSwagger,\n        saveAndRedirect,\n    } = props;\n    const { endpointConfig } = api;\n    const [endpointType, setEndpointType] = useState(endpointTypes[0]);\n    const [supportedEnpointTypes, setSupportedEndpointType] = useState([]);\n\n    const [epConfig, setEpConfig] = useState(endpointConfig);\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState(null);\n    const [advanceConfigOptions, setAdvancedConfigOptions] = useState({\n        open: false,\n        index: 0,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointSecurityConfig, setEndpointSecurityConfig] = useState({\n        open: false,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointCategory, setEndpointCategory] = useState({ sandbox: false, prod: false });\n    const [typeChangeConfirmation, setTypeChangeConfirmation] = useState({ openDialog: false, serviceInfo:\n    (api.serviceInfo) });\n    const [servicesList, setServicesList] = useState([]);\n\n    const handleToggleEndpointSecurity = () => {\n        const tmpSecurityInfo = !endpointSecurityInfo ? {\n            production: CONSTS.DEFAULT_ENDPOINT_SECURITY,\n            sandbox: CONSTS.DEFAULT_ENDPOINT_SECURITY,\n        } : endpointSecurityInfo;\n        setEndpointSecurityInfo(tmpSecurityInfo);\n    };\n\n    /**\n     * Method to get the type of the endpoint. (HTTP/REST or HTTP/SOAP)\n     * In failover/ loadbalance cases, the endpoint type is presented in the endpoints list. Therefore that property\n     * needs to be extracted separately.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The type of the endpoint.\n     * */\n    const getEndpointType = (apiObject) => {\n        const type = apiObject.endpointConfig && apiObject.endpointConfig.endpoint_type;\n        if (apiObject.endpointImplementationType === 'INLINE') {\n            return endpointTypes[4];\n        } else if (apiObject.endpointImplementationType === 'MOCKED_OAS') {\n            return endpointTypes[7];\n        } else if (apiObject.endpointImplementationType === 'ENDPOINT'\n            && apiObject.endpointConfig.implementation_status === 'prototyped') {\n            return endpointTypes[3];\n        } else if (type === 'http') {\n            if (typeChangeConfirmation.serviceInfo) {\n                return endpointTypes[6];\n            }\n            return endpointTypes[0];\n        } else if (type === 'default') {\n            return endpointTypes[1];\n        } else if (type === 'address') {\n            return endpointTypes[2];\n        } else if (type === 'awslambda') {\n            return endpointTypes[5];\n        } else if (type === 'service') {\n            return endpointTypes[6];\n        } else {\n            const availableEndpoints = (endpointConfig.production_endpoints && endpointConfig.production_endpoints)\n                || (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints);\n            // Handle the all endpoints de-select condition... Rollback to http.\n            if (!availableEndpoints) {\n                return endpointTypes[0];\n            }\n            if (Array.isArray(availableEndpoints)) {\n                return availableEndpoints[0].endpoint_type !== undefined\n                    ? endpointTypes[2] : endpointTypes[0];\n            }\n            return availableEndpoints.endpoint_type !== undefined\n                ? endpointTypes[2] : endpointTypes[0];\n        }\n    };\n\n    /**\n     * Method to get the supported endpoint types by api type.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The supported endpoint types.\n     * */\n    const getSupportedType = (apiObject) => {\n        const { type } = apiObject;\n        let supportedEndpointTypes = [];\n        if (type === 'GRAPHQL') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'service', value: 'Service Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n            ];\n        } else if (type === 'SOAP' || type === 'SOAPTOREST') {\n            supportedEndpointTypes = [\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n            ];\n        } else if (type === 'SSE') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'service', value: 'Service Endpoint' },\n            ];\n        } else {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'service', value: 'Service Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'INLINE', value: 'Mock Implementation' },\n                { key: 'awslambda', value: 'AWS Lambda' },\n            ];\n        }\n        return supportedEndpointTypes;\n    };\n\n    /**\n     * Retrieve the service list from the service catalog\n     */\n    function getServices() {\n        const promisedServices = ServiceCatalog.getServiceList();\n        promisedServices.then((response) => {\n            setServicesList(response.list);\n\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(\n                    <FormattedMessage\n                        id='Apis.Details.APIDefinition.Addservice.service.retrieve.error'\n                        defaultMessage='Something went wrong while retrieving the services'\n                    />,\n                );\n            }\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        const supportedTypeLists = getSupportedType(api);\n        const epType = getEndpointType(api);\n        if (epType.key === 'service') {\n            getServices();\n        }\n        if (epType.key !== 'INLINE' || epType.key !== 'MOCKED_OAS') {\n            setEndpointCategory({\n                prod: !!endpointConfig.production_endpoints,\n                sandbox: !!endpointConfig.sandbox_endpoints,\n            });\n        }\n        setSupportedEndpointType(supportedTypeLists);\n        setEpConfig(endpointConfig);\n        setEndpointType(epType);\n        setEndpointSecurityInfo(endpointConfig.endpoint_security);\n    }, [props]);\n\n\n    const getEndpoints = (type) => {\n        if (epConfig[type]) {\n            return epConfig[type].length > 0\n                ? epConfig[type][0].url : epConfig[type].url;\n        }\n        return '';\n    };\n\n    const getService = () => {\n        if (epConfig.serviceInfo) {\n            return epConfig.serviceInfo\n        }\n        return '';\n    };\n\n    const handleOnChangeEndpointCategoryChange = (category) => {\n        let endpointConfigCopy = cloneDeep(endpointConfig);\n        if (category === 'prod') {\n            const endpointProp = 'production_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.production_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.production_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        } else {\n            const endpointProp = 'sandbox_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.sandbox_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.sandbox_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        }\n        // Check whether, config has either prod/ sandbox endpoints. If not, reSet the endpoint type to http\n        if (!endpointConfigCopy.production_endpoints && !endpointConfigCopy.sandbox_endpoints) {\n            endpointConfigCopy = createEndpointConfig('http');\n        }\n        endpointsDispatcher({ action: 'select_endpoint_category', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to modify the endpoint represented by the given parameters.\n     *\n     * If url is null, remove the endpoint from the endpoint config.\n     *\n     * @param {number} index The index of the endpoint in the listing.\n     * @param {string} category The endpoint category. (production/ sand box)\n     * @param {string} url The new endpoint url.\n     * */\n    const editEndpoint = (index, category, url) => {\n        let modifiedEndpoint = null;\n        // Make a copy of the endpoint config.\n        const endpointConfigCopy = cloneDeep(epConfig);\n        /*\n        * If the index > 0, it means that the endpoint is load balance or fail over.\n        * Otherwise it is the default endpoint. (index = 0)\n        * */\n        if (index > 0) {\n            const endpointTypeProperty = getEndpointTypeProperty(endpointConfigCopy.endpoint_type, category);\n            modifiedEndpoint = endpointConfigCopy[endpointTypeProperty];\n            /*\n            * In failover case, the failover endpoints are a separate object. But in endpoint listing, since we\n            *  consider all the endpoints as a single list, to get the real index of the failover endpoint we use\n            *  index - 1.\n            * */\n            if (endpointConfigCopy.endpoint_type === 'failover') {\n                modifiedEndpoint[index - 1].url = url.trim();\n            } else {\n                modifiedEndpoint[index].url = url.trim();\n            }\n            endpointConfigCopy[endpointTypeProperty] = modifiedEndpoint;\n        } else if (url !== '') {\n            modifiedEndpoint = endpointConfigCopy[category];\n\n            /*\n            * In this case, we are editing the default endpoint.\n            * If the endpoint type is load balance, the production_endpoints or the sandbox_endpoint object is an\n            *  array. Otherwise, in failover mode, the default endpoint is an object.\n            *\n            * So, we check whether the endpoints is an array or an object.\n            *\n            * If This is the first time a user creating an endpoint endpoint config object does not have\n            *  production_endpoints or sandbox_endpoints object.\n            * Therefore create new object and add to the endpoint config.\n            * */\n            if (!modifiedEndpoint) {\n                modifiedEndpoint = getEndpointTemplate(endpointConfigCopy.endpoint_type);\n                modifiedEndpoint.url = url.trim();\n            } else if (Array.isArray(modifiedEndpoint)) {\n                if (url === '') {\n                    modifiedEndpoint.splice(0, 1);\n                } else {\n                    modifiedEndpoint[0].url = url.trim();\n                }\n            } else {\n                modifiedEndpoint.url = url.trim();\n            }\n            endpointConfigCopy[category] = modifiedEndpoint;\n        } else {\n            /*\n            * If the url is empty, delete the respective endpoint object.\n            * */\n            delete endpointConfigCopy[category];\n        }\n        endpointsDispatcher({ action: category, value: modifiedEndpoint });\n\n       \n        // Remove service from the API if any other endpoint type is selected\n        const epType = getEndpointType(api);\n        if (epType.key !== 'service') {\n            endpointsDispatcher({ action: 'set_service',\n                value:  { \n                    key: \"_\",\n                    name: \"_\",\n                    outdated: false,\n                    version: \"_\"\n                }} );\n        }\n         \n    };\n\n    const editService = (value) => {\n\n        const endpointConfigCopy = cloneDeep(epConfig);\n        const newService = { \n            key: value.serviceKey,\n            name: value.name,\n            outdated: false,\n            version: value.version\n        }\n        if (value && value.serviceKey) {\n            endpointConfigCopy.service = newService;\n            endpointsDispatcher({ action: 'set_service',\n                value: newService } ); \n        }\n    }\n\n    const handleEndpointCategorySelect = (event) => {\n        endpointsDispatcher({\n            action: 'endpoint_type',\n            value: { category: event.target.value, endpointType: endpointType.key },\n        });\n    };\n\n    /**\n     * Handles the endpoint type change functionality.\n     *\n     * @param {string} value The selected endpoint type.\n     * */\n    const changeEndpointType = (value) => {\n        setTypeChangeConfirmation({ openDialog: false, serviceInfo: false });\n        const selectedKey = typeChangeConfirmation.type || value;\n        if (selectedKey === 'INLINE' || selectedKey === 'MOCKED_OAS') {\n            const tmpConfig = createEndpointConfig('prototyped');\n            endpointsDispatcher({\n                action: 'set_inline_or_mocked_oas',\n                value: {\n                    endpointConfig: tmpConfig,\n                    endpointImplementationType: selectedKey,\n                },\n            });\n        } else if (selectedKey === 'prototyped') {\n            const tmpConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'set_prototyped',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: tmpConfig,\n                },\n            });\n        } else if (selectedKey === 'awslambda') {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        } else {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        }\n    };\n\n    /**\n     * Handles the endpoint type select event. If endpoint config has existing values, show confirmation dialog.\n     * @param {any} event The select event.\n     * */\n    const handleEndpointTypeSelect = (event) => {\n        // Check whether the endpoint Config has values.\n        if (epConfig.production_endpoints || epConfig.sandbox_endpoints) {\n            // Show confirmation dialog\n            setTypeChangeConfirmation({ type: event.target.value, openDialog: true });\n        } else {\n            changeEndpointType(event.target.value);\n        }\n    };\n\n    /**\n     * Method to get the advance configuration from the selected endpoint.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (Production/ sandbox)\n     * @return {object} The advance config object of the endpoint.\n     * */\n    const getAdvanceConfig = (index, epType, category) => {\n        const endpointTypeProperty = getEndpointTypeProperty(epType, category);\n        let advanceConfig = {};\n        if (index > 0) {\n            if (epConfig.endpoint_type === 'failover') {\n                advanceConfig = epConfig[endpointTypeProperty][index - 1].config;\n            } else {\n                advanceConfig = epConfig[endpointTypeProperty][index].config;\n            }\n        } else {\n            const endpointInfo = epConfig[endpointTypeProperty];\n            if (Array.isArray(endpointInfo)) {\n                advanceConfig = endpointInfo[0].config;\n            } else {\n                advanceConfig = endpointInfo.config;\n            }\n        }\n        return advanceConfig;\n    };\n\n    /**\n     * Method to open/ close the advance configuration dialog. This method also sets some information about the\n     * seleted endpoint type/ category and index.\n     *\n     * @param {number} index The index of the selected endpoint.\n     * @param {string} type The endpoint type\n     * @param {string} category The endpoint category.\n     * */\n    const toggleAdvanceConfig = (index, type, category) => {\n        const advanceEPConfig = getAdvanceConfig(index, type, category);\n        setAdvancedConfigOptions(() => {\n            return ({\n                open: !advanceConfigOptions.open,\n                index,\n                type,\n                category,\n                config: advanceEPConfig === undefined ? {} : advanceEPConfig,\n            });\n        });\n    };\n\n    const toggleEndpointSecurityConfig = (type, category) => {\n        handleToggleEndpointSecurity();\n        setEndpointSecurityConfig(() => {\n            return ({\n                open: !endpointSecurityConfig.open,\n                type,\n                category,\n                config: endpointSecurityInfo === undefined ? {} : endpointSecurityInfo,\n            });\n        });\n    };\n\n    /**\n     * Method to handle the endpoint security changes.\n     * @param {string} value The value\n     * @param {string} type The security property that is being modified.\n     * */\n    const handleEndpointSecurityChange = (value, type) => {\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: { ...endpointSecurityInfo, [type]: value },\n        });\n    };\n\n    const saveEndpointSecurityConfig = (endpointSecurityObj, enType) => {\n        const { type } = endpointSecurityObj;\n        let newEndpointSecurityObj = endpointSecurityObj;\n        if (type === 'NONE') {\n            newEndpointSecurityObj = { ...CONSTS.DEFAULT_ENDPOINT_SECURITY, type };\n        } else {\n            newEndpointSecurityObj.enabled = true;\n        }\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: {\n                ...endpointSecurityInfo,\n                [enType]: newEndpointSecurityObj,\n            },\n        });\n        setEndpointSecurityConfig({ open: false });\n    };\n\n    const closeEndpointSecurityConfig = () => {\n        setEndpointSecurityConfig({ open: false });\n    };\n\n    /**\n     * Method to save the advance configurations.\n     *\n     * @param {object} advanceConfig The advance configuration object.\n     * */\n    const saveAdvanceConfig = (advanceConfig) => {\n        const config = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(\n            advanceConfigOptions.type, advanceConfigOptions.category,\n        );\n        const selectedEndpoints = config[endpointConfigProperty];\n        if (Array.isArray(selectedEndpoints)) {\n            if (advanceConfigOptions.type === 'failover') {\n                selectedEndpoints[advanceConfigOptions.index - 1].config = advanceConfig;\n            } else {\n                selectedEndpoints[advanceConfigOptions.index].config = advanceConfig;\n            }\n        } else {\n            selectedEndpoints.config = advanceConfig;\n        }\n        setAdvancedConfigOptions({ open: false });\n        endpointsDispatcher({\n            action: 'set_advance_config',\n            value: { ...config, [endpointConfigProperty]: selectedEndpoints },\n        });\n    };\n\n    /**\n     * Method to close the advance configuration dialog box.\n     * */\n    const closeAdvanceConfig = () => {\n        setAdvancedConfigOptions({ open: false });\n    };\n\n    /**\n     * Method to update the resource paths object in the swagger.\n     * @param {any} paths The updated paths object.\n     * */\n    const updatePaths = useCallback(\n        (paths) => {\n            updateSwagger({ ...swaggerDef, paths });\n        },\n        [swaggerDef],\n    );\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function epCategoryOnChangeHandler() {\n        handleOnChangeEndpointCategoryChange('prod');\n    }\n\n    return (\n        <div className={classes.overviewWrapper}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    {api.type === 'WS' ? <div /> : (\n                        <FormControl component='fieldset' className={classes.formControl}>\n                            <RadioGroup\n                                aria-label='EndpointType'\n                                name='endpointType'\n                                className={classes.radioGroup}\n                                value={endpointType.key === 'MOCKED_OAS' ? 'INLINE' : endpointType.key}\n                                onChange={handleEndpointTypeSelect}\n                            >\n                                {supportedEnpointTypes.map((endpoint) => {\n                                    return (\n                                        <FormControlLabel\n                                            value={endpoint.key}\n                                            control={(\n                                                <Radio\n                                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                                    color='primary'\n                                                    id={endpoint.key}\n                                                />\n                                            )}\n                                            label={endpoint.value}\n                                        />\n                                    );\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    )}\n                </Grid>\n                <Grid item xs={12}>\n                    {(endpointType.key === 'INLINE' || endpointType.key === 'MOCKED_OAS') ? \n                        iff(Object.keys(swaggerDef.paths).length !== 0, \n                            <MockImplEndpoints \n                                key={endpointType.key}\n                                paths={swaggerDef.paths} \n                                swagger={swaggerDef} \n                                updatePaths={updatePaths} \n                                endpointType={endpointType.key} \n                                endpointConfig={endpointConfig}\n                                endpointsDispatcher={endpointsDispatcher}\n                            />, \n                            <Progress />)\n                        : (\n                            <Paper className={classes.endpointContainer}>\n\n                                {endpointType.key === 'service'\n                                    ? (\n                                        <>\n                                            <FormControlLabel\n                                                control={(\n                                                    <Checkbox\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create'], api)}\n                                                        checked={endpointCategory.prod}\n                                                        value='prod'\n                                                        color='primary'\n                                                        onChange={epCategoryOnChangeHandler}\n                                                    />\n                                                )}\n                                                label={(\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.'\n                                                                + 'Endpoints.EndpointOverview'\n                                                                + '.production.endpoint'\n                                                                + '.production.label'}\n                                                            defaultMessage='Production Endpoint'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            />\n                                            <Collapse in={endpointCategory.prod}>\n                                                <ServiceEndpoint\n                                                    classes={classes}\n                                                    api={api}\n                                                    services={servicesList}\n                                                    category='production_endpoints'\n                                                    type=''\n                                                    setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                    esCategory='production'\n                                                    setESConfigOpen={toggleEndpointSecurityConfig}\n                                                    name={<FormattedMessage\n                                                        id={'Apis.Details.Endpoints.'\n                                                            + 'EndpointOverview.production'\n                                                            + '.endpoint.production.header'}\n                                                        defaultMessage='Production Endpoint'\n                                                    />}\n                                                    editEndpoint={editEndpoint}\n                                                    endpointURL={getEndpoints\n                                                    (\n                                                        'production_endpoints'\n                                                    )}\n                                                    existingService={getService}\n                                                    editService={editService}\n                                                    index={0} />\n                                            </Collapse>\n                                            <FormControlLabel\n                                                control={(\n                                                    <Checkbox\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create'], api)}\n                                                        checked={endpointCategory.sandbox}\n                                                        value='sandbox'\n                                                        color='primary'\n                                                        onChange={() => (\n                                                            handleOnChangeEndpointCategoryChange\n                                                            (\n                                                                'sandbox',\n                                                            ))}\n                                                    />\n                                                )}\n                                                label={(\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Endpoints.'\n                                                            + 'EndpointOverview.sandbox'\n                                                            + '.endpoint'}\n                                                        defaultMessage='Sandbox Endpoint'\n                                                    />\n                                                )}\n                                            />\n                                            <Collapse in={endpointCategory.sandbox}>\n                                                <ServiceEndpoint\n                                                    classes={classes}\n                                                    api={api}\n                                                    services={servicesList}\n                                                    category='sandbox_endpoints'\n                                                    type=''\n                                                    setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                    esCategory='sandbox'\n                                                    setESConfigOpen={toggleEndpointSecurityConfig}\n                                                    name={ <FormattedMessage\n                                                        id={'Apis.Details.Endpoints.'\n                                                            + 'EndpointOverview.sandbox'\n                                                            + '.endpoint'}\n                                                        defaultMessage='Sandbox Endpoint'\n                                                    />}\n                                                    editEndpoint={editEndpoint}\n                                                    endpointURL={getEndpoints\n                                                    (\n                                                        'sandbox_endpoints'\n                                                    )}\n                                                    index={0} />\n                                            </Collapse>\n\n                                        </>\n\n                                    )\n                                    : (\n                                        <>\n                                            {endpointType.key === 'awslambda'\n                                                ? (\n                                                    <Credentials\n                                                        apiId={api.id}\n                                                        endpointConfig={endpointConfig}\n                                                        endpointsDispatcher={endpointsDispatcher}\n                                                    />\n                                                )\n                                                : (\n                                                    <>\n                                                        {endpointType.key === 'prototyped'\n                                                            ? (\n                                                                <Typography>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.prototype.endpoint'\n                                                                            + '.prototype.label'}\n                                                                        defaultMessage='Prototype Endpoint'\n                                                                    />\n                                                                </Typography>\n                                                            )\n                                                            : (\n                                                                <FormControlLabel\n                                                                    control={(\n                                                                        <Checkbox\n                                                                            id='production-endpoint-checkbox'\n                                                                            disabled={isRestricted(\n                                                                                ['apim:api_create'], api)}\n                                                                            checked={endpointCategory.prod}\n                                                                            value='prod'\n                                                                            color='primary'\n                                                                            onChange={epCategoryOnChangeHandler}\n                                                                        />\n                                                                    )}\n                                                                    label={(\n                                                                        <Typography>\n                                                                            <FormattedMessage\n                                                                                id={'Apis.Details.'\n                                                                                    + 'Endpoints.EndpointOverview'\n                                                                                    + '.production.endpoint'\n                                                                                    + '.production.label'}\n                                                                                defaultMessage='Production Endpoint'\n                                                                            />\n                                                                        </Typography>\n                                                                    )}\n                                                                />\n                                                            )}\n                                                        <Collapse in={endpointCategory.prod}>\n                                                            {endpointType.key === 'default'\n                                                                ? (\n\n                                                                    <InlineMessage>\n                                                                        <div className={classes.contentWrapper}>\n                                                                            <Typography component='p'\n                                                                                className={classes.content}>\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview'\n                                                                                        + '.upload.mediation.message'}\n                                                                                    defaultMessage={\n                                                                                        'Please upload a mediation'\n                                                                                        + ' sequence file to'\n                                                                                        + ' Message Mediation Policies,'\n                                                                                        + ' which sets the endpoints.'\n                                                                                    }\n                                                                                />\n                                                                                <IconButton\n                                                                                    onClick={saveAndRedirect}\n                                                                                >\n                                                                                    <LaunchIcon\n                                                                                        style={{ marginLeft: '2px' }}\n                                                                                        fontSize='small'\n                                                                                        color='primary'\n                                                                                    />\n                                                                                </IconButton>\n                                                                            </Typography>\n                                                                        </div>\n                                                                        <Button\n                                                                            className={classes.button}\n                                                                            aria-label='Settings'\n                                                                            onClick={() => toggleAdvanceConfig(\n                                                                                0, '', 'production_endpoints',\n                                                                            )}\n                                                                            disabled={\n                                                                                (isRestricted(\n                                                                                    ['apim:api_create'], api,\n                                                                                )\n                                                                                )\n                                                                            }\n                                                                            variant='outlined'\n                                                                        >\n                                                                            <Icon\n                                                                                className={classes.buttonIcon}\n                                                                            >\n                                                                                settings\n                                                                            </Icon>\n                                                                            <Typography>\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.advance'\n                                                                                        + '.endpoint.configuration'}\n                                                                                    defaultMessage='Advanced \n                                                                                    Configurations'\n                                                                                />\n                                                                            </Typography>\n                                                                        </Button>\n                                                                        <Button\n                                                                            className={classes.button}\n                                                                            aria-label='Settings'\n                                                                            onClick={() => toggleEndpointSecurityConfig(\n                                                                                '', 'production',\n                                                                            )}\n                                                                            disabled={\n                                                                                (isRestricted(\n                                                                                    ['apim:api_create'], api,\n                                                                                )\n                                                                                )\n                                                                            }\n                                                                            variant='outlined'\n                                                                        >\n                                                                            <Icon\n                                                                                className={classes.buttonIcon}\n                                                                            >\n                                                                                security\n                                                                            </Icon>\n                                                                            <Typography>\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.endpoint'\n                                                                                        + '.security.configuration'}\n                                                                                    defaultMessage={'Endpoint '\n                                                                                        + 'Security Configurations'}\n                                                                                />\n                                                                            </Typography>\n                                                                        </Button>\n                                                                    </InlineMessage>\n                                                                )\n                                                                : (\n                                                                    <GenericEndpoint\n                                                                        autoFocus\n                                                                        name={endpointType.key === 'prototyped'\n                                                                            ? (\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints.'\n                                                                                        + 'EndpointOverview.prototype'\n                                                                                        + '.endpoint.prototype.header'}\n                                                                                    defaultMessage='Prototype Endpoint'\n                                                                                />\n                                                                            ) : (\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints.'\n                                                                                        + 'EndpointOverview.production'\n                                                                                        + '.endpoint.production.header'}\n                                                                                    defaultMessage='Production Endpoint'\n                                                                                />\n                                                                            )}\n                                                                        className={classes.defaultEndpointWrapper}\n                                                                        endpointURL={getEndpoints\n                                                                        (\n                                                                            'production_endpoints'\n                                                                        )}\n                                                                        type=''\n                                                                        index={0}\n                                                                        category='production_endpoints'\n                                                                        editEndpoint={editEndpoint}\n                                                                        setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                                        esCategory='production'\n                                                                        setESConfigOpen={toggleEndpointSecurityConfig}\n                                                                        apiId={api.id}\n                                                                    />\n                                                                )}\n                                                        </Collapse>\n                                                        {endpointType.key === 'prototyped' ? <div />\n                                                            : (\n                                                                <div>\n                                                                    <FormControlLabel\n                                                                        control={(\n                                                                            <Checkbox\n                                                                                id='sandbox-endpoint-checkbox'\n                                                                                disabled={isRestricted(\n                                                                                    ['apim:api_create'], api)}\n                                                                                checked={endpointCategory.sandbox}\n                                                                                value='sandbox'\n                                                                                color='primary'\n                                                                                onChange={() => (\n                                                                                    handleOnChangeEndpointCategoryChange\n                                                                                    (\n                                                                                        'sandbox',\n                                                                                    ))}\n                                                                            />\n                                                                        )}\n                                                                        label={(\n                                                                            <FormattedMessage\n                                                                                id={'Apis.Details.Endpoints.'\n                                                                                    + 'EndpointOverview.sandbox'\n                                                                                    + '.endpoint'}\n                                                                                defaultMessage='Sandbox Endpoint'\n                                                                            />\n                                                                        )}\n                                                                    />\n                                                                    <Collapse in={endpointCategory.sandbox}>\n                                                                        {endpointType.key === 'default'\n                                                                            ? (\n                                                                                <InlineMessage>\n                                                                                    <div className={classes.\n                                                                                        contentWrapper}>\n                                                                                        <Typography\n                                                                                            component='p'\n                                                                                            className={classes.content}\n                                                                                        >\n                                                                                            <FormattedMessage\n                                                                                                id={'Apis.Details'\n                                                                                                    + '.Endpoints'\n                                                                                                    + '.Endpoint'\n                                                                                                    + 'Overview'\n                                                                                                    + '.upload'\n                                                                                                    + '.mediation'\n                                                                                                    + '.message'}\n                                                                                                defaultMessage={\n                                                                                                    'Please upload '\n                                                                                                    + ' a mediation'\n                                                                                                    + ' sequence '\n                                                                                                    + 'file to'\n                                                                                                    + ' Message '\n                                                                                                    + '  Mediation'\n                                                                                                    + ' Policies,'\n                                                                                                    + ' which sets the'\n                                                                                                    + ' endpoints.'\n                                                                                                }\n                                                                                            />\n                                                                                            <IconButton\n                                                                                                onClick={\n                                                                                                    saveAndRedirect\n                                                                                                }\n                                                                                            >\n                                                                                                <LaunchIcon\n                                                                                                    style={{\n                                                                                                        marginLeft:\n                                                                                                            '2px'\n                                                                                                    }}\n                                                                                                    fontSize='small'\n                                                                                                    color='primary'\n                                                                                                />\n                                                                                            </IconButton>\n                                                                                        </Typography>\n                                                                                    </div>\n                                                                                    <Button\n                                                                                        className={classes.button}\n                                                                                        aria-label='Settings'\n                                                                                        onClick={() =>\n                                                                                            toggleAdvanceConfig(\n                                                                                                0, '',\n                                                                                                'sandbox_endpoints',\n                                                                                            )}\n                                                                                        disabled={\n                                                                                            (isRestricted(\n                                                                                                ['apim:api_create'],\n                                                                                                api,\n                                                                                            )\n                                                                                            )\n                                                                                        }\n                                                                                        variant='outlined'\n                                                                                    >\n                                                                                        <Icon\n                                                                                            className={\n                                                                                                classes.buttonIcon}\n                                                                                        >\n                                                                                            settings\n                                                                                        </Icon>\n                                                                                        <Typography>\n                                                                                            <FormattedMessage\n                                                                                                id={'Apis.Details.'\n                                                                                                + 'Endpoints'\n                                                                                                + '.EndpointOverview.'\n                                                                                                + 'advance'\n                                                                                                + '.endpoint.'\n                                                                                                + 'configuration'}\n                                                                                                defaultMessage={\n                                                                                                    'Advanced '\n                                                                                                    + 'Configurations'}\n                                                                                            />\n                                                                                        </Typography>\n                                                                                    </Button>\n                                                                                </InlineMessage>\n                                                                            )\n                                                                            : (\n                                                                                <GenericEndpoint\n                                                                                    autoFocus\n                                                                                    name='Sandbox Endpoint'\n                                                                                    className={classes.\n                                                                                        defaultEndpointWrapper}\n                                                                                    endpointURL={getEndpoints\n                                                                                    (\n                                                                                        'sandbox_endpoints'\n                                                                                    )}\n                                                                                    type=''\n                                                                                    index={0}\n                                                                                    category='sandbox_endpoints'\n                                                                                    editEndpoint={editEndpoint}\n                                                                                    esCategory='sandbox'\n                                                                                    setAdvancedConfigOpen=\n                                                                                        {toggleAdvanceConfig}\n                                                                                    setESConfigOpen=\n                                                                                        {toggleEndpointSecurityConfig}\n                                                                                    apiId={api.id}\n                                                                                />\n                                                                            )}\n\n                                                                    </Collapse>\n                                                                </div>\n                                                            )}\n                                                    </>\n                                                )}\n                                        </>\n                                    )}\n                            </Paper>\n                        )}\n                </Grid>\n                {endpointType.key === 'INLINE' || endpointType.key === 'MOCKED_OAS' || \n                    endpointType.key === 'prototyped' || endpointType.key === 'awslambda' || api.type === 'WS'\n                    ? <div />\n                    : (\n                        <Grid item xs={12}>\n                            <Typography variant='h4' align='left' className={classes.titleWrapper} gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.EndpointOverview.general.config.header'\n                                    defaultMessage='General Endpoint Configurations'\n                                />\n                            </Typography>\n                            <GeneralConfiguration\n                                epConfig={(cloneDeep(epConfig))}\n                                endpointType={endpointType}\n                                endpointsDispatcher={endpointsDispatcher}\n                            />\n                        </Grid>\n                    )}\n                {\n                    endpointType.key === 'INLINE'\n                        || endpointType.key === 'MOCKED_OAS'\n                        || endpointType.key === 'default'\n                        || endpointType.key === 'prototyped'\n                        || api.type === 'WS'\n                        || endpointType.key === 'awslambda'\n                        || endpointType.key === 'service'\n                        ? <div />\n                        : (\n                            <Grid item xs={12}>\n                                <Typography\n                                    variant='h4'\n                                    align='left'\n                                    className={classes.titleWrapper}\n                                    gutterBottom\n                                >\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.'\n                                            + 'EndpointOverview.lb.failover.endpoints.header'}\n                                        defaultMessage='Load balance and Failover Configurations'\n                                    />\n                                </Typography>\n                                <LoadbalanceFailoverConfig\n                                    handleEndpointCategorySelect={handleEndpointCategorySelect}\n                                    toggleAdvanceConfig={toggleAdvanceConfig}\n                                    toggleESConfig={toggleEndpointSecurityConfig}\n                                    endpointsDispatcher={endpointsDispatcher}\n                                    epConfig={(cloneDeep(epConfig))}\n                                    endpointSecurityInfo={endpointSecurityInfo}\n                                    handleEndpointTypeSelect={handleEndpointTypeSelect}\n                                    globalEpType={endpointType}\n                                    apiType={api.type}\n                                />\n                            </Grid>\n                        )\n                }\n            </Grid>\n            <Dialog open={advanceConfigOptions.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.advance.endpoint.configuration'\n                            defaultMessage='Advanced Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <AdvanceEndpointConfig\n                        isSOAPEndpoint={endpointType.key === 'address'}\n                        advanceConfig={advanceConfigOptions.config}\n                        onSaveAdvanceConfig={saveAdvanceConfig}\n                        onCancel={closeAdvanceConfig}\n                    />\n                </DialogContent>\n            </Dialog>\n            <Dialog open={endpointSecurityConfig.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.security.configuration'\n                            defaultMessage='Endpoint Security Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {endpointSecurityConfig.category === 'production' ? (\n                        <EndpointSecurity\n                            securityInfo={endpointSecurityInfo\n                                && (endpointSecurityInfo.production\n                                    ? endpointSecurityInfo.production : endpointSecurityInfo)}\n                            onChangeEndpointAuth={handleEndpointSecurityChange}\n                            saveEndpointSecurityConfig={saveEndpointSecurityConfig}\n                            closeEndpointSecurityConfig={closeEndpointSecurityConfig}\n                            isProduction\n                        />\n                    ) : (\n                        <EndpointSecurity\n                            securityInfo={endpointSecurityInfo\n                                && (endpointSecurityInfo.sandbox\n                                    ? endpointSecurityInfo.sandbox : endpointSecurityInfo)}\n                            onChangeEndpointAuth={handleEndpointSecurityChange}\n                            saveEndpointSecurityConfig={saveEndpointSecurityConfig}\n                            closeEndpointSecurityConfig={closeEndpointSecurityConfig}\n                        />\n                    )}\n                </DialogContent>\n            </Dialog>\n            <Dialog open={typeChangeConfirmation.openDialog}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation'\n                            defaultMessage='Change Endpoint Type'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation.message'\n                            defaultMessage='Your current endpoint configuration will be lost.'\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => { setTypeChangeConfirmation({ openDialog: false, serviceInfo: false }); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.change.type.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={() => { changeEndpointType(typeChangeConfirmation.type); }}\n                        color='primary'\n                        id='change-endpoint-type-btn'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints..EndpointOverview.change.type.proceed'\n                            defaultMessage='Proceed'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nEndpointOverview.propTypes = {\n    classes: PropTypes.shape({\n        overviewWrapper: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        endpointName: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    swaggerDef: PropTypes.shape({}).isRequired,\n    updateSwagger: PropTypes.func.isRequired,\n    saveAndRedirect: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointOverview));\n","/*\n *  Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useContext,\n    useEffect,\n    useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControlLabel,\n    Grid,\n    Icon,\n    Paper,\n    Radio,\n    RadioGroup,\n    Tooltip,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport MockedOASOperation from 'AppComponents/Apis/Details/Endpoints/Prototype/MockedOASOperation';\nimport MockScriptOperation from 'AppComponents/Apis/Details/Endpoints/Prototype/MockScriptOperation';\nimport GenericOperation from 'AppComponents/Apis/Details/Resources/components/GenericOperation';\nimport GroupOfOperations from 'AppComponents/Apis/Details/Resources/components/GroupOfOperations';\nimport CONSTS from 'AppData/Constants';\nimport { Progress, Alert } from 'AppComponents/Shared';\n\n/**\n * Fetches example mock impl scripts\n * @return {{ mockScripts: Array | null, error : Error | null, progress: boolean }} status of the api call\n */\nconst useFetchScripts = () => {\n    const { api } = useContext(APIContext);\n    const [error, setError] = useState(null);\n    const [progress, setProgress] = useState(true);\n    const [mockScripts, setMockScripts] = useState(null);\n\n    useEffect(() => {\n        api.getGeneratedMockScriptsOfAPI(api.id)\n            .then((response) => {\n                setMockScripts(response.obj.list);\n            })\n            .catch((e) => {\n                console.error(error);\n                Alert.error(`Something went wrong while fetching example mock scripts!!`);\n                setError(e);\n            }).finally(() => {\n                setProgress(false);\n            });\n    }, []);\n    return { mockScripts, error, progress };\n};\n\n/**\n * The mock impl endpoints base component.\n * This component lists the api resources to add custom mediation scripts.\n *\n * @param {any} props The input props.\n * @return {any} The JSX representation of the component.\n * */\nfunction MockImplEndpoints(props) {\n    const {\n        paths, swagger, updatePaths, endpointType, endpointConfig, endpointsDispatcher\n    } = props;\n    const scriptType = ['INLINE', 'MOCKED_OAS'].includes(endpointType) ? endpointType : 'INLINE';\n    const [changedToType, setChangedToType] = useState(scriptType);\n    const [typeChangeConfirmation, setTypeChangeConfirmation] = useState(false);\n\n    const { mockScripts, progress } = useFetchScripts();\n\n    /**\n     * Handles the endpoint type change event. \n     * @param {any} type The endpoint type to change in to.\n     * */\n    const handleEndpointTypeChange = (type) => {\n        setTypeChangeConfirmation(false)\n        endpointsDispatcher({\n            action: 'set_inline_or_mocked_oas',\n            value: {\n                endpointConfig,\n                endpointImplementationType: type,\n            },\n        });\n    };\n\n    /**\n     * Handles the endpoint type select event. If endpoint scripts has existing values, show confirmation dialog.\n     * @param {any} event The select event.\n     * */\n    const handleEndpointTypeSelect = (event) => {\n        // endpoint type changed from inline to mocked_oas need the confirmation dialog.\n        // also the selected type should be temperarily keep till the change has confirmed.\n        if (event.target.value === 'MOCKED_OAS') {\n            setTypeChangeConfirmation(true);\n            setChangedToType(event.target.value);\n        } else {\n            handleEndpointTypeChange(event.target.value)\n        }\n    };\n\n    if (progress) {\n        return <Progress />\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Typography>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.MockImpl.Options'\n                        defaultMessage='Select the gateway type'\n                    />\n                </Typography>\n                <RadioGroup\n                    aria-label='accessMethod'\n                    name='accessMethod'\n                    value={scriptType}\n                    onChange={handleEndpointTypeSelect}\n                >\n                    <div>\n                        <FormControlLabel\n                            value='INLINE'\n                            control={<Radio color='primary' />}\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id='Apis.Details.Endpoints.EndpointOverview.MockImpl.Option.Inline'\n                                        defaultMessage='Regular gateway (Synapse gateway)'\n                                    />\n                                )\n                            }\n                        />\n                    </div>\n                    <div>\n                        <FormControlLabel\n                            value='MOCKED_OAS'\n                            control={<Radio color='primary' />}\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id='Apis.Details.Endpoints.EndpointOverview.MockImpl.Option.MockedOAS'\n                                        defaultMessage='Choreo Connect'\n                                    />\n                                )\n                            }\n                        />\n                        <Tooltip\n                            title={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.MockImpl.Option.MockedOAS'\n                                            + '.description'}\n                                        defaultMessage='If you want to add/update examples, update the API Definition'\n                                    />\n                                )\n                            }\n                        >\n                            <Icon>help_outline</Icon>\n                        </Tooltip>\n                    </div>\n                </RadioGroup>\n            </Grid>\n            <Grid container direction='row' justify='flex-start' spacing={2} alignItems='stretch'>\n                <Grid item md={12}>\n                    <Paper>\n                        {Object.keys(paths).map((path) => {\n                            return (\n                                <Grid key={path} item md={12}>\n                                    <GroupOfOperations openAPI={swagger} tag={path}>\n                                        <Grid\n                                            container\n                                            direction='column'\n                                            justify='flex-start'\n                                            spacing={1}\n                                            alignItems='stretch'\n                                        >\n                                            {Object.keys(paths[path]).map((method) => {\n                                                return CONSTS.HTTP_METHODS.includes(method) ? (\n                                                    <Grid key={`${path}/${method}`} item>\n                                                        <GenericOperation\n                                                            target={path}\n                                                            verb={method}>\n                                                            {scriptType === 'MOCKED_OAS' ?\n                                                                <MockedOASOperation\n                                                                    operation={paths[path][method]}\n                                                                />\n                                                                :\n                                                                <MockScriptOperation\n                                                                    resourcePath={path}\n                                                                    resourceMethod={method}\n                                                                    operation={paths[path][method]}\n                                                                    updatePaths={updatePaths}\n                                                                    paths={paths}\n                                                                    mockScripts={mockScripts}\n                                                                />\n                                                            }\n                                                        </GenericOperation>\n                                                    </Grid>\n                                                ) : null;\n                                            })}\n                                        </Grid>\n                                    </GroupOfOperations>\n                                </Grid>\n                            );\n                        })}\n                    </Paper>\n                </Grid>\n            </Grid>\n\n            <Dialog open={typeChangeConfirmation}>\n                <DialogTitle>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.MockImpl.type.change.confirmation'\n                            defaultMessage='Change Mock implementation'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.MockImpl.type.change.confirmation.message'\n                            defaultMessage='Your current mock endpoint implementation scripts will be lost.'\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => { setTypeChangeConfirmation(false) }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.MockImpl.type.change.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={() => { handleEndpointTypeChange(changedToType) }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints..EndpointOverview.MockImpl.type.change.proceed'\n                            defaultMessage='Proceed'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nMockImplEndpoints.propTypes = {\n    paths: PropTypes.shape({}).isRequired,\n    updatePaths: PropTypes.func.isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    endpointConfig: PropTypes.shape({}).isRequired,\n    swagger: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.string.isRequired,\n};\n\nexport default React.memo(MockImplEndpoints);\n","/*\n *  Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { lazy, Suspense, useState, useEffect } from 'react';\nimport {\n    CircularProgress,\n    Divider,\n    Grid,\n    makeStyles,\n    MenuItem,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"GenResourceMonaco\" */));\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        dropdown: {\n            marginRight: theme.spacing(5),\n        },\n    };\n});\n\n/**\n * The OAS mock impl for operation.\n *\n * @param {any} props The input props\n * @return {any} The JSX representation of the component.\n * */\nfunction MockedOASOperation(props) {\n    const { operation } = props;\n    return (\n        <>\n            {operation.responses ?\n                <Grid spacing={2} container direction='row' justify='flex-start' alignItems='flex-start'>\n                    <Grid item xs={12}>\n                        <Typography gutterBottom variant='subtitle1'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Prototype.MockedOAS.title'\n                                defaultMessage='Responses'\n                            />\n                            <Typography style={{ marginLeft: '10px' }} gutterBottom variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.Prototype.MockedOAS.subTitle'\n                                    defaultMessage='Mocked examples generated from OAS'\n                                />\n                            </Typography>\n                            <Divider variant='middle' />\n                        </Typography>\n                    </Grid>\n\n                    {Object.entries(operation.responses).map(([responseCode, response]) => (\n                        <Grid item xs={12} key={responseCode}>\n                            <MockedOASExample response={response}\n                                responseCode={responseCode} />\n                        </Grid>\n                    ))}\n                </Grid> : <FormattedMessage\n                    id='Apis.Details.Endpoints.Prototype.MockedOAS.Response.NotProvided'\n                    defaultMessage='Responses are not provided in the API definition'\n                />\n            }\n        </>\n    );\n}\n\n/**\n * The example response component.\n *\n * @param {any} props The input props\n * @return {any} JSX element\n * */\nfunction MockedOASExample(props) {\n    const { response, responseCode } = props\n    // oas3 has examples in content, where as oas2 has in examples\n    const { content } = response\n    const oas2Examples = response.examples\n    const isEmptyOAS3Content = !content || Object.keys(content).length < 1\n    const isEmptyOAS2Examples = !oas2Examples || Object.keys(oas2Examples).length < 1\n\n    const [selectedMediaType, setSelectedMediaType] = useState(() => {\n        if (!isEmptyOAS3Content) {\n            return Object.keys(content)[0];\n        } else if (!isEmptyOAS2Examples) {\n            return Object.keys(oas2Examples)[0]\n        }\n        return null\n    });\n    const [selectedExample, setSelectedExample] = useState();\n    // in oas3, multiple examples can be provided \n    const [selectedExampleType, setSelectedExampleType] = useState();\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (!isEmptyOAS3Content && selectedMediaType) {\n            const { example, examples } = content[selectedMediaType]\n            if (example) {\n                setSelectedExample(JSON.stringify(example, null, '\\t'))\n            } else if (examples && Object.keys(examples).length > 0) {\n                setSelectedExampleType(Object.keys(examples)[0])\n            }\n        } else if (!isEmptyOAS2Examples && selectedMediaType) {\n            const example = oas2Examples[selectedMediaType]\n            if (example) {\n                setSelectedExample(JSON.stringify(example, null, '\\t'))\n            }\n        }\n    }, [selectedMediaType]);\n\n    useEffect(() => {\n        if (selectedExampleType) {\n            const example = content[selectedMediaType].examples[selectedExampleType].value\n            if (example) {\n                setSelectedExample(JSON.stringify(example, null, '\\t'))\n            }\n        }\n    }, [selectedExampleType]);\n\n    return (\n        <Grid container>\n            <Grid item xs={1}>{responseCode}</Grid>\n            <Grid item xs={11}>\n                {selectedExample ?\n                    <>\n                        <TextField\n                            select\n                            SelectProps={{\n                                autoWidth: true,\n                                IconComponent: ArrowDropDown,\n                            }}\n                            className={classes.dropdown}\n                            label='Media Type'\n                            value={selectedMediaType}\n                            onChange={({ target: { value } }) => {\n                                setSelectedMediaType(value)\n                            }}\n                            helperText='Controls Accept header'\n                            margin='dense'\n                            variant='outlined'\n                        >\n                            {!isEmptyOAS3Content ? Object.keys(content)\n                                .map((mediaType,) => (\n                                    <MenuItem\n                                        key={mediaType}\n                                        value={mediaType}>\n                                        {mediaType}\n                                    </MenuItem>\n                                ))\n                                :\n                                !isEmptyOAS2Examples && Object.keys(oas2Examples)\n                                    .map((mediaType,) => (\n                                        <MenuItem\n                                            key={mediaType}\n                                            value={mediaType}>\n                                            {mediaType}\n                                        </MenuItem>\n                                    ))\n                            }\n                        </TextField>\n                        {selectedExampleType &&\n                            <TextField\n                                select\n                                SelectProps={{\n                                    autoWidth: true,\n                                    IconComponent: ArrowDropDown,\n                                }}\n                                className={classes.dropdown}\n                                label='Examples'\n                                value={selectedExampleType}\n                                onChange={({ target: { value } }) => {\n                                    setSelectedExampleType(value)\n                                }}\n                                margin='dense'\n                                variant='outlined'\n                            >\n                                {Object.keys(content[selectedMediaType].examples)\n                                    .map((exampleType,) => (\n                                        <MenuItem\n                                            key={exampleType}\n                                            value={exampleType}>\n                                            {exampleType}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>}\n                        <Typography variant='body1' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Prototype.MockedOAS.Response.Example'\n                                defaultMessage='Example Value'\n                            />\n                        </Typography>\n                        <Suspense fallback={<CircularProgress />}>\n                            <MonacoEditor\n                                // 19 is the default line height\n                                height={selectedExample.split(/\\r\\n|\\r|\\n/).length * 19}\n                                theme='vs-dark'\n                                value={selectedExample}\n                                options={{\n                                    readOnly: true,\n                                    lineNumbers: 'off',\n                                    scrollbar: { vertical: 'hidden' },\n                                    renderWhitespace: 'none',\n                                    automaticLayout: true,\n                                    minimap: { enabled: false },\n                                }}\n                                language='json'\n                            />\n                        </Suspense>\n                    </>\n                    :\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.Prototype.MockedOAS.Response.Example.NotProvided'\n                        defaultMessage='Response Examples are not provided in the API definition'\n                    />\n                }\n            </Grid>\n        </Grid>\n    );\n}\n\nMockedOASExample.propTypes = {\n    responseCode: PropTypes.string.isRequired,\n    response: PropTypes.shape({ content: PropTypes.shape({}), examples: PropTypes.shape({}) }).isRequired,\n};\n\nMockedOASOperation.propTypes = {\n    operation: PropTypes.shape({ responses: PropTypes.shape({}), }).isRequired,\n};\n\nexport default React.memo(MockedOASOperation);\n","/*\n *  Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useCallback,\n    lazy,\n    Suspense,\n    useContext,\n    useState,\n} from 'react';\nimport {\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"GenResourceMonaco\" */));\n\nconst xMediationScriptProperty = 'x-mediation-script';\nconst defaultScript = '/* mc.setProperty(\\'CONTENT_TYPE\\', \\'application/json\\');\\n\\t'\n    + 'mc.setPayloadJSON(\\'{ \"data\" : \"sample JSON\"}\\');*/\\n'\n    + '/*Uncomment the above comment block to send a sample response.*/';\n\nconst useStyles = makeStyles(() => {\n    return {\n        scriptResetButton: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '10px',\n        },\n    };\n});\n\n/**\n * Retrieve mock script for the method of the resource.\n * @param {*} mockScripts mock scripts array\n * @param {*} path path/target\n * @param {*} method method/verb\n * @returns {any} js mock script\n */\nfunction getGeneratedMockScriptOfAPI(mockScripts, path, method) {\n    if (mockScripts) {\n        const matchedResource = mockScripts.find(\n            mockScript => (mockScript.verb.toLowerCase() === method.toLowerCase() && mockScript.path === path));\n        if (matchedResource) {\n            return matchedResource.content;\n        }\n    }\n    return null;\n}\n\n/**\n * Script mock impl for operation.\n *\n * @param {any} props The input props\n * @return {any} The JSX representation of the component.\n * */\nfunction MockScriptOperation(props) {\n    const {\n        resourcePath, resourceMethod, operation, updatePaths, paths, mockScripts\n    } = props;\n    const { api } = useContext(APIContext);\n    const [showReset, setShowReset] = useState(false);\n    const [mockValueDetails, setMockValueDetails] = useState({ resourcePath: '', resourceMethod: '' });\n    const classes = useStyles();\n\n    /**\n     * Handles the onChange event of the script editor.\n     *\n     * @param {string} value The editor content\n     * @param {string} path The path value of the resource.\n     * @param {string} method The resource method.\n     * */\n    const onScriptChange = useCallback(\n        (value, path, method) => {\n            const tmpPaths = JSON.parse(JSON.stringify(paths));\n            tmpPaths[path][method][xMediationScriptProperty] = value;\n            updatePaths(tmpPaths);\n        },\n        [mockValueDetails.resourcePath, mockValueDetails.resourceMethod],\n    );\n\n    const mediationScript = operation[xMediationScriptProperty];\n    const script = mediationScript === undefined ? defaultScript : mediationScript;\n    const originalScript = getGeneratedMockScriptOfAPI(mockScripts, resourcePath, resourceMethod);\n\n    return (\n        <Grid container direction='column'>\n            <Grid item className={classes.scriptResetButton}>\n                <Typography variant='subtitle2'>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.Prototype.MockImplEndpoints.script'\n                        defaultMessage='Script'\n                    />\n                </Typography>\n                {showReset\n                    && (\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={() => {\n                                setShowReset(false);\n                                setMockValueDetails({ resourcePath, resourceMethod });\n                                onScriptChange(originalScript, resourcePath, resourceMethod);\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Prototype.MockImplEndpoints.script.reset'\n                                defaultMessage='Reset'\n                            />\n                        </Button>\n                    )}\n            </Grid>\n            <Grid item>\n                <Suspense fallback={<CircularProgress />}>\n                    <MonacoEditor\n                        height='50vh'\n                        width='100%'\n                        theme='vs-dark'\n                        value={script}\n                        options={{\n                            selectOnLineNumbers: true,\n                            readOnly: `${isRestricted(['apim:api_create'], api)}`,\n                        }}\n                        language='javascript'\n                        onChange={(content) => {\n                            setShowReset(true);\n                            setMockValueDetails({ resourcePath, resourceMethod });\n                            onScriptChange(content, resourcePath, resourceMethod);\n                        }}\n                    />\n                </Suspense>\n            </Grid>\n        </Grid>\n    );\n}\n\nMockScriptOperation.propTypes = {\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n    paths: PropTypes.shape({}).isRequired,\n    updatePaths: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    mockScripts: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({}), PropTypes.string])).isRequired,\n};\n\nexport default React.memo(MockScriptOperation);\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Divider,\n    Grid,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\n\nconst useStyles = verb => makeStyles((theme) => {\n    const backgroundColor = theme.custom.resourceChipColors[verb];\n    return {\n        customButton: {\n            '&:hover': { backgroundColor },\n            backgroundColor,\n            width: theme.spacing(12),\n            color: theme.palette.getContrastText(backgroundColor),\n        },\n        paperStyles: {\n            border: `1px solid ${backgroundColor}`,\n            borderBottom: '',\n        },\n        customDivider: {\n            backgroundColor,\n        },\n        highlightSelected: {\n            backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n        },\n        contentNoMargin: {\n            margin: theme.spacing(0),\n        },\n        targetText: {\n            maxWidth: 180,\n            margin: '0px 20px',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            display: 'inline-block',\n        },\n        title: {\n            display: 'inline',\n            margin: `0 ${theme.spacing(5)}px`,\n        },\n    };\n});\n\n/**\n *\n * Common resource component for mock impl endpoints\n * @export\n * @param {*} props input props\n * @returns {React.Component} @inheritdoc\n */\nfunction GenericOperation(props) {\n    const {\n        target,\n        verb,\n        children,\n    } = props;\n    const [isExpanded, setIsExpanded] = useState(false);\n    const classes = useStyles(verb)();\n\n    /**\n     * Handle panel expansions when navigation happen between mockimpl options\n     *\n     * @param {*} event event\n     * @param {*} expanded status of the expansion panel\n     */\n    function handleExpansion(event, expanded) {\n        setIsExpanded(expanded);\n    }\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isExpanded}\n                onChange={handleExpansion}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={classes.highlightSelected}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    id={verb + target}\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={4} style={{ display: 'flex', alignItems: 'center' }}>\n                            <Button\n                                disableFocusRipple\n                                variant='contained'\n                                aria-label={'HTTP verb ' + verb}\n                                size='small'\n                                className={classes.customButton}\n                            >\n                                {verb}\n                            </Button>\n                            <Typography\n                                display='inline-block'\n                                variant='h6'\n                                component='div'\n                                gutterBottom\n                                className={classes.targetText}\n                                title={target}\n                            >\n                                {target}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <ExpansionPanelDetails>\n                    {children}\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nGenericOperation.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n};\n\nexport default React.memo(GenericOperation);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    withStyles,\n    Box,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from './GeneralConfiguration/Certificates';\nimport API from '../../../../data/api'; // TODO: Use webpack aliases instead of relative paths ~tmkb\nimport Alert from '../../../Shared/Alert';\nimport { endpointsToList } from './endpointUtils';\n\nconst styles = (theme) => ({\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    securityHeading: {\n        fontWeight: 600,\n    },\n    sandboxEndpointSwitch: {\n        marginLeft: theme.spacing(2),\n    },\n});\n\n/**\n * The component which holds the general configurations of the endpoints.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction GeneralConfiguration(props) {\n    const {\n        intl,\n        epConfig,\n        endpointType,\n        classes,\n    } = props;\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointCertificates, setEndpointCertificates] = useState([]);\n    const [aliasList, setAliasList] = useState([]);\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = (certificate, endpoint, alias) => {\n        return API.addCertificate(certificate, endpoint, alias)\n            .then((resp) => {\n                if (resp.status === 201) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.add.success',\n                        defaultMessage: 'Certificate added successfully',\n                    }));\n                    const tmpCertificates = [...endpointCertificates];\n                    tmpCertificates.push({\n                        alias: resp.obj.alias,\n                        endpoint: resp.obj.endpoint,\n                    });\n                    setEndpointCertificates(tmpCertificates);\n                }\n            })\n            .catch((err) => {\n                console.error(err.message);\n                if (err.message === 'Conflict') {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.alias.exist',\n                        defaultMessage: 'Adding Certificate Failed. Certificate Alias Exists.',\n                    }));\n                } else if (err.response && err.response.body && err.response.body.description) {\n                    Alert.error(err.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.error',\n                        defaultMessage: 'Something went wrong while adding the certificate.',\n                    }));\n                }\n                return Promise.reject(err);\n            });\n    };\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteCertificate = (alias) => {\n        return API.deleteEndpointCertificate(alias)\n            .then((resp) => {\n                setEndpointCertificates(() => {\n                    if (resp.status === 200) {\n                        return endpointCertificates.filter((cert) => {\n                            return cert.alias !== alias;\n                        });\n                    } else {\n                        return -1;\n                    }\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.success',\n                    defaultMessage: 'Certificate Deleted Successfully',\n                }));\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.error',\n                    defaultMessage: 'Error Deleting Certificate',\n                }));\n                return Promise.reject(err);\n            });\n    };\n\n    // Get the certificates from backend.\n    useEffect(() => {\n        if (!isRestricted(['apim:ep_certificates_view', 'apim:api_view'])) {\n            const endpointCertificatesList = [];\n            const aliases = [];\n\n            let endpoints = endpointsToList(epConfig);\n            const filteredEndpoints = [];\n            const epLookup = [];\n            for (const ep of endpoints) {\n                if (ep) {\n                    if (!epLookup.includes(ep.url)) {\n                        filteredEndpoints.push(ep);\n                        epLookup.push(ep.url);\n                    }\n                }\n            }\n            endpoints = filteredEndpoints;\n\n            for (const ep of endpoints) {\n                if (ep && ep.url) {\n                    const params = {};\n                    params.endpoint = ep.url;\n                    API.getEndpointCertificates(params)\n                        .then((response) => {\n                            const { certificates } = response.obj;\n                            for (const cert of certificates) {\n                                endpointCertificatesList.push(cert);\n                                aliases.push(cert.alias);\n                            }\n                        })\n                        .catch((err) => {\n                            console.error(err);\n                        });\n                }\n            }\n            setEndpointCertificates(endpointCertificatesList);\n            setAliasList(aliases);\n        } else {\n            setEndpointCertificates([]);\n        }\n    }, []);\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n                disabled={isRestricted(['apim:ep_certificates_view', 'apim:api_view'])}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    id={endpointType.key + '-panel1bh-header'}\n                    className={classes.configHeaderContainer}\n                >\n                    {endpointType.key === 'awslambda' ? (\n                        <div />\n                    ) : (\n                        <Typography\n                            className={classes.secondaryHeading}\n                            hidden={endpointType.key === 'awslambda'}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.certificates.sub.heading'\n                                defaultMessage='Certificates'\n                            />\n                            :\n                            {' '}\n                            {endpointCertificates.length}\n                            {isRestricted(['apim:ep_certificates_view', 'apim:api_view']) && (\n                                <Box ml={2}>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.GeneralConfiguration.not.allowed'\n                                            defaultMessage={'*You are not authorized to view certificates'\n                                        + ' due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Box>\n                            )}\n                        </Typography>\n                    )}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    <Grid\n                        container\n                        className={classes.endpointConfigSection}\n                        hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                    >\n                        <Certificates\n                            endpoints={endpointsToList(epConfig)}\n                            certificates={endpointCertificates}\n                            uploadCertificate={saveCertificate}\n                            deleteCertificate={deleteCertificate}\n                            aliasList={aliasList}\n                        />\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nGeneralConfiguration.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(GeneralConfiguration));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Icon,\n    IconButton,\n    MenuItem,\n    TextField,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport EndpointListing from 'AppComponents/Apis/Details/Endpoints/EndpointListing';\nimport LoadBalanceConfig from 'AppComponents/Apis/Details/Endpoints/LoadBalanceConfig';\nimport Collapse from '@material-ui/core/Collapse';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { getEndpointTypeProperty } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypeSelect: {\n        width: '50%',\n        marginTop: theme.spacing(1),\n    },\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    endpointsTypeSelectWrapper: {\n        display: 'flex',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    lbConfigBtn: {\n        position: 'relative',\n        top: '10px',\n    },\n    endpointName: {\n        fontWeight: 600,\n    },\n    wrapper: {\n        width: '100%',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'none', value: 'None' },\n    { key: 'failover', value: 'Failover' },\n    { key: 'load_balance', value: 'Load Balanced' },\n];\n\n/**\n * The component which holds the load balance and failover configuration.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction LoadbalanceFailoverConfig(props) {\n    const {\n        epConfig,\n        classes,\n        endpointsDispatcher,\n        toggleAdvanceConfig,\n        toggleESConfig,\n        globalEpType,\n        handleEndpointCategorySelect,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointType, setEndpointType] = useState(props);\n    const [isLBConfigOpen, setLBConfigOpen] = useState(false);\n\n    useEffect(() => {\n        const epType = epConfig.endpoint_type;\n        if (epType === 'http' || epType === 'address') {\n            setEndpointType('none');\n        } else {\n            setEndpointType(epType);\n        }\n    }, [props]);\n\n    /**\n     * Method to add new loadbalance/ failover endpoint to the existing endpoints.\n     *\n     * @param {string} category The endpoint category (production/ sandbox)\n     * @param {string} type The endpoint type. (load_balance/ failover)\n     * @param {string} newURL The url of the new endpoint.\n     * */\n    const addEndpoint = (category, type, newURL) => {\n        const endpointConfigCopy = cloneDeep(epConfig);\n        const endpointTemplate = {\n            endpoint_type: globalEpType.key,\n            template_not_supported: false,\n            url: newURL,\n        };\n        const epConfigProperty = getEndpointTypeProperty(type, category);\n        let endpointList = endpointConfigCopy[epConfigProperty];\n        /**\n         * Check whether we have existing endpoints added.\n         * */\n        if (endpointList) {\n            if (!Array.isArray(endpointList)) {\n                endpointList = [endpointList].concat(endpointTemplate);\n            } else {\n                endpointList = endpointList.concat(endpointTemplate);\n            }\n        } else {\n            endpointList = [endpointTemplate];\n        }\n        endpointConfigCopy[epConfigProperty] = endpointList;\n        endpointsDispatcher({ action: 'add_endpoint', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to handle the loadbalance configuration changes.\n     *\n     * @param {object} lbConfig The modified loadbalance configuration.\n     * */\n    const handleLBConfigChange = (lbConfig) => {\n        endpointsDispatcher({ action: 'set_lb_config', value: { ...epConfig, ...lbConfig } });\n        setLBConfigOpen(false);\n    };\n\n    const getEndpointTypeHeading = () => {\n        switch (endpointType) {\n            case 'none':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.none.heading'\n                        defaultMessage='Not Configured'\n                    />\n                );\n            case 'failover':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.failover.heading'\n                        defaultMessage='Failover Endpoints'\n                    />\n                );\n            default:\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.loadbalance.heading'\n                        defaultMessage='Load Balanced Endpoints'\n                    />\n                );\n        }\n    };\n\n    /**\n     * Method to remove the selected endpoint from the endpoints list.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (production/ sandbox)\n     * */\n    const removeEndpoint = (index, epType, category) => {\n        const tmpEndpointConfig = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(epType, category);\n        const indexToRemove = epType === 'failover' ? index - 1 : index;\n        const tmpEndpoints = tmpEndpointConfig[endpointConfigProperty];\n        tmpEndpoints.splice(indexToRemove, 1);\n        endpointsDispatcher({\n            action: 'remove_endpoint',\n            value: { ...epConfig, [endpointConfigProperty]: tmpEndpoints },\n        });\n    };\n\n    const editEndpoint = () => {};\n    const handleEndpointTypeSelect = (event) => {\n        setEndpointType(event.target.value);\n        handleEndpointCategorySelect(event);\n    };\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded || endpointType === 'load_balance' || endpointType === 'failover'}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    <Typography className={classes.secondaryHeading}>\n                        {getEndpointTypeHeading()}\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    {(!epConfig.production_endpoints && !epConfig.sandbox_endpoints)\n                        ? (\n                            <InlineMessage>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.no.endpoints.message'\n                                            defaultMessage='Add Production/ Sandbox endpoints to configure.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        )\n                        : (\n                            <Grid container item xs={12}>\n                                <Grid xs={12} className={classes.endpointsTypeSelectWrapper}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        id='certificateEndpoint'\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.endpoint.type'\n                                                defaultMessage='Endpoint Type'\n                                            />\n                                        )}\n                                        value={endpointType}\n                                        placeholder='Endpoint'\n                                        onChange={handleEndpointTypeSelect}\n                                        margin='normal'\n                                        variant='outlined'\n                                        select\n                                        className={classes.endpointTypeSelect}\n                                    >\n                                        {endpointTypes.map((type) => {\n                                            return <MenuItem\n                                                value={type.key}\n                                                id={'config-type-' + type.key}\n                                            >\n                                                {type.value}\n                                            </MenuItem>;\n                                        })}\n                                    </TextField>\n                                    <div className={classes.lpConfigWrapper}>\n                                        <IconButton\n                                            className={classes.lbConfigBtn}\n                                            disabled={epConfig.endpoint_type !== 'load_balance'}\n                                            aria-label='Delete'\n                                            onClick={() => setLBConfigOpen(true)}\n                                        >\n                                            <Icon>\n                                                settings\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                </Grid>\n                                <Grid xs={12} container spacing={2}>\n                                    <Collapse className={classes.wrapper} in={endpointType !== 'none'}>\n                                        {epConfig.production_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperLeft}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.production.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Production Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'production.loadbalance.endpoint'}\n                                                            defaultMessage='Production Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.production_endpoints}\n                                                failOvers={epConfig.production_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                setESConfigOpen={toggleESConfig}\n                                                category='production_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                        {epConfig.sandbox_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperRight}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.sandbox.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Sandbox Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'sandbox.loadbalance.endpoint'}\n                                                            defaultMessage='Sandbox Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.sandbox_endpoints}\n                                                failOvers={epConfig.sandbox_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                setESConfigOpen={toggleESConfig}\n                                                category='sandbox_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        )}\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Dialog open={isLBConfigOpen}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.load.balance.configuration.title'\n                            defaultMessage='Load Balance Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <LoadBalanceConfig\n                        handleLBConfigChange={handleLBConfigChange}\n                        closeLBConfigDialog={() => setLBConfigOpen(false)}\n                        algoCombo={epConfig.algoCombo}\n                        algoClassName={epConfig.algoClassName}\n                        sessionTimeOut={epConfig.sessionTimeOut}\n                        failOver={epConfig.failOver}\n                        sessionManagement={epConfig.sessionManagement}\n                    />\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nLoadbalanceFailoverConfig.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointSecurityInfo: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    toggleAdvanceConfig: PropTypes.func.isRequired,\n    toggleESConfig: PropTypes.func.isRequired,\n    handleEndpointCategorySelect: PropTypes.func.isRequired,\n    globalEpType: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadbalanceFailoverConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Grid, withStyles } from '@material-ui/core';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport GenericEndpoint from './GenericEndpoint';\nimport GenericEndpointAdd from './GenericEndpointAdd';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        display: 'flex',\n    },\n    epInput: {\n        width: '100%',\n    },\n    epTypeWrapper: {\n        display: 'flex',\n        padding: '5px',\n    },\n    epTypeName: {\n        paddingTop: '10px',\n        fontWeight: 600,\n    },\n    epConfig: {\n        justifyContent: 'flex-end',\n    },\n    leftArrow: {\n        paddingTop: '6px',\n    },\n    leftArrowLight: {\n        color: '#c5c5c5',\n        paddingTop: '6px',\n    },\n    dialogHeader: {\n        fontWeight: 600,\n    },\n    listItemOdd: {\n        background: '#ececec',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n    listItem: {\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n});\n\n/**\n * The Component for endpoint listing.\n * @param {*} props The props that are being passed to the component.\n * @returns {any} The HTML view of the ep listing component.\n */\nfunction EndpointListing(props) {\n    const {\n        classes,\n        category,\n        apiEndpoints,\n        epType,\n        failOvers,\n        editEndpoint,\n        addNewEndpoint,\n        removeEndpoint,\n        setAdvancedConfigOpen,\n        setESConfigOpen,\n        apiId,\n    } = props;\n    const [endpointType, setEndpointType] = useState(epType);\n    const [endpoints, setEndpoints] = useState([{ url: 'http://myservice/endpoint' }]);\n    const selectedRef = useRef(null);\n\n    /**\n     * Method to add a new endpoint.\n     *\n     * @param {string} url The url of the endpoint that needs to be added.\n     * */\n    const addEndpoint = (url) => {\n        addNewEndpoint(category, epType, url);\n    };\n\n    useEffect(() => {\n        setEndpointType(epType);\n        setEndpoints(() => {\n            if (apiEndpoints !== null && epType === 'failover') {\n                return ([apiEndpoints].concat(failOvers));\n            } else {\n                if (apiEndpoints !== undefined) {\n                    return Array.isArray(apiEndpoints) ? apiEndpoints : [apiEndpoints];\n                }\n                return [{ url: 'http://myservice/' }];\n            }\n        });\n    }, [props]);\n\n    return (\n        <div className={classes.listingWrapper} ref={selectedRef}>\n            <Grid container xs={12}>\n                <Grid xs={12}>\n                    {(endpointType === 'failover' || endpointType === 'load_balance') ?\n                        <GenericEndpointAdd\n                            addEndpoint={addEndpoint}\n                            endpointType={endpointType}\n                            category={category}\n                        /> : <div />\n                    }\n                </Grid>\n                <Grid xs={12}>\n                    {\n                        (endpoints.map((ep, index) => {\n                            if (index > 0) {\n                                return (\n                                    <GenericEndpoint\n                                        readOnly\n                                        endpointURL={endpoints[index] ? endpoints[index].url : ''}\n                                        type={endpointType}\n                                        index={index}\n                                        category={category}\n                                        editEndpoint={editEndpoint}\n                                        deleteEndpoint={removeEndpoint}\n                                        setAdvancedConfigOpen={setAdvancedConfigOpen}\n                                        setESConfigOpen={setESConfigOpen}\n                                        apiId={apiId}\n                                    />\n                                );\n                            }\n                            return (<div />);\n                        }))\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nEndpointListing.propTypes = {\n    classes: PropTypes.shape({\n        epTypeWrapper: PropTypes.shape({}),\n        epTypeName: PropTypes.shape({}),\n        listingWrapper: PropTypes.shape({}),\n        epConfig: PropTypes.shape({}),\n    }).isRequired,\n    epType: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    apiEndpoints: PropTypes.shape({}).isRequired,\n    failOvers: PropTypes.shape({}).isRequired,\n    addNewEndpoint: PropTypes.func.isRequired,\n    removeEndpoint: PropTypes.func.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    setESConfigOpen: PropTypes.func.isRequired,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointListing));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useContext } from 'react';\n\nimport {\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n});\n\n/**\n * This component represents the view and functions of endpoint add.\n *\n * @param {any} props The input props.\n * @returns {any} HTML representation of the component.\n * */\nfunction GenericEndpointAdd(props) {\n    const {\n        classes,\n        addEndpoint,\n        endpointType,\n        category\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState('');\n    const { api } = useContext(APIContext);\n\n    /**\n     * The method to handle endpoint add button click action.\n     * */\n    const onAddEndpoint = () => {\n        setServiceUrl('');\n        addEndpoint(serviceUrl);\n    };\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GenericEndpoint.service.url.input'\n                        defaultMessage='Service URL'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create'], api)}\n                className={classes.textField}\n                value={serviceUrl}\n                fullWidth\n                onChange={(event) => setServiceUrl(event.target.value)}\n                variant='outlined'\n                margin='normal'\n                placeholder='Enter the Endpoint URL and press + button'\n                InputProps={{\n                    id: category + '-' + endpointType,\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                onClick={onAddEndpoint}\n                                color='green'\n                                className={classes.iconButton}\n                                aria-label='Search'\n                                disabled={serviceUrl === ''}\n                                id={category + '-' + endpointType + '-add-btn'}\n                            >\n                                <Icon>\n                                    add\n                                </Icon>\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpointAdd.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    addEndpoint: PropTypes.func.isRequired,\n    endpointType: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpointAdd);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    TextField, MenuItem, Grid, Button, withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst algorithms = [\n    {\n        key: 'org.apache.synapse.endpoints.algorithms.RoundRobin',\n        value: 'Round-Robin',\n    },\n    { key: 'other', value: 'Other' },\n];\nconst sessionManagementOps = [\n    { key: 'http', value: 'Transport' },\n    { key: 'soap', value: 'SOAP' },\n    { key: 'simpleClientSession', value: 'Client Id' },\n    { key: 'none', value: 'None' },\n];\n\nconst defaultTemplateObj = {\n    algoClassName: algorithms[0].key,\n    algoCombo: algorithms[0].key,\n    sessionManagement: sessionManagementOps[0].key,\n    sessionTimeOut: 300,\n    failOver: false,\n};\n\nconst styles = (theme) => ({\n    configButtonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingTop: theme.spacing(1),\n    },\n});\n\n/**\n * The component for loadbalance endpoint configuration.\n * @param {any} props The props that are being passed.\n * @returns {any} The HTML contents of the Configuration component.\n */\nfunction LoadBalanceConfig(props) {\n    const {\n        algoClassName,\n        algoCombo,\n        sessionManagement,\n        sessionTimeOut,\n        failOver,\n        handleLBConfigChange,\n        closeLBConfigDialog,\n        classes,\n    } = props;\n    const [lbConfig, setLbConfigObject] = useState(defaultTemplateObj);\n    const [algoClassNameError, setAlgoClassNameError] = useState(false);\n    const { api } = useContext(APIContext);\n\n    useEffect(() => {\n        setLbConfigObject(() => {\n            const tmpLBConfig = { ...defaultTemplateObj };\n            if (algoCombo) {\n                tmpLBConfig.algoCombo = algoCombo;\n            }\n            if (sessionManagement) {\n                tmpLBConfig.sessionManagement = sessionManagement;\n            }\n            if (algoClassName) {\n                tmpLBConfig.algoClassName = algoClassName;\n            }\n            if (sessionTimeOut) {\n                tmpLBConfig.sessionTimeOut = sessionTimeOut;\n            }\n            if (failOver) {\n                tmpLBConfig.failOver = failOver;\n            }\n            return tmpLBConfig;\n        });\n    }, [props]);\n\n    /**\n     * Method to capture the alogrithm select changes.\n     *\n     * @param {any} event The event triggered by the element.\n     * */\n    const handleAlgorithmChange = (event) => {\n        const { value } = event.target;\n        setLbConfigObject({\n            ...lbConfig,\n            algoCombo: value,\n            algoClassName: value === 'other' ? '' : defaultTemplateObj.algoClassName,\n        });\n    };\n\n    /**\n     * Method to capture the onChange event of the elements.\n     *\n     * @param {any} event The event triggered by the element.\n     * @param {string} field The respective field which is being changed.\n     * */\n    const handleFieldChange = (event, field) => {\n        setLbConfigObject({ ...lbConfig, [field]: event.target.value });\n    };\n\n    /**\n     * Method to capture the onChange event of the elements.\n     *\n     * @param {any} event The event triggered by the element.\n     * @param {string} field The respective field which is being changed.\n     * */\n    const handleFailoverFieldChange = (event, field) => {\n        setLbConfigObject({ ...lbConfig, [field]: event.target.checked });\n    };\n\n    /**\n     * Method to set the configuration changes to the original endpoints config object.\n     * */\n    const submitConfiguration = () => {\n        handleLBConfigChange(lbConfig);\n    };\n\n    return (\n        <>\n            <Grid container direction='column'>\n                <TextField\n                    id='algorithmSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.algorithm'\n                            defaultMessage='Algorithm'\n                        />\n                    )}\n                    value={lbConfig.algoCombo}\n                    onChange={handleAlgorithmChange}\n                    helperText='Please select the Loadbalance Algorithm.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {algorithms.map((algo) => (\n                        <MenuItem key={algo.key} value={algo.key} selected={lbConfig.algoCombo}>\n                            {algo.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                {(lbConfig.algoCombo === 'other')\n                    ? (\n                        <TextField\n                            id='customAlgoInput'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.LoadBalanceConfig.class.name.for.algorithm'\n                                    defaultMessage='Class Name for Algorithm'\n                                />\n                            )}\n                            required\n                            error={algoClassNameError}\n                            value={lbConfig.algoClassName}\n                            onChange={(event) => handleFieldChange(event, 'algoClassName')}\n                            onBlur={() => setAlgoClassNameError(lbConfig.algoClassName === '')}\n                            helperText='Enter the class name of the loadbalance algorithm'\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            margin='normal'\n                        />\n                    ) : <div /> }\n                <TextField\n                    id='sessionMgtSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.management'\n                            defaultMessage='Session Management'\n                        />\n                    )}\n                    value={lbConfig.sessionManagement}\n                    onChange={(event) => handleFieldChange(event, 'sessionManagement')}\n                    helperText='Please select the Session Management mechanism.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {sessionManagementOps.map((option) => (\n                        <MenuItem key={option.key} value={option.key}>\n                            {option.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id='sessionTimeout'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.timeout'\n                            defaultMessage='Session Timeout (Millis)'\n                        />\n                    )}\n                    value={lbConfig.sessionTimeOut}\n                    onChange={(event) => handleFieldChange(event, 'sessionTimeOut')}\n                    type='number'\n                    placeholder='300'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                />\n                <FormControlLabel\n                    control={(\n                        <Checkbox\n                            id='failOver'\n                            checked={lbConfig.failOver}\n                            onChange={(event) => handleFailoverFieldChange(event, 'failOver')}\n                            margin='normal'\n                            disabled={isRestricted(['apim:api_create'], api)}\n                        />\n                    )}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.failover'\n                            defaultMessage='Enable Failover'\n                        />\n                    )}\n                />\n            </Grid>\n            <Grid className={classes.configButtonContainer}>\n                <Button\n                    color='primary'\n                    variant='contained'\n                    autoFocus\n                    onClick={submitConfiguration}\n                    disabled={lbConfig.algoClassName === '' || isRestricted(['apim:api_create'], api)}\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button\n                    onClick={closeLBConfigDialog}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </>\n    );\n}\n\nLoadBalanceConfig.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    algoClassName: PropTypes.string.isRequired,\n    algoCombo: PropTypes.string.isRequired,\n    sessionManagement: PropTypes.string.isRequired,\n    sessionTimeOut: PropTypes.string.isRequired,\n    failOver: PropTypes.bool.isRequired,\n    handleLBConfigChange: PropTypes.func.isRequired,\n    closeLBConfigDialog: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadBalanceConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Divider,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    Button,\n    withStyles,\n    Checkbox,\n    ListItemText,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst itemHeight = 48;\nconst itemPaddingTop = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: (itemHeight * 4.5) + itemPaddingTop, width: 250,\n        },\n    },\n};\nconst styles = (theme) => ({\n    formControl: {\n        width: '500px',\n    },\n    subTitle: {\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    configContainer: {\n        paddingTop: '10px',\n    },\n    configSubContainer: {\n        paddingBottom: '10px',\n        marginTop: '5px',\n        padding: '5px',\n    },\n    textField: {\n        marginRight: theme.spacing(1),\n        width: '45%',\n    },\n    advanceDialogActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\n/**\n * The component for advanced endpoint configurations.\n * @param {any} props The input props\n * @returns {any} The HTML representation of the compoenent.\n */\nfunction AdvanceEndpointConfig(props) {\n    const { api } = useContext(APIContext);\n    const {\n        classes,\n        intl,\n        advanceConfig,\n        isSOAPEndpoint,\n        onSaveAdvanceConfig,\n        onCancel,\n    } = props;\n    const [advanceConfigObj, setAdvanceConfig] = useState(() => {\n        const config = {};\n        if (isSOAPEndpoint) {\n            config.format = 'soap11';\n            config.optimize = 'leave-as-is';\n        }\n        config.actionDuration = '30000';\n        config.actionSelect = 'fault';\n        config.factor = '';\n        config.retryDelay = '';\n        config.retryErroCode = [];\n        config.retryTimeOut = '';\n        config.suspendDuration = '';\n        config.suspendErrorCode = [];\n        config.suspendMaxDuration = '';\n        return config;\n    });\n\n    /**\n     * The error codes definition.\n     * */\n    const errorCodes = [\n        {\n            key: '101001',\n            value: '101001 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.receiving',\n                defaultMessage: 'Receiver IO error Receiving',\n            }),\n        },\n        {\n            key: '101500',\n            value: '101500 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.sending',\n                defaultMessage: 'Sender IO Error Sending',\n            }),\n        },\n        {\n            key: '101000',\n            value: '101000 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.sending',\n                defaultMessage: 'Retriever IO Error Sending',\n            }),\n        },\n        {\n            key: '101501',\n            value: '101501 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.receiving',\n                defaultMessage: 'Sender IO Error Receiving',\n            }),\n        },\n        {\n            key: '101503',\n            value: '101503 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.failed',\n                defaultMessage: 'Connection Failed',\n            }),\n        },\n        {\n            key: '101504',\n            value: '101504 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.timed.out',\n                defaultMessage: 'Connection Timed Out',\n            }),\n        },\n        {\n            key: '101505',\n            value: '101505 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.closed',\n                defaultMessage: 'Connection Closed',\n            }),\n        },\n        {\n            key: '101506',\n            value: '101506 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.tpp.protocol.violation',\n                defaultMessage: 'TTP Protocol Violation',\n            }),\n        },\n        {\n            key: '101507',\n            value: '101507 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.cancel',\n                defaultMessage: 'Connect Cancel',\n            }),\n        },\n        {\n            key: '101508',\n            value: '101508 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.timeout',\n                defaultMessage: 'Connect Timeout',\n            }),\n        },\n        {\n            key: '101509',\n            value: '101509 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.send.abort',\n                defaultMessage: 'Send Abort',\n            }),\n        },\n        {\n            key: '101510',\n            value: '101510 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.response.processing.failure',\n                defaultMessage: 'Response Processing Failure',\n            }),\n        }];\n\n    /**\n     * Supported action items.\n     * */\n    const actionItems = [\n        {\n            key: 'fault',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.execute.fault.sequence',\n                defaultMessage: 'Execute Fault Sequence',\n            }),\n        },\n        {\n            key: 'discard',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.discard.message',\n                defaultMessage: 'Discard Message',\n            }),\n        },\n    ];\n\n    /**\n     * Message types for the address endpoint type.\n     * */\n    const messageTypes = [\n        { key: 'soap11', value: 'SOAP 1.1' },\n        { key: 'soap12', value: 'SOAP 1.2' },\n        {\n            key: 'POX',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.plain.old.xml',\n                defaultMessage: 'Plain Old XML (POX)',\n            }),\n        },\n        {\n            key: 'REST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.representational.state.transfer',\n                defaultMessage: 'Representational State Transfer (REST)',\n            }),\n        },\n        {\n            key: 'GET',\n            value: 'GET',\n        },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    /**\n     * Address endpoint message optimizations.\n     * */\n    const optimizeOptions = [\n        { key: 'SWA', value: 'SWA' },\n        { key: 'MTOM', value: 'MTOM' },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    useEffect(() => {\n        setAdvanceConfig(() => {\n            if (advanceConfig === {}) {\n                return { ...advanceConfigObj };\n            }\n            return { ...advanceConfigObj, ...advanceConfig };\n        });\n    }, [props]);\n\n    /**\n     * Method to handle the advance endpoint field change. In each change, the advance config object is getting updated.\n     *\n     * @param {any} event The HTML event triggered by the element.\n     * @param {string} field The HTML element that is being changed.\n     * */\n    const handleConfigFieldChange = (event, field) => {\n        const di = { ...advanceConfigObj, [field]: event.target.value };\n        setAdvanceConfig(di);\n    };\n\n    return (\n        <Grid container direction='column' className={classes.configContainer}>\n            {(isSOAPEndpoint) ? (\n                <Grid item container className={classes.configSubContainer}>\n                    <Typography className={classes.subTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.message.content'\n                            defaultMessage='Message Content'\n                        />\n                    </Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.format.select'\n                                defaultMessage='Format'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.format}\n                            onChange={(event) => handleConfigFieldChange(event, 'format')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {messageTypes.map((messageType) => (\n                                <MenuItem key={messageType.key} value={messageType.key}>\n                                    {messageType.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.optimize.select'\n                                defaultMessage='Optimize'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.optimize}\n                            onChange={(event) => handleConfigFieldChange(event, 'optimize')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {optimizeOptions.map((option) => (\n                                <MenuItem key={option.key} value={option.key}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Divider />\n                </Grid>\n            ) : (<div />)}\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Endpoint.Suspension.State' defaultMessage='Endpoint Suspension State' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.suspendErrorCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'suspendErrorCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                        variant='outlined'\n                        renderValue={(allSelected) => \n                            allSelected.map(selected => errorCodes.find(code => code.key === selected).value)}\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                <Checkbox checked={advanceConfigObj.suspendErrorCode.indexOf(code.key) > -1}         \n                                    color='primary'\n                                />\n                                <ListItemText primary={code.value} />\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='initial-duration-input'\n                    value={advanceConfigObj.suspendDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.initial.duration.ms'\n                            defaultMessage='Initial Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='max-duration-input'\n                    value={advanceConfigObj.suspendMaxDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendMaxDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.max.duration.ms'\n                            defaultMessage='Max Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    value={advanceConfigObj.factor}\n                    onChange={(event) => handleConfigFieldChange(event, 'factor')}\n                    id='factor-input'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.factor'\n                            defaultMessage='Factor'\n                        />\n                    )}\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.endpoint.timeout.state'\n                        defaultMessage='Endpoint Timeout State'\n                    />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.retryErroCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'retryErroCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                        renderValue={(allSelected) => \n                            allSelected.map(selected => errorCodes.find(code => code.key === selected).value)}\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                <Checkbox checked={advanceConfigObj.retryErroCode.indexOf(code.key) > -1}         \n                                    color='primary'\n                                />\n                                <ListItemText primary={code.value} />\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='retries-input'\n                    value={advanceConfigObj.retryTimeOut}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryTimeOut')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retries.before.suspension'\n                            defaultMessage='Retries Before Suspension'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='retry-delay-input'\n                    value={advanceConfigObj.retryDelay}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryDelay')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retry.delay.ms'\n                            defaultMessage='Retry Delay (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Connection.Timeout' defaultMessage='Connection Timeout' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.action'\n                            defaultMessage='Action'\n                        />\n                    </InputLabel>\n                    <Select\n                        autoWidth={false}\n                        value={advanceConfigObj.actionSelect}\n                        onChange={(event) => handleConfigFieldChange(event, 'actionSelect')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {actionItems.map((item) => (\n                            <MenuItem key={item.key} value={item.key}>\n                                {item.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='duration-input'\n                    value={advanceConfigObj.actionDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'actionDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.duration.ms'\n                            defaultMessage='Duration (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => onSaveAdvanceConfig(advanceConfigObj)}\n                    color='primary'\n                    autoFocus\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    variant='contained'\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button onClick={onCancel}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nAdvanceEndpointConfig.propTypes = {\n    classes: PropTypes.shape({\n        configContainer: PropTypes.shape({}),\n        configSubContainer: PropTypes.shape({}),\n        subTitle: PropTypes.shape({}),\n        formControl: PropTypes.shape({}),\n\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    advanceConfig: PropTypes.shape({}).isRequired,\n    isSOAPEndpoint: PropTypes.bool.isRequired,\n    onSaveAdvanceConfig: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(AdvanceEndpointConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid, TextField, MenuItem, InputAdornment,\n    Icon,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n} from '@material-ui/core';\nimport { RemoveRedEye } from '@material-ui/icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport Button from '@material-ui/core/Button';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport isEmpty from 'lodash.isempty';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CONSTS from 'AppData/Constants';\n\nimport EditableParameterRow from './EditableParameterRow';\n\nconst styles = () => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n    },\n    radioWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    addParameter: {\n        marginRight: '16px',\n    },\n    marginRight: {\n        marginRight: '8px',\n    },\n    buttonIcon: {\n        marginRight: '16px',\n    },\n    button: {\n        marginTop: '5px',\n    },\n    listItem: {\n        marginTop: '25px',\n    },\n    eye: {\n        cursor: 'pointer',\n    },\n});\n\n/**\n * The base component for advanced endpoint configurations.\n * @param {any} props The props that are being passed\n * @returns {any} The html representation of the component.\n */\nfunction EndpointSecurity(props) {\n    const { api } = useContext(APIContext);\n    const {\n        intl, securityInfo, onChangeEndpointAuth, classes, isProduction,\n        saveEndpointSecurityConfig,\n        closeEndpointSecurityConfig,\n    } = props;\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState(CONSTS.DEFAULT_ENDPOINT_SECURITY);\n    const [securityValidity, setSecurityValidity] = useState();\n\n    const [showAddParameter, setShowAddParameter] = useState(false);\n    const [clientSecretIsMasked, setClientSecretIsMasked] = useState(true);\n    // Implementation of useState variables for parameter name and value\n    const [parameterName, setParameterName] = useState(null);\n    const [parameterValue, setParameterValue] = useState(null);\n    const endpointType = isProduction ? 'production' : 'sandbox';\n\n    const authTypes = [\n        {\n            key: 'NONE',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.none',\n                defaultMessage: 'None',\n            }),\n        },\n        {\n            key: 'BASIC',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.basic',\n                defaultMessage: 'Basic Auth',\n            }),\n        },\n        {\n            key: 'DIGEST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.digest.auth',\n                defaultMessage: 'Digest Auth',\n            }),\n        },\n        {\n            key: 'OAUTH',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth',\n                defaultMessage: 'OAuth 2.0',\n            }),\n        },\n    ];\n    const grantTypes = [\n        {\n            key: 'CLIENT_CREDENTIALS',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth.grant.type.client',\n                defaultMessage: 'Client Credentials',\n            }),\n        },\n        {\n            key: 'PASSWORD',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth.grant.type.password',\n                defaultMessage: 'Resource Owner Password',\n            }),\n        },\n    ];\n    useEffect(() => {\n        let tmpSecurity = {};\n        if (securityInfo) {\n            tmpSecurity = { ...securityInfo };\n            const {\n                type, username, password, grantType, tokenUrl, clientId, clientSecret, customParameters,\n            } = securityInfo;\n            tmpSecurity.type = type === null ? 'NONE' : type;\n            tmpSecurity.username = username;\n            tmpSecurity.password = password === '' ? '**********' : password;\n            tmpSecurity.grantType = grantType;\n            tmpSecurity.tokenUrl = tokenUrl;\n            tmpSecurity.clientId = clientId === '' ? '********' : clientId;\n            tmpSecurity.clientSecret = clientSecret === '' ? '********' : clientSecret;\n            tmpSecurity.customParameters = customParameters;\n        }\n        setEndpointSecurityInfo(tmpSecurity);\n    }, [securityInfo]);\n\n    /**\n     * Validating whether token url is in a proper format\n     * @param {*} value value of the field\n     * @returns {*} boolean value\n     */\n    const validateTokenUrl = (value) => {\n        const state = APIValidation.url.required().validate(value).error;\n        if (state === null) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Validate Security Info properties\n     * @param {*} field value of the field\n     */\n    const validateAndUpdateSecurityInfo = (field) => {\n        if (!endpointSecurityInfo[field]) {\n            setSecurityValidity({ ...securityValidity, [field]: false });\n        } else {\n            let validity = true;\n            if (field === 'tokenUrl') {\n                validity = validateTokenUrl(endpointSecurityInfo[field]);\n            }\n            setSecurityValidity({ ...securityValidity, [field]: validity });\n        }\n    };\n\n    /**\n     * Show or hide the Add Parameter component\n     */\n    const toggleAddParameter = () => {\n        setShowAddParameter(!showAddParameter);\n    };\n\n    /**\n     * Show or hide the Client Secret\n     */\n    const toggleClientSecretMask = () => {\n        setClientSecretIsMasked(!clientSecretIsMasked);\n    };\n\n    /**\n     * Set the custom parameter name or value property\n     * @param {*} name name of the field edited\n     * @returns {*} fills the parameter name or parameter value states\n     */\n    const handleParameterChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'parameterName') {\n            setParameterName(value);\n        } else if (name === 'parameterValue') {\n            setParameterValue(value);\n        }\n    };\n\n    /**\n     * Check if the field is empty or not\n     * @param {*} itemValue value of the field\n     * @returns {*} boolean value\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Add new custom parameter\n     */\n    const handleAddToList = () => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n\n        if (customParametersCopy !== null\n            && Object.prototype.hasOwnProperty.call(customParametersCopy, parameterName)) {\n            Alert.warning('Parameter name: ' + parameterName + ' already exists');\n        } else {\n            customParametersCopy[parameterName] = parameterValue;\n            setParameterName(null);\n            setParameterValue(null);\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Update existing custom parameter name-value pair\n     * @param {*} oldRow previous name-value pair\n     * @param {*} newRow new name-value pair\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n        const { oldName, oldValue } = oldRow;\n        const { newName, newValue } = newRow;\n        if (customParametersCopy !== null\n            && Object.prototype.hasOwnProperty.call(customParametersCopy, newName) && oldName === newName) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                customParametersCopy[oldName] = newValue;\n            }\n        } else {\n            delete customParametersCopy[oldName];\n            customParametersCopy[newName] = newValue;\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Delete existing custom parameter name-value pair\n     * @param {*} oldName name property of the name-value pair to be removed\n     */\n    const handleDelete = (oldName) => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n        if (customParametersCopy !== null && Object.prototype.hasOwnProperty.call(customParametersCopy, oldName)) {\n            delete customParametersCopy[oldName];\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Keyboard shortcut to execute adding custom parameters when pressing the Enter key\n     * @param {*} event event containing the key that was pressed\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    /**\n     * Render the custom parameters component\n     * @returns {*} list of items added\n     */\n    const renderCustomParameters = () => {\n        const items = [];\n        for (const name in endpointSecurityInfo.customParameters) {\n            if (Object.prototype.hasOwnProperty.call(endpointSecurityInfo.customParameters, name)) {\n                items.push(<EditableParameterRow\n                    oldName={name}\n                    oldValue={endpointSecurityInfo.customParameters[name]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    customParameters={endpointSecurityInfo.customParameters}\n                    {...props}\n                    isRestricted={isRestricted}\n                    api={api}\n                />);\n            }\n        }\n        return items;\n    };\n\n    if (endpointSecurityInfo.type != null) {\n        endpointSecurityInfo.type = endpointSecurityInfo.type.toUpperCase();\n    }\n\n    return (\n        <Grid container direction='row' spacing={2}>\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    fullWidth\n                    select\n                    value={endpointSecurityInfo && endpointSecurityInfo.type}\n                    variant='outlined'\n                    onChange={(event) => {\n                        setEndpointSecurityInfo({\n                            ...endpointSecurityInfo,\n                            type: event.target.value,\n                        });\n                    }}\n                    inputProps={{\n                        name: 'key',\n                        id: 'auth-type-select',\n                    }}\n                    onBlur={() => validateAndUpdateSecurityInfo(isProduction)}\n                >\n                    {authTypes.map((type) => (\n                        <MenuItem value={type.key} id={'auth-type-' + type.key}>{type.value}</MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={6} />\n\n            {(endpointSecurityInfo.type === 'OAUTH')\n                && (\n                    <>\n                        <Grid item xs={6}>\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], api)}\n                                required\n                                fullWidth\n                                select\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                        + '.EndpointSecurity.grant.type.input'}\n                                        defaultMessage='Grant Type'\n                                    />\n                                )}\n                                variant='outlined'\n                                onChange={(event) => setEndpointSecurityInfo(\n                                    { ...endpointSecurityInfo, grantType: event.target.value },\n                                )}\n                                value={endpointSecurityInfo.grantType}\n                                inputProps={{\n                                    name: 'key',\n                                    id: 'grant-type-select',\n                                }}\n                                onBlur={() => validateAndUpdateSecurityInfo('grantType')}\n                            >\n                                {grantTypes.map((type) => (\n                                    <MenuItem value={type.key}>{type.value}</MenuItem>\n                                ))}\n                            </TextField>\n                        </Grid>\n\n                        {(endpointSecurityInfo.grantType === 'CLIENT_CREDENTIALS'\n                        || endpointSecurityInfo.grantType === 'PASSWORD') && (\n                            <>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.tokenUrl === false}\n                                        helperText={\n                                            securityValidity && securityValidity.tokenUrl === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.no.tokenUrl.error'}\n                                                    defaultMessage={'Token URL should not be empty'\n                                                    + ' or formatted incorrectly'}\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.tokenUrl.message'}\n                                                    defaultMessage='Enter Token URL'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-tokenUrl'\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.token.url.input'}\n                                                defaultMessage='Token URL'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, tokenUrl: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.tokenUrl}\n                                        onBlur={() => validateAndUpdateSecurityInfo('tokenUrl')}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.clientId === false}\n                                        helperText={\n                                            securityValidity && securityValidity.clientId === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.no.clientId.error'}\n                                                    defaultMessage='Client ID should not be empty'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                    + 'EndpointSecurity.clientId.message'}\n                                                    defaultMessage='Enter Client ID'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-clientId'\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.clientId.input'}\n                                                defaultMessage='Client ID'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, clientId: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.clientId}\n                                        onBlur={() => validateAndUpdateSecurityInfo('clientId')}\n                                        InputProps={{\n                                            autoComplete: 'new-password',\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.clientSecret === false}\n                                        helperText={\n                                            securityValidity && securityValidity.clientSecret === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.no.clientSecret.error'}\n                                                    defaultMessage='Client Secret should not be empty'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.clientSecret.message'}\n                                                    defaultMessage='Enter Client Secret'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-clientSecret'\n                                        type={clientSecretIsMasked ? 'password' : 'text'}\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.clientSecret.input'}\n                                                defaultMessage='Client Secret'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, clientSecret: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.clientSecret}\n                                        onBlur={() => validateAndUpdateSecurityInfo('clientSecret')}\n                                        InputProps={{\n                                            autoComplete: 'new-password',\n                                            endAdornment: (\n                                                <InputAdornment position='end'>\n                                                    <RemoveRedEye\n                                                        className={classes.eye}\n                                                        onClick={toggleClientSecretMask}\n                                                    />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                            </>\n                        )}\n                    </>\n                )}\n\n            {(endpointSecurityInfo.type === 'BASIC'\n                || endpointSecurityInfo.type === 'DIGEST'\n                || endpointSecurityInfo.grantType === 'PASSWORD') && (\n                <>\n                    <Grid item xs={6}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            required\n                            fullWidth\n                            error={securityValidity && securityValidity.username === false}\n                            helperText={\n                                securityValidity && securityValidity.username === false ? (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.no.username.error'}\n                                        defaultMessage='Username should not be empty'\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.username.message'}\n                                        defaultMessage='Enter Username'\n                                    />\n                                )\n                            }\n                            variant='outlined'\n                            id='auth-userName'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.user.name.input'\n                                    defaultMessage='Username'\n                                />\n                            )}\n                            onChange={(event) => setEndpointSecurityInfo(\n                                { ...endpointSecurityInfo, username: event.target.value },\n                            )}\n                            value={endpointSecurityInfo.username}\n                            onBlur={() => validateAndUpdateSecurityInfo('username')}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            required\n                            fullWidth\n                            error={securityValidity && securityValidity.password === false}\n                            helperText={\n                                securityValidity && securityValidity.password === false ? (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.no.password.error'}\n                                        defaultMessage='Password should not be empty'\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.password.message'}\n                                        defaultMessage='Enter Password'\n                                    />\n                                )\n                            }\n                            variant='outlined'\n                            type='password'\n                            id='auth-password'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.password.input'\n                                    defaultMessage='Password'\n                                />\n                            )}\n                            value={endpointSecurityInfo.password}\n                            onChange={(event) => setEndpointSecurityInfo(\n                                { ...endpointSecurityInfo, password: event.target.value },\n                            )}\n                            onBlur={() => validateAndUpdateSecurityInfo('password')}\n                            InputProps={{\n                                autoComplete: 'new-password',\n                            }}\n                        />\n                    </Grid>\n                </>\n            )}\n\n            {endpointSecurityInfo.type === 'OAUTH' && (endpointSecurityInfo.grantType === 'CLIENT_CREDENTIALS'\n            || endpointSecurityInfo.grantType === 'PASSWORD')\n            && (\n                <Grid item xs={12}>\n                    <ListItem\n                        className={classes.listItem}\n                    >\n                        <ListItemAvatar>\n                            <Icon color='primary'>info</Icon>\n                        </ListItemAvatar>\n                        <ListItemText>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.add.new.parameter.info'\n                                defaultMessage={'You can add any additional payload parameters'\n                                + ' required for the endpoint below'}\n                            />\n                        </ListItemText>\n                    </ListItem>\n                    <Button\n                        size='medium'\n                        className={classes.button}\n                        onClick={toggleAddParameter}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.add.new.parameter'\n                            defaultMessage='Add New Parameter'\n                        />\n                    </Button>\n                </Grid>\n            )}\n\n            <Grid item xs={12} />\n\n            {(endpointSecurityInfo.type === 'OAUTH')\n            && (!isEmpty(endpointSecurityInfo.customParameters) || showAddParameter) && (\n                <Grid item xs={12}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.label.parameter.name'}\n                                        defaultMessage='Parameter Name'\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.label.parameter.value'}\n                                        defaultMessage='Parameter Value'\n                                    />\n                                </TableCell>\n                                <TableCell />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {showAddParameter\n                            && (\n                                <>\n                                    <TableRow>\n                                        <TableCell>\n                                            <TextField\n                                                fullWidth\n                                                required\n                                                id='outlined-required'\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Endpoints.GeneralConfiguration'\n                                                    + '.EndpointSecurity.input.parameter.name',\n                                                    defaultMessage: 'Parameter Name',\n                                                })}\n                                                margin='normal'\n                                                variant='outlined'\n                                                className={classes.addParameter}\n                                                value={parameterName === null ? '' : parameterName}\n                                                onChange={handleParameterChange('parameterName')}\n                                                onKeyDown={handleKeyDown('parameterName')}\n                                                helperText={validateEmpty(parameterName)\n                                                    ? 'Invalid parameter name' : ''}\n                                                error={validateEmpty(parameterName)}\n                                                disabled={isRestricted(\n                                                    ['apim:api_create', 'apim:api_publish'],\n                                                    api,\n                                                )}\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <TextField\n                                                fullWidth\n                                                required\n                                                id='outlined-required'\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Endpoints.GeneralConfiguration'\n                                                        + '.EndpointSecurity.input.parameter.value',\n                                                    defaultMessage: 'Parameter Value',\n                                                })}\n                                                margin='normal'\n                                                variant='outlined'\n                                                className={classes.addParameter}\n                                                value={parameterValue === null ? '' : parameterValue}\n                                                onChange={handleParameterChange('parameterValue')}\n                                                onKeyDown={handleKeyDown('parameterValue')}\n                                                error={validateEmpty(parameterValue)}\n                                                disabled={isRestricted(\n                                                    ['apim:api_create', 'apim:api_publish'],\n                                                    api,\n                                                )}\n                                            />\n                                        </TableCell>\n                                        <TableCell align='right'>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                disabled={\n                                                    !parameterValue\n                                                            || !parameterName\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                }\n                                                onClick={handleAddToList}\n                                                className={classes.marginRight}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.add'\n                                                    defaultMessage='Add'\n                                                />\n                                            </Button>\n\n                                            <Button onClick={toggleAddParameter}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.cancel'\n                                                    defaultMessage='Cancel'\n                                                />\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </>\n                            )}\n                            {((endpointType === 'production') || (endpointType === 'sandbox')) && (\n                                renderCustomParameters()\n                            )}\n                        </TableBody>\n                    </Table>\n                </Grid>\n            )}\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => saveEndpointSecurityConfig(endpointSecurityInfo, endpointType)}\n                    color='primary'\n                    autoFocus\n                    variant='contained'\n                    style={{ marginTop: '10px', marginRight: '10px', marginBottom: '10px' }}\n                    id='endpoint-security-submit-btn'\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurityConfig.config.save.button'\n                        defaultMessage='Submit'\n                    />\n                </Button>\n                <Button\n                    onClick={closeEndpointSecurityConfig}\n                    style={{ marginTop: '10px', marginBottom: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurityConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nEndpointSecurity.propTypes = {\n    intl: PropTypes.shape({}).isRequired,\n    securityInfo: PropTypes.shape({}).isRequired,\n    onChangeEndpointAuth: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(EndpointSecurity));\n","/* eslint-disable react/jsx-no-bind */\n/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n}));\n\n/**\n * EditableParameterRow for OAuth Endpoint Security\n * @param {*} props properties\n * @returns {*} EditableParameterRow component\n */\nfunction EditableParameterRow(props) {\n    const {\n        oldName, oldValue,\n        handleUpdateList, handleDelete,\n        intl, isRestricted, api,\n    } = props;\n    const [newName, setName] = useState(oldName);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n\n    /**\n     * Set edit mode\n     */\n    const updateEditMode = () => {\n        setEditMode(!editMode);\n    };\n\n    /**\n     * Update name field\n     * @param {*} event value entered for name field\n     */\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setName(value);\n    };\n\n    /**\n     * Update value field\n     * @param {*} event value entered for the value field\n     */\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n\n    /**\n     * Validate if the field is empty\n     * @param {*} itemValue value of the field\n     * @returns {*} boolean value\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Save the updated values in the custom parameters object\n     */\n    const saveRow = () => {\n        const oldRow = { oldName, oldValue };\n        const newRow = { newName: newName || oldName, newValue: newValue || oldValue };\n        handleUpdateList(oldRow, newRow);\n        setEditMode(false);\n    };\n\n    /**\n     * Delete name-value pair in the custom parameters object\n     */\n    const deleteRow = () => {\n        handleDelete(oldName);\n    };\n\n    /**\n     * Keyboard event listener to save the name-value pair on Enter\n     * @param {*} e event containing the key that was pressed\n     */\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n\n    // Styles definition\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.GeneralConfiguration.EditableParameterRow.Parameter.Name',\n                            defaultMessage: 'Parameter Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newName}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newName)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldName}</TableCell>\n            )}\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.GeneralConfiguration.EditableParameterRow.Parameter.Value',\n                            defaultMessage: 'Parameter Value',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newValue}\n                        onChange={handleValueChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newValue)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldValue}</TableCell>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <IconButton\n                            className={classes.link}\n                            aria-label='save'\n                            onClick={saveRow}\n                            onKeyDown={() => {}}\n                            disabled={validateEmpty(newName) || validateEmpty(newValue)}\n                            color='inherit'\n                        >\n                            <SaveIcon className={classes.buttonIcon} />\n                        </IconButton>\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label='edit'\n                        onClick={updateEditMode}\n                        onKeyDown={() => {}}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label='remove'\n                    onClick={deleteRow}\n                    onKeyDown={() => {}}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nEditableParameterRow.propTypes = {\n    oldName: PropTypes.string.isRequired,\n    oldValue: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableParameterRow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid,\n    TextField,\n    makeStyles,\n    Typography,\n    Tooltip,\n    RadioGroup,\n    FormControlLabel,\n    MenuItem,\n    Collapse,\n    Radio,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Configurations from 'Config';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    typography: {\n        display: 'inline-block',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    selectField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 20,\n    },\n    banner: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\n/**\n * The credentials component. This component holds the access and secret key pair.\n * @param {any} props The parameters to credentials component.\n * @returns {any} HTML view of the credentials component.\n */\nexport default function Credentials(props) {\n    const {\n        apiId,\n        endpointConfig,\n        endpointsDispatcher,\n    } = props;\n    const classes = useStyles();\n    const [pageError, setPageError] = useState(null);\n    const handleChange = (event) => {\n        const newEndpointConfig = { ...endpointConfig };\n        newEndpointConfig.access_method = event.target.value;\n        newEndpointConfig.amznAccessKey = '';\n        newEndpointConfig.amznSecretKey = '';\n        newEndpointConfig.amznRegion = '';\n        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n        setPageError(null);\n    };\n    const handleEnableSTSAssumeRoleChange = (event) => {\n        const newEndpointConfig = { ...endpointConfig };\n        newEndpointConfig.assume_role = event.target.checked;\n        newEndpointConfig.amznRoleArn = '';\n        newEndpointConfig.amznRoleSessionName = '';\n        newEndpointConfig.amznRoleRegion = '';\n        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n    };\n    const { regions } = Configurations.apis.endpoint.aws;\n    useEffect(() => {\n        API.getAmznResourceNames(apiId)\n            .catch((error) => {\n                setPageError(error.response.body.error);\n            });\n    }, []);\n    return (\n        <>\n            <Grid item md={12} xs={12}>\n                <Typography className={classes.typography}>\n                    <FormattedMessage\n                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                        + '.endpoint.accessMethod'}\n                        defaultMessage='Access Method'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item className={classes.contentWrapper}>\n                <RadioGroup\n                    aria-label='accessMethod'\n                    name='accessMethod'\n                    value={endpointConfig.access_method}\n                    onChange={handleChange}\n                >\n                    <div>\n                        <FormControlLabel\n                            value='role-supplied'\n                            control={<Radio color='primary' />}\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.accessMethod.roleSupplied'}\n                                        defaultMessage='Using IAM role-supplied temporary AWS credentials'\n                                    />\n                                )\n                            }\n                        />\n                        <Tooltip\n                            title={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.tooltip'}\n                                        defaultMessage={'You can and should use an IAM role to manage temporary '\n                                        + 'credentials for applications that run on an AWS instance'}\n                                    />\n                                )\n                            }\n                        >\n                            <Button className={classes.helpButton}>\n                                <HelpOutline className={classes.helpIcon}/>\n                            </Button>\n                        </Tooltip>\n                    </div>\n                    <div>\n                        <FormControlLabel\n                            value='stored'\n                            control={<Radio color='primary' />}\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.accessMethod.stored'}\n                                        defaultMessage='Using stored AWS credentials'\n                                    />\n                                )\n                            }\n                        />\n                    </div>\n                </RadioGroup>\n            </Grid>\n            <Grid item className={classes.contentWrapper}>\n                { endpointConfig.access_method === 'stored' &&\n                    <Collapse in={endpointConfig.access_method === 'stored'}>\n                        <TextField\n                            required\n                            id='outlined-required'\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.accessKey'}\n                                        defaultMessage='Access Key'\n                                    />\n                                )\n                            }\n                            margin='normal'\n                            variant='outlined'\n                            className={classes.textField}\n                            value={endpointConfig.amznAccessKey}\n                            onChange={(event) => {\n                                const newEndpointConfig = { ...endpointConfig };\n                                newEndpointConfig.amznAccessKey = event.target.value;\n                                endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                            }}\n                        />\n                        <TextField\n                            required\n                            id='outlined-password-input-required'\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.secretKey'}\n                                        defaultMessage='Secret Key'\n                                    />\n                                )\n                            }\n                            type='password'\n                            margin='normal'\n                            variant='outlined'\n                            className={classes.textField}\n                            value={endpointConfig.amznSecretKey}\n                            onChange={(event) => {\n                                const newEndpointConfig = { ...endpointConfig };\n                                newEndpointConfig.amznSecretKey = event.target.value;\n                                endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                            }}\n                        />\n                        <TextField\n                            select\n                            required\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.region'}\n                                        defaultMessage='Region'\n                                    />\n                                )\n                            }\n                            margin='normal'\n                            variant='outlined'\n                            className={classes.textField}\n                            value={endpointConfig.amznRegion}\n                            onChange={(event) => {\n                                const newEndpointConfig = { ...endpointConfig };\n                                newEndpointConfig.amznRegion = event.target.value;\n                                endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                            }}\n                        >\n                            {Object.entries(regions).map(([key, value]) => ((\n                                <MenuItem key={key} value={key}>\n                                    {value}\n                                </MenuItem>\n                            )))}\n                        </TextField>\n                    </Collapse>\n                }\n            </Grid>\n            <br/>\n            <Grid item className={classes.contentWrapper}>\n                <FormControlLabel\n                    control={(\n                        <Checkbox\n                            color='primary'\n                            checked={endpointConfig.assume_role}\n                            onChange={handleEnableSTSAssumeRoleChange}\n                            name='enableSTSAssumeRole'\n                        />\n                    )}\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.enableSTSAssumeRole'}\n                                defaultMessage='Enable STS AssumeRole'\n                            />\n                        )\n                    }\n                />\n                { endpointConfig.assume_role &&\n                    <Collapse in={endpointConfig.assume_role}>\n                        <TextField\n                            required\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.roleArn'}\n                                        defaultMessage='Role ARN'\n                                    />\n                                )\n                            }\n                            margin='normal'\n                            variant='outlined'\n                            className={classes.textField}\n                            value={endpointConfig.amznRoleArn}\n                            onChange={(event) => {\n                                const newEndpointConfig = { ...endpointConfig };\n                                newEndpointConfig.amznRoleArn = event.target.value;\n                                endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                            }}\n                        />\n                        <TextField\n                            required\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.roleSessionName'}\n                                        defaultMessage='Role Session Name'\n                                    />\n                                )\n                            }\n                            margin='normal'\n                            variant='outlined'\n                            className={classes.textField}\n                            value={endpointConfig.amznRoleSessionName}\n                            onChange={(event) => {\n                                const newEndpointConfig = { ...endpointConfig };\n                                newEndpointConfig.amznRoleSessionName = event.target.value;\n                                endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                            }}\n                        />\n                        <TextField\n                            select\n                            required\n                            label={\n                                (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                        + '.endpoint.roleRegion'}\n                                        defaultMessage='Region'\n                                    />\n                                )\n                            }\n                            margin='normal'\n                            variant='outlined'\n                            className={classes.textField}\n                            value={endpointConfig.amznRoleRegion}\n                            onChange={(event) => {\n                                const newEndpointConfig = { ...endpointConfig };\n                                newEndpointConfig.amznRoleRegion = event.target.value;\n                                endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                            }}\n                        >\n                            {Object.entries(regions).map(([key, value]) => ((\n                                <MenuItem key={key} value={key}>\n                                    {value}\n                                </MenuItem>\n                            )))}\n                        </TextField>\n                    </Collapse>\n                }\n            </Grid>\n            <br/>\n            <Grid item>\n                <Link to={`/apis/${apiId}/resources`}>\n                    <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.linkToResources'}\n                            defaultMessage='Go to Resources to map ARNs'\n                        />\n                        <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                    </Typography>\n                </Link>\n            </Grid>\n            {pageError\n                && (\n                    <Grid item className={classes.banner}>\n                        <Banner\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='warning'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n        </>\n    );\n}\n\nCredentials.propTypes = {\n    apiId: PropTypes.shape('').isRequired,\n    endpointConfig: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n    Grid,\n    Tooltip,\n    InputAdornment,\n    withStyles,\n    IconButton, Icon,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from 'AppComponents/Shared/Autocomplete';\nimport { isRestricted } from 'AppData/AuthManager';\n\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n\n});\n\n/**\n * This is Service endpoint component.\n * \n * @param {any} props The input props\n * @returns {any} The HTML representation of the component.\n */\nfunction ServiceEndpoint(props) {\n    const {\n        category,\n        classes,\n        api,\n        services,\n        type,\n        setAdvancedConfigOpen,\n        esCategory,\n        setESConfigOpen,\n        index,\n        name,\n        editEndpoint,\n        endpointURL,\n        editService\n    } = props;\n    \n    const [selectedServiceUrl, setSelectedServiceUrl] = useState();\n    const defaultService = api.serviceInfo ? {serviceKey: api.serviceInfo.key, serviceUrl: endpointURL}\n        : {serviceKey: '',serviceUrl: '' }\n\n    const setEndpointValue = (value) => {\n        editEndpoint(index, category, value.serviceUrl);\n        setSelectedServiceUrl(value.serviceUrl);\n        if (esCategory ==='production') {\n            editService(value);\n        }\n        \n    };\n\n    return (\n        <>\n            <div>\n                <Grid container spacing={2}>\n                    <Grid item xs={4} className={classes.endpointInputWrapper}>\n                        <div className={classes.endpointInputWrapper}>\n                            <Autocomplete\n                                onChange={(event, value) => setEndpointValue(value)}\n                                id='combo-box-demo'\n                                defaultValue={category === 'production_endpoints' && defaultService}\n                                options={services}\n                                getOptionLabel={(option) => option.serviceKey}\n                                style={{ width:  '100%' }}\n                                renderInput={(params) => <TextField {...params} label={name} variant='outlined'\n                                    margin='normal' defaultValue={category === 'production_endpoints' \n                                     && defaultService.serviceUrl} />}\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <div className={classes.endpointInputWrapper}>\n                            <TextField\n                                disabled\n                                className={classes.textField}\n                                value={!endpointURL ? selectedServiceUrl: endpointURL}\n                                placeholder='Select a service from the service list'\n                                variant='outlined'\n                                margin='normal'\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position='end'>\n\n                                            <>\n                                                <IconButton\n                                                    className={classes.iconButton}\n                                                    aria-label='Settings'\n                                                    onClick={() => setAdvancedConfigOpen(index, type, category)}\n                                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                                >\n                                                    <Tooltip\n                                                        placement='top-start'\n                                                        interactive\n                                                        title={(\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Endpoints.\n                                                                GenericEndpoint.config.endpoint'\n                                                                defaultMessage='Endpoint configurations'\n                                                            />\n                                                        )}\n                                                    >\n                                                        <Icon>\n                                                            settings\n                                                        </Icon>\n                                                    </Tooltip>\n                                                </IconButton>\n                                                <IconButton\n                                                    className={classes.iconButton}\n                                                    aria-label='Security'\n                                                    onClick={() => setESConfigOpen(type, esCategory)}\n                                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                                >\n                                                    <Tooltip\n                                                        placement='top-start'\n                                                        interactive\n                                                        title={(\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Endpoints.\n                                                                GenericEndpoint.security.endpoint'\n                                                                defaultMessage='Endpoint security'\n                                                            />\n                                                        )}\n                                                    >\n                                                        <Icon>\n                                                            security\n                                                        </Icon>\n                                                    </Tooltip>\n                                                </IconButton>\n                                            </>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        </div>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </>\n    )\n}\n\n\nServiceEndpoint.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    services: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    index: PropTypes.number.isRequired,\n    type: PropTypes.string.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    setESConfigOpen: PropTypes.func.isRequired,\n    category: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    editService: PropTypes.func.isRequired,\n    endpointURL: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ServiceEndpoint);\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useAutocomplete, { createFilterOptions } from './useAutocomplete';\n\nexport { createFilterOptions };\n\nexport const styles = (theme) => ({\n    /* Styles applied to the root element. */\n    root: {\n        '&$focused $clearIndicatorDirty': {\n            visibility: 'visible',\n        },\n        /* Avoid double tap issue on iOS */\n        '@media (pointer: fine)': {\n            '&:hover $clearIndicatorDirty': {\n                visibility: 'visible',\n            },\n        },\n    },\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n        width: '100%',\n    },\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n        margin: 3,\n        maxWidth: 'calc(100% - 6px)',\n    },\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n        margin: 2,\n        maxWidth: 'calc(100% - 4px)',\n    },\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n    /* Styles applied to the Input element. */\n    inputRoot: {\n        flexWrap: 'wrap',\n        '$hasPopupIcon &, $hasClearIcon &': {\n            paddingRight: 26 + 4,\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n            paddingRight: 52 + 4,\n        },\n        '& $input': {\n            width: 0,\n            minWidth: 30,\n        },\n        '&[class*=\"MuiInput-root\"]': {\n            paddingBottom: 1,\n            '& $input': {\n                padding: 4,\n            },\n            '& $input:first-child': {\n                padding: '6px 0',\n            },\n        },\n        '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n            '& $input': {\n                padding: '4px 4px 5px',\n            },\n            '& $input:first-child': {\n                padding: '3px 0 6px',\n            },\n        },\n        '&[class*=\"MuiOutlinedInput-root\"]': {\n            padding: 9,\n            '$hasPopupIcon &, $hasClearIcon &': {\n                paddingRight: 26 + 4 + 9,\n            },\n            '$hasPopupIcon$hasClearIcon &': {\n                paddingRight: 52 + 4 + 9,\n            },\n            '& $input': {\n                padding: '9.5px 4px',\n            },\n            '& $input:first-child': {\n                paddingLeft: 6,\n            },\n            '& $endAdornment': {\n                right: 9,\n            },\n        },\n        '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n            padding: 6,\n            '& $input': {\n                padding: '4.5px 4px',\n            },\n        },\n        '&[class*=\"MuiFilledInput-root\"]': {\n            paddingTop: 19,\n            paddingLeft: 8,\n            '$hasPopupIcon &, $hasClearIcon &': {\n                paddingRight: 26 + 4 + 9,\n            },\n            '$hasPopupIcon$hasClearIcon &': {\n                paddingRight: 52 + 4 + 9,\n            },\n            '& $input': {\n                padding: '9px 4px',\n            },\n            '& $endAdornment': {\n                right: 9,\n            },\n        },\n        '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n            paddingBottom: 1,\n            '& $input': {\n                padding: '4.5px 4px',\n            },\n        },\n    },\n    /* Styles applied to the input element. */\n    input: {\n        flexGrow: 1,\n        textOverflow: 'ellipsis',\n        opacity: 0,\n    },\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n        opacity: 1,\n    },\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n        // We use a position absolute to support wrapping tags.\n        position: 'absolute',\n        right: 0,\n        top: 'calc(50% - 14px)', // Center vertically\n    },\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n        marginRight: -2,\n        padding: 4,\n        visibility: 'hidden',\n    },\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n        padding: 2,\n        marginRight: -2,\n    },\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n        transform: 'rotate(180deg)',\n    },\n    /* Styles applied to the popper element. */\n    popper: {\n        zIndex: theme.zIndex.modal,\n    },\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n        position: 'absolute',\n    },\n    /* Styles applied to the `Paper` component. */\n    paper: {\n        ...theme.typography.body1,\n        overflow: 'hidden',\n        margin: '4px 0',\n    },\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n        listStyle: 'none',\n        margin: 0,\n        padding: '8px 0',\n        maxHeight: '40vh',\n        overflow: 'auto',\n    },\n    /* Styles applied to the loading wrapper. */\n    loading: {\n        color: theme.palette.text.secondary,\n        padding: '14px 16px',\n    },\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n        color: theme.palette.text.secondary,\n        padding: '14px 16px',\n    },\n    /* Styles applied to the option elements. */\n    option: {\n        minHeight: 48,\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n        paddingTop: 6,\n        boxSizing: 'border-box',\n        outline: '0',\n        WebkitTapHighlightColor: 'transparent',\n        paddingBottom: 6,\n        paddingLeft: 16,\n        paddingRight: 16,\n        [theme.breakpoints.up('sm')]: {\n            minHeight: 'auto',\n        },\n        '&[aria-selected=\"true\"]': {\n            backgroundColor: theme.palette.action.selected,\n        },\n        '&[data-focus=\"true\"]': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        '&:active': {\n            backgroundColor: theme.palette.action.selected,\n        },\n        '&[aria-disabled=\"true\"]': {\n            opacity: theme.palette.action.disabledOpacity,\n            pointerEvents: 'none',\n        },\n    },\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n        backgroundColor: theme.palette.background.paper,\n        top: -8,\n    },\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n        padding: 0,\n        '& $option': {\n            paddingLeft: 24,\n        },\n    },\n});\n\nfunction DisablePortal(props) {\n    // eslint-disable-next-line react/prop-types\n    const { anchorEl, open, ...other } = props;\n    return <div {...other} />;\n}\n\nconst Autocomplete = React.forwardRef((props, ref) => {\n    /* eslint-disable no-unused-vars */\n    const {\n        autoComplete = false,\n        autoHighlight = false,\n        autoSelect = false,\n        blurOnSelect = false,\n        ChipProps,\n        classes,\n        className,\n        clearOnBlur = !props.freeSolo,\n        clearOnEscape = false,\n        clearText = 'Clear',\n        closeIcon = <CloseIcon fontSize='small' />,\n        closeText = 'Close',\n        debug = false,\n        defaultValue = props.multiple ? [] : null,\n        disableClearable = false,\n        disableCloseOnSelect = false,\n        disabled = false,\n        disabledItemsFocusable = false,\n        disableListWrap = false,\n        disablePortal = false,\n        filterOptions,\n        filterSelectedOptions = false,\n        forcePopupIcon = 'auto',\n        freeSolo = false,\n        fullWidth = false,\n        getLimitTagsText = (more) => `+${more}`,\n        getOptionDisabled,\n        getOptionLabel = (x) => x,\n        getOptionSelected,\n        groupBy,\n        handleHomeEndKeys = !props.freeSolo,\n        id: idProp,\n        includeInputInList = false,\n        inputValue: inputValueProp,\n        limitTags = -1,\n        ListboxComponent = 'ul',\n        ListboxProps,\n        loading = false,\n        loadingText = 'Loading…',\n        multiple = false,\n        noOptionsText = 'No options',\n        onChange,\n        onClose,\n        onHighlightChange,\n        onInputChange,\n        onOpen,\n        open,\n        openOnFocus = false,\n        openText = 'Open',\n        options,\n        PaperComponent = Paper,\n        PopperComponent: PopperComponentProp = Popper,\n        popupIcon = <ArrowDropDownIcon />,\n        renderGroup: renderGroupProp,\n        renderInput,\n        renderOption: renderOptionProp,\n        renderTags,\n        selectOnFocus = !props.freeSolo,\n        size = 'medium',\n        value: valueProp,\n        ...other\n    } = props;\n    /* eslint-enable no-unused-vars */\n\n    const PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n    const {\n        getRootProps,\n        getInputProps,\n        getInputLabelProps,\n        getPopupIndicatorProps,\n        getClearProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        value,\n        dirty,\n        id,\n        popupOpen,\n        focused,\n        focusedTag,\n        anchorEl,\n        setAnchorEl,\n        inputValue,\n        groupedOptions,\n    } = useAutocomplete({ ...props, componentName: 'Autocomplete' });\n\n    let startAdornment;\n\n    if (multiple && value.length > 0) {\n        const getCustomizedTagProps = (params) => ({\n            className: clsx(classes.tag, {\n                [classes.tagSizeSmall]: size === 'small',\n            }),\n            disabled,\n            ...getTagProps(params),\n        });\n\n        if (renderTags) {\n            startAdornment = renderTags(value, getCustomizedTagProps);\n        } else {\n            startAdornment = value.map((option, index) => (\n                <Chip\n                    label={getOptionLabel(option)}\n                    size={size}\n                    {...getCustomizedTagProps({ index })}\n                    {...ChipProps}\n                />\n            ));\n        }\n    }\n\n    if (limitTags > -1 && Array.isArray(startAdornment)) {\n        const more = startAdornment.length - limitTags;\n        if (!focused && more > 0) {\n            startAdornment = startAdornment.splice(0, limitTags);\n            startAdornment.push(\n                <span className={classes.tag} key={startAdornment.length}>\n                    {getLimitTagsText(more)}\n                </span>,\n            );\n        }\n    }\n\n    const defaultRenderGroup = (params) => (\n        <li key={params.key}>\n            <ListSubheader className={classes.groupLabel} component='div'>\n                {params.group}\n            </ListSubheader>\n            <ul className={classes.groupUl}>{params.children}</ul>\n        </li>\n    );\n\n    const renderGroup = renderGroupProp || defaultRenderGroup;\n    const renderOption = renderOptionProp || getOptionLabel;\n\n    const renderListOption = (option, index) => {\n        const optionProps = getOptionProps({ option, index });\n\n        return (\n            <li {...optionProps} className={classes.option}>\n                {renderOption(option, {\n                    selected: optionProps['aria-selected'],\n                    inputValue,\n                })}\n            </li>\n        );\n    };\n\n    const hasClearIcon = !disableClearable && !disabled;\n    const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n    return (\n        <>\n            <div\n                ref={ref}\n                className={clsx(\n                    classes.root,\n                    {\n                        [classes.focused]: focused,\n                        [classes.fullWidth]: fullWidth,\n                        [classes.hasClearIcon]: hasClearIcon,\n                        [classes.hasPopupIcon]: hasPopupIcon,\n                    },\n                    className,\n                )}\n                {...getRootProps(other)}\n            >\n                {renderInput({\n                    id,\n                    disabled,\n                    fullWidth: true,\n                    size: size === 'small' ? 'small' : undefined,\n                    InputLabelProps: getInputLabelProps(),\n                    InputProps: {\n                        ref: setAnchorEl,\n                        className: classes.inputRoot,\n                        startAdornment,\n                        endAdornment: (\n                            <div className={classes.endAdornment}>\n                                {hasClearIcon ? (\n                                    <IconButton\n                                        {...getClearProps()}\n                                        aria-label={clearText}\n                                        title={clearText}\n                                        className={clsx(classes.clearIndicator, {\n                                            [classes.clearIndicatorDirty]: dirty,\n                                        })}\n                                    >\n                                        {closeIcon}\n                                    </IconButton>\n                                ) : null}\n\n                                {hasPopupIcon ? (\n                                    <IconButton\n                                        {...getPopupIndicatorProps()}\n                                        disabled={disabled}\n                                        aria-label={popupOpen ? closeText : openText}\n                                        title={popupOpen ? closeText : openText}\n                                        className={clsx(classes.popupIndicator, {\n                                            [classes.popupIndicatorOpen]: popupOpen,\n                                        })}\n                                    >\n                                        {popupIcon}\n                                    </IconButton>\n                                ) : null}\n                            </div>\n                        ),\n                    },\n                    inputProps: {\n                        className: clsx(classes.input, {\n                            [classes.inputFocused]: focusedTag === -1,\n                        }),\n                        disabled,\n                        ...getInputProps(),\n                    },\n                })}\n            </div>\n            {popupOpen && anchorEl ? (\n                <PopperComponent\n                    className={clsx(classes.popper, {\n                        [classes.popperDisablePortal]: disablePortal,\n                    })}\n                    style={{\n                        width: anchorEl ? anchorEl.clientWidth : null,\n                    }}\n                    role='presentation'\n                    anchorEl={anchorEl}\n                    open\n                >\n                    <PaperComponent className={classes.paper}>\n                        {loading && groupedOptions.length === 0 ? (\n                            <div className={classes.loading}>{loadingText}</div>\n                        ) : null}\n                        {groupedOptions.length === 0 && !freeSolo && !loading ? (\n                            <div className={classes.noOptions}>{noOptionsText}</div>\n                        ) : null}\n                        {groupedOptions.length > 0 ? (\n                            <ListboxComponent\n                                className={classes.listbox}\n                                {...getListboxProps()}\n                                {...ListboxProps}\n                            >\n                                {groupedOptions.map((option, index) => {\n                                    if (groupBy) {\n                                        return renderGroup({\n                                            key: option.key,\n                                            group: option.group,\n                                            children: option.options.map((option2, index2) =>\n                                                renderListOption(option2, option.index + index2),\n                                            ),\n                                        });\n                                    }\n                                    return renderListOption(option, index);\n                                })}\n                            </ListboxComponent>\n                        ) : null}\n                    </PaperComponent>\n                </PopperComponent>\n            ) : null}\n        </>\n    );\n});\n\nAutocomplete.propTypes = {\n    // ----------------------------- Warning --------------------------------\n    // | These PropTypes are generated from the TypeScript type definitions |\n    // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n    // ----------------------------------------------------------------------\n    /**\n     * If `true`, the portion of the selected suggestion that has not been typed by the user,\n     * known as the completion string, appears inline after the input cursor in the textbox.\n     * The inline completion string is visually highlighted and has a selected state.\n     */\n    autoComplete: PropTypes.bool,\n    /**\n     * If `true`, the first option is automatically highlighted.\n     */\n    autoHighlight: PropTypes.bool,\n    /**\n     * If `true`, the selected option becomes the value of the input\n     * when the Autocomplete loses focus unless the user chooses\n     * a different option or changes the character string in the input.\n     */\n    autoSelect: PropTypes.bool,\n    /**\n     * Control if the input should be blurred when an option is selected:\n     *\n     * - `false` the input is not blurred.\n     * - `true` the input is always blurred.\n     * - `touch` the input is blurred after a touch event.\n     * - `mouse` the input is blurred after a mouse event.\n     */\n    blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n    /**\n     * Props applied to the [`Chip`](/api/chip/) element.\n     */\n    ChipProps: PropTypes.object,\n    /**\n     * Override or extend the styles applied to the component.\n     * See [CSS API](#css) below for more details.\n     */\n    classes: PropTypes.object,\n    /**\n     * @ignore\n     */\n    className: PropTypes.string,\n    /**\n     * If `true`, the input's text will be cleared on blur if no value is selected.\n     *\n     * Set to `true` if you want to help the user enter a new value.\n     * Set to `false` if you want to help the user resume his search.\n     */\n    clearOnBlur: PropTypes.bool,\n    /**\n     * If `true`, clear all values when the user presses escape and the popup is closed.\n     */\n    clearOnEscape: PropTypes.bool,\n    /**\n     * Override the default text for the *clear* icon button.\n     *\n     * For localization purposes, you can use the provided [translations](/guides/localization/).\n     */\n    clearText: PropTypes.string,\n    /**\n     * The icon to display in place of the default close icon.\n     */\n    closeIcon: PropTypes.node,\n    /**\n     * Override the default text for the *close popup* icon button.\n     *\n     * For localization purposes, you can use the provided [translations](/guides/localization/).\n     */\n    closeText: PropTypes.string,\n    /**\n     * If `true`, the popup will ignore the blur event if the input is filled.\n     * You can inspect the popup markup with your browser tools.\n     * Consider this option when you need to customize the component.\n     */\n    debug: PropTypes.bool,\n    /**\n     * The default input value. Use when the component is not controlled.\n     */\n    defaultValue: PropTypes.any,\n    /**\n     * If `true`, the input can't be cleared.\n     */\n    disableClearable: PropTypes /* @typescript-to-proptypes-ignore */.bool,\n    /**\n     * If `true`, the popup won't close when a value is selected.\n     */\n    disableCloseOnSelect: PropTypes.bool,\n    /**\n     * If `true`, the input will be disabled.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * If `true`, will allow focus on disabled items.\n     */\n    disabledItemsFocusable: PropTypes.bool,\n    /**\n     * If `true`, the list box in the popup will not wrap focus.\n     */\n    disableListWrap: PropTypes.bool,\n    /**\n     * Disable the portal behavior.\n     * The children stay within it's parent DOM hierarchy.\n     */\n    disablePortal: PropTypes.bool,\n    /**\n     * A filter function that determines the options that are eligible.\n     *\n     * @param {T[]} options The options to render.\n     * @param {object} state The state of the component.\n     * @returns {T[]}\n     */\n    filterOptions: PropTypes.func,\n    /**\n     * If `true`, hide the selected options from the list box.\n     */\n    filterSelectedOptions: PropTypes.bool,\n    /**\n     * Force the visibility display of the popup icon.\n     */\n    forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n    /**\n     * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n     */\n    freeSolo: PropTypes /* @typescript-to-proptypes-ignore */.bool,\n    /**\n     * If `true`, the input will take up the full width of its container.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * The label to display when the tags are truncated (`limitTags`).\n     *\n     * @param {number} more The number of truncated tags.\n     * @returns {ReactNode}\n     */\n    getLimitTagsText: PropTypes.func,\n    /**\n     * Used to determine the disabled state for a given option.\n     *\n     * @param {T} option The option to test.\n     * @returns {boolean}\n     */\n    getOptionDisabled: PropTypes.func,\n    /**\n     * Used to determine the string value for a given option.\n     * It's used to fill the input (and the list box options if `renderOption` is not provided).\n     *\n     * @param {T} option\n     * @returns {string}\n     */\n    getOptionLabel: PropTypes.func,\n    /**\n     * Used to determine if an option is selected, considering the current value.\n     * Uses strict equality by default.\n     *\n     * @param {T} option The option to test.\n     * @param {T} value The value to test against.\n     * @returns {boolean}\n     */\n    getOptionSelected: PropTypes.func,\n    /**\n     * If provided, the options will be grouped under the returned string.\n     * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n     *\n     * @param {T} options The options to group.\n     * @returns {string}\n     */\n    groupBy: PropTypes.func,\n    /**\n     * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n     * It should move focus to the first option and last option, respectively.\n     */\n    handleHomeEndKeys: PropTypes.bool,\n    /**\n     * This prop is used to help implement the accessibility logic.\n     * If you don't provide this prop. It falls back to a randomly generated id.\n     */\n    id: PropTypes.string,\n    /**\n     * If `true`, the highlight can move to the input.\n     */\n    includeInputInList: PropTypes.bool,\n    /**\n     * The input value.\n     */\n    inputValue: PropTypes.string,\n    /**\n     * The maximum number of tags that will be visible when not focused.\n     * Set `-1` to disable the limit.\n     */\n    limitTags: PropTypes.number,\n    /**\n     * The component used to render the listbox.\n     */\n    ListboxComponent: PropTypes.elementType,\n    /**\n     * Props applied to the Listbox element.\n     */\n    ListboxProps: PropTypes.object,\n    /**\n     * If `true`, the component is in a loading state.\n     */\n    loading: PropTypes.bool,\n    /**\n     * Text to display when in a loading state.\n     *\n     * For localization purposes, you can use the provided [translations](/guides/localization/).\n     */\n    loadingText: PropTypes.node,\n    /**\n     * If `true`, `value` must be an array and the menu will support multiple selections.\n     */\n    multiple: PropTypes /* @typescript-to-proptypes-ignore */.bool,\n    /**\n     * Text to display when there are no options.\n     *\n     * For localization purposes, you can use the provided [translations](/guides/localization/).\n     */\n    noOptionsText: PropTypes.node,\n    /**\n     * Callback fired when the value changes.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {T|T[]} value The new value of the component.\n     * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n     */\n    onChange: PropTypes.func,\n    /**\n     * Callback fired when the popup requests to be closed.\n     * Use in controlled mode (see open).\n     *\n     * @param {object} event The event source of the callback.\n     * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n     */\n    onClose: PropTypes.func,\n    /**\n     * Callback fired when the highlight option changes.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {T} option The highlighted option.\n     * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n     */\n    onHighlightChange: PropTypes.func,\n    /**\n     * Callback fired when the input value changes.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {string} value The new value of the text input.\n     * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n     */\n    onInputChange: PropTypes.func,\n    /**\n     * Callback fired when the popup requests to be opened.\n     * Use in controlled mode (see open).\n     *\n     * @param {object} event The event source of the callback.\n     */\n    onOpen: PropTypes.func,\n    /**\n     * Control the popup` open state.\n     */\n    open: PropTypes.bool,\n    /**\n     * If `true`, the popup will open on input focus.\n     */\n    openOnFocus: PropTypes.bool,\n    /**\n     * Override the default text for the *open popup* icon button.\n     *\n     * For localization purposes, you can use the provided [translations](/guides/localization/).\n     */\n    openText: PropTypes.string,\n    /**\n     * Array of options.\n     */\n    options: PropTypes.array.isRequired,\n    /**\n     * The component used to render the body of the popup.\n     */\n    PaperComponent: PropTypes.elementType,\n    /**\n     * The component used to position the popup.\n     */\n    PopperComponent: PropTypes.elementType,\n    /**\n     * The icon to display in place of the default popup icon.\n     */\n    popupIcon: PropTypes.node,\n    /**\n     * Render the group.\n     *\n     * @param {any} option The group to render.\n     * @returns {ReactNode}\n     */\n    renderGroup: PropTypes.func,\n    /**\n     * Render the input.\n     *\n     * @param {object} params\n     * @returns {ReactNode}\n     */\n    renderInput: PropTypes.func.isRequired,\n    /**\n     * Render the option, use `getOptionLabel` by default.\n     *\n     * @param {T} option The option to render.\n     * @param {object} state The state of the component.\n     * @returns {ReactNode}\n     */\n    renderOption: PropTypes.func,\n    /**\n     * Render the selected value.\n     *\n     * @param {T[]} value The `value` provided to the component.\n     * @param {function} getTagProps A tag props getter.\n     * @returns {ReactNode}\n     */\n    renderTags: PropTypes.func,\n    /**\n     * If `true`, the input's text will be selected on focus.\n     * It helps the user clear the selected value.\n     */\n    selectOnFocus: PropTypes.bool,\n    /**\n     * The size of the autocomplete.\n     */\n    size: PropTypes.oneOf(['medium', 'small']),\n    /**\n     * The value of the autocomplete.\n     *\n     * The value must have reference equality with the option in order to be selected.\n     * You can customize the equality behavior with the `getOptionSelected` prop.\n     */\n    value: PropTypes.any,\n};\n\nexport default withStyles(styles)(Autocomplete);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport MuiAlert from 'AppComponents/Shared/MuiAlert';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Progress from 'AppComponents/Shared/Progress';\n\nimport clsx from 'clsx';\nimport TableRow from '@material-ui/core/TableRow';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Configurations from 'Config';\nimport Card from '@material-ui/core/Card';\nimport AddIcon from '@material-ui/icons/Add';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport APIProduct from 'AppData/APIProduct';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport API from 'AppData/api';\nimport { ConfirmDialog } from 'AppComponents/Shared/index';\nimport { useRevisionContext } from 'AppComponents/Shared/RevisionContext';\nimport Utils from 'AppData/Utils';\nimport { parse } from '@asyncapi/parser';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport DisplayDevportal from './DisplayDevportal';\nimport DeploymentOnbording from './DeploymentOnbording';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    saveButton: {\n        marginTop: theme.spacing(3),\n    },\n    shapeRec: {\n        backgroundColor: 'black',\n        alignSelf: 'center',\n        width: 120,\n        height: 3,\n    },\n    shapeCircaleBack: {\n        backgroundColor: '#E2E2E2',\n        width: 63,\n        height: 63,\n    },\n    shapeInnerComplete: {\n        backgroundColor: '#095677',\n        width: 50,\n        height: 50,\n        marginTop: 6,\n        marginLeft: 6.5,\n        placeSelf: 'middle',\n    },\n    shapeInnerInactive: {\n        backgroundColor: '#BFBFBF',\n        width: 50,\n        height: 50,\n        marginTop: 6,\n        marginLeft: 6,\n        placeSelf: 'middle',\n    },\n    shapeDottedEnd: {\n        backgroundColor: '#BFBFBF',\n        border: '1px dashed #707070',\n        width: 47,\n        height: 47,\n        marginTop: 7,\n        marginLeft: 7,\n        placeSelf: 'middle',\n    },\n    shapeDottedStart: {\n        backgroundColor: '#1CB1BF',\n        border: '2px solid #ffffff',\n        width: 47,\n        height: 47,\n        marginTop: 6,\n        marginLeft: 6,\n        placeSelf: 'middle',\n    },\n    plusIconStyle: {\n        marginTop: 8,\n        marginLeft: 8,\n        fontSize: 30,\n    },\n    shapeDottedStart1: {\n        backgroundColor: '#1CB1BF',\n        width: 50,\n        height: 50,\n        marginTop: 6,\n        marginLeft: 6.5,\n        placeSelf: 'middle',\n    },\n    textShape: {\n        marginTop: 5.5,\n        marginLeft: 6.5,\n    },\n    textShape2: {\n        marginTop: 8,\n        marginLeft: 115,\n        height: '18px',\n        fontFamily: 'sans-serif',\n    },\n    textPadding: {\n        height: '25px',\n        paddingBottom: '2px',\n    },\n    textDelete: {\n        marginTop: 8,\n        marginLeft: 120,\n        fontFamily: 'sans-serif',\n        fontSize: 'small',\n    },\n    textShape3: {\n        color: '#38536c',\n        marginLeft: 70,\n    },\n    textShape7: {\n        color: '#38536c',\n    },\n    primaryEndpoint: {\n        color: '#006E9C',\n    },\n    secondaryEndpoint: {\n        color: '#415A85',\n    },\n    textShape4: {\n        marginTop: 55,\n    },\n    textShape8: {\n        marginTop: 80,\n    },\n    textShape5: {\n        marginTop: 10,\n        marginLeft: 85,\n        marginBottom: 10,\n    },\n    textShape6: {\n        color: '#1B3A57',\n    },\n    button1: {\n        color: '#1B3A57',\n        marginLeft: 7,\n    },\n    button2: {\n        color: '#1B3A57',\n        marginLeft: 7,\n        marginTop: 10,\n    },\n    shapeRecBack: {\n        backgroundColor: 'black',\n        alignSelf: 'center',\n        width: 40,\n        height: 3,\n    },\n    shapeCircle: {\n        borderRadius: '50%',\n    },\n    shapeCircleBlack: {\n        backgroundColor: '#000000',\n        alignSelf: 'center',\n        paddingLeft: '15px',\n        width: 15,\n        height: 15,\n    },\n    changeCard: {\n        boxShadow: 15,\n        borderRadius: '10px',\n        backgroundColor: theme.palette.secondary.highlight,\n    },\n    noChangeCard: {\n        boxShadow: 15,\n        borderRadius: '10px',\n    },\n    cardHeight: {\n        boxShadow: 1,\n        height: '100%',\n    },\n    cardContentHeight: {\n        boxShadow: 1,\n        height: '50%',\n    },\n    cardActionHeight: {\n        boxShadow: 1,\n        height: '25%',\n    },\n    dialogContent: {\n        overflow: 'auto',\n        height: '90%',\n    },\n    textOverlay: {\n        overflow: 'hidden',\n        maxHeight: '100%',\n        maxWidth: '100%',\n        cursor: 'pointer',\n        '&:hover': { overflow: 'visible' },\n    },\n    gridOverflow: {\n        overflow: 'scroll',\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 130,\n    },\n    dialogPaper: {\n        width: '800px',\n        maxHeight: '800px',\n    },\n    createRevisionDialogStyle: {\n        width: '800px',\n    },\n    sectionTitle: {\n        marginBottom: theme.spacing(2),\n    },\n    deployNewRevButtonStyle: {\n        marginRight: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(3),\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n        maxWidth: '300px',\n    },\n    timePaddingStyle: {\n        marginTop: theme.spacing(1),\n    },\n    labelSpace: {\n        paddingLeft: theme.spacing(1),\n    },\n    labelSpacingDown: {\n        marginBottom: theme.spacing(2),\n    },\n    warningText: {\n        color: '#ff0000',\n    },\n    tableCellVhostSelect: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(0),\n    },\n    vhostSelect: {\n        marginTop: theme.spacing(3),\n    },\n    textCount: {\n        marginTop: theme.spacing(-2.5),\n    },\n    containerInline: {\n        display: 'inline-flex',\n    },\n    containerOverflow: {\n        display: 'grid',\n        gridGap: '16px',\n        paddingLeft: '48px',\n        gridTemplateColumns: 'repeat(auto-fill,minmax(160px,1fr))',\n        gridAutoFlow: 'column',\n        gridAutoColumns: 'minmax(160px,1fr)',\n        overflowX: 'auto',\n    },\n    infoAlert: {\n        clear: 'both',\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n * Renders an Environments list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function Environments() {\n    const classes = useStyles();\n    const maxCommentLength = '255';\n    const intl = useIntl();\n    const { api, updateAPI } = useContext(APIContext);\n    const securityScheme = [...api.securityScheme];\n    const isMutualSslOnly = securityScheme.length === 2 && securityScheme.includes('mutualssl')\n    && securityScheme.includes('mutualssl_mandatory');\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n\n    const isDeployButtonDisabled = (((api.type !== 'WEBSUB' && !isEndpointAvailable))\n    || (!isMutualSslOnly && !isTierAvailable)\n    || api.workflowStatus === 'CREATED');\n    const history = useHistory();\n    const { data: settings, isLoading } = usePublisherSettings();\n    const {\n        allRevisions, getRevision, allEnvRevision, getDeployedEnv,\n    } = useRevisionContext();\n    let revisionCount;\n    if (Configurations.app.revisionCount) {\n        revisionCount = Configurations.app.revisionCount;\n    } else {\n        revisionCount = 5;\n    }\n    const restApi = new API();\n    const restProductApi = new APIProduct();\n    const [selectedRevision, setRevision] = useState([]);\n    const externalGateways = settings && settings.environment.filter((p) => !p.provider.toLowerCase().includes('wso2'));\n    const internalGateways = settings && settings.environment.filter((p) => p.provider.toLowerCase().includes('wso2'));\n    const [selectedVhosts, setVhosts] = useState(null);\n    const [selectedVhostDeploy, setVhostsDeploy] = useState([]);\n    useEffect(() => {\n        if (settings) {\n            const defaultVhosts = internalGateways.map((e) => {\n                if (e.vhosts && e.vhosts.length > 0) {\n                    const env = e.name;\n                    const vhost = api.isWebSocket() ? e.vhosts[0].wsHost : e.vhosts[0].host;\n                    return { env, vhost };\n                } else {\n                    return undefined;\n                }\n            });\n            setVhosts(defaultVhosts);\n            setVhostsDeploy(defaultVhosts);\n        }\n    }, [settings]);\n    const [extraRevisionToDelete, setExtraRevisionToDelete] = useState(null);\n    const [description, setDescription] = useState('');\n    const [SelectedEnvironment, setSelectedEnvironment] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [confirmDeleteOpen, setConfirmDeleteOpen] = useState(false);\n    const [revisionToDelete, setRevisionToDelete] = useState([]);\n    const [confirmRestoreOpen, setConfirmRestoreOpen] = useState(false);\n    const [revisionToRestore, setRevisionToRestore] = useState([]);\n    const [currentLength, setCurrentLength] = useState(0);\n    const [openDeployPopup, setOpenDeployPopup] = useState(history.location.state === 'deploy');\n    const [externalEnvEndpoints, setExternalEnvEndpoints] = useState(null);\n\n    const allExternalGatewaysMap = [];\n    const allExternalGateways = [];\n    if (externalGateways) {\n        externalGateways.forEach((env) => {\n            const revision = allEnvRevision && allEnvRevision.find(\n                (r) => r.deploymentInfo.some((e) => e.name === env.name),\n            );\n            const envDetails = revision && revision.deploymentInfo.find((e) => e.name === env.name);\n            const disPlayDevportal = envDetails && envDetails.displayOnDevportal;\n            allExternalGatewaysMap[env.name] = { revision, disPlayDevportal };\n            allExternalGateways.push(env);\n        });\n    }\n\n\n    const externalEnvWithEndpoints = [];\n    useEffect(() => {\n        const promise = restApi.getAsyncAPIDefinition(api.id);\n        promise.then(async (response) => {\n            if (response.data && (typeof response.data === \"string\" || typeof response.data === \"object\")) {\n                let doc;\n                try {\n                    doc = await parse(response.data);\n                } catch (err) {\n                    console.warn(\"Async API does not found\");\n                    return;\n                }\n                const protocolBindings = [];\n                // eslint-disable-next-line array-callback-return\n                doc.channelNames().map((channelName) => {\n                    if (doc.channel(channelName).hasPublish()) {\n                        // eslint-disable-next-line array-callback-return\n                        doc.channel(channelName).publish().bindingProtocols().map((protocol) => {\n                            if (!protocolBindings.includes(protocol)) {\n                                protocolBindings.push(protocol);\n                            }\n                        });\n                    }\n                    if (doc.channel(channelName).hasSubscribe()) {\n                        // eslint-disable-next-line array-callback-return\n                        doc.channel(channelName).subscribe().bindingProtocols().map((protocol) => {\n                            if (!protocolBindings.includes(protocol)) {\n                                protocolBindings.push(protocol);\n                            }\n                        });\n                    }\n                });\n                // eslint-disable-next-line array-callback-return\n                allExternalGateways.map((env) => {\n                    const endpoints = [];\n                    // eslint-disable-next-line array-callback-return\n                    env.endpointURIs.map((endpoint) => {\n                        // eslint-disable-next-line array-callback-return\n                        protocolBindings.map((protocol) => {\n                            if (protocol === endpoint.protocol) {\n                                const uri = endpoint.endpointURI;\n                                endpoints.push({ protocol, uri });\n                            }\n                        });\n                    });\n                    externalEnvWithEndpoints[env.name] = endpoints;\n                });\n                setExternalEnvEndpoints(externalEnvWithEndpoints);\n            }\n        })\n    }, [api.id]);\n\n    const toggleOpenConfirmDelete = (revisionName, revisionId) => {\n        setRevisionToDelete([revisionName, revisionId]);\n        setConfirmDeleteOpen(!confirmDeleteOpen);\n    };\n\n    const toggleOpenConfirmRestore = (revisionName, revisionId) => {\n        setRevisionToRestore([revisionName, revisionId]);\n        setConfirmRestoreOpen(!confirmRestoreOpen);\n    };\n\n    const toggleDeployRevisionPopup = () => {\n        setOpenDeployPopup(!openDeployPopup);\n    };\n\n    const handleCloseDeployPopup = () => {\n        history.replace();\n        setOpenDeployPopup(false);\n        setExtraRevisionToDelete(null);\n    };\n\n    const handleClickOpen = () => {\n        if (!isRestricted(['apim:api_create', 'apim:api_publish'], api)) {\n            setOpen(true);\n        }\n    };\n\n    const handleDeleteSelect = (event) => {\n        setExtraRevisionToDelete([event.target.value, event.target.name]);\n    };\n\n    const handleSelect = (event) => {\n        const revisions = selectedRevision.filter((r) => r.env !== event.target.name);\n        const oldRevision = selectedRevision.find((r) => r.env === event.target.name);\n        let displayOnDevPortal = true;\n        if (oldRevision) {\n            displayOnDevPortal = oldRevision.displayOnDevPortal;\n        }\n        revisions.push({ env: event.target.name, revision: event.target.value, displayOnDevPortal });\n        setRevision(revisions);\n    };\n\n    const handleSelectForBrokers = (event) => {\n        const revisions = selectedRevision.filter((r) => r.env !== event.target.name);\n        const oldRevision = selectedRevision.find((r) => r.env === event.target.name);\n        let displayOnDevPortal = true;\n        if (oldRevision) {\n            displayOnDevPortal = oldRevision.displayOnDevPortal;\n        }\n        revisions.push({ env: event.target.name, revision: event.target.value, displayOnDevPortal });\n        setRevision(revisions);\n    };\n\n    /* const isDisplayOnDevPortalCheckedForThirdPartyEnv = (env) => {\n        if (allExternalGatewaysMap[env].revision) {\n            return allExternalGatewaysMap[env].revision.deploymentInfo.find(\n                (r) => r.name === env,\n            ).displayOnDevportal;\n        }\n        const oldRevision = selectedRevision.find((r) => r.env === env);\n        let displayOnDevPortal = true;\n        if (oldRevision) {\n            displayOnDevPortal = oldRevision.displayOnDevPortal;\n        }\n        return displayOnDevPortal;\n    }; */\n\n    const handleVhostSelect = (event) => {\n        const vhosts = selectedVhosts.filter((v) => v.env !== event.target.name);\n        vhosts.push({ env: event.target.name, vhost: event.target.value });\n        setVhosts(vhosts);\n    };\n\n    const handleVhostDeploySelect = (event) => {\n        const vhosts = selectedVhostDeploy.filter((v) => v.env !== event.target.name);\n        vhosts.push({ env: event.target.name, vhost: event.target.value });\n        setVhostsDeploy(vhosts);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setExtraRevisionToDelete(null);\n    };\n\n    const handleChange = (event) => {\n        if (event.target.checked) {\n            setSelectedEnvironment([...SelectedEnvironment, event.target.value]);\n        } else {\n            setSelectedEnvironment(\n                SelectedEnvironment.filter((env) => env !== event.target.value),\n            );\n        }\n        if (event.target.name === 'description') {\n            setDescription(event.target.value);\n            setCurrentLength(event.target.value.length);\n        }\n    };\n\n    /**\n     * Handles deleting a revision\n     * @param {Object} revisionId the revision Id\n     * @returns {Object} promised delete\n     */\n    function deleteRevision(revisionId) {\n        let promiseDelete;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            promiseDelete = restProductApi.deleteProductRevision(api.id, revisionId)\n                .then(() => {\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Revision Deleted Successfully',\n                        id: 'Apis.Details.Environments.Environments.revision.delete.success',\n                    }));\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            defaultMessage: 'Something went wrong while deleting the revision',\n                            id: 'Apis.Details.Environments.Environments.revision.delete.error',\n                        }));\n                    }\n                }).finally(() => {\n                    history.replace();\n                    getRevision();\n                });\n        } else {\n            promiseDelete = restApi.deleteRevision(api.id, revisionId)\n                .then(() => {\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Revision Deleted Successfully',\n                        id: 'Apis.Details.Environments.Environments.revision.delete.success',\n                    }));\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            defaultMessage: 'Something went wrong while deleting the revision',\n                            id: 'Apis.Details.Environments.Environments.revision.delete.error',\n                        }));\n                    }\n                }).finally(() => {\n                    history.replace();\n                    getRevision();\n                });\n        }\n        return promiseDelete;\n    }\n\n    /**\n     * Handles creating a new revision\n     * @param {Object} body the request body\n     * @returns {Object} promised create\n     */\n    function createRevision(body) {\n        if (api.apiType === API.CONSTS.APIProduct) {\n            restProductApi.createProductRevision(api.id, body)\n                .then(() => {\n                    Alert.info('Revision Created Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while creating the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                });\n        } else {\n            api.createRevision(api.id, body)\n                .then(() => {\n                    Alert.info('Revision Created Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while creating the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                });\n        }\n    }\n\n    /**\n      * Handles adding a new revision\n      * @memberof Revisions\n      */\n    function handleClickAddRevision() {\n        const body = {\n            description,\n        };\n        if (extraRevisionToDelete) {\n            deleteRevision(extraRevisionToDelete[0])\n                .then(() => {\n                    createRevision(body);\n                }).finally(() => setExtraRevisionToDelete(null));\n        } else {\n            createRevision(body);\n        }\n        setOpen(false);\n        setDescription('');\n        setExtraRevisionToDelete(null);\n    }\n\n    const runActionDelete = (confirm, revisionId) => {\n        if (confirm) {\n            deleteRevision(revisionId);\n        }\n        setConfirmDeleteOpen(!confirmDeleteOpen);\n        setRevisionToDelete([]);\n    };\n\n    /**\n      * Handles restore revision\n      * @memberof Revisions\n      */\n    function restoreRevision(revisionId) {\n        if (api.apiType !== API.CONSTS.APIProduct) {\n            restApi.restoreRevision(api.id, revisionId)\n                .then(() => {\n                    Alert.info('Revision Restored Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while restoring the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                    getDeployedEnv();\n                    updateAPI();\n                });\n        } else {\n            restProductApi.restoreProductRevision(api.id, revisionId)\n                .then(() => {\n                    Alert.info('Revision Restored Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while restoring the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                    getDeployedEnv();\n                });\n        }\n    }\n\n    const runActionRestore = (confirm, revisionId) => {\n        if (confirm) {\n            restoreRevision(revisionId);\n        }\n        setConfirmRestoreOpen(!confirmRestoreOpen);\n        setRevisionToRestore([]);\n    };\n\n    /**\n      * Handles undeploy a revision\n      * @memberof Revisions\n      */\n    function undeployRevision(revisionId, envName) {\n        const body = [{\n            name: envName,\n            displayOnDevportal: false,\n        }];\n        if (api.apiType !== API.CONSTS.APIProduct) {\n            restApi.undeployRevision(api.id, revisionId, body)\n                .then(() => {\n                    Alert.info('Revision Undeployed Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while undeploying the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                    getDeployedEnv();\n                });\n        } else {\n            restProductApi.undeployProductRevision(api.id, revisionId, body)\n                .then(() => {\n                    Alert.info('Revision Undeployed Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while undeploying the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                    getDeployedEnv();\n                });\n        }\n    }\n\n    /**\n      * Handles deploy a revision\n      * @memberof Revisions\n      */\n    function deployRevision(revisionId, envName, vhost, displayOnDevportal) {\n        const body = [{\n            name: envName,\n            displayOnDevportal,\n            vhost,\n        }];\n        if (api.apiType !== API.CONSTS.APIProduct) {\n            restApi.deployRevision(api.id, revisionId, body)\n                .then(() => {\n                    Alert.info('Deploy revision Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while deploy the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                    getDeployedEnv();\n                });\n        } else {\n            restProductApi.deployProductRevision(api.id, revisionId, body)\n                .then(() => {\n                    Alert.info('Deploy revision Successfully');\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while deploy the revision');\n                    }\n                    console.error(error);\n                }).finally(() => {\n                    getRevision();\n                    getDeployedEnv();\n                });\n        }\n    }\n\n    /**\n      * Handles adding a new revision and deploy\n      * @memberof Revisions\n      */\n    function createDeployRevision(envList, vhostList) {\n        const body = {\n            description,\n        };\n        if (api.apiType !== API.CONSTS.APIProduct) {\n            restApi.createRevision(api.id, body)\n                .then((response) => {\n                    Alert.info('Revision Created Successfully');\n                    const body1 = [];\n                    for (const env of envList) {\n                        body1.push({\n                            name: env,\n                            vhost: api.gatewayVendor === 'wso2' ? vhostList.find((v) => v.env === env).vhost : ' ',\n                            displayOnDevportal: true,\n                        });\n                    }\n                    restApi.deployRevision(api.id, response.body.id, body1)\n                        .then(() => {\n                            Alert.info('Revision Deployed Successfully');\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                            } else {\n                                Alert.error('Something went wrong while deploying the revision');\n                            }\n                            console.error(error);\n                        }).finally(() => {\n                            history.replace();\n                            getRevision();\n                            getDeployedEnv();\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while creating the revision');\n                    }\n                    console.error(error);\n                });\n            setOpenDeployPopup(false);\n        } else {\n            restProductApi.createProductRevision(api.id, body)\n                .then((response) => {\n                    Alert.info('Revision Created Successfully');\n                    const body1 = [];\n                    for (let i = 0; i < envList.length; i++) {\n                        body1.push({\n                            name: envList[i],\n                            vhost: api.gatewayVendor === 'wso2' ? vhostList.find((v) => v.env === envList[i]).vhost\n                                : ' ',\n                            displayOnDevportal: true,\n                        });\n                    }\n                    restProductApi.deployProductRevision(api.id, response.body.id, body1)\n                        .then(() => {\n                            Alert.info('Revision Deployed Successfully');\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                            } else {\n                                Alert.error('Something went wrong while deploying the revision');\n                            }\n                            console.error(error);\n                        }).finally(() => {\n                            history.replace();\n                            getRevision();\n                            getDeployedEnv();\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while creating the revision');\n                    }\n                    console.error(error);\n                });\n            setOpenDeployPopup(false);\n        }\n    }\n\n    /**\n     * Handles creating and deploying a new revision\n     * @param {Object} envList the environment list\n     * @param {Array} vhostList the vhost list\n     * @param {Object} length the length of the list\n     */\n    function handleCreateAndDeployRevision(envList, vhostList) {\n        if (extraRevisionToDelete) {\n            deleteRevision(extraRevisionToDelete[0])\n                .then(() => {\n                    createDeployRevision(envList, vhostList);\n                }).finally(() => {\n                    setExtraRevisionToDelete(null);\n                });\n        } else {\n            createDeployRevision(envList, vhostList);\n        }\n    }\n\n    const confirmDeleteDialog = (\n        <ConfirmDialog\n            key='key-dialog'\n            labelCancel={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.delete.cancel'\n                    defaultMessage='Cancel'\n                />\n            )}\n            title={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.delete.confirm.title'\n                    defaultMessage='Confirm Delete'\n                />\n            )}\n            message={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.delete.confirm.message'\n                    defaultMessage='Are you sure you want to delete {revision} ?'\n                    values={{ revision: revisionToDelete[0] }}\n                />\n            )}\n            labelOk={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.delete.confirm.ok'\n                    defaultMessage='Yes'\n                />\n            )}\n            callback={(e) => runActionDelete(e, revisionToDelete[1])}\n            open={confirmDeleteOpen}\n        />\n    );\n\n    /**\n     * Get Organization value of external gateways\n     * @param {Object} additionalProperties the additionalProperties list\n     * @return String organization name\n     */\n    function getOrganizationFromAdditionalProperties(additionalProperties) {\n        let organization;\n        additionalProperties.forEach((property) => {\n            if (property.key === 'Organization') {\n                organization = property.value;\n            }\n        });\n        return organization;\n    }\n\n    const confirmRestoreDialog = (\n        <ConfirmDialog\n            key='key-dialog-restore'\n            labelCancel={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.restore.cancel'\n                    defaultMessage='Cancel'\n                />\n            )}\n            title={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.restore.confirm.title'\n                    defaultMessage='Confirm Restore'\n                />\n            )}\n            message={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.restore.confirm.message'\n                    defaultMessage='Are you sure you want to restore {revision} (To Current API)?'\n                    values={{ revision: revisionToRestore[0] }}\n                />\n            )}\n            labelOk={(\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.revision.restore.confirm.ok'\n                    defaultMessage='Yes'\n                />\n            )}\n            callback={(e) => runActionRestore(e, revisionToRestore[1])}\n            open={confirmRestoreOpen}\n        />\n    );\n\n    let item1;\n    /**\n     * Returns modified item1\n     * @param {*} revDescription The description of the revision\n     * @returns {Object} Returns the item1\n     */\n    function ReturnItem1({ revDescription, revName, revCreatedTime }) {\n        const [anchorEl, setAnchorEl] = useState(null);\n\n        const handlePopoverOpen = (event) => {\n            setAnchorEl(event.currentTarget);\n        };\n\n        const handlePopoverClose = () => {\n            setAnchorEl(null);\n        };\n\n        const openPopover = Boolean(anchorEl);\n        item1 = (\n            <Grid\n                className={classes.containerInline}\n            >\n                <Grid item className={classes.shapeRec} />\n                <Grid item className={clsx(classes.shapeCircaleBack, classes.shapeCircle)}>\n                    <Grid\n                        className={clsx(classes.shapeInnerComplete, classes.shapeCircle)}\n                        onMouseEnter={handlePopoverOpen}\n                        onMouseLeave={handlePopoverClose}\n                    />\n                    <Popover\n                        id='mouse-over-popover'\n                        className={classes.popover}\n                        classes={{\n                            paper: classes.paper,\n\n                        }}\n                        open={openPopover}\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        onClose={handlePopoverClose}\n                        disableRestoreFocus\n                    >\n                        <div>\n                            <Typography variant='body1'>\n                                <b>{revName}</b>\n                            </Typography>\n                            <Typography variant='body2'>\n                                {revDescription}\n                            </Typography>\n                            <div className={classes.timePaddingStyle}>\n                                <Typography variant='caption'>\n                                    <span>{moment(revCreatedTime).fromNow()}</span>\n                                </Typography>\n                            </div>\n                        </div>\n                    </Popover>\n                </Grid>\n                <Grid item className={classes.shapeRecBack} />\n            </Grid>\n        );\n        return item1;\n    }\n    const item2 = (\n        <Grid\n            className={classes.containerInline}\n        >\n            <Grid item className={classes.shapeRec} />\n            <Grid item className={clsx(classes.shapeCircaleBack, classes.shapeCircle)}>\n                <Grid className={clsx(classes.shapeInnerInactive, classes.shapeCircle)} />\n            </Grid>\n            <Grid item className={classes.shapeRecBack} />\n        </Grid>\n    );\n    const item3 = (\n        <Grid\n            className={classes.containerInline}\n        >\n            <Grid item className={classes.shapeRec} />\n            <Grid item className={clsx(classes.shapeCircaleBack, classes.shapeCircle)}>\n                <Grid className={clsx(classes.shapeDottedEnd, classes.shapeCircle)} />\n            </Grid>\n        </Grid>\n    );\n    const item4 = (\n        <Grid\n            className={classes.containerInline}\n        >\n            <Grid item className={classes.shapeRec} />\n            <Grid item className={clsx(classes.shapeCircaleBack, classes.shapeCircle)}>\n                {api.advertiseInfo && api.advertiseInfo.advertised ? (\n                    <Grid\n                        className={clsx(classes.shapeDottedStart, classes.shapeCircle)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <AddIcon color='disabled' className={classes.plusIconStyle} />\n                    </Grid>\n                ) : (\n                    <Grid\n                        onClick={handleClickOpen}\n                        className={clsx(classes.shapeDottedStart, classes.shapeCircle)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <AddIcon className={classes.plusIconStyle} data-testid='new-revision-icon-btn'/>\n                    </Grid>\n                )}\n\n            </Grid>\n            <Grid item className={classes.shapeRecBack} />\n        </Grid>\n    );\n    const item5 = (\n        <Grid\n            className={classes.containerInline}\n        >\n            <Grid item className={classes.shapeRec} />\n            <Grid item className={clsx(classes.shapeCircaleBack, classes.shapeCircle)}>\n                {api.advertiseInfo && api.advertiseInfo.advertised ? (\n                    <Grid\n                        className={clsx(classes.shapeDottedStart, classes.shapeCircle)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <AddIcon color='disabled' className={classes.plusIconStyle} />\n                    </Grid>\n                ) : (\n                    <Grid\n                        onClick={handleClickOpen}\n                        className={clsx(classes.shapeDottedStart, classes.shapeCircle)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <AddIcon className={classes.plusIconStyle} />\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    );\n    let item6;\n    /**\n     * Returns modified item6\n     * @param {*} revDescription The description of the revision\n     * @returns {Object} Returns the item6\n     */\n    function ReturnItem6({ revDescription, revName, revCreatedTime }) {\n        const [anchorEl1, setAnchorEl1] = useState(null);\n\n        const handlePopoverOpen = (event) => {\n            setAnchorEl1(event.currentTarget);\n        };\n\n        const handlePopoverClose = () => {\n            setAnchorEl1(null);\n        };\n\n        const openPopover = Boolean(anchorEl1);\n        item6 = (\n            <Grid\n                className={classes.containerInline}\n            >\n                <Grid item className={classes.shapeRec} />\n                <Grid item className={clsx(classes.shapeCircaleBack, classes.shapeCircle)}>\n                    <Grid\n                        className={clsx(classes.shapeDottedStart1, classes.shapeCircle)}\n                        onMouseEnter={handlePopoverOpen}\n                        onMouseLeave={handlePopoverClose}\n                    />\n                    <Popover\n                        id='mouse-over-popover'\n                        className={classes.popover}\n                        classes={{\n                            paper: classes.paper,\n                        }}\n                        open={openPopover}\n                        anchorEl={anchorEl1}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left',\n                        }}\n                        onClose={handlePopoverClose}\n                        disableRestoreFocus\n                    >\n                        <div>\n                            <Typography variant='body1'>\n                                <b>{revName}</b>\n                            </Typography>\n                            <Typography variant='body2'>\n                                {revDescription}\n                            </Typography>\n                            <div className={classes.timePaddingStyle}>\n                                <Typography variant='caption'>\n                                    <span>{moment(revCreatedTime).fromNow()}</span>\n                                </Typography>\n                            </div>\n                        </div>\n                    </Popover>\n                </Grid>\n                <Grid item className={classes.shapeRecBack} />\n            </Grid>\n        );\n        return item6;\n    }\n\n    const items = [];\n    if (!api.isRevision) {\n        if (allRevisions && allRevisions.length !== 0) {\n            items.push(\n                <Grid item className={clsx(classes.shapeCircleBlack, classes.shapeCircle)} />,\n            );\n            for (let revision = 0; revision < (allRevisions.length); revision++) {\n                if (revision % 2 === 0) {\n                    items.push(\n                        <Grid item>\n                            <Grid className={classes.textShape4} />\n                            <ReturnItem1\n                                revDescription={allRevisions[revision].description}\n                                revName={allRevisions[revision].displayName}\n                                revCreatedTime={allRevisions[revision].createdTime}\n                            />\n                            {item1}\n                            <Grid className={classes.textShape2}>\n                                {allRevisions[revision].displayName}\n                            </Grid>\n                            <Grid>\n                                <Button\n                                    className={classes.textShape3}\n                                    onClick={() => toggleOpenConfirmRestore(\n                                        allRevisions[revision].displayName, allRevisions[revision].id,\n                                    )}\n                                    size='small'\n                                    type='submit'\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    startIcon={<RestoreIcon />}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.revision.restore'\n                                        defaultMessage='Restore'\n                                    />\n                                </Button>\n                                <Button\n                                    className={classes.textShape7}\n                                    onClick={() => toggleOpenConfirmDelete(\n                                        allRevisions[revision].displayName, allRevisions[revision].id,\n                                    )}\n                                    disabled={(allEnvRevision && allEnvRevision.filter(\n                                        (o1) => o1.id === allRevisions[revision].id,\n                                    ).length !== 0) || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    size='small'\n                                    color='#38536c'\n                                    startIcon={<DeleteForeverIcon />}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.revision.delete'\n                                        defaultMessage='Delete'\n                                    />\n                                </Button>\n                            </Grid>\n                        </Grid>,\n                    );\n                } else {\n                    items.push(\n                        <Grid item>\n                            <Grid className={classes.textShape5} />\n                            <Grid className={classes.textShape2}>\n                                {allRevisions[revision].displayName}\n                            </Grid>\n                            <Grid className={classes.textPadding}>\n                                <Button\n                                    className={classes.textShape3}\n                                    onClick={() => toggleOpenConfirmRestore(\n                                        allRevisions[revision].displayName, allRevisions[revision].id,\n                                    )}\n                                    size='small'\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    type='submit'\n                                    startIcon={<RestoreIcon />}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.revision.restore'\n                                        defaultMessage='Restore'\n                                    />\n                                </Button>\n                                <Button\n                                    className={classes.textShape7}\n                                    onClick={() => toggleOpenConfirmDelete(\n                                        allRevisions[revision].displayName, allRevisions[revision].id,\n                                    )}\n                                    disabled={(allEnvRevision && allEnvRevision.filter(\n                                        (o1) => o1.id === allRevisions[revision].id,\n                                    ).length !== 0) || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    size='small'\n                                    color='#38536c'\n                                    startIcon={<DeleteForeverIcon />}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.revision.delete'\n                                        defaultMessage='Delete'\n                                    />\n                                </Button>\n                            </Grid>\n                            <ReturnItem6\n                                revDescription={allRevisions[revision].description}\n                                revName={allRevisions[revision].displayName}\n                                revCreatedTime={allRevisions[revision].createdTime}\n                            />\n                            {item6}\n                        </Grid>,\n                    );\n                }\n            }\n            if (allRevisions.length !== revisionCount) {\n                items.push(\n                    <Grid item>\n                        <Grid className={classes.textShape4}>\n                            {item4}\n                        </Grid>\n                    </Grid>,\n                );\n            }\n            if (allRevisions.length === revisionCount) {\n                items.push(\n                    <Grid item>\n                        <Grid className={classes.textShape4}>\n                            {item5}\n                        </Grid>\n                    </Grid>,\n                );\n            }\n            for (let unassignRevision = 0; unassignRevision\n                < (revisionCount - (allRevisions.length + 1)); unassignRevision++) {\n                items.push(\n                    <Grid item>\n                        <Grid className={classes.textShape4} />\n                        {item2}\n                    </Grid>,\n                );\n            }\n            if (revisionCount !== allRevisions.length) {\n                items.push(\n                    <Grid item>\n                        <Grid className={classes.textShape4} />\n                        {item3}\n                    </Grid>,\n                );\n            }\n        }\n\n        if (allRevisions && allRevisions.length === 0) {\n            items.push(\n                <div>\n                    <Grid className={classes.textShape8} />\n                    <Grid item className={clsx(classes.shapeCircleBlack, classes.shapeCircle)} />\n                </div>,\n            );\n            items.push(\n                <Grid item>\n                    <Grid className={classes.textShape4}>\n                        {item4}\n                    </Grid>\n                </Grid>,\n            );\n            for (let revision = 0; revision < (revisionCount - (allRevisions.length + 1)); revision++) {\n                items.push(\n                    <Grid item>\n                        <Grid className={classes.textShape4} />\n                        {item2}\n                    </Grid>,\n                );\n            }\n            items.push(\n                <Grid item>\n                    <Grid className={classes.textShape4} />\n                    {item3}\n                </Grid>,\n            );\n        }\n    }\n\n    /**\n     * Get gateway access URL from vhost\n     * @param vhost VHost object\n     * @param type URL type WS or HTTP\n     * @returns {{secondary: string, primary: string}}\n     */\n    function getGatewayAccessUrl(vhost, type) {\n        const endpoints = { primary: '', secondary: '', combined: '' };\n        if (!vhost) {\n            return endpoints;\n        }\n\n        if (type === 'WS') {\n            endpoints.primary = 'ws://' + vhost.wsHost + ':' + vhost.wsPort;\n            endpoints.secondary = 'wss://' + vhost.wssHost + ':' + vhost.wssPort;\n            endpoints.combined = endpoints.secondary + ' ' + endpoints.primary;\n            return endpoints;\n        }\n\n        const httpContext = vhost.httpContext ? '/' + vhost.httpContext.replace(/^\\//g, '') : '';\n        if (vhost.httpPort !== -1) {\n            endpoints.primary = 'http://' + vhost.host \n                + (vhost.httpPort === 80 ? '' : ':' + vhost.httpPort) + httpContext;\n        }\n        if (vhost.httpsPort !== -1) {\n            endpoints.secondary = 'https://' + vhost.host \n                + (vhost.httpsPort === 443 ? '' : ':' + vhost.httpsPort) + httpContext;\n        }\n        endpoints.combined = endpoints.secondary + ' ' + endpoints.primary;\n        return endpoints;\n    }\n\n    /**\n     * Get helper text for selected vhost.\n     * @param {*} env   Environment\n     * @param {*} selectionList Selected vhosts\n     * @param {*} shorten  Shorten the text\n     * @param {*} maxTextLen Maximum text length\n     * @returns {string} Helper text\n     */\n    function getVhostHelperText(env, selectionList, shorten, maxTextLen) {\n        const selected = selectionList && selectionList.find((v) => v.env === env);\n        if (selected) {\n            let vhost;\n            if (api.isWebSocket() ) {\n                vhost = internalGateways.find((e) => e.name === env).vhosts.find(\n                    (v) => v.wsHost === selected.vhost,\n                );\n            } else {\n                vhost = internalGateways.find((e) => e.name === env).vhosts.find(\n                    (v) => v.host === selected.vhost,\n                );\n            }\n\n            const maxtLen = maxTextLen || 30;\n            if (api.isGraphql() && !shorten) {\n                const gatewayHttpUrl = getGatewayAccessUrl(vhost, 'HTTP');\n                const gatewayWsUrl = getGatewayAccessUrl(vhost, 'WS');\n                return gatewayHttpUrl.combined + ' ' + gatewayWsUrl.combined;\n            }\n            const gatewayUrls = getGatewayAccessUrl(vhost, api.isWebSocket() ? 'WS' : 'HTTP');\n            if (shorten) {\n                const helperText = getGatewayAccessUrl(vhost, api.isWebSocket() ? 'WS' : 'HTTP').secondary;\n                return helperText.length > maxtLen ? helperText.substring(0, maxtLen) + '...' : helperText;\n            }\n            return gatewayUrls.combined;\n        }\n        return '';\n    }\n\n    if (isLoading || selectedVhosts === null) {\n        return <Progress per={80} message='Loading app settings ...' />;\n    }\n    // allEnvDeployments represents all deployments of the API with mapping\n    // environment -> {revision deployed to env, vhost deployed to env with revision}\n    const allEnvDeployments = Utils.getAllEnvironmentDeployments(settings.environment, allEnvRevision);\n\n    return (\n        <>\n            {api.advertiseInfo && api.advertiseInfo.advertised && (\n                <MuiAlert severity='info' className={classes.infoAlert}>\n                    <Typography variant='body' align='left' data-testid='third-party-api-deployment-dialog'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.advertise.only.warning'\n                            defaultMessage={'This API is marked as a third party API. The requests are not proxied'\n                            + ' through the gateway. Hence, deployments are not required.'}\n                        />\n                    </Typography>\n                </MuiAlert>\n            )}\n            {allRevisions && allRevisions.length === 0 && (\n                <DeploymentOnbording\n                    classes={classes}\n                    getVhostHelperText={getVhostHelperText}\n                    createDeployRevision={createDeployRevision}\n                    description\n                    setDescription={setDescription}\n                    gatewayVendor={api.gatewayVendor}\n                    advertiseInfo={api.advertiseInfo}\n                />\n            )}\n            {allRevisions && allRevisions.length !== 0 && (\n                <Grid md={12}>\n                    <Typography id='itest-api-details-deployments-head' variant='h5' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.deployments.heading'\n                            defaultMessage='Deployments'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.deployments.sub.heading'\n                            defaultMessage='Create revisions and deploy in Gateway Environments'\n                        />\n                    </Typography>\n                </Grid>\n            )}\n            {!api.isRevision && allRevisions && allRevisions.length !== 0\n            && (\n                <Grid container>\n                    <Tooltip\n                        title={(\n                            <>\n                                <Typography color='inherit'>\n                                    {api.lifeCycleStatus === 'RETIRED' ? intl.formatMessage({\n                                        id: 'Apis.Details.Environments.Environments.RetiredApi.ToolTip',\n                                        defaultMessage: 'Can not deploy new revisions for retired API',\n                                    }): 'Deploy new revision'}\n                                </Typography>\n                            </>\n                        )}\n                        placement='bottom'\n                    >\n                        <span>\n                            <Button\n                                onClick={toggleDeployRevisionPopup}\n                                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                            || (api.advertiseInfo && api.advertiseInfo.advertised) \n                                            || isDeployButtonDisabled\n                                            || api.lifeCycleStatus === 'RETIRED'}\n                                variant='contained'\n                                color='primary'\n                                size='large'\n                                className={classes.deployNewRevButtonStyle}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Environments.deploy.new.revision'\n                                    defaultMessage='Deploy New Revision'\n                                />\n                            </Button>\n                        </span>\n\n                    </Tooltip>\n                </Grid>\n            )}\n            <Grid container>\n                <Dialog\n                    open={openDeployPopup}\n                    onClose={handleCloseDeployPopup}\n                    aria-labelledby='form-dialog-title'\n                    classes={{ paper: classes.dialogPaper }}\n                >\n                    <DialogTitle id='form-dialog-title' variant='h2'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.deploy.new.revision.heading'\n                            defaultMessage='Deploy New Revision'\n                        />\n                    </DialogTitle>\n                    <DialogContent className={classes.dialogContent}>\n                        { allRevisions && allRevisions.length === revisionCount && (\n                            <Typography variant='body' align='left' className={classes.warningText}>\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Environments.select.rev.warning'\n                                    defaultMessage={'Please delete a revision as '\n                                    + 'the number of revisions have reached a maximum of {count}'}\n                                    values={{ count: revisionCount }}\n                                />\n                            </Typography>\n                        )}\n                        { allRevisions && allRevisions.length === revisionCount && (\n                            <Box mb={3}>\n                                <TextField\n                                    fullWidth\n                                    id='revision-to-delete-selector'\n                                    required\n                                    select\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Environments.Environments.select.rev.delete'\n                                            defaultMessage='Revision to delete'\n                                        />\n                                    )}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            anchorOrigin: {\n                                                vertical: 'bottom',\n                                                horizontal: 'left',\n                                            },\n                                            getContentAnchorEl: null,\n                                        },\n                                    }}\n                                    name='extraRevisionToDelete'\n                                    onChange={handleDeleteSelect}\n                                    helperText={allRevisions && allRevisions.filter(\n                                        (o1) => o1.deploymentInfo.length === 0,\n                                    ).length === 0\n                                        ? (\n                                            <FormattedMessage\n                                                id='Apis.Details.Environments.Environments.select.rev.helper1'\n                                                defaultMessage={'Please undeploy and delete a revision as '\n                                                + 'the number of revisions have reached a maximum of {count}'}\n                                                values={{ count: revisionCount }}\n                                            />\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Environments.Environments.select.rev.helper'\n                                                defaultMessage={'Please select a revision to delete as '\n                                                + 'the number of revisions have reached a maximum of {count}'}\n                                                values={{ count: revisionCount }}\n                                            />\n                                        )}\n                                    margin='normal'\n                                    variant='outlined'\n                                    disabled={api.isRevision || allRevisions.filter(\n                                        (o1) => o1.deploymentInfo.length === 0,\n                                    ).length === 0}\n                                >\n                                    {allRevisions && allRevisions.length !== 0 && allRevisions.filter(\n                                        (o1) => o1.deploymentInfo.length === 0,\n                                    ).map(\n                                        (revision) => (\n                                            <MenuItem value={revision.id} name={revision.displayName}>\n                                                {revision.displayName}\n                                            </MenuItem>\n                                        ),\n                                    )}\n                                </TextField>\n                            </Box>\n                        )}\n                        <Box mb={3}>\n                            <TextField\n                                autoFocus\n                                name='description'\n                                margin='dense'\n                                variant='outlined'\n                                label='Description'\n                                inputProps={{ maxLength: maxCommentLength }}\n                                helperText={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.revision.description.deploy'\n                                        defaultMessage='Brief description of the new revision'\n                                    />\n                                )}\n                                fullWidth\n                                multiline\n                                rows={3}\n                                rowsMax={4}\n                                defaultValue={description}\n                                onBlur={handleChange}\n                            />\n                            <Typography className={classes.textCount} align='right'>\n                                {currentLength + '/' + maxCommentLength}\n                            </Typography>\n                        </Box>\n                        {api.gatewayVendor === 'wso2' && (\n                            <Box mt={2}>\n                                <Typography variant='h6' align='left' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.api.gateways.heading'\n                                        defaultMessage='API Gateways'\n                                    />\n                                </Typography>\n                                <Grid\n                                    container\n                                    spacing={3}\n                                >\n                                    {internalGateways && internalGateways.map((row) => (\n                                        <Grid item xs={4}>\n                                            <Card\n                                                className={clsx(SelectedEnvironment\n                                                && SelectedEnvironment.includes(row.name)\n                                                    ? (classes.changeCard)\n                                                    : (classes.noChangeCard), classes.cardHeight)}\n                                                variant='outlined'\n                                            >\n                                                <Box height='100%'>\n                                                    <CardHeader\n                                                        action={(\n                                                            <Checkbox\n                                                                id={row.name.split(' ').join('')}\n                                                                value={row.name}\n                                                                checked={SelectedEnvironment.includes(row.name)}\n                                                                onChange={handleChange}\n                                                                color='primary'\n                                                                icon={<RadioButtonUncheckedIcon />}\n                                                                checkedIcon={<CheckCircleIcon color='primary' />}\n                                                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                                data-testid={row.displayName + 'gateway-select-btn'}\n                                                            />\n                                                        )}\n                                                        title={(\n                                                            <Typography variant='subtitle2'>\n                                                                {row.displayName}\n                                                            </Typography>\n                                                        )}\n                                                        subheader={(\n                                                            <Typography\n                                                                variant='body2'\n                                                                color='textSecondary'\n                                                                gutterBottom\n                                                            >\n                                                                {row.type}\n                                                            </Typography>\n                                                        )}\n                                                    />\n                                                    <CardContent className={classes.cardContentHeight}>\n                                                        <Grid\n                                                            container\n                                                            direction='column'\n                                                            spacing={2}\n                                                        >\n                                                            <Grid item xs={12}>\n                                                                <Tooltip\n                                                                    title={(\n                                                                        <>\n                                                                            <Typography color='inherit'>\n                                                                                {getVhostHelperText(row.name,\n                                                                                    selectedVhostDeploy)}\n                                                                            </Typography>\n                                                                        </>\n                                                                    )}\n                                                                    placement='right'\n                                                                >\n                                                                    <TextField\n                                                                        id='vhost-selector'\n                                                                        select\n                                                                        label={(\n                                                                            <FormattedMessage\n                                                                                id='Apis.Details.\n                                                                                Environments.deploy.vhost'\n                                                                                defaultMessage='VHost'\n                                                                            />\n                                                                        )}\n                                                                        SelectProps={{\n                                                                            MenuProps: {\n                                                                                anchorOrigin: {\n                                                                                    vertical: 'bottom',\n                                                                                    horizontal: 'left',\n                                                                                },\n                                                                                getContentAnchorEl: null,\n                                                                            },\n                                                                        }}\n                                                                        name={row.name}\n                                                                        value={selectedVhostDeploy.find(\n                                                                            (v) => v.env === row.name,\n                                                                        ).vhost}\n                                                                        onChange={handleVhostDeploySelect}\n                                                                        margin='dense'\n                                                                        variant='outlined'\n                                                                        fullWidth\n                                                                        helperText={getVhostHelperText(row.name,\n                                                                            selectedVhostDeploy, true)}\n                                                                    >\n                                                                        {row.vhosts.map(\n                                                                            (vhost) => (\n                                                                                <MenuItem value={api.isWebSocket() \n                                                                                    ? vhost.wsHost : vhost.host}>\n                                                                                    {api.isWebSocket() \n                                                                                        ? vhost.wsHost : vhost.host}\n                                                                                </MenuItem>\n                                                                            ),\n                                                                        )}\n                                                                    </TextField>\n                                                                </Tooltip>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                {allEnvRevision\n                                                                && allEnvRevision.filter(\n                                                                    (o1) => {\n                                                                        if (o1.deploymentInfo.filter(\n                                                                            (o2) => o2.name === row.name,\n                                                                        ).length > 0) {\n                                                                            return o1;\n                                                                        }\n                                                                        return null;\n                                                                    },\n                                                                ).length !== 0 ? (\n                                                                        allEnvRevision && allEnvRevision.filter(\n                                                                            (o1) => {\n                                                                                if (o1.deploymentInfo.filter(\n                                                                                    (o2) => o2.name === row.name,\n                                                                                ).length > 0) {\n                                                                                    return o1;\n                                                                                }\n                                                                                return null;\n                                                                            },\n                                                                        ).map((o3) => (\n                                                                            <div>\n                                                                                <Chip\n                                                                                    label={o3.displayName}\n                                                                                    style={{\n                                                                                        backgroundColor: '#15B8CF',\n                                                                                    }}\n                                                                                />\n                                                                            </div>\n                                                                        ))) : (\n                                                                        // eslint-disable-next-line react/jsx-indent\n                                                                        <div />\n                                                                    )}\n                                                            </Grid>\n                                                            <Grid item />\n                                                        </Grid>\n                                                    </CardContent>\n                                                </Box>\n                                            </Card>\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </Box>\n                        )}\n                        {(api.gatewayVendor === 'solace') && (allExternalGateways.length > 0) && (\n                            <Box mt={2}>\n                                <Typography variant='h6' align='left' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.solace.platform.environments.heading'\n                                        defaultMessage='Solace Platform Environments'\n                                    />\n                                </Typography>\n                                <Grid\n                                    container\n                                    spacing={3}\n                                >\n                                    {externalGateways.map((row) => (\n                                        <Grid item xs={4}>\n                                            <Card\n                                                className={clsx(SelectedEnvironment\n                                                && SelectedEnvironment.includes(row.name)\n                                                    ? (classes.changeCard)\n                                                    : (classes.noChangeCard), classes.cardHeight)}\n                                                variant='outlined'\n                                            >\n                                                <Box height='100%'>\n                                                    <CardHeader\n                                                        title={(\n                                                            <Typography variant='subtitle2'>\n                                                                {row.displayName}\n                                                            </Typography>\n                                                        )}\n                                                        subheader={(\n                                                            <Typography\n                                                                variant='body2'\n                                                                color='textSecondary'\n                                                                gutterBottom\n                                                            >\n                                                                {row.provider}\n                                                            </Typography>\n                                                        )}\n                                                        action={(\n                                                            <Checkbox\n                                                                id={row.name.split(' ').join('')}\n                                                                value={row.name}\n                                                                checked={SelectedEnvironment.includes(row.name)}\n                                                                onChange={handleChange}\n                                                                color='primary'\n                                                                icon={<RadioButtonUncheckedIcon />}\n                                                                checkedIcon={<CheckCircleIcon color='primary' />}\n                                                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                            />\n                                                        )}\n                                                    />\n                                                    <CardContent>\n                                                        <Grid\n                                                            container\n                                                            direction='column'\n                                                            spacing={2}\n                                                        >\n                                                            <Grid item xs={12}>\n                                                                <TextField\n                                                                    id='Api.Details.Third.party.environment.name'\n                                                                    label='Environment'\n                                                                    variant='outlined'\n                                                                    disabled\n                                                                    fullWidth\n                                                                    margin='dense'\n                                                                    value={row.name}\n                                                                />\n                                                                <TextField\n                                                                    id='Api.Details.\n                                                                        Third.party.environment.organization'\n                                                                    label='Organization'\n                                                                    variant='outlined'\n                                                                    disabled\n                                                                    fullWidth\n                                                                    margin='dense'\n                                                                    value={getOrganizationFromAdditionalProperties(\n                                                                        row.additionalProperties,\n                                                                    )}\n                                                                />\n                                                            </Grid>\n                                                        </Grid>\n                                                    </CardContent>\n                                                </Box>\n                                            </Card>\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </Box>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleCloseDeployPopup}>\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.deploy.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            data-testid='btn-deploy'\n                            onClick={\n                                () => handleCreateAndDeployRevision(SelectedEnvironment, selectedVhostDeploy)\n                            }\n                            color='primary'\n                            disabled={SelectedEnvironment.length === 0\n                                || (allRevisions && allRevisions.length === revisionCount && !extraRevisionToDelete)\n                                || isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                || (api.advertiseInfo && api.advertiseInfo.advertised)\n                                || isDeployButtonDisabled}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.deploy.deploy'\n                                defaultMessage='Deploy'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n            {allRevisions && allRevisions.length !== 0 && (\n                <>\n                    <Grid\n                        container\n                        direction='row'\n                        alignItems='flex-start'\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography variant='h6' gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Environments.Deployments'\n                                    defaultMessage='Revisions'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.Create.Revision.Deploy'\n                                        defaultMessage='Create new revision and deploy'\n                                    />\n                                )}\n                                placement='top-end'\n                                aria-label='New Deployment'\n                            >\n                                <IconButton size='small' aria-label='delete'>\n                                    <HelpOutlineIcon fontSize='small' />\n                                </IconButton>\n                            </Tooltip>\n                        </Grid>\n\n                    </Grid>\n                    <Box className={classes.containerOverflow}>\n                        <Grid\n                            xs={12}\n                            className={classes.containerInline}\n                        >\n                            {items}\n                            {confirmDeleteDialog}\n                            {confirmRestoreDialog}\n                        </Grid>\n                    </Box>\n                </>\n            )}\n            <Grid container>\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby='form-dialog-title'\n                    classes={{ paper: classes.createRevisionDialogStyle }}\n                >\n                    <DialogTitle id='form-dialog-title' variant='h2'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.revision.create.heading'\n                            defaultMessage='Create New Revision (From Current API)'\n                        />\n                    </DialogTitle>\n                    <DialogContent className={classes.dialogContent}>\n                        { allRevisions && allRevisions.length === revisionCount && (\n                            <Typography variant='body' align='left' className={classes.warningText}>\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Environments.select.rev.warning'\n                                    defaultMessage={'Please delete a revision as '\n                                    + 'the number of revisions have reached a maximum of {count}'}\n                                    values={{ count: revisionCount }}\n                                />\n                            </Typography>\n                        )}\n                        { allRevisions && allRevisions.length === revisionCount && (\n                            <Box mb={3}>\n                                <TextField\n                                    fullWidth\n                                    id='revision-to-delete-selector'\n                                    required\n                                    select\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Environments.Environments.select.rev.delete'\n                                            defaultMessage='Revision to delete'\n                                        />\n                                    )}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            anchorOrigin: {\n                                                vertical: 'bottom',\n                                                horizontal: 'left',\n                                            },\n                                            getContentAnchorEl: null,\n                                        },\n                                    }}\n                                    name='extraRevisionToDelete'\n                                    onChange={handleDeleteSelect}\n                                    helperText={allRevisions && allRevisions.filter(\n                                        (o1) => o1.deploymentInfo.length === 0,\n                                    ).length === 0\n                                        ? (\n                                            <FormattedMessage\n                                                id='Apis.Details.Environments.Environments.select.rev.helper1'\n                                                defaultMessage={'Please undeploy and delete a revision as '\n                                                + 'the number of revisions have reached a maximum of {count}'}\n                                                values={{ count: revisionCount }}\n                                            />\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Environments.Environments.select.rev.helper'\n                                                defaultMessage={'Please select a revision to delete as '\n                                                + 'the number of revisions have reached a maximum of {count}'}\n                                                values={{ count: revisionCount }}\n                                            />\n                                        )}\n                                    margin='normal'\n                                    variant='outlined'\n                                    disabled={api.isRevision || allRevisions.filter(\n                                        (o1) => o1.deploymentInfo.length === 0,\n                                    ).length === 0}\n                                >\n                                    {allRevisions && allRevisions.length !== 0 && allRevisions.filter(\n                                        (o1) => o1.deploymentInfo.length === 0,\n                                    ).map(\n                                        (revision) => (\n                                            <MenuItem value={revision.id} name={revision.displayName}>\n                                                {revision.displayName}\n                                            </MenuItem>\n                                        ),\n                                    )}\n                                </TextField>\n                            </Box>\n                        )}\n                        <Box mb={3}>\n                            <TextField\n                                autoFocus\n                                name='description'\n                                margin='dense'\n                                variant='outlined'\n                                label='Description'\n                                inputProps={{ maxLength: maxCommentLength }}\n                                helperText={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Environments.Environments.revision.description.create'\n                                        defaultMessage='Brief description of the new revision'\n                                    />\n                                )}\n                                fullWidth\n                                multiline\n                                rows={3}\n                                rowsMax={4}\n                                defaultValue={description}\n                                onBlur={handleChange}\n                            />\n                            <Typography className={classes.textCount} align='right'>\n                                {currentLength + '/' + maxCommentLength}\n                            </Typography>\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.create.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            onClick={handleClickAddRevision}\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={api.isRevision\n                                || (allRevisions && allRevisions.length === revisionCount && !extraRevisionToDelete)}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.create.create'\n                                defaultMessage='Create'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n            {api.lifeCycleStatus !== 'RETIRED' \n            &&  allRevisions && allRevisions.length !== 0 && api.gatewayVendor === 'wso2' && (\n                <Box mx='auto' mt={5}>\n                    <Typography variant='h6' component='h2' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.APIGateways'\n                            defaultMessage='API Gateways'\n                        />\n                    </Typography>\n                    <TableContainer component={Paper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Environments.Environments.api.gateways.name'\n                                            defaultMessage='Name'\n                                        />\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Environments.Environments.gateway.accessUrl'\n                                            defaultMessage='Gateway Access URL'\n                                        />\n                                    </TableCell>\n                                    {api && api.isDefaultVersion !== true\n                                        ? (\n                                            <TableCell align='left'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.Environments.gateway\n                                                    .deployed.revision'\n                                                    defaultMessage='Deployed Revision'\n                                                />\n                                            </TableCell>\n                                        )\n                                        : (\n                                            <TableCell align='left'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.Environments.gateway.action'\n                                                    defaultMessage='Action'\n                                                />\n                                            </TableCell>\n                                        )}\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Environments.Environments.visibility.in.devportal'\n                                            defaultMessage='Gateway URL Visibility'\n                                        />\n                                        <Tooltip\n                                            title={(\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.Environments.display.devportal'\n                                                    defaultMessage='Display Gateway Access URLs in developer portal.'\n                                                />\n                                            )}\n                                            placement='top-end'\n                                            aria-label='New Deployment'\n                                        >\n                                            <IconButton size='small' aria-label='delete'>\n                                                <HelpOutlineIcon fontSize='small' />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {internalGateways && internalGateways.map((row) => (\n                                    <TableRow key={row.name}>\n                                        <TableCell component='th' scope='row'>\n                                            {row.displayName}\n                                        </TableCell>\n                                        {allEnvDeployments[row.name].revision != null ? (\n                                            <>\n                                                <TableCell align='left' id='gateway-access-url-cell'>\n                                                    <div className={classes.primaryEndpoint}>\n                                                        {api.isWebSocket()\n                                                            ? getGatewayAccessUrl(allEnvDeployments[row.name]\n                                                                .vhost, 'WS')\n                                                                .primary : getGatewayAccessUrl(\n                                                                allEnvDeployments[row.name].vhost, 'HTTP',\n                                                            ).primary}\n                                                    </div>\n                                                    <div className={classes.secondaryEndpoint}>\n                                                        {api.isWebSocket()\n                                                            ? getGatewayAccessUrl(allEnvDeployments[row.name]\n                                                                .vhost, 'WS')\n                                                                .secondary : getGatewayAccessUrl(\n                                                                allEnvDeployments[row.name].vhost, 'HTTP',\n                                                            ).secondary}\n                                                    </div>\n                                                    {api.isGraphql()\n                                                    && (\n                                                        <>\n                                                            <div className={classes.primaryEndpoint}>\n                                                                {getGatewayAccessUrl(allEnvDeployments[row.name]\n                                                                    .vhost, 'WS')\n                                                                    .primary}\n                                                            </div>\n                                                            <div className={classes.secondaryEndpoint}>\n                                                                {getGatewayAccessUrl(allEnvDeployments[row.name]\n                                                                    .vhost, 'WS')\n                                                                    .secondary}\n                                                            </div>\n                                                        </>\n\n                                                    )}\n                                                </TableCell>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <TableCell align='left' className={classes.tableCellVhostSelect}>\n                                                    <Tooltip\n                                                        title={(\n                                                            <>\n                                                                <Typography color='inherit'>\n                                                                    {getVhostHelperText(row.name,\n                                                                        selectedVhosts)}\n                                                                </Typography>\n                                                            </>\n                                                        )}\n                                                        placement='bottom'\n                                                    >\n                                                        <TextField\n                                                            id='vhost-selector'\n                                                            select\n                                                            label={(\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Environments.Environments\n                                                                    .select.vhost'\n                                                                    defaultMessage='Select Access URL'\n                                                                />\n                                                            )}\n                                                            SelectProps={{\n                                                                MenuProps: {\n                                                                    anchorOrigin: {\n                                                                        vertical: 'bottom',\n                                                                        horizontal: 'left',\n                                                                    },\n                                                                    getContentAnchorEl: null,\n                                                                },\n                                                            }}\n                                                            name={row.name}\n                                                            value={selectedVhosts.find((v) => v.env === row.name).vhost}\n                                                            onChange={handleVhostSelect}\n                                                            margin='dense'\n                                                            variant='outlined'\n                                                            className={classes.vhostSelect}\n                                                            fullWidth\n                                                            disabled={api.isRevision\n                                                            || !allRevisions || allRevisions.length === 0}\n                                                            helperText={getVhostHelperText(row.name, selectedVhosts,\n                                                                true, 100)}\n                                                        >\n                                                            {row.vhosts.map(\n                                                                (vhost) => (\n                                                                    <MenuItem value={api.isWebSocket() \n                                                                        ? vhost.wsHost : vhost.host}>\n                                                                        {api.isWebSocket() \n                                                                            ? vhost.wsHost : vhost.host}\n                                                                    </MenuItem>\n                                                                ),\n                                                            )}\n                                                        </TextField>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </>\n                                        )}\n                                        <TableCell align='left' style={{ width: '300px' }}>\n                                            {allEnvDeployments[row.name].revision != null\n                                                ? (\n                                                    <div>\n                                                        <Chip\n                                                            label={allEnvDeployments[row.name].revision.displayName}\n                                                            style={{ backgroundColor: '#15B8CF' }}\n                                                        />\n                                                        <Button\n                                                            className={classes.button1}\n                                                            variant='outlined'\n                                                            disabled={api.isRevision\n                                                                || isRestricted(['apim:api_create',\n                                                                    'apim:api_publish'], api)}\n                                                            onClick={() => undeployRevision(\n                                                                allEnvDeployments[row.name].revision.id, row.name,\n                                                            )}\n                                                            size='small'\n                                                            id='undeploy-btn'\n                                                        >\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Environments.Environments.undeploy.btn'\n                                                                defaultMessage='Undeploy'\n                                                            />\n                                                        </Button>\n                                                    </div>\n                                                ) : (\n                                                    <div>\n                                                        <TextField\n                                                            id='revision-selector'\n                                                            select\n                                                            label={(\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Environments.Environments\n                                                                    .select.table'\n                                                                    defaultMessage='Select Revision'\n                                                                />\n                                                            )}\n                                                            SelectProps={{\n                                                                MenuProps: {\n                                                                    anchorOrigin: {\n                                                                        vertical: 'bottom',\n                                                                        horizontal: 'left',\n                                                                    },\n                                                                    getContentAnchorEl: null,\n                                                                },\n                                                            }}\n                                                            name={row.name}\n                                                            onChange={handleSelect}\n                                                            margin='dense'\n                                                            variant='outlined'\n                                                            style={{ width: '50%' }}\n                                                            disabled={api.isRevision\n                                                                || !allRevisions || allRevisions.length === 0}\n                                                        >\n                                                            {allRevisions && allRevisions.length !== 0\n                                                            && allRevisions.map(\n                                                                (number) => (\n                                                                    <MenuItem value={number.id}>\n                                                                        {number.displayName}\n                                                                    </MenuItem>\n                                                                ),\n                                                            )}\n                                                        </TextField>\n                                                        <Button\n                                                            className={classes.button2}\n                                                            disabled={api.isRevision || !selectedRevision.some(\n                                                                (r) => r.env === row.name && r.revision,\n                                                            ) || !selectedVhosts.some(\n                                                                (v) => v.env === row.name && v.vhost,\n                                                            ) || (api.advertiseInfo && api.advertiseInfo.advertised)\n                                                            || isDeployButtonDisabled}\n                                                            variant='outlined'\n                                                            onClick={() => deployRevision(selectedRevision.find(\n                                                                (r) => r.env === row.name,\n                                                            ).revision, row.name, selectedVhosts.find(\n                                                                (v) => v.env === row.name,\n                                                            ).vhost, selectedRevision.find(\n                                                                (r) => r.env === row.name,\n                                                            ).displayOnDevPortal)}\n                                                        >\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Environments.Environments.\n                                                                deploy.button'\n                                                                defaultMessage='Deploy'\n                                                            />\n                                                        </Button>\n                                                    </div>\n                                                )}\n                                        </TableCell>\n                                        <TableCell align='left'>\n                                            <DisplayDevportal\n                                                name={row.name}\n                                                api={api}\n                                                EnvDeployments={allEnvDeployments[row.name]}\n                                            />\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            )}\n            {allRevisions && allRevisions.length !== 0 && (api.gatewayVendor === 'solace')\n            && (allExternalGateways.length > 0) && (\n                <Box mx='auto' mt={5}>\n                    <Typography variant='h6' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Solace.Platform.Environments'\n                            defaultMessage='Solace Platform Environments'\n                        />\n                    </Typography>\n                    <TableContainer component={Paper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Third.Party.Brokers.broker.displayName'\n                                            defaultMessage='Name'\n                                        />\n                                    </TableCell>\n                                    {externalEnvEndpoints && (\n                                        <TableCell align='left'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Third.Party.Brokers.broker.endpoints'\n                                                defaultMessage='Access Endpoints'\n                                            />\n                                        </TableCell>\n                                    )}\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Third.Party.Brokers.broker.environment'\n                                            defaultMessage='Environment'\n                                        />\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Third.Party.Brokers.broker.type'\n                                            defaultMessage='Organization'\n                                        />\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Third.Party.Brokers.broker.name'\n                                            defaultMessage='Provider'\n                                        />\n                                    </TableCell>\n                                    {api && api.isDefaultVersion !== true\n                                        ? (\n                                            <TableCell align='left'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.\n                                                        Environments.gateway.deployed.revision'\n                                                    defaultMessage='Deployed Revision'\n                                                />\n                                            </TableCell>\n                                        )\n                                        : (\n                                            <TableCell align='left'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.Environments.gateway.action'\n                                                    defaultMessage='Action'\n                                                />\n                                            </TableCell>\n                                        )}\n                                    <TableCell align='left'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Environments.Environments.display.in.devportal'\n                                            defaultMessage='Display in Developer Portal'\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {externalGateways.map((row) => (\n                                    <TableRow key={row.name}>\n                                        <TableCell component='th' scope='row'>\n                                            {row.displayName}\n                                        </TableCell>\n                                        {externalEnvEndpoints && (\n                                            <TableCell align='left'>\n                                                {externalEnvEndpoints[row.name] &&\n                                                    externalEnvEndpoints[row.name].map((e) => {\n                                                        return (\n                                                            <Grid container spacing={2}>\n                                                                <Grid item>\n                                                                    <Chip\n                                                                        label={upperCaseString(e.protocol)}\n                                                                        size='small'\n                                                                        color='primary'\n                                                                        variant='outlined'\n                                                                    />\n                                                                </Grid>\n                                                                <Grid\n                                                                    item\n                                                                    style={{\n                                                                        display: 'flex',\n                                                                        alignItems: 'center',\n                                                                        justifyContent: 'center',\n                                                                    }}\n                                                                >\n                                                                    {e.uri}\n                                                                </Grid>\n                                                            </Grid>\n                                                        );\n                                                    })\n                                                }\n                                            </TableCell>\n                                        )}\n                                        <TableCell align='left'>\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align='left'>\n                                            {getOrganizationFromAdditionalProperties(row.additionalProperties)}\n                                        </TableCell>\n                                        <TableCell align='left'>\n                                            {row.provider}\n                                        </TableCell>\n                                        <TableCell align='left' style={{ width: '300px' }}>\n                                            {allExternalGatewaysMap[row.name].revision != null\n                                                ? (\n                                                    <div>\n                                                        <Chip\n                                                            label={allExternalGatewaysMap[row.name]\n                                                                .revision.displayName}\n                                                            style={{ backgroundColor: '#15B8CF' }}\n                                                        />\n                                                        <Button\n                                                            className={classes.button1}\n                                                            variant='outlined'\n                                                            disabled={api.isRevision}\n                                                            onClick={() => undeployRevision(\n                                                                allExternalGatewaysMap[row.name]\n                                                                    .revision.id, row.name,\n                                                            )}\n                                                            size='small'\n                                                        >\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Environments.Environments.undeploy.btn'\n                                                                defaultMessage='Undeploy'\n                                                            />\n                                                        </Button>\n                                                    </div>\n                                                ) : (\n                                                    <div>\n                                                        <TextField\n                                                            id='revision-selector'\n                                                            select\n                                                            label={(\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Environments.\n                                                                            Environments.select.table'\n                                                                    defaultMessage='Select Revision'\n                                                                />\n                                                            )}\n                                                            SelectProps={{\n                                                                MenuProps: {\n                                                                    anchorOrigin: {\n                                                                        vertical: 'bottom',\n                                                                        horizontal: 'left',\n                                                                    },\n                                                                    getContentAnchorEl: null,\n                                                                },\n                                                            }}\n                                                            name={row.name}\n                                                            onChange={handleSelectForBrokers}\n                                                            margin='dense'\n                                                            variant='outlined'\n                                                            style={{ width: '50%' }}\n                                                            disabled={api.isRevision\n                                                            || !allRevisions || allRevisions.length === 0}\n                                                        >\n                                                            {allRevisions && allRevisions.length !== 0\n                                                            && allRevisions.map(\n                                                                (number) => (\n                                                                    <MenuItem value={number.id}>\n                                                                        {number.displayName}\n                                                                    </MenuItem>\n                                                                ),\n                                                            )}\n                                                        </TextField>\n                                                        <Button\n                                                            className={classes.button2}\n                                                            disabled={api.isRevision || !selectedRevision.some(\n                                                                (r) => r.env === row.name && r.revision,\n                                                            ) || (api.advertiseInfo && api.advertiseInfo.advertised)\n                                                            || isDeployButtonDisabled}\n                                                            variant='outlined'\n                                                            onClick={() => deployRevision(selectedRevision.find(\n                                                                (r) => r.env === row.name,\n                                                            ).revision, row.name,\n                                                            ' ', selectedRevision.find(\n                                                                (r) => r.env === row.name,\n                                                            ).displayOnDevPortal)}\n\n                                                        >\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Environments.Environments\n                                                                .deploy.button'\n                                                                defaultMessage='Deploy'\n                                                            />\n                                                        </Button>\n                                                    </div>\n                                                )}\n                                        </TableCell>\n                                        <TableCell align='left'>\n                                            <DisplayDevportal\n                                                name={row.name}\n                                                api={api}\n                                                EnvDeployments={allExternalGatewaysMap[row.name]}\n                                            />\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            )}\n        </>\n    );\n}\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Switch from '@material-ui/core/Switch';\nimport React, { useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport base64url from 'base64url';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIProduct from 'AppData/APIProduct';\n\n/**\n * Renders an Deployrevision list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function DisplayDevportal(props) {\n    const {\n        api,\n        name,\n        EnvDeployments,\n    } = props;\n    const restApi = new API();\n    const restAPIProduct = new APIProduct();\n    const [check, setCheck] = useState(EnvDeployments.disPlayDevportal);\n\n    useEffect(() => {\n        setCheck(typeof EnvDeployments.disPlayDevportal === 'undefined' ? false : EnvDeployments.disPlayDevportal);\n    },\n    [EnvDeployments.disPlayDevportal]);\n\n    const handleDisplayOnDevPortal = (event) => {\n        if (typeof EnvDeployments.revision === 'undefined') {\n            setCheck(event.target.checked);\n        } else {\n            const body = {\n                revisionUuid: EnvDeployments.revision.id,\n                displayOnDevportal: event.target.checked,\n            };\n            setCheck(event.target.checked);\n            if (api.apiType === API.CONSTS.APIProduct) {\n                restAPIProduct.displayInDevportalProduct(api.id, base64url.encode(event.target.name), body);\n            } else {\n                restApi.displayInDevportalAPI(api.id, base64url.encode(event.target.name), body);\n            }\n        }\n    };\n\n    return (\n        <Switch\n            checked={check}\n            onChange={handleDisplayOnDevPortal}\n            disabled={api.isRevision || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n            name={name}\n        />\n    );\n}\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport PropTypes from 'prop-types';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { useTheme } from '@material-ui/core';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { isRestricted } from 'AppData/AuthManager';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '480px',\n    },\n    textOptional: {\n        fontSize: 'small',\n        color: '#707070',\n        fontWeight: '100',\n    },\n    textRevision: {\n        fontSize: '16px',\n        color: '#707070',\n    },\n    textDeploy: {\n        fontSize: '26px',\n        color: '#1B3A57',\n    },\n    textDescription: {\n        fontSize: '16px',\n        color: '#707070',\n        fontWeight: '400',\n    },\n    descriptionWidth: {\n        minWidth: '550px',\n    },\n    textAlign: {\n        textAlign: 'center',\n    },\n    content: {\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    head: {\n        fontWeight: 200,\n    },\n}));\n/**\n * Renders an Deployment Onboarding\n * @class Environments\n * @extends {React.Component}\n */\nexport default function DeploymentOnboarding(props) {\n    const {\n        classes,\n        getVhostHelperText,\n        createDeployRevision,\n        description,\n        setDescription,\n        gatewayVendor,\n        advertiseInfo,\n    } = props;\n    const classes1 = useStyles();\n    const [api] = useAPI();\n    const theme = useTheme();\n    const { maxCommentLength } = theme.custom;\n    const { settings: { environment: environments } } = useAppContext();\n    const internalGateways = environments.filter((p) => !p.provider.toLowerCase().includes('solace'));\n    const externalGateways = environments.filter((p) => p.provider.toLowerCase().includes('solace'));\n    const hasOnlyOneEnvironment = internalGateways.length === 1;\n    const securityScheme = [...api.securityScheme];\n    const isMutualSslOnly = securityScheme.length === 2 && securityScheme.includes('mutualssl')\n    && securityScheme.includes('mutualssl_mandatory');\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n\n    const isDeployButtonDisabled = (((api.type !== 'WEBSUB' && !isEndpointAvailable))\n    || (!isMutualSslOnly && !isTierAvailable)\n    || api.workflowStatus === 'CREATED');\n\n    const defaultVhosts = internalGateways.map((e) => {\n        if (e.vhosts && e.vhosts.length > 0) {\n            return {\n                env: e.name,\n                vhost: api.isWebSocket() ? e.vhosts[0].wsHost : e.vhosts[0].host\n            };\n        } else {\n            return undefined;\n        }\n    });\n\n    const [descriptionOpen, setDescriptionOpen] = useState(false);\n    const [selectedEnvironment, setSelectedEnvironment] = useState(hasOnlyOneEnvironment\n        ? [internalGateways[0].name] : []);\n\n    /**\n     * Get Solace environments from the environments list\n     * @return String Solace gateway environment name\n     */\n    function getSolaceEnvironment(envs) {\n        const solaceEnv= []\n        envs.forEach((env) => {\n            if (env.provider === 'solace') {\n                solaceEnv.push(env.name);\n            }\n        });\n        return solaceEnv;\n    }\n\n    /**\n     * Get Organization value of external gateways\n     * @param {Object} additionalProperties the additionalProperties list\n     * @return String organization name\n     */\n    function getOrganizationFromAdditionalProperties(additionalProperties) {\n        let organization;\n        additionalProperties.forEach((property) => {\n            if (property.key === 'Organization') {\n                organization = property.value;\n            }\n        });\n        return organization;\n    }\n\n    const [selectedSolaceEnvironment, setSelectedSolaceEnvironment] = useState(\n        getSolaceEnvironment(externalGateways),\n    );\n    const [selectedVhostDeploy, setVhostsDeploy] = useState(defaultVhosts);\n\n    /**\n     * Handle Description\n     */\n    function handleDescriptionOpen() {\n        setDescriptionOpen(!descriptionOpen);\n    }\n\n    const handleVhostDeploySelect = (event) => {\n        const vhosts = selectedVhostDeploy.filter((v) => v.env !== event.target.name);\n        vhosts.push({ env: event.target.name, vhost: event.target.value });\n        setVhostsDeploy(vhosts);\n    };\n\n    const handleChange = (event) => {\n        if (gatewayVendor === 'solace') {\n            if (event.target.checked) {\n                setSelectedSolaceEnvironment([...selectedSolaceEnvironment, event.target.value]);\n            } else {\n                setSelectedSolaceEnvironment(\n                    selectedSolaceEnvironment.filter((env) => env !== event.target.value),\n                );\n            }\n        } else {\n            // eslint-disable-next-line no-lonely-if\n            if (event.target.checked) {\n                setSelectedEnvironment([...selectedEnvironment, event.target.value]);\n            } else {\n                setSelectedEnvironment(\n                    selectedEnvironment.filter((env) => env !== event.target.value),\n                );\n            }\n        }\n        if (event.target.name === 'description') {\n            setDescription(event.target.value);\n        }\n    };\n\n    return (\n        <>\n            <div className={classes.titleWrapper}>\n                <Typography\n                    id='Apis.Details.environments.deploymentOnBoarding.typography.head'\n                    variant='h4'\n                    component='h2'\n                    align='left'\n                    className={classes.mainTitle}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.environments.deploymentOnBoarding.formattedMessage.head'\n                        defaultMessage='Deployments'\n                    />\n                </Typography>\n                \n            </div>\n\n            { api.lifeCycleStatus === 'RETIRED' ? (\n                <>\n                    <Box mt={2}/>\n                    <InlineMessage type='warning' height={140}>\n                        <div className={classes1.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes1.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.environments.deploymentOnBoarding.formattedMessage.warningTitle'\n                                    defaultMessage='Can not deploy retired APIs'\n                                />\n                            </Typography>\n                            <Box mt={1}/>\n                            <Typography component='p' className={classes1.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.environments.deploymentOnBoarding.formattedMessage.description'\n                                    defaultMessage='It is not possible to deploy new revisions for retired APIs.'\n                                    \n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                </>\n            ) : (\n                <Grid container spacing={2}>\n                    <Grid item xs={2} />\n                    <Grid item xs={8}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={2} />\n                            <Grid item xs={8} className={classes1.textAlign}>\n                                <Typography variant='h6' className={classes1.textDeploy}>\n                                    Deploy the API\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2} />\n                        </Grid>\n                        <Box pb={2}>\n                            <Grid container>\n                                <Grid item xs={2} />\n                                <Grid item xs={8} className={classes1.textAlign}>\n                                    <Typography variant='h6' className={classes1.textDescription}>\n                                        Deploy API to the Gateway Environment\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={2} />\n                            </Grid>\n                        </Box>\n                        {(gatewayVendor === 'wso2') ? (\n                            <Paper fullWidth className={classes1.root}>\n                                <Box p={5}>\n                                    <Typography className={classes1.textRevision}>\n                                        API Gateways\n                                    </Typography>\n                                    <Box mt={4}>\n                                        <Grid\n                                            container\n                                            spacing={3}\n                                        >\n                                            {internalGateways.map((row) => (\n                                                <Grid item xs={3}>\n                                                    <Card\n                                                        className={clsx(selectedEnvironment\n                                                        && selectedEnvironment.includes(row.name)\n                                                            ? (classes.changeCard) : (classes.noChangeCard),\n                                                        classes.cardHeight)}\n                                                        variant='outlined'\n                                                    >\n                                                        <Box height='100%'>\n                                                            <CardHeader\n                                                                action={(\n                                                                    <Checkbox\n                                                                        id={row.name.split(' ').join('')}\n                                                                        value={row.name}\n                                                                        checked={selectedEnvironment.includes(row.name)}\n                                                                        onChange={handleChange}\n                                                                        color='primary'\n                                                                        icon={<RadioButtonUncheckedIcon />}\n                                                                        checkedIcon=\n                                                                            {<CheckCircleIcon color='primary' />}\n                                                                        inputProps=\n                                                                            {{ 'aria-label': 'secondary checkbox' }}\n                                                                    />\n                                                                )}\n                                                                title={(\n                                                                    <Typography variant='subtitle2'>\n                                                                        {row.displayName}\n                                                                    </Typography>\n                                                                )}\n                                                                subheader={(\n                                                                    <Typography\n                                                                        variant='body2'\n                                                                        color='textSecondary'\n                                                                        gutterBottom\n                                                                    >\n                                                                        {row.type}\n                                                                    </Typography>\n                                                                )}\n                                                            />\n                                                            <CardContent className={classes.cardContentHeight}>\n                                                                <Grid\n                                                                    container\n                                                                    direction='column'\n                                                                    spacing={2}\n                                                                >\n                                                                    <Grid item xs={12}>\n                                                                        <Tooltip\n                                                                            title={(\n                                                                                <>\n                                                                                    <Typography color='inherit'>\n                                                                                        {getVhostHelperText(row.name,\n                                                                                            selectedVhostDeploy)}\n                                                                                    </Typography>\n                                                                                </>\n                                                                            )}\n                                                                            placement='bottom'\n                                                                        >\n                                                                            <TextField\n                                                                                id='vhost-selector'\n                                                                                select={row.vhosts.length > 1}\n                                                                                disabled={row.vhosts.length === 1}\n                                                                                label={(\n                                                                                    <FormattedMessage\n                                                                                        id='Apis.Details.Environments\n                                                                                        .deploy.vhost'\n                                                                                        defaultMessage='VHost'\n                                                                                    />\n                                                                                )}\n                                                                                SelectProps={{\n                                                                                    MenuProps: {\n                                                                                        anchorOrigin: {\n                                                                                            vertical: 'bottom',\n                                                                                            horizontal: 'left',\n                                                                                        },\n                                                                                        getContentAnchorEl: null,\n                                                                                    },\n                                                                                }}\n                                                                                name={row.name}\n                                                                                value={selectedVhostDeploy.find(\n                                                                                    (v) => v.env === row.name,\n                                                                                ).vhost}\n                                                                                onChange={handleVhostDeploySelect}\n                                                                                margin='dense'\n                                                                                variant='outlined'\n                                                                                fullWidth\n                                                                                helperText={getVhostHelperText(row.name,\n                                                                                    selectedVhostDeploy, true)}\n                                                                            >\n                                                                                {row.vhosts.map(\n                                                                                    (vhost) => (\n                                                                                        <MenuItem value = \n                                                                                            {api.isWebSocket()\n                                                                                                ? vhost.wsHost \n                                                                                                : vhost.host}>\n                                                                                            {api.isWebSocket() \n                                                                                                ? vhost.wsHost \n                                                                                                : vhost.host}\n                                                                                        </MenuItem>\n                                                                                    ),\n                                                                                )}\n                                                                            </TextField>\n                                                                        </Tooltip>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            </CardContent>\n                                                        </Box>\n                                                    </Card>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                    </Box>\n                                    <Box mt={2}>\n                                        <Button\n                                            color='primary'\n                                            className={classes.button}\n                                            display='inline'\n                                            startIcon={<AddIcon />}\n                                            onClick={handleDescriptionOpen}\n                                            id='add-description-btn'\n                                        >\n                                            Add a description\n                                        </Button>\n                                        <Typography display='inline' className={classes1.textOptional}>\n                                            (optional)\n                                        </Typography>\n                                        <br />\n                                        {descriptionOpen && (\n                                            <>\n                                                <TextField\n                                                    className={classes1.descriptionWidth}\n                                                    name='description'\n                                                    margin='dense'\n                                                    variant='outlined'\n                                                    label='Description'\n                                                    inputProps={{ maxLength: maxCommentLength }}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Environments.Environments.revision\n                                                            .description.deploy'\n                                                            defaultMessage='Add a description to the revision'\n                                                        />\n                                                    )}\n                                                    multiline\n                                                    rows={3}\n                                                    defaultValue={description === true ? '' : description}\n                                                    onBlur={handleChange}\n                                                    id='add-description'\n                                                />\n                                            </>\n                                        )}\n                                    </Box>\n                                    <Box mt={3}>\n                                        <Button\n                                            id='deploy-btn'\n                                            type='submit'\n                                            variant='contained'\n                                            onClick={\n                                                () => createDeployRevision(selectedEnvironment, selectedVhostDeploy)\n                                            }\n                                            color='primary'\n                                            disabled={selectedEnvironment.length === 0\n                                                || (advertiseInfo && advertiseInfo.advertised)\n                                                || isDeployButtonDisabled}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Environments.Environments.deploy.deploy'\n                                                defaultMessage='Deploy'\n                                            />\n                                        </Button>\n                                    </Box>\n                                </Box>\n                            </Paper>\n                        ) : (\n                            <Paper fullWidth className={classes1.root}>\n                                <Box p={5}>\n                                    <Typography className={classes1.textRevision}>\n                                        Solace Environments\n                                    </Typography>\n                                    <Box mt={4}>\n                                        <Grid\n                                            container\n                                            spacing={3}\n                                        >\n                                            { externalGateways.map((row) => (\n                                                <Grid item xs={3}>\n                                                    <Card\n                                                        className={clsx(selectedSolaceEnvironment\n                                                        && selectedSolaceEnvironment.includes(row.name)\n                                                            ? (classes.changeCard) : (classes.noChangeCard),\n                                                        classes.cardHeight)}\n                                                        variant='outlined'\n                                                    >\n                                                        <CardHeader\n                                                            data-testid='solace-api-name'\n                                                            action={(\n                                                                <Checkbox\n                                                                    id={row.name.split(' ').join('')}\n                                                                    value={row.name}\n                                                                    checked=\n                                                                        {selectedSolaceEnvironment.includes(row.name)}\n                                                                    disabled={isRestricted(['apim:api_publish',\n                                                                        'apim:api_create'])}\n                                                                    onChange={handleChange}\n                                                                    color='primary'\n                                                                    icon={<RadioButtonUncheckedIcon />}\n                                                                    checkedIcon={<CheckCircleIcon color='primary' />}\n                                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                                />\n                                                            )}\n                                                            title={(\n                                                                <Typography variant='subtitle2'>\n                                                                    {row.displayName}\n                                                                </Typography>\n                                                            )}\n                                                            subheader={(\n                                                                <Typography\n                                                                    data-testid={row.provider.toString()}\n                                                                    variant='body2'\n                                                                    color='textSecondary'\n                                                                    gutterBottom\n                                                                >\n                                                                    {row.provider.toString().toUpperCase()}\n                                                                </Typography>\n                                                            )}\n                                                        />\n                                                        <CardContent className={classes.cardContentHeight}>\n                                                            <Grid\n                                                                container\n                                                                direction='column'\n                                                                spacing={2}\n                                                            >\n                                                                <Grid item xs={12}>\n                                                                    <TextField\n                                                                        data-testid='api-env-name'\n                                                                        id='Api.Details.Third.party.environment.name'\n                                                                        label='Environment'\n                                                                        variant='outlined'\n                                                                        disabled\n                                                                        fullWidth\n                                                                        margin='dense'\n                                                                        value={row.name}\n                                                                    />\n                                                                    <TextField\n                                                                        data-testid='api-org-name'\n                                                                        id='Api.Details.\n                                                                            Third.party.environment.organization'\n                                                                        label='Organization'\n                                                                        variant='outlined'\n                                                                        disabled\n                                                                        fullWidth\n                                                                        margin='dense'\n                                                                        value={getOrganizationFromAdditionalProperties(\n                                                                            row.additionalProperties,\n                                                                        )}\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        </CardContent>\n                                                    </Card>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                    </Box>\n                                    <Box mt={2}>\n                                        <Button\n                                            color='primary'\n                                            className={classes.button}\n                                            display='inline'\n                                            startIcon={<AddIcon />}\n                                            onClick={handleDescriptionOpen}\n                                        >\n                                            Add a description\n                                        </Button>\n                                        <Typography display='inline' className={classes1.textOptional}>\n                                            (optional)\n                                        </Typography>\n                                        <br />\n                                        { descriptionOpen && (\n                                            <>\n                                                <TextField\n                                                    className={classes1.descriptionWidth}\n                                                    name='description'\n                                                    margin='dense'\n                                                    variant='outlined'\n                                                    disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                                                    label='Description'\n                                                    inputProps={{ maxLength: maxCommentLength }}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Environments.Environments.revision\n                                                            .description.deploy'\n                                                            defaultMessage='Add a description to the revision'\n                                                        />\n                                                    )}\n                                                    multiline\n                                                    rows={3}\n                                                    defaultValue={description === true ? '' : description}\n                                                    onBlur={handleChange}\n                                                />\n                                            </>\n                                        ) }\n                                    </Box>\n                                    <Box mt={3}>\n                                        <Button\n                                            id='deploy-btn-solace'\n                                            type='submit'\n                                            variant='contained'\n                                            onClick={\n                                                () => \n                                                    createDeployRevision(selectedSolaceEnvironment, selectedVhostDeploy)\n                                            }\n                                            color='primary'\n                                            disabled={selectedSolaceEnvironment.length === 0\n                                                || isRestricted(['apim:api_publish', 'apim:api_create'])\n                                                || isDeployButtonDisabled}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Environments.Environments.deploy.deploy'\n                                                defaultMessage='Deploy'\n                                            />\n                                        </Button>\n                                    </Box>\n                                </Box>\n                            </Paper>\n                        )}\n                    </Grid>\n                    <Grid item xs={2} />\n                </Grid>)}\n        </>\n    );\n}\nDeploymentOnboarding.propTypes = {\n    getVhostHelperText: PropTypes.shape({}).isRequired,\n    createDeployRevision: PropTypes.shape({}).isRequired,\n    setDescription: PropTypes.shape({}).isRequired,\n    description: PropTypes.string.isRequired,\n    gatewayVendor: PropTypes.string,\n    classes: PropTypes.shape({}).isRequired\n};\n\nDeploymentOnboarding.defaultProps = {\n    gatewayVendor: 'wso2',\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { FormattedMessage } from 'react-intl';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport SubscriptionsTable from './SubscriptionsTable';\nimport SubscriptionPoliciesManage from './SubscriptionPoliciesManage';\nimport SubscriptionAvailability from './SubscriptionAvailability';\n\nconst useStyles = makeStyles((theme) => ({\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n/**\n * Subscriptions component\n *\n * @class Subscriptions\n * @extends {Component}\n */\nfunction Subscriptions(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const { updateAPI } = props;\n    const restApi = new API();\n    const [tenants, setTenants] = useState(null);\n    const [policies, setPolices] = useState({});\n    const [availability, setAvailability] = useState({ subscriptionAvailability: api.subscriptionAvailability });\n    const [tenantList, setTenantList] = useState(api.subscriptionAvailableTenants);\n    const [subscriptions, setSubscriptions] = useState(null);\n    const [updateInProgress, setUpdateInProgress] = useState(false);\n    const { settings } = useAppContext();\n\n    /**\n     * Save subscription information (policies, subscriptionAvailability, subscriptionAvailableTenants)\n     */\n    function saveAPI() {\n        setUpdateInProgress(true);\n        const { subscriptionAvailability } = availability;\n        const newApi = {\n            policies,\n            subscriptionAvailability,\n            subscriptionAvailableTenants: tenantList,\n        };\n        updateAPI(newApi)\n            .then(() => {\n                Alert.info('Subscription configurations updated successfully');\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error('Error occurred while updating subscription configurations');\n            }).finally(() => {\n                setUpdateInProgress(false);\n            });\n    }\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n        restApi.subscriptions(api.id)\n            .then((result) => {\n                setSubscriptions(result.body.count);\n            });\n        setPolices([...api.policies]);\n    }, []);\n\n    if (typeof tenants !== 'number' || typeof subscriptions !== 'number') {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <>\n            {(api.gatewayVendor === 'wso2')\n            && (<SubscriptionPoliciesManage api={api} policies={policies} setPolices={setPolices} />)}\n            {tenants !== 0 && settings.crossTenantSubscriptionEnabled && (\n                <SubscriptionAvailability\n                    api={api}\n                    availability={availability}\n                    setAvailability={setAvailability}\n                    tenantList={tenantList}\n                    setTenantList={setTenantList}\n                />\n            )}\n            { updateInProgress && <Progress /> }\n            {(api.gatewayVendor === 'wso2') && (\n                <Grid\n                    container\n                    direction='row'\n                    alignItems='flex-start'\n                    spacing={1}\n                    className={classes.buttonSection}\n                >\n                    <Grid item>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={api.isRevision || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                            onClick={() => saveAPI()}\n                            id='subscriptions-save-btn'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.Subscriptions.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            component={Link}\n                            to={'/apis/' + api.id + '/overview'}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.Subscriptions.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Grid>\n                </Grid>\n            )}\n            <SubscriptionsTable api={api} />\n        </>\n    );\n}\n\nSubscriptions.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withStyles(makeStyles)(Subscriptions);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport InfoIcon from '@material-ui/icons/Info';\nimport UserIcon from '@material-ui/icons/Person';\n\n\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport AuthManager from 'AppData/AuthManager';\nimport Invoice from './Invoice';\n\nconst styles = (theme) => ({\n    heading: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    popupHeadline: {\n        alignItems: 'center',\n        borderBottom: '2px solid #40E0D0',\n        textAlign: 'center',\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n    },\n    searchDiv: {\n        float: 'right',\n        paddingTop: theme.spacing(1.25),\n        paddingRight: theme.spacing(1.25),\n    },\n    searchRoot: {\n        paddingTop: theme.spacing(0.25),\n        paddingBottom: theme.spacing(0.25),\n        paddingRight: theme.spacing(0.5),\n        paddingLeft: theme.spacing(0.5),\n        display: 'flex',\n        alignItems: 'right',\n        width: theme.spacing(50),\n        borderBottom: '1px solid #E8E8E8',\n    },\n    searchInput: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchIconButton: {\n        padding: theme.spacing(1.25),\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    tableColumnSize: {\n        width: '14%',\n    },\n    tableColumnSize2: {\n        width: '30%',\n    },\n    dialogColumnSize: {\n        width: '50%',\n    },\n    dialog: {\n        float: 'center',\n        alignItems: 'center',\n    },\n    invoiceTable: {\n        '& td': {\n            fontSize: theme.typography.fontSize * 1.5,\n        },\n    },\n    uniqueCell: {\n        borderTop: '1px solid #000000',\n        fontWeight: 'bold',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n        marginTop: theme.spacing(3),\n    },\n    titleWrapper: {\n        marginBottom: theme.spacing(3),\n    },\n    typography: {\n        padding: theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n    },\n    InfoToolTip: {\n        backgroundColor: theme.custom.disableColor,\n        color: theme.palette.getContrastText(theme.custom.disableColor),\n        fontSize: theme.typography.fontSize,\n        fontWeight: theme.typography.h6.fontWeight,\n        border: 'solid 1px ' + theme.palette.grey,\n        borderRadius: theme.shape.borderRadius,\n        padding: theme.spacing(2),\n    },\n    subscriberHeader: {\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n});\n\nconst subscriptionStatus = {\n    BLOCKED: 'BLOCKED',\n    PROD_BLOCKED: 'PROD_ONLY_BLOCKED',\n};\n\n/**\n * Table pagination for subscriptions table\n *\n * @param props props used for SubscriptionTablePagination\n * @returns {*}\n */\nfunction SubscriptionTablePagination(props) {\n    const {\n        count, page, rowsPerPage, onChangePage,\n    } = props;\n\n    /**\n     * handleFirstPageButtonClick loads data of the first page\n     * */\n    function handleFirstPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(0);\n        }\n    }\n\n    /**\n     * handleBackButtonClick load data of the prev page\n     * */\n    function handleBackButtonClick() {\n        if (onChangePage) {\n            onChangePage(page - 1);\n        }\n    }\n\n    /**\n     * handleNextButtonClick load data of the next page\n     * */\n    function handleNextButtonClick() {\n        if (onChangePage) {\n            onChangePage(page + 1);\n        }\n    }\n\n    /**\n     * handleLastPageButtonClick load data of the last page\n     * */\n    function handleLastPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n        }\n    }\n\n    return (\n        <div\n            style={{ display: 'flex' }}\n        >\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n            >\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n            >\n                <KeyboardArrowLeft />\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <KeyboardArrowRight />\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    );\n}\n\nSubscriptionTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n};\n\n/**\n * Lists all subscriptions.\n *\n * @class SubscriptionsTable\n * @extends {React.Component}\n */\nclass SubscriptionsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.api = props.api;\n        this.state = {\n            subscriptions: null,\n            totalSubscription: 0,\n            page: 0,\n            rowsPerPage: 5,\n            searchQuery: null,\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            emptyColumnHeight: 60,\n            policies: [],\n            subscriberClaims: null,\n        };\n        this.formatSubscriptionStateString = this.formatSubscriptionStateString.bind(this);\n        this.blockSubscription = this.blockSubscription.bind(this);\n        this.blockProductionOnly = this.blockProductionOnly.bind(this);\n        this.unblockSubscription = this.unblockSubscription.bind(this);\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.filterSubscriptions = this.filterSubscriptions.bind(this);\n        this.isMonetizedPolicy = this.isMonetizedPolicy.bind(this);\n        this.renderClaims = this.renderClaims.bind(this);\n        this.isNotCreator = AuthManager.isNotCreator();\n        this.isNotPublisher = AuthManager.isNotPublisher();\n    }\n\n    componentDidMount() {\n        this.fetchSubscriptionData();\n    }\n\n    // TODO: This is a React anti-pattern, have to move this to a component ~tmkb\n    /**\n     * Returns the set of action buttons based on the current subscription state\n     *\n     * @param {*} state State of the subscription (PROD_ONLY_BLOCKED/BLOCKED/ACTIVE)\n     * @param {*} subscriptionId Subscription ID\n     * @returns {JSX} Action buttons in JSX\n     * @memberof SubscriptionsTable\n     */\n    getSubscriptionBlockingButtons(state, subscriptionId) {\n        const { classes } = this.props;\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled={this.api.isRevision}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled={this.api.isRevision}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                        disabled={this.api.isRevision}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled={this.api.isRevision}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                        disabled={this.api.isRevision}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled={this.api.isRevision}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        }\n    }\n\n    /**\n     * handleChangePage handle change in selected page\n     *\n     * @param page selected page\n     * */\n    handleChangePage(page) {\n        this.setState({ page }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * handleChangeRowsPerPage handle change in rows per page\n     *\n     * @param event rows per page change event\n     * */\n    handleChangeRowsPerPage(event, changeRowsPerPage) {\n        changeRowsPerPage(event.target.value);\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Returns subscription state string based on te current subscription state\n     *\n     * @param {*} state The current state of subscription\n     * @returns {JSX} Subscription state string\n     * @memberof SubscriptionsTable\n     */\n    formatSubscriptionStateString(state) {\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.production.only.subs.state'\n                    defaultMessage='Blocked Production Only'\n                />\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.subs.state'\n                    defaultMessage='Blocked'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.active.subs.state'\n                    defaultMessage='Active'\n                />\n            );\n        }\n    }\n\n    /**\n     * Blocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked',\n                    defaultMessage: 'Subscription was blocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Blocks production only for the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockProductionOnly(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.PROD_BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked.prod.only',\n                    defaultMessage: 'Subscription was blocked for production only.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block.prod.only',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Unblocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    unblockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.unblockSubscriptions(subscriptionId);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.unblocked',\n                    defaultMessage: 'Subscription was unblocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.unblock',\n                        defaultMessage: 'Error: Unable to unblock subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Fetches subscription data\n     *\n     * @memberof SubscriptionsTable\n     */\n    fetchSubscriptionData() {\n        const api = new API();\n        const { page, rowsPerPage, searchQuery } = this.state;\n        const { intl } = this.props;\n        const promisedSubscriptions = api.subscriptions(this.api.id, page * rowsPerPage, rowsPerPage, searchQuery);\n        promisedSubscriptions\n            .then((response) => {\n                for (let i = 0; i < response.body.list.length; i++) {\n                    const { subscriptionId } = response.body.list[i];\n                    response.body.list[i].name = response.body.list[i].applicationInfo.name;\n                    const promisedInfo = api.getSubscriberInfo(subscriptionId);\n                    promisedInfo\n                        .then((resp) => {\n                            this.setState((prevState) => ({\n                                subscriberClaims: {\n                                    ...prevState.subscriberClaims,\n                                    [subscriptionId]: resp.body,\n                                },\n                            }));\n                        })\n                        .catch((errorMessage) => {\n                            console.error(errorMessage);\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscriber.info.error',\n                                defaultMessage: 'Error while retrieving the subscriber information',\n                            }));\n                        });\n                }\n                this.setState({\n                    subscriptions: response.body.list,\n                    totalSubscription: response.body.pagination.total,\n                });\n            })\n            .catch((errorMessage) => {\n                console.error(errorMessage);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscriptions.error',\n                    defaultMessage: 'Error while retrieving the subscriptions',\n                }));\n            });\n        api.getMonetization(this.props.api.id).then((status) => {\n            this.setState({ monetizationStatus: status.enabled });\n        });\n        api.getSubscriptionPolicies(this.api.id).then((policies) => {\n            const filteredPolicies = policies ? policies.filter((policy) => policy.tierPlan === 'COMMERCIAL') : [];\n            this.setState({ policies: filteredPolicies });\n        });\n    }\n\n    /**\n     * Checks whether the policy is a usage based monetization plan\n     *\n     * */\n    isMonetizedPolicy(policyName) {\n        const { policies, monetizationStatus } = this.state;\n        if (policies.length > 0) {\n            const filteredPolicies = policies.filter(\n                (policy) => policy.name === policyName && policy.monetizationAttributes.pricePerRequest != null,\n            );\n            return (filteredPolicies.length > 0 && monetizationStatus);\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Filter subscriptions based on user search value\n     *\n     * @param event onChange event of user search\n     */\n    filterSubscriptions(event) {\n        this.setState({ searchQuery: event.target.value }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Render claims based on the claim object\n     */\n    renderClaims(claimsObject) {\n        const { classes } = this.props;\n        if (claimsObject) {\n            return (\n                <div className={classes.root}>\n                    {claimsObject.name}\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <UserIcon color='primary' />\n                        </Grid>\n                        <Grid item>\n                            {claimsObject.name}\n                        </Grid>\n                    </Grid>\n                    {claimsObject.claims && (\n                        <div>\n                            <Table className={classes.table}>\n                                <TableBody>\n                                    {claimsObject.claims.map((claim) => (\n                                        <TableRow hover>\n                                            <TableCell>{claim.name}</TableCell>\n                                            {claim.value ? (\n                                                <TableCell>{claim.value}</TableCell>\n                                            ) : (\n                                                <TableCell>Not Available</TableCell>\n                                            )}\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Typography className={classes.typography}>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Subscriber.no.claims'\n                        defaultMessage='No subscriber claims data available'\n                    />\n                </Typography>\n            </div>\n        );\n    }\n\n    /**\n     *\n     */\n    render() {\n        const {\n            subscriptions, page, rowsPerPage, totalSubscription, rowsPerPageOptions, emptyColumnHeight,\n            subscriberClaims,\n        } = this.state;\n        const { classes, api } = this.props;\n        if (!subscriptions) {\n            return (\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                </Grid>\n            );\n        }\n        const columns = [\n            {\n                name: 'subscriptionId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.applicationId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriber',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscriber'\n                        defaultMessage='Subscriber'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            let claimsObject;\n                            if (subscriberClaims) {\n                                claimsObject = subscriberClaims[tableMeta.rowData[0]];\n                            }\n                            return (\n                                <Box display='flex'>\n                                    <Box pr={1}>\n                                        {subscriberClaims && claimsObject && claimsObject.name}\n                                    </Box>\n                                    <Tooltip\n                                        interactive\n                                        placement='top'\n                                        classes={{\n                                            tooltip: classes.InfoToolTip,\n                                        }}\n                                        title={(\n                                            <>\n                                                {subscriberClaims && (\n                                                    <div>\n                                                        {this.renderClaims(claimsObject)}\n                                                    </div>\n                                                )}\n                                            </>\n                                        )}\n                                    >\n                                        <Grid container direction='row' alignItems='center' spacing={1}>\n                                            <Grid item>\n                                                <Typography>\n                                                    <InfoIcon color='action' />\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                {value}\n                                            </Grid>\n                                        </Grid>\n                                    </Tooltip>\n                                </Box>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'name',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.application'\n                        defaultMessage='Application'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'applicationInfo.description',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriptionCount',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'throttlingPolicy',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.throttling.tier'\n                        defaultMessage='Tier'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'subscriptionStatus',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.status'\n                        defaultMessage='Status'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'actions',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.actions'\n                        defaultMessage='Actions'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const status = tableMeta.rowData[7];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <ScopeValidation\n                                    resourceMethod={resourceMethod.POST}\n                                    resourcePath={resourcePath.BLOCK_SUBSCRIPTION}\n                                >\n                                    {\n                                        this.getSubscriptionBlockingButtons(\n                                            status,\n                                            subscriptionId,\n                                        )\n                                    }\n                                </ScopeValidation>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'invoice',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.invoice'\n                        defaultMessage='Invoice'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const throttlingPolicy = tableMeta.rowData[6];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <Invoice\n                                    subscriptionId={subscriptionId}\n                                    isNotAuthorized={this.isNotCreator && this.isNotPublisher}\n                                    isMonetizedUsagePolicy={\n                                        this.isMonetizedPolicy(throttlingPolicy)\n                                    }\n                                    api={api}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n        ];\n\n        const options = {\n            title: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            elevation: 1,\n            customToolbar: false,\n            search: false,\n            selectableRows: 'none',\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            customFooter: (count, muiPage, muiRowsPerPage, changeRowsPerPage) => {\n                return (\n                    <TablePagination\n                        rowsPerPageOptions={rowsPerPageOptions}\n                        colSpan={6}\n                        count={totalSubscription}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={(e) => this.handleChangeRowsPerPage(e, changeRowsPerPage)}\n                        ActionsComponent={SubscriptionTablePagination}\n                    />\n                );\n            },\n        };\n        const subMails = {};\n        const emails = subscriberClaims && Object.entries(subscriberClaims).map(([, v]) => {\n            let email = null;\n            if (!subMails[v.name] && v.claims.length > 0) {\n                email = v.claims.find((claim) => claim.uri === 'http://wso2.org/claims/emailaddress').value;\n                subMails[v.name] = email;\n            }\n            return email;\n        }).reduce((a, b) => {\n            return b !== null ? `${a || ''},${b}` : a;\n        });\n        let names = null;\n        if (subMails) {\n            Object.entries(subMails).map(([k, v]) => {\n                if (v) {\n                    if (names === null) {\n                        names = k;\n                    } else {\n                        names = `${names}, ${k}`;\n                    }\n                }\n                return null;\n            });\n        }\n        const Tip = names ? React.Fragment : Tooltip;\n        return (\n            <>\n                <div className={classes.heading}>\n                    <Typography variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.manage.subscriptions'\n                            defaultMessage='Manage Subscriptions'\n                        />\n                        {'   '}\n                        {subscriptions.length > 0 && (\n                            <Tip title='No contact details' placement='top'>\n                                <span>\n                                    <Button\n                                        target='_blank'\n                                        rel='noopener'\n                                        href={`mailto:?subject=Message from the API Publisher&cc=${emails}`\n                                            + `&body=Hi ${names},`}\n                                        size='small'\n                                        disabled={!names}\n                                        variant='outlined'\n                                    >\n                                        Contact Subscribers\n                                    </Button>\n                                </span>\n                            </Tip>\n                        )}\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.sub.heading'\n                            defaultMessage='Manage subscriptions of the API'\n                        />\n                    </Typography>\n                </div>\n                <Paper elevation={0}>\n                    {subscriptions.length > 0 ? (\n                        <div>\n                            <MUIDataTable title='' data={subscriptions} columns={columns} options={options} />\n                        </div>\n                    )\n                        : (\n                            <div className={classes.noDataMessage} style={{ height: rowsPerPage * emptyColumnHeight }}>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionsTable.no.subscriptions'\n                                    defaultMessage='No subscriptions data available'\n                                />\n                            </div>\n                        )}\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionsTable.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionsTable));\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { FormattedMessage } from 'react-intl';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\n// eslint-disable-next-line require-jsdoc\nfunction Invoice(props) {\n    const {\n        subscriptionId,\n        isMonetizedUsagePolicy,\n        isNotAuthorized,\n        api,\n    } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n   * Handle the popup for invoice\n   */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promiseInvoice = apiProduct.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        } else {\n            const promiseInvoice = api.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        }\n    };\n\n    /**\n   * Handle closing the popup for invoice\n   */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <>\n            <Button\n                variant='outlined'\n                size='small'\n                color='primary'\n                disabled={!isMonetizedUsagePolicy || isNotAuthorized}\n                onClick={handlePopup}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            <Dialog open={showPopup} onClose={handleClose} fullWidth='true'>\n                {invoice && (\n                    <MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />\n                )}\n            </Dialog>\n            <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true'>\n                <DialogTitle>No Data Available</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='invoice-dialog-description'>\n                        Pending invoice data not found for this subscription.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n    isMonetizedUsagePolicy: PropTypes.string.isRequired,\n    isNotAuthorized: PropTypes.string.isRequired,\n    api: PropTypes.instanceOf(API).isRequired,\n};\n\nexport default Invoice;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Box from '@material-ui/core/Box';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    subscriptionPoliciesPaper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    grid: {\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(1.5),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n});\n\n/**\n * Manage subscription policies of the API\n * */\nclass SubscriptionPoliciesManage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptionPolicies: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { api } = this.props;\n        const isAsyncAPI = (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC');\n        const policyPromise = isAsyncAPI ? API.asyncAPIPolicies() : API.policies('subscription');\n        policyPromise\n            .then((res) => {\n                this.setState({ subscriptionPolicies: res.body.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     * Handle onChange of selected subsription policies\n     *\n     * @param event onChange event\n     */\n    handleChange(event) {\n        const { name, checked } = event.target;\n        const { setPolices, policies } = this.props;\n        let newSelectedPolicies = [...policies];\n        if (checked) {\n            newSelectedPolicies.push(name);\n        } else {\n            newSelectedPolicies = policies.filter((policy) => policy !== name);\n        }\n        setPolices(newSelectedPolicies);\n    }\n\n    render() {\n        const { classes, api, policies } = this.props;\n        const { subscriptionPolicies } = this.state;\n\n        /*\n        Following logic is to identify migrated users policies.\n        Before 4.0.0 there were no different policy set for async apis\n        So the same policies are attached to the API. ex: api.policies = [\"Unlimited\"]\n        But throttling-policies/streaming/subscription does not have this \"Unlimited\" policy after 4.0\n        So logic in UI shows no policy is attached to the API.\n        Following logic identifies that special case.\n        */\n        let migratedCase = false;\n        let preMigrationPolicies;\n        if (Object.keys(subscriptionPolicies).length !== 0 && api.policies && api.policies.length > 0) {\n            preMigrationPolicies = api.policies.filter((apiPolicy) => {\n                const samePolicies = subscriptionPolicies.filter((subPolicy) => apiPolicy === subPolicy.displayName);\n                return samePolicies.length === 0;\n            });\n            migratedCase = preMigrationPolicies.length > 0;\n        }\n\n        return (\n            <>\n                <Typography id='itest-api-details-bushiness-plans-head' variant='h4' component='h2'>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.business.plans'\n                        defaultMessage='Business Plans'\n                    />\n                </Typography>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.APIProduct.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )}\n                <Paper className={classes.subscriptionPoliciesPaper}>\n                    <FormControl className={classes.formControl}>\n                        <FormGroup>\n                            { subscriptionPolicies && Object.entries(subscriptionPolicies).map((value) => (\n                                <FormControlLabel\n                                    data-testid={'policy-checkbox-' + value[1].displayName.toLowerCase()}\n                                    key={value[1].displayName}\n                                    control={(\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'], api)}\n                                            color='primary'\n                                            checked={policies.includes(value[1].displayName)}\n                                            onChange={(e) => this.handleChange(e)}\n                                            name={value[1].displayName}\n                                        />\n                                    )}\n                                    label={value[1].displayName + ' : ' + value[1].description}\n                                />\n                            ))}\n                            { migratedCase && (\n                                <Box display='flex' flexDirection='column'>\n                                    <Box className={classes.migrateMessage}>\n                                        <Typography variant='caption' gutterBottom>\n                                            <FormattedMessage\n                                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.sub.migrated'\n                                                defaultMessage={`Following policies are migrated from an \n                                            old version of APIM. You can uncheck and select a different policy. \n                                            Note that this is an irreversible operation.`}\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    {preMigrationPolicies.map((policy) => (\n                                        <FormControlLabel\n                                            data-testid={'policy-checkbox-' + policy.toLowerCase()}\n                                            key={policy}\n                                            control={(\n                                                <Checkbox\n                                                    disabled={\n                                                        isRestricted(['apim:api_publish', 'apim:api_create'], api)\n                                                    }\n                                                    color='primary'\n                                                    checked={policies.includes(policy)}\n                                                    onChange={(e) => this.handleChange(e)}\n                                                    name={policy}\n                                                />\n                                            )}\n                                            label={policy}\n                                        />\n                                    ))}\n                                </Box>\n                            )}\n                        </FormGroup>\n                    </FormControl>\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionPoliciesManage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.arrayOf(PropTypes.shape({})) }).isRequired,\n    setPolices: PropTypes.func.isRequired,\n    policies: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionPoliciesManage));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TenantAutocomplete from 'AppComponents/Apis/Details/Subscriptions/TenantAutocomplete';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 400,\n    },\n    textControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    subscriptionAvailabilityPaper: {\n        marginTop: theme.spacing(2),\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    grid: {\n        display: 'flex',\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(3.5),\n    },\n    saveButton: {\n        marginTop: theme.spacing(2),\n    },\n    heading: {\n        marginTop: theme.spacing(3),\n    },\n    tenantsList: {\n        height: theme.spacing(12),\n    },\n}));\n\n/**\n * Allows user to select API availability for tenants\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    const {\n        api, setAvailability, tenantList, setTenantList,\n    } = props;\n    let currentAvailability;\n    if (api.subscriptionAvailability === null || api.subscriptionAvailability === 'CURRENT_TENANT') {\n        currentAvailability = 'currentTenant';\n    } else if (api.subscriptionAvailability === 'ALL_TENANTS') {\n        currentAvailability = 'allTenants';\n    } else if (api.subscriptionAvailability === 'SPECIFIC_TENANTS') {\n        currentAvailability = 'specificTenants';\n    }\n    const [values, setValues] = React.useState({\n        availability: currentAvailability,\n    });\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    const isSpecificTenants = values.availability === 'specificTenants';\n    const isUIElementDisabled = isRestricted(['apim:api_publish', 'apim:api_create'], api);\n\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    /**\n     * Handle onchange for the subscription availability dropdown\n     * @param {string} value the new value selected for subscription availability\n     */\n    function subscriptionAvailableTenants(value) {\n        let availabilityValue;\n\n        setValues({\n            ...values,\n            availability: value,\n        });\n\n        if (value === 'currentTenant') {\n            availabilityValue = 'CURRENT_TENANT';\n            setTenantList([]);\n        } else if (value === 'allTenants') {\n            availabilityValue = 'ALL_TENANTS';\n            setTenantList([]);\n        } else if (value === 'specificTenants') {\n            availabilityValue = 'SPECIFIC_TENANTS';\n        }\n        setAvailability({\n            subscriptionAvailability: availabilityValue,\n        });\n    }\n\n    return (\n        <Grid item xs={12} md={12} lg={12}>\n            <Typography variant='h4' component='h2' className={classes.heading}>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.subscription.availability'\n                    defaultMessage='Subscription Availability'\n                />\n            </Typography>\n            <Typography variant='caption' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.sub.heading'\n                    defaultMessage='Make subscriptions available to tenants'\n                />\n            </Typography>\n            <Paper className={classes.subscriptionAvailabilityPaper}>\n                <form className={classes.root} autoComplete='off' onSubmit={(e) => { e.preventDefault(); }}>\n                    <Grid container xs={12} spacing={1} className={classes.grid}>\n                        <Grid item xs={10}>\n                            <FormControl\n                                variant='outlined'\n                                className={classes.formControl}\n                                disabled={isUIElementDisabled}\n                            >\n                                <InputLabel ref={inputLabel} htmlFor='outlined-age-simple' />\n                                <Select\n                                    value={values.availability}\n                                    onChange={({ target: { value } }) => {\n                                        subscriptionAvailableTenants(value);\n                                    }}\n                                    labelWidth={labelWidth}\n                                    displayEmpty\n                                    name='availability'\n                                    inputProps={{\n                                        name: 'availability',\n                                        id: 'outlined-availabi;ity-simple',\n                                    }}\n                                >\n                                    <MenuItem value='currentTenant'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.current.tenant.only'\n                                            defaultMessage='Available to current tenant only'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='allTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.all.tenants'\n                                            defaultMessage='Available to all the tenants'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='specificTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.specific.tenants'\n                                            defaultMessage='Available to specific tenants'\n                                        />\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        {isSpecificTenants ? (\n                            <Grid item xs={8} className={classes.tenantsList}>\n                                <TenantAutocomplete setTenantList={setTenantList} tenantList={tenantList} api={api} />\n                            </Grid>\n                        ) : <Grid item xs={8} />}\n                    </Grid>\n                </form>\n            </Paper>\n        </Grid>\n    );\n}\nSimpleSelect.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.arrayOf(PropTypes.shape({})) }).isRequired,\n    setAvailability: PropTypes.func.isRequired,\n    setTenantList: PropTypes.func.isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n}));\n\n/**\n * Renders the input component\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    InputProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n\n/**\n * Renders the suggestion component\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, tenantList,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (tenantList || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n    suggestion: PropTypes.string.isRequired,\n};\n\n/**\n * Gets suggestion list\n */\nfunction getSuggestions(value, suggestions, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : suggestions.filter((suggestion) => {\n            const keep = count < 15 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\n/**\n * Downshift selection component\n */\nfunction DownshiftMultiple(props) {\n    const { tenantList, setTenantList } = props;\n    const { classes, suggestions } = props;\n    const [inputValue, setInputValue] = React.useState('');\n\n    function handleKeyDown(event) {\n        if (tenantList.length && !inputValue.length && event.key === 'Backspace') {\n            setTenantList(tenantList.slice(0, tenantList.length - 1));\n        }\n    }\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    }\n\n    function handleChange(item) {\n        let newSelectedItem = [...tenantList];\n        if (newSelectedItem.indexOf(item) === -1) {\n            newSelectedItem = [...newSelectedItem, item];\n        }\n        setInputValue('');\n        setTenantList(newSelectedItem);\n    }\n\n    const handleDelete = (item) => () => {\n        const newSelectedItem = [...tenantList];\n        newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n        setTenantList(newSelectedItem);\n    };\n\n    return (\n        <Downshift\n            id='downshift-multiple'\n            inputValue={inputValue}\n            onChange={handleChange}\n            tenantList={tenantList}\n        >\n            {({\n                getInputProps,\n                getItemProps,\n                getLabelProps,\n                isOpen,\n                inputValue: inputValue2,\n                tenantList: tenantList2,\n                highlightedIndex,\n            }) => {\n                const {\n                    onBlur, onChange, onFocus, ...inputProps\n                } = getInputProps({\n                    onKeyDown: handleKeyDown,\n                    placeholder: 'Type and select tenants from the suggested list',\n                });\n\n                return (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth: true,\n                            classes,\n                            label: 'Tenants',\n                            InputLabelProps: getLabelProps(),\n                            InputProps: {\n                                startAdornment: tenantList.map((item) => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        onDelete={handleDelete(item)}\n                                    />\n                                )),\n                                onBlur,\n                                onChange: (event) => {\n                                    handleInputChange(event);\n                                    onChange(event);\n                                },\n                                onFocus,\n                            },\n                            inputProps,\n                        })}\n\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2, suggestions).map((suggestion, index) => renderSuggestion({\n                                    suggestion,\n                                    index,\n                                    itemProps: getItemProps({ item: suggestion }),\n                                    highlightedIndex,\n                                    tenantList: tenantList2,\n                                }))}\n                            </Paper>\n                        ) : null}\n                    </div>\n                );\n            }}\n        </Downshift>\n    );\n}\n\nDownshiftMultiple.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    suggestions: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n\n/**\n * Gets tenant list in order to populate suggestions list\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const [suggestions, setsuggestions] = useState({});\n    const { setTenantList, tenantList } = props;\n\n    const restApi = new API();\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                const tenants = result.body.list;\n                const newSuggestions = tenants.map((tenant) => { return tenant.domain; });\n                setsuggestions(newSuggestions);\n            });\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.divider} />\n            <DownshiftMultiple\n                classes={classes}\n                suggestions={suggestions}\n                tenantList={tenantList}\n                setTenantList={setTenantList}\n            />\n            <div className={classes.divider} />\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport CommentsAPI from 'AppData/Comments';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    paper: {\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        paddingRight: theme.spacing(2),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    contentWrapperOverview: {\n        padding: 0,\n        width: '100%',\n        boxShadow: 'none',\n    },\n    titleSub: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    loadMoreLink: {\n        textDecoration: 'none',\n    },\n    genericMessageWrapper: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        marginRight: theme.spacing(3),\n    },\n    paperProgress: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n        textAlign: 'center',\n    },\n    dialogContainer: {\n        width: 1000,\n        padding: theme.spacing(2),\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: [],\n            comments: [],\n            totalComments: 0,\n            apiId: null,\n            loading: true,\n        };\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n        this.addComment = this.addComment.bind(this);\n        this.updateComment = this.updateComment.bind(this);\n        this.onDeleteComment = this.onDeleteComment.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { api, theme } = this.props;\n        this.setState({ apiId: api.id });\n        const limit = theme.custom.commentsLimit;\n        const offset = 0;\n\n        CommentsAPI.all(api.id, limit, offset)\n            .then((result) => {\n                const commentList = result.body.list;\n                this.setState({\n                    allComments: commentList,\n                    comments: commentList,\n                    totalComments: result.body.pagination.total,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error('Something went wrong while retrieving comments');\n                }\n            });\n    }\n\n    /**\n     * Delete a comment\n     * @param {string} commentIdOfCommentToDelete id of deleted commetn\n     * @memberof Comments\n     */\n    onDeleteComment(commentIdOfCommentToDelete) {\n        const {\n            apiId, comments, totalComments,\n        } = this.state;\n\n        const remainingComments = comments.filter((item) => item.id !== commentIdOfCommentToDelete);\n        const newTotal = totalComments - 1;\n\n        if (newTotal > remainingComments.length) {\n            CommentsAPI\n                .all(apiId, 1, remainingComments.length)\n                .then((result) => {\n                    if (result.body) {\n                        this.setState({\n                            totalComments: newTotal,\n                            comments: [...remainingComments, ...result.body.list],\n                            allComments: [...remainingComments, ...result.body.list],\n                        });\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                });\n        } else {\n            this.setState({\n                totalComments: newTotal,\n                comments: remainingComments,\n                allComments: remainingComments,\n            });\n        }\n    }\n\n    /**\n     * Add comment to the comment list\n     * @param {any} comment added comment\n     * @memberof Comments\n     */\n    addComment(comment) {\n        const { totalComments, allComments } = this.state;\n        const newTotal = totalComments + 1;\n\n        this.setState({\n            allComments: [comment, ...allComments],\n            totalComments: newTotal,\n            comments: [comment, ...allComments],\n        });\n    }\n\n    /**\n     * Update a specific comment in the comment list\n     * @param {any} comment updated comment\n     * @memberof Comments\n     */\n    updateComment(comment) {\n        const { comments } = this.state;\n\n        const newComments = comments.reduce((acc, cur) => {\n            let temp = cur;\n            if (cur.id === comment.id) {\n                temp = comment;\n            }\n            return [...acc, temp];\n        }, []);\n        this.setState({\n            allComments: newComments,\n            comments: newComments,\n        });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { allComments, comments } = this.state;\n        const { theme, api: { id: apiId } } = this.props;\n        const limit = theme.custom.commentsLimit;\n        const offset = comments.length;\n\n        CommentsAPI.all(apiId, limit, offset)\n            .then((result) => {\n                const newAllCommentList = allComments.concat(result.body.list);\n                this.setState({ allComments: newAllCommentList, comments: newAllCommentList });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            comments, allComments, totalComments, loading,\n        } = this.state;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.root}>\n                    <Typography id='itest-api-details-comments-head' variant='h4' className={classes.titleSub}>\n                        {totalComments > 0 ? totalComments + (' ') : ''}\n                        <FormattedMessage id='Apis.Details.Comments.title' defaultMessage='Comments' />\n                    </Typography>\n                </div>\n\n                <div className={classes.paper}>\n                    <CommentAdd\n                        api={api}\n                        commentsUpdate={this.addComment}\n                        addComment={this.addComment}\n                        allComments={allComments}\n                        replyTo={null}\n                        cancelButton\n                    />\n                </div>\n\n                {loading && (\n                    <div className={classes.paperProgress}>\n                        <CircularProgress size={24} />\n                    </div>\n                )}\n                {!loading && totalComments === 0\n                    && (\n                        <div className={classes.genericMessageWrapper}>\n                            <InlineMessage type='info' className={classes.dialogContainer}>\n                                <Typography variant='h5' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Comments.no.comments'\n                                        defaultMessage='No Comments Yet'\n                                    />\n                                </Typography>\n                                <Typography component='p'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Comments.no.comments.content'\n                                        defaultMessage='No comments available for this API yet'\n                                    />\n                                </Typography>\n                            </InlineMessage>\n                        </div>\n                    )}\n                <Comment\n                    comments={comments}\n                    api={api}\n                    allComments={allComments}\n                    onDeleteComment={this.onDeleteComment}\n                    updateComment={this.updateComment}\n                />\n                {totalComments > comments.length && (\n                    <div className={classes.contentWrapper}>\n                        <Grid container spacing={4} className={classes.root}>\n                            <Grid item>\n                                <Typography className={classes.verticalSpace} variant='body1'>\n                                    <a\n                                        className={classes.link + ' ' + classes.loadMoreLink}\n                                        onClick={this.handleLoadMoreComments}\n                                        onKeyDown={this.handleLoadMoreComments}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Comments.load.previous.comments'\n                                            defaultMessage='Show More'\n                                        />\n                                    </a>\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography className={classes.verticalSpace} variant='body1'>\n                                    {'(' + comments.length + ' of ' + totalComments + ')'}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Comments));\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport CommentsAPI from 'AppData/Comments';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\nimport CommentAdd from './CommentAdd';\n\ndayjs.extend(relativeTime);\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: 0,\n        width: '99%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n        wordBreak: 'break-all',\n    },\n    root: {\n        marginTop: theme.spacing(1),\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n    contentWrapperOverview: {\n        background: 'transparent',\n        width: '100%',\n    },\n    divider: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n        width: '60%',\n    },\n    paper: {\n        margin: 0,\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n    },\n    cleanBack: {\n        background: 'transparent',\n        width: '100%',\n        boxShadow: 'none',\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyId: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n        this.handleLoadMoreReplies = this.handleLoadMoreReplies.bind(this);\n        this.handleAddReply = this.handleAddReply.bind(this);\n        this.handleDeleteReply = this.handleDeleteReply.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Add two numbers.\n     * @param {string} commentToFilter comment to filter.\n     * @returns {boolean} filtering needed or not.\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id !== deleteComment.id;\n    }\n\n    /**\n     * Add two numbers.\n     * @param {JSON} commentToFilter comment to filter.\n     * @returns {string} id of the comment.\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} id of comment\n     * @memberof Comment\n     */\n    showAddComment(id) {\n        this.setState({ replyId: id });\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyId: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} message properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles loading more comment replies\n     * @param {Object} comment comment for which replies should be loaded\n     * @memberof Comments\n     */\n    handleLoadMoreReplies(comment) {\n        const { api: { id: apiId }, comments, updateComment } = this.props;\n        const { id, replies: { count, list } } = comment;\n        const restApi = new API();\n\n        restApi\n            .getAllCommentReplies(apiId, id, 3, count)\n            .then((result) => {\n                if (result.body) {\n                    const { list: replyList, count: replyCount } = result.body;\n                    const existingComment = comments.find((entry) => entry.id === id);\n\n                    const newRepliesList = list.concat(replyList);\n                    const newCount = count + replyCount;\n                    const newLimit = newCount <= 3 ? 3 : newCount;\n\n                    const updatedComment = {\n                        ...existingComment,\n                        replies: {\n                            count: newCount,\n                            list: newRepliesList,\n                            pagination: { ...existingComment.replies.pagination, limit: newLimit },\n                        },\n                    };\n                    if (updateComment) {\n                        updateComment(updatedComment);\n                    }\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const apiClient = new CommentsAPI();\n\n        const { deleteComment } = this.state;\n        const {\n            api, onDeleteComment, intl,\n        } = this.props;\n        const apiId = api.id;\n        const commentIdOfCommentToDelete = deleteComment.id;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        this.handleClose();\n\n        apiClient\n            .deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === null) {\n                    if (onDeleteComment) {\n                        onDeleteComment(commentIdOfCommentToDelete);\n                    }\n                    Alert.info('Comment has been successfully deleted');\n                } else {\n                    this.handleDeleteReply(parentCommentIdOfCommentToDelete, commentIdOfCommentToDelete);\n                    Alert.info('Reply comment has been successfully deleted');\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(\n                        intl.formatMessage({\n                            defaultMessage: 'Something went wrong while deleting comment',\n                            id: 'Apis.Details.Comments.Comment.something.went.wrong',\n                        })\n                        + ' - '\n                        + commentIdOfCommentToDelete,\n                    );\n                }\n            });\n    }\n\n    /**\n     * Delete reply\n     * @param {string} parentCommentId parent comment of reply\n     * @param {string} replyCommentId deleted reply comment\n     * @memberof Comments\n     */\n    handleDeleteReply(parentCommentId, replyCommentId) {\n        const { comments, updateComment, api: { id: apiId } } = this.props;\n        const existingComment = comments.find((item) => item.id === parentCommentId);\n        const { replies } = existingComment;\n        // updated values\n        const updatedRepliesList = replies.list.filter((reply) => reply.id !== replyCommentId);\n        const newTotal = replies.pagination.total - 1;\n        const newLimit = replies.pagination.limit > newTotal ? newTotal : replies.pagination.limit;\n        const newCount = replies.count - 1;\n\n        if (newTotal > newCount) {\n            const restApi = new API();\n            restApi\n                .getAllCommentReplies(apiId, parentCommentId, 1, newLimit - 1)\n                .then((result) => {\n                    if (result.body) {\n                        const updatedComment = {\n                            ...existingComment,\n                            replies: {\n                                ...replies,\n                                list: [...updatedRepliesList, ...result.body.list],\n                                pagination: {\n                                    ...replies.pagination,\n                                    total: newTotal,\n                                },\n                            },\n                        };\n                        if (updateComment) {\n                            updateComment(updatedComment);\n                        }\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                });\n        } else {\n            const updatedComment = {\n                ...existingComment,\n                replies: {\n                    ...replies,\n                    count: newCount,\n                    list: updatedRepliesList,\n                    pagination: {\n                        ...replies.pagination,\n                        limit: newLimit,\n                        total: newTotal,\n                    },\n                },\n            };\n            if (updateComment) {\n                updateComment(updatedComment);\n            }\n        }\n    }\n\n    /**\n     * Add new reply\n     * @param {Object} comment added reply comment\n     * @memberof Comments\n     */\n    handleAddReply(comment) {\n        const { comments, updateComment } = this.props;\n        const { parentCommentId } = comment;\n        const existingComment = comments.find((item) => item.id === parentCommentId);\n        const { replies } = existingComment;\n        const newCount = (replies.count || 0) + 1;\n        const newLimit = newCount <= 3 ? 3 : newCount;\n        const updatedComment = {\n            ...existingComment,\n            replies: {\n                ...replies,\n                count: newCount,\n                list: [...replies.list, comment],\n                pagination: {\n                    ...replies.pagination,\n                    limit: newLimit,\n                    offset: replies.pagination.offset || 0,\n                    total: replies.pagination.total + 1,\n                },\n            },\n        };\n        if (updateComment) {\n            updateComment(updatedComment);\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, isOverview,\n        } = this.props;\n\n        const { editIndex, openDialog, replyId } = this.state;\n        return (\n            <>\n                <div className={classes.paper} id='comment-list'>\n                    {comments\n                        && comments\n                            .slice(0)\n                            .map((comment, index) => (\n                                <div key={comment.id} className={classes.contentWrapper}>\n                                    {index !== 0 && <Divider light className={classes.divider} />}\n                                    <Grid\n                                        md={8}\n                                        container\n                                        spacing={1}\n                                        className={classNames({ [classes.root]: !isOverview })}\n                                    >\n                                        <Grid item>\n                                            <Icon className={classes.commentIcon}>account_circle</Icon>\n                                        </Grid>\n                                        <Grid item xs zeroMinWidth>\n                                            <Typography noWrap className={classes.commentText}>\n                                                {(comment.commenterInfo && comment.commenterInfo.firstName)\n                                                    ? (comment.commenterInfo.firstName + comment.commenterInfo.lastName)\n                                                    : comment.createdBy}\n                                            </Typography>\n                                            <Tooltip title={comment.createdTime} aria-label={comment.createdTime}>\n                                                <Typography noWrap className={classes.commentText} variant='caption'>\n                                                    {dayjs(comment.createdTime).fromNow()}\n                                                </Typography>\n                                            </Tooltip>\n\n                                            <Typography className={classes.commentText}>{comment.content}</Typography>\n\n                                            {!api.isRevision && (\n                                                <CommentOptions\n                                                    comment={comment}\n                                                    editIndex={editIndex}\n                                                    index={index}\n                                                    showAddComment={this.showAddComment}\n                                                    handleClickOpen={this.handleClickOpen}\n                                                    showEditComment={this.showEditComment}\n                                                />\n                                            )}\n\n                                            {comment.id === replyId && (\n                                                <Box ml={6} mb={2}>\n                                                    <CommentAdd\n                                                        api={api}\n                                                        replyTo={comment.id}\n                                                        allComments={allComments}\n                                                        handleShowReply={this.handleShowReply}\n                                                        cancelButton\n                                                        addReply={this.handleAddReply}\n                                                    />\n                                                </Box>\n                                            )}\n\n                                            {comment.replies && comment.replies.list.map((reply, commentIndex) => (\n                                                <>\n                                                    <Box ml={8}>\n                                                        {commentIndex !== 0\n                                                            && <Divider light className={classes.divider} />}\n                                                        <Grid container spacing={1} className={classes.root}>\n                                                            <Grid item>\n                                                                <Icon className={classes.commentIcon}>\n                                                                    account_circle\n                                                                </Icon>\n                                                            </Grid>\n                                                            <Grid item xs zeroMinWidth>\n                                                                <Typography noWrap className={classes.commentText}>\n                                                                    {(reply.commenterInfo\n                                                                        && reply.commenterInfo.fullName)\n                                                                        ? reply.commenterInfo.fullName\n                                                                        : reply.createdBy}\n                                                                </Typography>\n                                                                <Tooltip\n                                                                    title={comment.createdTime}\n                                                                    aria-label={comment.createdTime}\n                                                                >\n                                                                    <Typography\n                                                                        noWrap\n                                                                        className={classes.commentText}\n                                                                        variant='caption'\n                                                                    >\n                                                                        {dayjs(reply.createdTime).fromNow()}\n                                                                    </Typography>\n                                                                </Tooltip>\n\n                                                                {commentIndex !== editIndex && (\n                                                                    <Typography className={classes.commentText}>\n                                                                        {reply.content}\n                                                                    </Typography>\n                                                                )}\n\n                                                                {commentIndex === editIndex && (\n                                                                    <CommentEdit\n                                                                        api={api}\n                                                                        allComments={reply}\n                                                                        comment={reply}\n                                                                        toggleShowEdit={this.handleShowEdit}\n                                                                    />\n                                                                )}\n\n                                                                {!api.isRevision && (\n                                                                    <CommentOptions\n                                                                        comment={reply}\n                                                                        editIndex={editIndex}\n                                                                        index={commentIndex}\n                                                                        showAddComment={this.showAddComment}\n                                                                        handleClickOpen={this.handleClickOpen}\n                                                                        showEditComment={this.showEditComment}\n                                                                    />\n                                                                )}\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Box>\n                                                </>\n                                            ))}\n                                            {comment.replies && comment.replies.count < comment.replies.pagination.total\n                                                && (\n                                                    <div className={classes.contentWrapper}>\n                                                        <Grid container spacing={4} className={classes.root}>\n                                                            <Grid item>\n                                                                <Typography\n                                                                    className={classes.verticalSpace}\n                                                                    variant='body1'\n                                                                >\n                                                                    <a\n                                                                        className={classes.link + ' '\n                                                                            + classes.loadMoreLink}\n                                                                        onClick={\n                                                                            () => this.handleLoadMoreReplies(comment)\n                                                                        }\n                                                                        onKeyDown={\n                                                                            () => this.handleLoadMoreReplies(comment)\n                                                                        }\n                                                                    >\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.Comments.Comment.load.'\n                                                                                + 'more.replies'}\n                                                                            defaultMessage='Show More Replies'\n                                                                        />\n                                                                    </a>\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Typography\n                                                                    className={classes.verticalSpace}\n                                                                    zvariant='body1'\n                                                                >\n                                                                    {'(' + (comment.replies.count) + ' of '\n                                                                        + comment.replies.pagination.total + ')'}\n                                                                </Typography>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            ))}\n                </div>\n                <ConfirmDialog\n                    key='key-dialog'\n                    labelCancel='Cancel'\n                    title='Confirm Delete'\n                    message='Are you sure you want to delete this comment?'\n                    labelOk='Yes'\n                    callback={this.handleConfirmDialog}\n                    open={openDialog}\n                />\n            </>\n        );\n    }\n}\n\nComment.defaultProps = {\n    isOverview: false,\n};\n\nComment.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n    isOverview: PropTypes.bool,\n    updateComment: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Comment));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            api, comment, allComments, toggleShowEdit, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>General</MenuItem>\n                        <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                        <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder='Write a comment'\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            Save\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.defaultProps = {\n    commentsUpdate: null,\n};\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    // todo make commentsUpdate required once comment edit feature is supported\n    commentsUpdate: PropTypes.func,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentEdit);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\nimport Utils from 'AppData/Utils';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        '& span.MuiButton-label': {\n            color: theme.palette.primary.main,\n            fontWeight: '400',\n        },\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(0.3),\n    },\n    verticalSpace: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    disable: {\n        color: theme.palette.grey[200],\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(replyId) {\n        const { showAddComment } = this.props;\n        showAddComment(replyId);\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const username = Utils.getUserNameWithoutDomain(user.name);\n        const canDelete = (comment.createdBy === username) || user.isAdmin();\n        const canReply = !user.isCreator() || user.isAdmin();\n        // const canModify = comment.createdBy === username;\n        return (\n            <Grid container spacing={1} className={classes.verticalSpace} key={comment.id}>\n\n                {/* only the comment owner or admin can delete a comment */}\n                {canDelete && [\n                    <Grid item key='key-delete'>\n                        <Button\n                            size='small'\n                            onClick={() => this.handleClickOpen(comment)}\n                            color='primary'\n                            aria-label={'Delete comment ' + comment.content}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentOptions.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                    </Grid>,\n                ]}\n                {(comment.parentCommentId === null && canReply)&& [\n                    <Grid item key='key-reply'>\n                        <Button\n                            size='small'\n                            onClick={() => this.showAddComment(comment.id)}\n                            color='primary'\n                            aria-label={'Reply to comment ' + comment.content}\n                        >\n                            <FormattedMessage id='Apis.Details.Comments.CommentOptions.reply' defaultMessage='Reply' />\n                        </Button>\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {/* {canModify && [\n                    <Grid item key='key-edit'>\n                        <Button\n                            size='small'\n                            className={classes.link}\n                            onClick={() => this.showAddComment(comment.id)}\n                            color='primary'\n                        >\n                            <FormattedMessage id='Apis.Details.Comments.CommentOptions.reply' defaultMessage='Reply' />\n                        </Button>\n                    </Grid>,\n                ]} */}\n\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CreateScope from './CreateScope';\nimport EditScope from './EditScope';\nimport Scopes from './Scopes';\n\nconst Scope = () => {\n    const [api, updateAPI] = useAPI();\n    const urlPrefix = api.isAPIProduct() ? 'api-products' : 'apis';\n    return (\n        <Switch>\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/'} component={Scopes} />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/create'}\n                component={(props) => <CreateScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/edit'}\n                component={(props) => <EditScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n};\n\nScope.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        additionalProperties: PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default Scope;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ChipInput from 'material-ui-chip-input'; // DEPRECATED: Do not COPY and use this component.\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { red } from '@material-ui/core/colors/';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n    descriptionForm: {\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass CreateScope extends React.Component {\n    /**\n     * constructor\n     * @param {JSON} props parent props.\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const valid = [];\n        valid.name = {\n            invalid: false,\n            error: '',\n        };\n        valid.description = {\n            invalid: false,\n            error: '',\n        };\n        valid.displayName = {\n            invalid: false,\n            error: '',\n        };\n        this.state = {\n            apiScopes: null,\n            apiScope: {},\n            validRoles: [],\n            valid,\n            roleValidity: true,\n            invalidRoles: [],\n            scopeAddDisabled: false,\n        };\n        this.addScope = this.addScope.bind(this);\n        this.validateScopeName = this.validateScopeName.bind(this);\n        this.handleScopeNameInput = this.handleScopeNameInput.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n        this.validateScopeDisplayName = this.validateScopeDisplayName.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n    }\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    /**\n     * Handle ScopeName Input.\n     * @param {JSON} event click event.\n     */\n    handleScopeNameInput({ target: { id, value } }) {\n        this.validateScopeName(id, value);\n    }\n\n    /**\n     * Handle Role Addition.\n     * @param {string} role The first number.\n     */\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    /**\n     * validate Scope Description.\n     * @param {JSON} event click event object.\n     */\n    validateScopeDescription({ target: { id, value } }) {\n        const { valid, apiScope } = this.state;\n        const { intl } = this.props;\n        apiScope[id] = value;\n        if (value && value.length !== '' && value.length >= 512) {\n            valid[id].invalid = true;\n            valid[id].error = intl.formatMessage({\n                id: 'Scopes.Create.Scope.description.length.exceeded',\n                defaultMessage: 'Exceeds maximum length limit of 512 characters',\n            });\n        } else {\n            valid[id].invalid = false;\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n    }\n\n    /**\n     * validate Scope Display Name.\n     * @param {JSON} event click event object.\n     */\n    validateScopeDisplayName({ target: { id, value } }) {\n        const { valid, apiScope } = this.state;\n        const { intl } = this.props;\n        apiScope[id] = value;\n        if (value && value.length !== '' && value.length >= 512) {\n            valid[id].invalid = true;\n            valid[id].error = intl.formatMessage({\n                id: 'Scopes.Create.Scope.display.name.length.exceeded',\n                defaultMessage: 'Exceeds maximum length limit of 512 characters',\n            });\n        } else {\n            valid[id].invalid = false;\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n    }\n\n    /**\n     * validate Scope Name.\n     * @param {string} id click event object.\n     * @param {string} value click event object.\n     * @returns {boolean} valid state\n     */\n    validateScopeName(id, value) {\n        const { valid, apiScope } = this.state;\n        const {\n            api: { scopes },\n        } = this.props;\n        const { intl } = this.props;\n        apiScope[id] = value;\n        valid[id].invalid = !(value && value.length > 0);\n        // length validation\n        if (valid[id].invalid) {\n            valid[id].error = 'Scope name cannot be empty';\n        }\n        valid[id].invalid = !(value && value.length <= 60);\n        if (valid[id].invalid) {\n            valid[id].error = intl.formatMessage({\n                id: 'Scopes.Create.Scope.name.length.exceeded',\n                defaultMessage: 'Exceeds maximum length limit of 60 characters',\n            });\n        }\n\n        if (/\\s/.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name cannot have spaces';\n        }\n\n        const exist = scopes.find((scope) => {\n            return scope.name === value;\n        });\n        if (!valid[id].invalid && exist) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name already exist';\n        }\n        if (!valid[id].invalid && /[!@#$%^&*(),?\"{}[\\]|<>\\t\\n]|(^apim:)/i.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Field contains special characters';\n        }\n        if (!valid[id].invalid) {\n            const promise = APIValidation.scope.validate(base64url.encode(value));\n            promise\n                .then(() => {\n                    valid[id].invalid = true;\n                    valid[id].error = 'Scope name is already used by another API';\n                    this.setState({\n                        valid,\n                    });\n                })\n                .catch((error) => {\n                    if (error.status === 404) {\n                        valid[id].invalid = false;\n                        valid[id].error = '';\n                        this.setState({\n                            valid,\n                        });\n                    } else {\n                        Alert.error('Error when validating scope: ' + value);\n                        console.error('Error when validating scope ' + error);\n                    }\n                });\n        }\n        if (!valid[id].invalid) {\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n        return valid[id].invalid;\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    addScope() {\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const urlPrefix = api.apiType === Api.CONSTS.APIProduct ? 'api-products' : 'apis';\n        if (this.validateScopeName('name', this.state.apiScope.name)) {\n            // return status of the validation\n            return;\n        }\n        const scope = this.state.apiScope;\n        scope.bindings = this.state.validRoles;\n        const scopes = api.scopes.map((aScope) => {\n            return aScope;\n        });\n        scopes.push({\n            scope,\n            shared: false,\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        this.setState({ scopeAddDisabled: true });\n        promisedApiUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Scopes.CreateScope.scope.added.successfully',\n                    defaultMessage: 'Scope added successfully',\n                }));\n                const { apiScopes } = this.state;\n                const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n                history.push(redirectURL);\n                this.setState({\n                    apiScopes,\n                    apiScope: {},\n                    validRoles: [],\n                });\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            })\n            .finally(() => {\n                this.setState({ scopeAddDisabled: false });\n            });\n    }\n\n    /**\n     * Render.\n     * @returns {JSX} rendered component.\n     */\n    render() {\n        const { classes, api } = this.props;\n        const urlPrefix = api.apiType === Api.CONSTS.APIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        const {\n            roleValidity, validRoles, invalidRoles, scopeAddDisabled,\n        } = this.state;\n\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4' component='h2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.CreateScope.create.new.scope'\n                                        defaultMessage='Create New Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        placeholder='Scope Name'\n                                        error={this.state.valid.name.invalid}\n                                        helperText={\n                                            this.state.valid.name.invalid ? (\n                                                this.state.valid.name.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                    defaultMessage='Enter Scope Name ( E.g.,: creator )'\n                                                />\n                                            )\n                                        }\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.apiScope.name || ''}\n                                        onChange={this.handleScopeNameInput}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='displayName'\n                                        label='Display Name'\n                                        placeholder='Scope Display Name'\n                                        error={this.state.valid.displayName.invalid}\n                                        helperText={\n                                            this.state.valid.displayName.invalid ? (\n                                                this.state.valid.displayName.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                    defaultMessage='Enter Scope Name ( E.g.,: creator )'\n                                                />\n                                            )\n                                        }\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.apiScope.displayName || ''}\n                                        onChange={this.validateScopeDisplayName}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' classes={{ root: classes.descriptionForm }}>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        error={this.state.valid.description.invalid}\n                                        helperText={\n                                            this.state.valid.description.invalid ? (\n                                                this.state.valid.description.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.description.about.the.scope'\n                                                    defaultMessage='Short description about the scope'\n                                                />\n                                            )\n                                        }\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={this.state.apiScope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        id='roles-input'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        id='scope-save-btn'\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.addScope}\n                                        disabled={\n                                            isRestricted(['apim:api_create'], api)\n                                            || this.state.valid.name.invalid\n                                            || invalidRoles.length !== 0\n                                            || scopeAddDisabled\n                                            || api.isRevision\n                                            || this.state.valid.description.invalid\n                                        }\n                                        className={classes.saveButton}\n                                    >\n                                        {scopeAddDisabled ? (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.saving'\n                                                    defaultMessage='Saving'\n                                                />\n                                                <CircularProgress size={16} classes={{ root: classes.progress }} />\n                                            </>\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.save'\n                                                defaultMessage='Save'\n                                            />\n                                        )}\n                                    </Button>\n                                    <Button\n                                        component={Link}\n                                        to={url}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.CreateScope.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCreateScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({}),\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nCreateScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withStyles(styles)(CreateScope));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport ChipInput from 'material-ui-chip-input'; // DEPRECATED: Do not COPY and use this component.\nimport APIValidation from 'AppData/APIValidation';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Icon from '@material-ui/core/Icon';\nimport base64url from 'base64url';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Error from '@material-ui/core/SvgIcon/SvgIcon';\nimport Api from 'AppData/api';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(2),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass EditScope extends React.Component {\n    /**\n     * constructor\n     * @param {JSON} props parent props.\n     */\n    constructor(props) {\n        super(props);\n        // this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const { api, location } = this.props;\n        const thisScope = api.scopes.find((apiScope) => {\n            return apiScope.scope.name === location.state.scopeName;\n        });\n        this.state = {\n            apiScope: { ...thisScope },\n            validRoles: thisScope.scope.bindings,\n            invalidRoles: [],\n            roleValidity: true,\n        };\n        this.updateScope = this.updateScope.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n        this.validateScopeDisplayName = this.validateScopeDisplayName.bind(this);\n    }\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    /**\n     * Handle api scope addition event\n     * @param {any} event Button Click event\n     * @memberof Scopes\n     */\n    handleInputs(event) {\n        if (Array.isArray(event)) {\n            const { apiScope } = this.state;\n            apiScope.scope.bindings = event;\n            this.setState({\n                apiScope,\n            });\n        } else {\n            const input = event.target;\n            const { apiScope } = this.state;\n            apiScope[input.id] = input.value;\n            this.setState({\n                apiScope,\n            });\n        }\n    }\n\n    /**\n     * Handle Role Addition.\n     * @param {string} role The first number.\n     */\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    updateScope() {\n        const { apiScope, validRoles } = this.state;\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            displayName: originalScope.displayName,\n            description: originalScope.description,\n            bindings: validRoles,\n        };\n        const urlPrefix = api.apiType === Api.CONSTS.APIProduct ? 'api-products' : 'apis';\n        const scopes = api.scopes.map((scopeObj) => {\n            if (scopeObj.scope.name === apiScope.scope.name) {\n                return apiScope;\n            } else {\n                return scopeObj;\n            }\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        promisedApiUpdate.then(() => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Scopes.CreateScope.scope.updated.successfully',\n                defaultMessage: 'Scope updated successfully',\n            }));\n            const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n            history.push(redirectURL);\n        }).catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n        });\n    }\n\n    /**\n     * validate Scope Description.\n     * @param {JSON} event click event object.\n     */\n    validateScopeDescription({ target: { value } }) {\n        const { apiScope } = this.state;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            displayName: originalScope.displayName,\n            description: value,\n            bindings: originalScope.bindings,\n        };\n        this.setState({\n            apiScope,\n        });\n    }\n\n    /**\n     * validate Scope Display Name.\n     * @param {JSON} event click event object.\n     */\n    validateScopeDisplayName({ target: { value } }) {\n        const { apiScope } = this.state;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            displayName: value,\n            description: originalScope.description,\n            bindings: originalScope.bindings,\n        };\n        this.setState({\n            apiScope,\n        });\n    }\n\n    /**\n     * Render.\n     * @returns {JSX} rendered component.\n     */\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const {\n            apiScope, roleValidity, validRoles, invalidRoles,\n        } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.edit.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.EditScope.update.scope'\n                                        defaultMessage='Update Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={apiScope.scope.name}\n                                        onChange={this.handleScopeNameInput}\n                                        disabled\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='displayName'\n                                        label='Display Name'\n                                        placeholder='Scope Display Name'\n                                        helperText={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                defaultMessage='Enter Scope Name ( E.g.,: creator )'\n                                            />\n                                        )}\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={apiScope.scope.displayName || ''}\n                                        onChange={this.validateScopeDisplayName}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        helperText={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.short.description.about.the.scope'\n                                                defaultMessage='Short description about the scope'\n                                            />\n                                        )}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={apiScope.scope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.EditScopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.EditScopes.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.updateScope}\n                                        disabled={invalidRoles.length !== 0 || api.isRevision}\n                                        className={classes.saveButton}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.EditScope.update'\n                                            defaultMessage='Update'\n                                        />\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button variant='contained'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nEditScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({}),\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            scopeName: PropTypes.string,\n        }),\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nEditScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(EditScope)));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Grid from '@material-ui/core/Grid';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Delete from './Delete';\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n    },\n    buttonProgress: {\n        position: 'relative',\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    heading: {\n        flexGrow: 1,\n        marginTop: 10,\n        '& table td:nth-child(2)': {\n            wordBreak: 'break-word',\n        },\n        '& table td button span, & table th': {\n            'white-space': 'nowrap',\n        },\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    head: {\n        fontWeight: 200,\n    },\n});\n/**\n * Generate the scopes UI in API details page.\n * @class Scopes\n * @extends {React.Component}\n */\nclass Scopes extends React.Component {\n    /**\n     * Creates an instance of Scopes.\n     * @param {any} props Generic props\n     * @memberof Scopes\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        this.api_data = props.api;\n    }\n\n    /**\n     * Render Scopes section\n     * @returns {React.Component} React Component\n     * @memberof Scopes\n     */\n    render() {\n        const {\n            intl, classes, api,\n        } = this.props;\n        const urlPrefix = (api.apiType === Api.CONSTS.APIProduct) ? 'api-products' : 'apis';\n        const { scopes } = api;\n        const url = `/${urlPrefix}/${api.id}/scopes/create`;\n        const editUrl = `/${urlPrefix}/${api.id}/scopes/edit`;\n        const columns = [\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.name',\n                defaultMessage: 'Name',\n            }),\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.description',\n                defaultMessage: 'Description',\n            }),\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const roles = value || [];\n                            return roles.join(',');\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.roles'\n                            defaultMessage='Roles'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (value && tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <List component='nav' aria-label={scopeName + ' Used in'} className={classes.root}>\n                                    {value.map((resource) => (\n                                        <ListItem button>\n                                            <ListItemText primary={resource} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.usages'\n                            defaultMessage='Used In'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <table className={classes.actionTable}>\n                                    <tr>\n                                        <td>\n                                            <Button\n                                                disabled={isRestricted(\n                                                    ['apim:api_create'],\n                                                    api,\n                                                ) || api.isRevision}\n                                                to={\n                                                    !isRestricted(['apim:api_create'], api) && !api.isRevision && {\n                                                        pathname: editUrl,\n                                                        state: {\n                                                            scopeName,\n                                                        },\n                                                    }\n                                                }\n                                                component={Link}\n                                                aria-label={'Edit ' + scopeName}\n                                            >\n                                                <Icon>edit</Icon>\n                                                <FormattedMessage\n                                                    id='Apis.Details.scopes.Edit.text.editor.edit'\n                                                    defaultMessage='Edit'\n                                                />\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            <Delete scopeName={scopeName} api={api} isAPIProduct />\n                                        </td>\n                                    </tr>\n                                </table>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.actions'\n                            defaultMessage='Actions'\n                        />\n                    ),\n                },\n            },\n        ];\n        const options = {\n            filterType: 'multiselect',\n            selectableRows: false,\n            title: false,\n            filter: false,\n            sort: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n        };\n\n        const scopesList = api.scopes.filter((apiScope) => {\n            return !apiScope.shared;\n        }).map((apiScope) => {\n            const aScope = [];\n            aScope.push(apiScope.scope.name);\n            aScope.push(apiScope.scope.description);\n            aScope.push(apiScope.scope.bindings);\n            const resources = api.operations && api.operations\n                .filter((op) => {\n                    return op.scopes.includes(apiScope.scope.name);\n                })\n                .map((op) => {\n                    return op.target + ' ' + op.verb;\n                });\n            aScope.push(resources);\n            return aScope;\n        });\n\n        if (!scopes) {\n            return <Progress />;\n        }\n\n        if (scopes.length === 0) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography\n                            id='itest-api-details-scopes-onboarding-head'\n                            variant='h4'\n                            component='h2'\n                            align='left'\n                            className={classes.mainTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.local.Scopes.heading.scope.heading'\n                                defaultMessage='Local Scopes'\n                            />\n                        </Typography>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.heading.scope.title.tooltip'\n                                    defaultMessage='Manage scopes that are local to this API'\n                                />\n                            )}\n                            placement='top-end'\n                        >\n                            <IconButton size='small' aria-label='Local Scopes help text'>\n                                <HelpOutlineIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.create.scopes.title'\n                                    defaultMessage='Create API Local Scopes'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.scopes.enable.fine.gained.access.control'\n                                    defaultMessage={\n                                        'Scopes enable fine-grained access control to API resources'\n                                        + ' based on user roles.'\n                                    }\n                                />\n                            </Typography>\n                            <div className={classes.actions}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    disabled={isRestricted(['apim:api_create'], api) || api.isRevision}\n                                    component={Link}\n                                    to={!isRestricted(['apim:api_create'], api) && !api.isRevision && url}\n                                    id='create-scope-btn'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.Scopes.create.scopes.button'\n                                        defaultMessage='Create Scopes'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.heading}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.local.Scopes.heading.edit.heading'\n                            defaultMessage='Local Scopes'\n                        />\n                    </Typography>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.title.tooltip2'\n                                defaultMessage='Manage scopes that are local to this API'\n                            />\n                        )}\n                        placement='top-end'\n                    >\n                        <IconButton size='small' aria-label='Local Scopes help text'>\n                            <HelpOutlineIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        variant='outlined'\n                        color='primary'\n                        size='small'\n                        disabled={isRestricted(['apim:api_create'], api) || api.isRevision}\n                        component={Link}\n                        to={!isRestricted(['apim:api_create'], api) && !api.isRevision && url}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.heading.scope.add_new'\n                            defaultMessage='Add New Local Scope'\n                        />\n                    </Button>\n                    {isRestricted(['apim:api_create'], api) && (\n                        <Grid item>\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.update.not.allowed'\n                                    defaultMessage={\n                                        '*You are not authorized to update scopes of'\n                                        + ' the API due to insufficient permissions'\n                                    }\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n                </div>\n\n                <MUIDataTable title={false} data={scopesList} columns={columns} options={options}/>\n            </div>\n        );\n    }\n}\n\nScopes.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({}),\n    }),\n    api: PropTypes.instanceOf(Object).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nScopes.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Scopes)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Delete(props) {\n    const [api, updateAPI] = useAPI();\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteScope = () => {\n        const { scopeName } = props;\n        const ops = api.operations && JSON.parse(JSON.stringify(api.operations));\n        const operations = ops && ops.map((op) => {\n            // eslint-disable-next-line no-param-reassign\n            op.scopes = op.scopes.filter((scope) => {\n                return scope !== scopeName;\n            });\n            return op;\n        });\n        const scopes = api.scopes.filter((apiScope) => {\n            return apiScope.scope.name !== scopeName;\n        });\n        const updateProperties = { scopes, operations };\n        const setOpenLocal = setOpen; // Need to copy this to access inside the promise.then\n        const promisedUpdate = updateAPI(updateProperties);\n        promisedUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.api.scope.deleted.successfully',\n                    defaultMessage: 'API Scope deleted successfully!',\n                }));\n                setOpenLocal(!open);\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.something.went.wrong.while.updating.the.api',\n                    defaultMessage: 'Error occurred while updating API',\n                }));\n            });\n    };\n\n    const runAction = (confirm) => {\n        if (confirm) {\n            deleteScope();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const { scopeName } = props;\n\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create'], api) || api.isRevision}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.delete'\n                    defaultMessage='Delete'\n                />\n            </Button>\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.cancel'\n                        defaultMessage='Cancel'\n                    />\n                )}\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm'\n                        defaultMessage='Confirm Delete'\n                    />\n                )}\n                message={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.confirm'\n                        defaultMessage='Are you sure you want to delete scope {scope} ?'\n                        values={{ scope: scopeName }}\n                    />\n                )}\n                labelOk={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.yes'\n                        defaultMessage='Yes'\n                    />\n                )}\n                callback={runAction}\n                open={open}\n            />\n        </div>\n    );\n}\nDelete.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    scopeName: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Delete));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport SecurityOverview from './SecurityOverview';\n\nconst Security = () => {\n    return (\n        <Switch>\n            <Route path='/apis/:api_uuid/security' component={SecurityOverview} />\n        </Switch>\n    );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport AddPolicy from './AddPolicy';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n        tableLayout: 'fixed',\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass SecurityOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            api: {\n                name: '',\n            },\n            policies: [],\n            showAddPolicy: false,\n        };\n        this.updateData = this.updateData.bind(this);\n        this.toggleShowAddPolicy = this.toggleShowAddPolicy.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    updateData() {\n        const promisedApi = this.api.get(this.props.match.params.api_uuid);\n        promisedApi.then((response) => {\n            this.setState({ api: response.obj });\n            this.updatePolicyData();\n        });\n    }\n\n    updatePolicyData() {\n        this.setState({ policies: [] });\n        const policyIds = this.state.api.threatProtectionPolicies.list;\n        for (let i = 0; i < policyIds.length; i++) {\n            const id = policyIds[i].policyId;\n            const promisedPolicies = this.api.getThreatProtectionPolicy(id);\n            promisedPolicies.then((response) => {\n                const updatedPolicies = this.state.policies;\n                updatedPolicies.push(response.obj);\n                this.setState({ policies: updatedPolicies });\n            });\n        }\n    }\n\n    deletePolicy(id) {\n        const { intl } = this.props;\n        const associatedApi = this.state.api;\n        const promisedPolicyDelete = this.api.deleteThreatProtectionPolicyFromApi(associatedApi.id, id);\n        promisedPolicyDelete.then((response) => {\n            if (response.status === 200) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.success',\n                    defaultMessage: 'Policy removed successfully.',\n                }));\n\n                //   remove policy from local api\n                const index = associatedApi.threatProtectionPolicies.list.indexOf({ policyId: id });\n                associatedApi.threatProtectionPolicies.list.splice(index, 1);\n                this.setState({ api: associatedApi });\n                this.updatePolicyData();\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.failure',\n                    defaultMessage: 'Failed to remove policy.',\n                }));\n            }\n        });\n    }\n\n    toggleShowAddPolicy = () => {\n        this.setState({ showAddPolicy: !this.state.showAddPolicy });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        let data = [];\n        if (this.state.policies) {\n            data = this.state.policies;\n        }\n        const { classes } = this.props;\n        const { showAddPolicy } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.contentWrapper}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.threat.protection.policies'\n                                defaultMessage='Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Button size='small' className={classes.button} onClick={this.toggleShowAddPolicy}>\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.add.threat.protection.policy'\n                                defaultMessage='Add New Threat Protection Policy'\n                            />\n                        </Button>\n                    </div>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddPolicy &&\n                    <AddPolicy\n                        id={this.state.api.id}\n                        toggleShowAddPolicy={this.toggleShowAddPolicy}\n                        updateData={this.updateData}\n                    />\n                    }\n                </div>\n                <br />\n                <div className={classes.contentWrapper}>\n                    <div className={classes.addNewWrapper}>\n                        <Typography className={classes.addNewHeader}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.manage.threat.protection.policies'\n                                defaultMessage='Manage Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Divider className={classes.divider} />\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.name'\n                                            defaultMessage='Policy Name'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.type'\n                                            defaultMessage='Policy Type'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy'\n                                            defaultMessage='Policy'\n                                        />\n                                    </TableCell>\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((n) => {\n                                    return (\n                                        <TableRow key={n.uuid}>\n                                            <TableCell>{n.name + (n.uuid === 'GLOBAL-JSON' ? ' (GLOBAL)' : '')}</TableCell>\n                                            <TableCell>{n.type}</TableCell>\n                                            <TableCell>\n                                                <div className={classes.addJsonContent}>\n                                                    {this.formatPolicy(n.policy)}\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <span>\n                                                    <Button color='accent' onClick={() => this.deletePolicy(n.uuid)} >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Security.SecurityOverview.delete'\n                                                            defaultMessage='Delete'\n                                                        />\n                                                    </Button>\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSecurityOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            api_uuid: PropTypes.string,\n        }),\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(SecurityOverview));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = (theme) => ({\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass AddPolicy extends Component {\n    /**\n     * AddPolicy\n     */\n    constructor() {\n        super();\n        this.state = {\n            selectedPolicy: {\n                uuid: '',\n                name: 'Select',\n                policy: '',\n                type: '',\n            },\n            policies: [],\n        };\n    }\n\n    /**\n     * AddPolicy\n     */\n    componentDidMount() {\n        const api = new API();\n        const promisedPolicies = api.getThreatProtectionPolicies();\n        promisedPolicies.then((response) => {\n            this.setState({ policies: response.obj.list });\n        });\n        const promisedApi = api.get(this.props.id);\n        promisedApi.then((response) => {\n            this.setState({ currentApi: response.obj });\n        });\n    }\n\n    /**\n     * AddPolicy\n     */\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    handleChange = () => (event) => {\n        const policyId = event.target.value;\n        const api = new API();\n        const promisedPolicy = api.getThreatProtectionPolicy(policyId);\n        promisedPolicy.then((response) => {\n            this.setState({ selectedPolicy: response.obj });\n        });\n    }\n\n\n    handlePolicyAdd() {\n        const { intl } = this.props;\n        const policy = this.state.selectedPolicy;\n        if (policy.uuid === '' || policy.name === '') {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Security.AddPolicy.select.policy',\n                defaultMessage: 'Please select a policy',\n            }));\n            return;\n        }\n\n        if (this.state.currentApi) {\n            const { currentApi } = this.state;\n            const api = new API();\n            const promisedPolicyAdd = api.addThreatProtectionPolicyToApi(currentApi.id, this.state.selectedPolicy.uuid);\n            promisedPolicyAdd.then((response) => {\n                if (response.status === 200) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.success',\n                        defaultMessage: 'Threat protection policy added successfully.',\n                    }));\n                    this.props.updateData();\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.failure',\n                        defaultMessage: 'Failed to add threat protection policy.',\n                    }));\n                }\n            });\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.addNewWrapper}>\n                    <Typography className={classes.addNewHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Security.AddPolicy.add.threat.protection.policy'\n                            defaultMessage='Add New Threat Protection Policy'\n                        />\n                    </Typography>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <InputLabel htmlFor='selectedPolicy'>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy'\n                                defaultMessage='Policy'\n                            />\n                        </InputLabel>\n                        &nbsp;&nbsp;\n                        <Select\n                            value={this.state.selectedPolicy.uuid}\n                            onChange={this.handleChange('selectedPolicy')}\n                            input={<Input name='selectedPolicy' id='selectedPolicy' />}\n                        >\n                            {this.state.policies.map((n) => {\n                                return (\n                                    <MenuItem key={n.uuid} value={n.uuid}>{n.name}</MenuItem>\n                                );\n                            })}\n                            ;\n                        </Select>\n                        <br />\n                        <br />\n                        <p>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy.type.label'\n                                defaultMessage='Policy Type: '\n                            />\n                            {this.state.selectedPolicy.type}\n                        </p>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='Apis.Details.Security.AddPolicy.policy.label'\n                                    defaultMessage='Policy: '\n                                />\n                            </p>\n                            <div className={classes.addJsonContent}>\n                                {this.formatPolicy(this.state.selectedPolicy.policy)}\n                            </div>\n                        </div>\n                    </div>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <Button variant='contained' color='primary' onClick={() => this.handlePolicyAdd()}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.add.policy.to.api'\n                                defaultMessage='Add Policy to API'\n                            />\n                        </Button>\n                        <Button className={classes.button} onClick={this.props.toggleShowAddPolicy}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    toggleShowAddPolicy: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateData: PropTypes.func.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(AddPolicy));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport LockRounded from '@material-ui/icons/LockRounded';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport YAML from 'js-yaml';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Box from '@material-ui/core/Box';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport debounce from 'lodash.debounce'; // WARNING: This is coming from mui-datatable as a transitive dependency\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport APISecurityAudit from './APISecurityAudit';\nimport ImportDefinition from './ImportDefinition';\nimport DefinitionOutdated from './DefinitionOutdated';\nimport { getLinterResultsFromContent } from \"./Linting/Linting\";\nimport APILintingSummary from './Linting/APILintingSummary';\n\nconst EditorDialog = lazy(() => import('./SwaggerEditorDrawer' /* webpackChunkName: \"EditorDialog\" */));\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\nconst AsyncAPIEditor = lazy(() => import('./AsyncApiEditorDrawer'));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    buttonWarningColor: {\n        color: theme.palette.warning.light,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        '&:hover': {\n            'text-decoration': 'none',\n        },\n    },\n    progressLoader: {\n        marginLeft: theme.spacing(1),\n    },\n    updateApiWarning: {\n        marginLeft: theme.spacing(5),\n        color: theme.custom.serviceCatalog.onboarding.buttonText,\n        borderColor: theme.custom.serviceCatalog.onboarding.buttonText,\n    },\n    warningIconStyle: {\n        color: theme.custom.serviceCatalog.onboarding.buttonText,\n    },\n    activeButton: {\n        \"&:selected\": {\n            backgroundColor: theme.palette.background.default,\n        }\n    }\n});\n/**\n * This component holds the functionality of viewing the api definition content of an api. The initial view is a\n * read-only representation of the api definition file.\n * Users can either edit the content by clicking the 'Edit' button or upload a new api definition file by clicking\n * 'Import API Definition'.\n * */\nclass APIDefinition extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openEditor: false,\n            swagger: null,\n            swaggerModified: null,\n            swaggerImporting: null,\n            graphQL: null,\n            format: null,\n            convertTo: null,\n            isAuditApiClicked: false,\n            securityAuditProperties: [],\n            isSwaggerValid: true,\n            isUpdating: false,\n            asyncAPI: null,\n            asyncAPIModified: null,\n            isAsyncAPIValid: true,\n            errors: [],\n            isSwaggerUI: true,\n            linterResults: [],\n            linterSelectedSeverity: null,\n            linterSelectedLine: null,\n            isImporting: false,\n        };\n        this.handleNo = this.handleNo.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleSaveAndDeploy = this.handleSaveAndDeploy.bind(this);\n        this.openEditor = this.openEditor.bind(this);\n        this.openEditorToImport = this.openEditorToImport.bind(this);\n        this.transition = this.transition.bind(this);\n        this.closeEditor = this.closeEditor.bind(this);\n        this.hasJsonStructure = this.hasJsonStructure.bind(this);\n        this.getConvertToFormat = this.getConvertToFormat.bind(this);\n        this.onAuditApiClick = this.onAuditApiClick.bind(this);\n        this.onChangeFormatClick = this.onChangeFormatClick.bind(this);\n        this.openUpdateConfirmation = this.openUpdateConfirmation.bind(this);\n        this.updateSwaggerDefinition = this.updateSwaggerDefinition.bind(this);\n        this.updateAsyncAPIDefinitionAndDeploy = this.updateAsyncAPIDefinitionAndDeploy.bind(this);\n        this.onChangeSwaggerContent = this.onChangeSwaggerContent.bind(this);\n        this.updateAsyncAPIDefinition = this.updateAsyncAPIDefinition.bind(this);\n        this.onChangeAsyncAPIContent = this.onChangeAsyncAPIContent.bind(this);\n        this.setErrors = this.setErrors.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const { settings } = this.context;\n        let promisedApi;\n        if (api.type === 'GRAPHQL') {\n            promisedApi = api.getSchema(api.id);\n        } else if (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC') {\n            promisedApi = api.getAsyncAPIDefinition(api.id);\n        } else {\n            promisedApi = api.getSwagger(api.id);\n        }\n\n        this.setState({ securityAuditProperties: settings.securityAuditProperties });\n\n        promisedApi\n            .then((response) => {\n                if (api.type === 'GRAPHQL') {\n                    this.setState({\n                        graphQL: response.obj.schemaDefinition,\n                        format: 'txt',\n                    });\n                } else if (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC') {\n                    this.setState({\n                        asyncAPI: YAML.safeDump(YAML.safeLoad(response.data)),\n                        asyncAPIModified: YAML.safeDump(YAML.safeLoad(response.data)),\n                        format: 'yaml',\n                        convertTo: this.getConvertToFormat('yaml'),\n                    });\n                } else {\n                    this.setState({\n                        swagger: YAML.safeDump(YAML.safeLoad(response.data)),\n                        swaggerModified: YAML.safeDump(YAML.safeLoad(response.data)),\n                        format: 'yaml',\n                        convertTo: this.getConvertToFormat('yaml'),\n                    });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n\n    /**\n     * Method to handle asyncAPI content change\n     *\n     * @param {string} modifiedContent : The modified asyncAPI content.\n     * */\n    onChangeAsyncAPIContent(modifiedContent) {\n        const { format } = this.state;\n        /**\n         * Validate for the basic json/ yaml format.\n         * */\n        try {\n            if (format === 'json') {\n                JSON.parse(modifiedContent, null);\n            } else {\n                YAML.load(modifiedContent);\n            }\n            this.setState({ isAsyncAPIValid: true, asyncAPIModified: modifiedContent });\n        } catch (e) {\n            this.setState({ isAsyncAPIValid: false, asyncAPIModified: modifiedContent });\n        }\n    }\n\n    /**\n     * Toggle the format of the api definition.\n     * JSON -> YAML, YAML -> JSON\n     */\n    onChangeFormatClick() {\n        const {\n            format, swagger, convertTo, asyncAPI,\n        } = this.state;\n        let formattedString = '';\n        if (asyncAPI === null) {\n            if (convertTo === 'json') {\n                formattedString = JSON.stringify(YAML.load(swagger), null, 1);\n            } else {\n                formattedString = YAML.safeDump(YAML.safeLoad(swagger));\n            }\n            this.setState({\n                swagger: formattedString,\n                swaggerModified: formattedString,\n                format: convertTo,\n                convertTo: format,\n            });\n        } else {\n            if (convertTo === 'json') {\n                formattedString = JSON.stringify(YAML.load(asyncAPI), null, 1);\n            } else {\n                formattedString = YAML.safeDump(YAML.safeLoad(asyncAPI));\n            }\n            this.setState({\n                asyncAPI: formattedString,\n                asyncAPIModified: formattedString,\n                format: convertTo,\n                convertTo: format,\n            });\n        }\n    }\n\n    /**\n      * Set isAuditApiClicked to true when Audit API is clicked\n      */\n    onAuditApiClick() {\n        this.setState({ isAuditApiClicked: true });\n    }\n\n    /**\n     * Method to handle swagger content change\n     *\n     * @param {string} modifiedContent : The modified swagger content.\n     * */\n    onChangeSwaggerContent(modifiedContent) {\n        const { format } = this.state;\n        /**\n         * Validate for the basic json/ yaml format.\n         * */\n        try {\n            let file = null;\n            if (format === 'json') {\n                JSON.parse(modifiedContent, null);\n                const blobJson = new Blob([modifiedContent], { type: 'text/json' });\n                file = new File([blobJson], 'modifiedContent.json', { type: 'text/json;charset=utf-8' });\n            } else {\n                YAML.load(modifiedContent);\n                const blobYaml = new Blob([modifiedContent], { type: 'text/yaml' });\n                file = new File([blobYaml], 'modifiedContent.yaml', { type: 'text/yaml;charset=utf-8' });\n            }\n\n            if (this.state.isImporting) {\n                this.setState({ swaggerImporting: modifiedContent });\n            } else {\n                this.setState({ swaggerModified: modifiedContent });\n            }\n\n            const validateDebounced = debounce(() => {\n                API.validateOpenAPIByFile(file)\n                    .then((response) => {\n                        const {\n                            body: { isValid },\n                        } = response;\n                        this.setState({ isSwaggerValid: isValid });\n                        console.log(\"isValid:\", isValid);\n                    });\n            }, 500);\n\n            validateDebounced();\n            \n        } catch (e) {\n            if (this.state.isImporting) {\n                this.setState({ isSwaggerValid: false, swaggerImporting: modifiedContent });\n            } else {\n                this.setState({ isSwaggerValid: false, swaggerModified: modifiedContent });\n            }\n        }\n\n        getLinterResultsFromContent(modifiedContent).then((results) => {\n            this.setState({ linterResults: results });\n        });\n    }\n\n    /**\n     * @param {Array} errors list of errors to be set\n     */\n    setErrors(errors) {\n        this.setState({ errors });\n    }\n\n    setSchemaDefinition = (schemaContent, contentType) => {\n        const { api } = this.props;\n        const isGraphql = api.isGraphql();\n        const isWebSocket = api.isWebSocket();\n        const isWebSub = api.isWebSub();\n        if (isGraphql) {\n            this.setState({ graphQL: schemaContent });\n        } else if (isWebSocket || isWebSub) {\n            this.setState({\n                asyncAPI: schemaContent,\n                asyncAPIModified: schemaContent,\n                convertTo: this.getConvertToFormat(contentType),\n                format: contentType,\n            });\n        } else {\n            this.setState({\n                swagger: schemaContent,\n                swaggerModified: schemaContent,\n                convertTo: this.getConvertToFormat(contentType),\n                format: contentType,\n            });\n        }\n    };\n\n    /**\n     * Util function to get the format which the definition can be converted to.\n     * @param {*} format : The current format of definition.\n     * @returns {string} The possible conversion format.\n     */\n    getConvertToFormat(format) {\n        return format === 'json' ? 'yaml' : 'json';\n    }\n\n    /**\n     * Handles the No button action of the save api definition confirmation dialog box.\n     */\n    handleNo() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the yes button action of the save api definition confirmation dialog box.\n     */\n    handleSave() {\n        const { swaggerModified, asyncAPIModified } = this.state;\n        if (asyncAPIModified !== null) {\n            this.setState({ openDialog: false }, () => this.updateAsyncAPIDefinition(asyncAPIModified, '', ''));\n        } else {\n            this.setState({ openDialog: false }, () => this.updateSwaggerDefinition(swaggerModified, '', ''));\n        }\n    }\n\n    /**\n     * Handle save and deploy\n     * */\n    handleSaveAndDeploy() {\n        const { swaggerModified, asyncAPIModified } = this.state;\n        const { api, history } = this.props;\n        if (asyncAPIModified !== null) {\n            this.updateAsyncAPIDefinitionAndDeploy(asyncAPIModified, '', '');\n            history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            });\n        } else {\n            this.updateSwaggerDefinition(swaggerModified, '', '');\n            history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            });\n        }\n    }\n\n    /**\n     * Checks whether the swagger content is json type.\n     * @param {string} definition The swagger string.\n     * @return {boolean} Whether the content is a json or not.\n     * */\n    hasJsonStructure(definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Method to set the state for opening the swagger editor drawer.\n     * Swagger editor loads the definition content from the local storage. Hence we set the swagger content to the\n     * local storage.\n     * */\n    openEditor() {\n        this.setState({ isImporting: false, linterSelectedLine: null });\n        getLinterResultsFromContent(this.state.swaggerModified).then((results) => {\n            this.setState({ linterResults: results, openEditor: true });\n        });\n        \n    }\n\n    openEditorToImport(importingSwagger, linterSelectedLine) {\n        this.setState({ isImporting: true, swaggerImporting: importingSwagger, \n            linterSelectedLine, isSwaggerUI: false });\n        getLinterResultsFromContent(importingSwagger).then((results) => {\n            this.setState({ linterResults: results, openEditor: true });\n        });\n    }\n\n    /**\n     * Sets the state to close the swagger-editor drawer.\n     * */\n    closeEditor() {\n        this.setState({ openEditor: false });\n        const { intl, api, history } = this.props;\n        const { isAuditApiClicked } = this.state;\n        if (isAuditApiClicked === true) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.APIDefinition.info.updating.auditapi',\n                defaultMessage: 'To reflect the changes made, you need to click Audit API',\n            }));\n            const redirectUrl = '/apis/' + api.id + '/api definition';\n            history.push(redirectUrl);\n        }\n    }\n\n    /**\n     * Handles the transition of the drawer.\n     * @param {object} props list of props\n     * @return {object} The Slide transition component\n     * */\n    transition(props) {\n        return <Slide direction='up' {...props} />;\n    }\n\n    /**\n     * Updates swagger content in the local storage.\n     * */\n    openUpdateConfirmation() {\n        this.setState({ openDialog: true });\n    }\n\n    /**\n     * Updates swagger definition of the api.\n     * @param {string} swaggerContent The swagger file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     * */\n    updateSwaggerDefinition(swaggerContent, specFormat, toFormat) {\n        const { api, intl, updateAPI } = this.props;\n        this.setState({ isUpdating: true });\n        let parsedContent = {};\n        let swaggerFile = null;\n\n        try {\n            if (this.hasJsonStructure(swaggerContent)) {\n                parsedContent = JSON.parse(swaggerContent);\n                const blob = new Blob([swaggerContent], { type: 'text/json' });\n                swaggerFile = new File([blob], 'swagger.json', { type: 'text/json;charset=utf-8' });\n            } else {\n                parsedContent = YAML.load(swaggerContent);\n                const blobYaml = new Blob([swaggerContent], { type: 'text/yaml' });\n                swaggerFile = new File([blobYaml], 'swagger.yaml', { type: 'text/yaml;charset=utf-8' });\n            }\n            const promiseValidation = api.validateSwagger(swaggerFile);\n            promiseValidation.then((ValidationResponse) => {\n                const { isValid, errors } = ValidationResponse.body;\n                // if isValid = true/false the error always returned as an array\n                this.setState({ errors });\n                if (!isValid) {\n                    console.log(ValidationResponse);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                        defaultMessage: 'Error occurred while updating the API Definition',\n                    }));\n                    this.setState({ isUpdating: false });\n                } else {\n                    const promise = api.updateSwagger(parsedContent);\n                    promise\n                        .then((response) => {\n                            const { endpointImplementationType } = api;\n                            if (endpointImplementationType === 'INLINE') {\n                                api.generateMockScripts(api.id);\n                            }\n                            if (response) {\n                                Alert.success(intl.formatMessage({\n                                    id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                                    defaultMessage: 'API Definition updated successfully',\n                                }));\n                                if (specFormat && toFormat) {\n                                    this.setState({ swagger: swaggerContent, format: specFormat, convertTo: toFormat });\n                                } else {\n                                    this.setState({ swagger: swaggerContent });\n                                }\n                            }\n                            /*\n                             *updateAPI() will make a /GET call to get the latest api once the swagger\n                             definition is updated.\n                             *Otherwise, we need to refresh the page to get changes.\n                             */\n                            updateAPI();\n                            this.setState({ isUpdating: false });\n                        })\n                        .catch((err) => {\n                            console.log(err);\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                                defaultMessage: 'Error occurred while updating the API Definition',\n                            }));\n                            this.setState({ isUpdating: false });\n                        });\n                }\n            }).catch((validateErr) => {\n                console.log(validateErr);\n                Alert.error(validateErr);\n            });\n        } catch (err) {\n            console.log(err);\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                defaultMessage: 'Error occurred while updating the API Definition',\n            }));\n        }\n    }\n\n\n    /**\n     * Updates asyncAPI definition of the API\n     * @param {string} asyncAPIContent The AsyncAPi file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     */\n    updateAsyncAPIDefinitionAndDeploy(asyncAPIContent, specFormat, toFormat) {\n        const { api, intl } = this.props;\n        this.setState({ isUpdating: true });\n        let parsedContent = {};\n        if (this.hasJsonStructure(asyncAPIContent)) {\n            parsedContent = JSON.parse(asyncAPIContent);\n        } else {\n            try {\n                parsedContent = YAML.load(asyncAPIContent);\n            } catch (err) {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.async.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                return;\n            }\n        }\n        const promise = api.updateAsyncAPIDefinition(parsedContent);\n        promise\n            .then((response) => {\n                /* const { endpointImplementationType } = api; */\n                /* if (endpointImplementationType === 'INLINE') {\n                    api.generateMockScripts(api.id);\n                } */\n                if (response) {\n                    Alert.success(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.async.api.definition.updated.successfully',\n                        defaultMessage: 'API Definition updated successfully',\n                    }));\n                    if (specFormat && toFormat) {\n                        this.setState({ asyncAPI: asyncAPIContent, format: specFormat, convertTo: toFormat });\n                    } else {\n                        this.setState({ asyncAPI: asyncAPIContent });\n                    }\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                const { response: { body: { description, message } } } = err;\n                if (description && message) {\n                    Alert.error(`${message} ${description}`);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.async.api.definition',\n                        defaultMessage: 'Error occurred while updating the API Definition',\n                    }));\n                }\n                this.setState({ isUpdating: false });\n            });\n    }\n\n    /**\n     * Updates asyncAPI definition of the API\n     * @param {string} asyncAPIContent The AsyncAPi file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     */\n    updateAsyncAPIDefinition(asyncAPIContent, specFormat, toFormat) {\n        const { api, intl, updateAPI } = this.props;\n        this.setState({ isUpdating: true });\n        let parsedContent = {};\n        if (this.hasJsonStructure(asyncAPIContent)) {\n            parsedContent = JSON.parse(asyncAPIContent);\n        } else {\n            try {\n                parsedContent = YAML.load(asyncAPIContent);\n            } catch (err) {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.async.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                return;\n            }\n        }\n        const promise = api.updateAsyncAPIDefinition(parsedContent);\n        promise\n            .then((response) => {\n                /* const { endpointImplementationType } = api; */\n                /* if (endpointImplementationType === 'INLINE') {\n                    api.generateMockScripts(api.id);\n                } */\n                if (response) {\n                    Alert.success(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.async.api.definition.updated.successfully',\n                        defaultMessage: 'API Definition updated successfully',\n                    }));\n                    if (specFormat && toFormat) {\n                        this.setState({ asyncAPI: asyncAPIContent, format: specFormat, convertTo: toFormat });\n                    } else {\n                        this.setState({ asyncAPI: asyncAPIContent });\n                    }\n                }\n                /*\n                 * updateAPI() will make a /GET call to get the latest api once the asyncAPI definition is updated.\n                 * Otherwise, we need to refresh the page to get changes.\n                 */\n                updateAPI();\n                this.setState({ isUpdating: false });\n            })\n            .catch((err) => {\n                console.log(err);\n                const { response: { body: { description, message } } } = err;\n                if (description && message) {\n                    Alert.error(`${message} ${description}`);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.async.api.definition',\n                        defaultMessage: 'Error occurred while updating the API Definition',\n                    }));\n                }\n                this.setState({ isUpdating: false });\n            });\n    }\n\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            swagger, graphQL, openEditor, openDialog, format, convertTo, notFound, isAuditApiClicked,\n            securityAuditProperties, isSwaggerValid, swaggerModified, isUpdating,\n            asyncAPI, asyncAPIModified, isAsyncAPIValid, errors, isSwaggerUI, linterResults, linterSelectedSeverity, \n            linterSelectedLine, isImporting, swaggerImporting\n        } = this.state;\n\n        const {\n            classes, resourceNotFountMessage, api, match,\n        } = this.props;\n\n        const isApiProduct = match.path.search('/api-products/') !== -1 ;\n\n        let downloadLink;\n        let fileName;\n        let isGraphQL = 0;\n\n        if (graphQL !== null) {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(graphQL);\n            fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            isGraphQL = 1;\n        } else if (asyncAPI !== null) {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(asyncAPI);\n            fileName = 'asyncapi.' + format;\n        } else {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(swagger);\n            fileName = 'swagger.' + format;\n        }\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n        if (!swagger && !graphQL && !asyncAPI && api === 'undefined') {\n            return <Progress />;\n        }\n\n        // @ts-ignore\n        // @ts-ignore\n        return (\n            <>\n                {/* TODO tmkasun: use <Box> component for alignment  */}\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography id='itest-api-details-api-definition-head' variant='h4' component='h2'>\n                            {/* eslint-disable-next-line no-nested-ternary */}\n                            {graphQL ? (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.schema.definition'\n                                    defaultMessage='Schema Definition'\n                                />\n                            ) : asyncAPI ? (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.asyncAPI.definition'\n                                    defaultMessage='AsyncAPI Definition'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.api.definition'\n                                    defaultMessage='API Definition'\n                                />\n                            )}\n                        </Typography>\n                        {asyncAPI ? (\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                onClick={this.openEditor}\n                                disabled={isRestricted(['apim:api_create'], api)}\n                            >\n                                <EditRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Button>\n                        ) : (\n                            !(graphQL || isApiProduct) && (\n                                <Button\n                                    size='small'\n                                    className={classes.button}\n                                    onClick={this.openEditor}\n                                    disabled={isRestricted(['apim:api_create'], api) || api.isRevision}\n                                    id='edit-definition-btn'\n                                >\n                                    <EditRounded className={classes.buttonIcon} />\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.edit'\n                                        defaultMessage='Edit'\n                                    />\n                                </Button>\n                            )\n                        )}\n                        {!isApiProduct && (\n                            <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} \n                                editAndImport={this.openEditorToImport}/>\n                        )}\n                        {(api.serviceInfo && api.serviceInfo.outdated && api.type !== 'SOAP') && (\n                            <DefinitionOutdated\n                                api={api}\n                                classes={classes}\n                            />\n                        )}\n                        <Button\n                            size='small'\n                            className={classes.button}\n                            component={Link}\n                            download={fileName}\n                            href={downloadLink}\n                            id='download-definition-btn'\n                        >\n                            <CloudDownloadRounded className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.download.definition'\n                                defaultMessage='Download Definition'\n                            />\n                        </Button>\n                        {(securityAuditProperties.apiToken && securityAuditProperties.collectionId\n                        && api.type !== 'GRAPHQL' && !asyncAPI)\n                            && (\n                                <Button size='small' className={classes.button} onClick={this.onAuditApiClick}>\n                                    <LockRounded className={classes.buttonIcon} />\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.audit.api'\n                                        defaultMessage='Audit API'\n                                    />\n                                </Button>\n                            )}\n                    </div>\n                    {isGraphQL === 0 && (\n                        <div className={classes.titleWrapper}>\n                            <Button size='small' className={classes.button} onClick={this.onChangeFormatClick}>\n                                <SwapHorizontalCircle className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.convert.to'\n                                    defaultMessage='Convert to'\n                                />\n                                {' '}\n                                {convertTo}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isAuditApiClicked ? (\n                            <APISecurityAudit apiId={api.id} />\n                        ) : (\n                            <MonacoEditor\n                                language={format}\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                /* eslint-disable-next-line no-nested-ternary */\n                                value={swagger !== null ? swagger : asyncAPI !== null ? asyncAPI : graphQL}\n                                options={editorOptions}\n                            />\n                        )}\n                    </Suspense>\n                </div>\n                <Dialog fullScreen open={openEditor} onClose={this.closeEditor} TransitionComponent={this.transition}>\n                    <Paper square className={classes.popupHeader}>\n                        <Box display='flex' flexDirection='row' justifyContent='space-between'>\n                            <Box>\n                                <IconButton\n                                    className={classes.button}\n                                    color='inherit'\n                                    onClick={this.closeEditor}\n                                    aria-label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.APIDefinition.btn.close'\n                                            defaultMessage='Close'\n                                        />\n                                    )}\n                                >\n                                    <Icon>close</Icon>\n                                </IconButton>\n\n                                <Button\n                                    className={classes.button}\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={this.openUpdateConfirmation}\n                                    disabled={(!isSwaggerValid || isUpdating) || (!isAsyncAPIValid || isUpdating)}\n                                >\n                                    {isImporting? (\n                                        <FormattedMessage\n                                            id={'Apis.Details.APIDefinition.APIDefinition.documents.swagger.editor.'\n                                                + 'import.content'}\n                                            defaultMessage='Import Content'\n                                        />\n                                    ):(\n                                        <FormattedMessage\n                                            id={'Apis.Details.APIDefinition.APIDefinition.documents.swagger.editor.'\n                                                + 'update.content'}\n                                            defaultMessage='Update Content'\n                                        />\n                                    )}\n                                    {isUpdating && <CircularProgress className={classes.progressLoader} size={24}/>}\n                                </Button>\n                            </Box>\n                            <Box margin='3px'>\n                                <ToggleButtonGroup\n                                    data-testid='editor-drawe-toggle'\n                                    exclusive\n                                    aria-label='toggle'\n                                    size='small'\n                                    onChange={(event, value) => {\n                                        this.setState({ isSwaggerUI: value === \"swagger\" })\n                                    }}\n                                >\n                                    <ToggleButton\n                                        className={classes.activeButton}\n                                        value='swagger'\n                                        aria-label='swagger'\n                                        selected={this.state.isSwaggerUI}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.APIDefinition.editor.drawer.toggle.swagger'\n                                            defaultMessage='Swagger'\n                                        />\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        className={classes.activeButton}\n                                        value='linter'\n                                        aria-label='linter'\n                                        selected={!this.state.isSwaggerUI}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.APIDefinition.editor.drawer.toggle.linter'\n                                            defaultMessage='Linter'\n                                        />\n                                    </ToggleButton>\n                                    <APILintingSummary \n                                        linterResults={linterResults}\n                                        handleChange = { (event, value)=> {\n                                            this.setState({linterSelectedSeverity: value});\n                                            this.setState({ isSwaggerUI: false }) }}\n                                    />\n                                </ToggleButtonGroup>\n                                \n                            </Box>\n                        </Box>\n                    </Paper>\n                    <Suspense\n                        fallback={(\n                            <Progress />\n                        )}\n                    >\n                        {swagger ? (\n                            <EditorDialog\n                                swagger={isImporting? swaggerImporting : swaggerModified}\n                                language={format}\n                                onEditContent={this.onChangeSwaggerContent}\n                                errors={errors}\n                                setErrors={this.setErrors}\n                                isSwaggerUI={ isSwaggerUI }\n                                linterResults={ linterResults.filter((item)=> \n                                    linterSelectedSeverity===null||\n                                    item.severity===Number(linterSelectedSeverity))\n                                }\n                                linterSelectedSeverity={linterSelectedSeverity}\n                                linterSelectedLine={linterSelectedLine}\n                            />\n                        ) : (\n                            <AsyncAPIEditor\n                                asyncAPI={asyncAPIModified}\n                                language={format}\n                                onEditContent={this.onChangeAsyncAPIContent}\n                            />\n                        )}\n                    </Suspense>\n                </Dialog>\n                <Dialog\n                    open={openDialog}\n                    onClose={this.handleNo}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <Typography align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.save.api.definition'\n                                defaultMessage='Save API Definition'\n                            />\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.api.definition.save.confirmation'\n                                defaultMessage={\n                                    'Are you sure you want to save the API Definition? This might affect the'\n                                    + ' existing resources.'\n                                }\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Grid\n                            container\n                            direction='row'\n                            alignItems='flex-start'\n                            spacing={1}\n                        >\n                            <Grid item>\n                                <Button onClick={this.handleNo} color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.btn.no'\n                                        defaultMessage='CANCEL'\n                                    />\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <CustomSplitButton\n                                    advertiseInfo={api.advertiseInfo}\n                                    api={api}\n                                    handleSave={this.handleSave}\n                                    handleSaveAndDeploy={this.handleSaveAndDeploy}\n                                    isUpdating={isUpdating}\n                                />\n                            </Grid>\n                        </Grid>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nAPIDefinition.contextType = AppContext;\nAPIDefinition.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(APIDefinition)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Line } from 'rc-progress';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { withRouter } from 'react-router';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\nimport MUIDataTable from 'mui-datatables';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport MonacoEditor from 'react-monaco-editor';\n\nconst styles = (theme) => ({\n    rootPaper: {\n        padding: theme.spacing(3),\n        margin: theme.spacing(2),\n    },\n    inlineDecoration: {\n        background: '#FF0000',\n    },\n    contentLine: {\n        background: '#add8e6',\n    },\n    htmlToolTip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n        'margin-left': 10,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    tableRow: {\n        'background-color': '#d3d3d3',\n    },\n    referenceErrorTypography: {\n        width: '70%',\n        marginTop: '15%',\n    },\n    referenceTypography: {\n        width: '70%',\n    },\n    subheadingTypography: {\n        paddingTop: 30,\n        paddingLeft: 20,\n    },\n    paperDiv: {\n        marginTop: 30,\n    },\n    sectionHeadingTypography: {\n        marginBottom: 18,\n    },\n    auditSummaryDiv: {\n        display: 'flex',\n        marginTop: 25,\n    },\n    auditSummarySubDiv: {\n        width: 250,\n        marginLeft: 40,\n        marginRight: 40,\n        display: 'table',\n    },\n    circularProgressBarScore: {\n        fontSize: 70,\n        color: '#3d98c7',\n        marginTop: 18,\n    },\n    circularProgressBarScoreFooter: {\n        fontSize: 18,\n        marginTop: 10,\n    },\n    auditSummaryDivRight: {\n        flexGrow: 1,\n        marginLeft: 200,\n        marginTop: 10,\n    },\n    columnOne: {\n        display: 'block',\n        width: '50%',\n        float: 'left',\n    },\n    columnTwo: {\n        width: '40%',\n        float: 'right',\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    linkText: {\n        float: 'right',\n    },\n});\n\n/**\n * This Component hosts the API Security Audit Component\n * More specifically, rendering of the Security Audit\n * Report.\n */\nclass APISecurityAudit extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            report: null,\n            overallScore: 0,\n            numErrors: 0,\n            externalApiId: null,\n            loading: false,\n            apiDefinition: null,\n        };\n        this.criticalityObject = {\n            1: 'INFO',\n            2: 'LOW',\n            3: 'MEDIUM',\n            4: 'HIGH',\n            5: 'CRITICAL',\n        };\n        this.searchTerm = null;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        this.setState({ loading: true });\n        const { apiId, history, intl } = this.props;\n        const currentApi = new API();\n        const promisedDefinition = currentApi.getSwagger(apiId);\n        promisedDefinition.then((response) => {\n            this.setState({\n                apiDefinition: JSON.stringify(response.obj, null, 1),\n            });\n        })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        currentApi.getSecurityAuditReport(apiId)\n            .then((response) => {\n                this.setState({\n                    report: response.body.report,\n                    overallScore: response.body.grade,\n                    numErrors: response.body.numErrors,\n                    externalApiId: response.body.externalApiId,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({ loading: false });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.AuditApi.GetReportError',\n                    defaultMessage: 'Something went wrong while retrieving the API Security Report',\n                }));\n                const redirectUrl = '/apis/' + apiId + '/api definition';\n                history.push(redirectUrl);\n            });\n    }\n\n    getMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '30%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    getErrorMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '100%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    /**\n     * Get Row data for MUI Table\n     * @param {*} issues Issues array\n     * @param {String} category The category of the issue\n     * @param {*} rowType The type of row - normal or error\n     * @return {*} dataObject The dataObject array\n     */\n    getRowData(issues, category, rowType) {\n        const dataObject = [];\n        for (const item in issues) {\n            if ({}.hasOwnProperty.call(issues, item)) {\n                for (let i = 0; i < issues[item].issues.length; i++) {\n                    const rowObject = [];\n                    if (rowType === 'error') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                issues[item].issues[i].specificDescription, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                issues[item].description, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        }\n                    } else if (rowType === 'normal') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].issues[i].specificDescription,\n                                this.roundScore(issues[item].issues[i].score), issues[item].issues[i].pointer,\n                                issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].description, this.roundScore(issues[item].issues[i].score),\n                                issues[item].issues[i].pointer, issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        }\n                    }\n                    dataObject.push(rowObject);\n                }\n            }\n        }\n        return dataObject;\n    }\n\n    /**\n     * Method to get the URL to display for each issue\n     * @param {*} category Category of the issue\n     * @returns {*} String URL\n     */\n    getMoreDetailUrl(category) {\n        const baseUrl = 'https://apisecurity.io/ref/';\n        let url = '';\n\n        switch (category) {\n            case 'OpenAPI Format Requirements':\n                url = baseUrl + 'oasconformance/';\n                break;\n            case 'Security':\n                url = baseUrl + 'security/';\n                break;\n            case 'Data Validation':\n                url = baseUrl + 'datavalidation/datavalidation/';\n                break;\n            default:\n                url = baseUrl;\n        }\n        return url;\n    }\n\n    /**\n     * editorDidMount method for Monaco Editor\n     * @param {*} editor Monaco Editor editor\n     * @param {*} monaco Monaco Editor monaco\n     * @param {String} searchTerm SearchTerm for pointer\n     */\n    editorDidMount = (editor, monaco, searchTerm) => {\n        const { classes } = this.props;\n        if (searchTerm !== '') {\n            const lastTerms = [];\n            const termObject = searchTerm.split('/');\n            const regexPatterns = [];\n            for (let i = 0; i < termObject.length; i++) {\n                if (termObject[i] !== '' && termObject[i] !== '0') {\n                    let appendedString = '\"' + termObject[i] + '\":';\n                    if (appendedString.includes('~1')) {\n                        appendedString = appendedString.replace(/~1/i, '/');\n                    }\n                    regexPatterns.push(appendedString);\n                }\n            }\n\n            for (let j = 0; j < regexPatterns.length; j++) {\n                if (regexPatterns[j] !== '') {\n                    if (j !== 0 && lastTerms.length !== 0 && lastTerms[lastTerms.length - 1] !== null) {\n                        lastTerms.push(editor.getModel().findNextMatch(\n                            regexPatterns[j],\n                            { lineNumber: lastTerms[lastTerms.length - 1].range.endLineNumber, column: 1 },\n                            true, true, null, false,\n                        ));\n                    } else {\n                        lastTerms.push(editor.getModel().findNextMatch(regexPatterns[j], 1, true, true, null, true));\n                    }\n                }\n            }\n            const finalMatchIndex = lastTerms.length - 1;\n            if (lastTerms[finalMatchIndex] != null) {\n                editor.revealLineInCenter(lastTerms[finalMatchIndex].range.startLineNumber);\n                editor.deltaDecorations([], [\n                    {\n                        range: new monaco.Range(\n                            lastTerms[finalMatchIndex].range.startLineNumber,\n                            lastTerms[finalMatchIndex].range.startColumn,\n                            lastTerms[finalMatchIndex].range.endLineNumber,\n                            lastTerms[finalMatchIndex].range.endColumn,\n                        ),\n                        options: {\n                            isWholeLine: true,\n                            className: classes.inlineDecoration,\n                            glyphMarginClassName: classes.contentLine,\n                        },\n                    },\n                ]);\n            }\n        }\n    }\n\n    /**\n     * Method to round off the score of a section of the report\n     * @param {*} score Score of section\n     * @returns {*} roundScore Rounded off score\n     */\n    roundScore(score) {\n        if (score !== 0) {\n            return Math.round(score * 100) / 100;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            report, overallScore, numErrors, externalApiId, loading, apiDefinition,\n        } = this.state;\n\n        const reportObject = JSON.parse(report);\n        const linkToDetailedReport = 'https://platform.42crunch.com/apis/' + externalApiId + '/security-audit-report';\n        if (loading) {\n            return (\n                <div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography\n                                variant='h5'\n                                component='h3'\n                                className={classes.head}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport'\n                                    defaultMessage='Please wait...'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport.Content'\n                                    defaultMessage='Auditing an API for the first time will take some time'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                    <Progress />\n                </div>\n            );\n        }\n        const columns = [\n            {\n                name: 'Severity',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Score Impact',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Impacted',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Pointers Affected',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Errors',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const errorColumns = [\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            glyphMargin: true,\n        };\n\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            print: false,\n            download: false,\n            selectableRows: false,\n            expandableRows: true,\n            expandableRowsOnClick: true,\n            renderExpandableRow: (rowData) => {\n                let searchTerm = null;\n                if (rowData[3] === 'error') {\n                    searchTerm = reportObject.index[rowData[1]];\n\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell className={classes.columnOne}>\n                                <MonacoEditor\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell className={classes.columnTwo}>\n                                <Typography variant='body1' className={classes.referenceErrorTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[2])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                } else {\n                    searchTerm = reportObject.index[rowData[3]];\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell colSpan='2'>\n                                <MonacoEditor\n                                    width='85%'\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='body1' className={classes.referenceTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[6])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                }\n            },\n        };\n        return (\n            <div>\n                {report && (\n                    <div\n                        width='100%'\n                        height='calc(100vh - 51px)'\n                    >\n                        <Typography variant='h4' className={classes.subheadingTypography}>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.AuditApi.ApiSecurityAuditReport'\n                                defaultMessage='API Security Audit Report'\n                            />\n                        </Typography>\n                        <div className={classes.paperDiv}>\n                            <Paper elevation={1} className={classes.rootPaper}>\n                                <div>\n                                    <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.AuditScoreSummary'\n                                            defaultMessage='Audit Score and Summary'\n                                        />\n                                    </Typography>\n                                    <Typography variant='body1' className={classes.linkText}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.LinkToDetailedReport'\n                                            defaultMessage='{linkToDetailedReportText} {link} {afterLinkText}'\n                                            values={{\n                                                linkToDetailedReportText: 'Check out the ',\n                                                link: (\n                                                    <b>\n                                                        <a\n                                                            href={linkToDetailedReport}\n                                                            target='_blank'\n                                                            rel='noopener noreferrer'\n                                                        >\n                                                            detailed Report\n                                                        </a>\n                                                    </b>),\n                                                afterLinkText: ' from 42Crunch',\n                                            }}\n                                        />\n                                    </Typography>\n                                    <div className={classes.auditSummaryDiv}>\n                                        <div className={classes.auditSummarySubDiv}>\n                                            <CircularProgressbarWithChildren\n                                                value={overallScore}\n                                            >\n                                                <Typography\n                                                    variant='body1'\n                                                    className={classes.circularProgressBarScore}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi\n                                                                    .OverallScoreProgress'\n                                                        defaultMessage='{overallScore}'\n                                                        values={{\n                                                            overallScore: (\n                                                                <strong>{Math.round(overallScore)}</strong>\n                                                            ),\n                                                        }}\n                                                    />\n                                                </Typography>\n                                                <Typography\n                                                    variant='body1'\n                                                    className={classes.circularProgressBarScoreFooter}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.ScoreFooter'\n                                                        defaultMessage='out of 100'\n                                                    />\n                                                </Typography>\n                                            </CircularProgressbarWithChildren>\n                                        </div>\n                                        <div className={classes.auditSummaryDivRight}>\n                                            {{}.hasOwnProperty.call(reportObject, 'score')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.overallScore'\n                                                            defaultMessage='{overallScoreText} {overallScore} / 100'\n                                                            values={{\n                                                                overallScoreText: <strong>Overall Score:</strong>,\n                                                                overallScore: this.roundScore(overallScore),\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {numErrors !== null\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.TotalNumOfErrors'\n                                                            defaultMessage='{totalNumOfErrorsText} {totalNumOfErrors}'\n                                                            values={{\n                                                                totalNumOfErrorsText: (\n                                                                    <strong>Total Number of Errors: </strong>\n                                                                ),\n                                                                totalNumOfErrors: numErrors,\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'criticality')\n                                                && (\n                                                    <>\n                                                        <Typography variant='body1'>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.APIDefinition'\n                                                                + '.AuditApi.OverallCriticality'}\n                                                                defaultMessage={'{overallCriticalityText}'\n                                                                + ' {overallCriticality}'}\n                                                                values={{\n                                                                    overallCriticalityText: (\n                                                                        <strong>Overall Severity:</strong>\n                                                                    ),\n                                                                    overallCriticality: (\n                                                                        this.criticalityObject[reportObject.criticality]\n                                                                    ),\n                                                                }}\n                                                            />\n                                                            <Tooltip\n                                                                placement='right'\n                                                                classes={{\n                                                                    tooltip: classes.htmlTooltip,\n                                                                }}\n                                                                title={(\n                                                                    <>\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                            defaultMessage='Severity ranges from: '\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                            defaultMessage='1. INFO'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                            defaultMessage='2. LOW'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                            defaultMessage='3. MEDIUM'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                            defaultMessage='4. HIGH'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                            defaultMessage='5. CRITICAL'\n                                                                        />\n                                                                        <br />\n                                                                    </>\n                                                                )}\n                                                            >\n                                                                <Button className={classes.helpButton}>\n                                                                    <HelpOutline className={classes.helpIcon} />\n                                                                </Button>\n                                                            </Tooltip>\n                                                        </Typography>\n                                                    </>\n                                                )}\n                                            <hr />\n                                            {{}.hasOwnProperty.call(reportObject, 'security')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.SecuritySummary'\n                                                            defaultMessage='{securitySummary}'\n                                                            values={{\n                                                                securitySummary: (\n                                                                    <strong>\n                                                                        Security -\n                                                                        (\n                                                                        {\n                                                                            this.roundScore(reportObject.security.score)\n                                                                        }\n                                                                        {' '}\n                                                                        / 30)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <Line\n                                                            percent={((this.roundScore(reportObject.security.score)\n                                                                / 30\n                                                            ) * 100)}\n                                                            strokeColor='#3d98c7'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'data')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.APIDefinition'\n                                                            + '.AuditApi.DataValidationSummary'}\n                                                            defaultMessage='{dataValidationSummary}'\n                                                            values={{\n                                                                dataValidationSummary: (\n                                                                    <strong>\n                                                                        Data Validation -\n                                                                        (\n                                                                        {this.roundScore(reportObject.data.score)}\n                                                                        {' '}\n                                                                        / 70)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <Line\n                                                            percent={((this.roundScore(reportObject.data.score) / 70\n                                                            ) * 100)}\n                                                            strokeColor='#3d98c7'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                                && (\n                                                    <InlineMessage type='warning' height={140}>\n                                                        <div className={classes.contentWrapper}>\n                                                            <Typography\n                                                                variant='h5'\n                                                                component='h3'\n                                                                className={classes.head}\n                                                            >\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Heading'}\n                                                                    defaultMessage='Failed to Validate OpenAPI File'\n                                                                />\n                                                            </Typography>\n                                                            <Typography component='p' className={classes.content}>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Content'}\n                                                                    defaultMessage={'Fix the critical errors '\n                                                                    + 'shown below and run the audit again.'}\n                                                                />\n                                                            </Typography>\n                                                        </div>\n                                                    </InlineMessage>\n                                                )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </div>\n                        {\n                            <div className={classes.paperDiv}>\n                                <Paper elevation={1} className={classes.rootPaper}>\n                                    <div>\n                                        <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                            <FormattedMessage\n                                                id='Apis.Details.APIDefinition.AuditApi.OpenApiFormatRequirements'\n                                                defaultMessage='OpenAPI Format Requirements'\n                                            />\n                                        </Typography>\n                                        {{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Semantic Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.semanticErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Structural Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.validationErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'warnings')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Best Practices Issues'\n                                                                    data={this.getRowData(\n                                                                        reportObject.warnings.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {!{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'warnings')\n                                        && (\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.OASNoIssuesFound'\n                                                    defaultMessage='No Issues Found'\n                                                />\n                                            </Typography>\n                                        )}\n                                    </div>\n                                </Paper>\n                            </div>\n                        }\n                        {{}.hasOwnProperty.call(reportObject, 'security')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.Security'\n                                                    defaultMessage='Security'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityNumOfIssues'\n                                                    defaultMessage='{securityNumOfIssuesText} {securityNumOfIssues}'\n                                                    values={{\n                                                        securityNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        securityNumOfIssues: reportObject.security.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityScore'\n                                                    defaultMessage='{securityScoreText} {securityScore}  / 30'\n                                                    values={{\n                                                        securityScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        securityScore: (\n                                                            (Math.round(reportObject.security.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.securityCriticality'\n                                                        defaultMessage='{securityCriticalityText} {securityCriticality}'\n                                                        values={{\n                                                            securityCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            securityCriticality: (\n                                                                // eslint-disable-next-line max-len\n                                                                this.criticalityObject[reportObject.security.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.security.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.security.issues,\n                                                                    'Security',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                        {{}.hasOwnProperty.call(reportObject, 'data')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidation'\n                                                    defaultMessage='Data Validation'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationNumOfIssues'\n                                                    defaultMessage='{dataNumOfIssuesText} {dataNumOfIssues}'\n                                                    values={{\n                                                        dataNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        dataNumOfIssues: reportObject.data.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationScore'\n                                                    defaultMessage='{dataScoreText} {dataScore}  / 70'\n                                                    values={{\n                                                        dataScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        dataScore: (\n                                                            (Math.round(reportObject.data.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.dataCriticality'\n                                                        defaultMessage='{dataCriticalityText} {dataCriticality}'\n                                                        values={{\n                                                            dataCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            dataCriticality: (\n                                                                this.criticalityObject[reportObject.data.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.data.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.data.issues,\n                                                                    'Data Validation',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nAPISecurityAudit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(APISecurityAudit)));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport API from 'AppData/api.js';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport ImportDefinition from './ImportDefinition';\nimport DefinitionOutdated from './DefinitionOutdated';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    buttonWarningColor: {\n        color: theme.palette.warning.light,\n    },\n});\n\n/**\n * This component holds the functionality of viewing the WSDL content of an api. The view is a\n * read-only representation of the WSDL file. If the API has a WSDL ZIP archive, the preview will not be\n * available and it will be indicated in the UI.\n * Users can upload a new api definition file by clicking 'Import WSDL'.\n *\n * @class WSDL\n * @extends {Component}\n * */\nclass WSDL extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isArchive: false,\n            wsdl: null,\n        };\n        this.loadWSDLInEditor = this.loadWSDLInEditor.bind(this);\n        this.handleDownloadWSDLZip = this.handleDownloadWSDLZip.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api, intl } = this.props;\n        const promisedWSDLInfo = api.getWSDLInfo(api.id);\n        promisedWSDLInfo\n            .then((response) => {\n                const wsdlType = response.obj.type;\n                if (wsdlType === 'WSDL') {\n                    this.loadWSDLInEditor(api);\n                } else {\n                    this.setState({ isArchive: true, wsdl: null });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl.info',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor. If the WSDL is ZIP, the operation is skipped\n     * and it is indicated in the UI.\n     *\n     *  @param {boolean} isArchive states whether the WSDL is a ZIP\n     */\n    setSchemaDefinition = (isArchive) => {\n        this.setState({ isArchive, wsdl: null });\n        if (!isArchive) {\n            const { api } = this.props;\n            this.loadWSDLInEditor(api);\n        }\n    }\n\n    /**\n     * Downloads WSDL ZIP file.\n     *\n     */\n    handleDownloadWSDLZip() {\n        const { api, intl } = this.props;\n        const wsdlZipContent = api.getWSDL(api.id);\n        wsdlZipContent.then((response) => {\n            Utils.forceDownload(response);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.WSDL.download.error',\n                    defaultMessage: 'Error downloading WSDL ZIP file',\n                }));\n            });\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor.\n     *\n     * @param {*} api API\n     */\n    loadWSDLInEditor(api) {\n        const { intl } = this.props;\n        const promisedApi = api.getWSDL(api.id);\n\n        promisedApi\n            .then((response) => {\n                response.data.text().then((text) => {\n                    this.setState({\n                        isArchive: false,\n                        wsdl: text,\n                    });\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            wsdl, notFound, isArchive,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            cursorStyle: 'line-thin',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!isArchive && !wsdl) {\n            return <Progress />;\n        }\n\n        let downloadWidget;\n        const downloadButtonContent = (\n            <>\n                <CloudDownloadRounded className={classes.buttonIcon} />\n                <FormattedMessage\n                    id='Apis.Details.APIDefinition.WSDL.download.definition'\n                    defaultMessage='Download WSDL'\n                />\n            </>\n        );\n        if (!isArchive) {\n            const downloadLink = 'data:text/xml;charset=utf-8,' + encodeURIComponent(wsdl);\n            const fileName = api.name + '-' + api.version + '.wsdl';\n            downloadWidget = (\n                <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                    <Button size='small' className={classes.button}>\n                        {downloadButtonContent}\n                    </Button>\n                </a>\n            );\n        } else {\n            downloadWidget = (\n                <Button size='small' className={classes.button} onClick={this.handleDownloadWSDLZip}>\n                    {downloadButtonContent}\n                </Button>\n            );\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.WSDL.wsdl.definition'\n                                defaultMessage='WSDL Definition'\n                            />\n                        </Typography>\n                        <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        {api.serviceInfo && api.serviceInfo.outdated && api.type === 'SOAP' && (\n                            <DefinitionOutdated\n                                api={api}\n                                classes={classes}\n                            />\n                        )}\n                        {downloadWidget}\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.WSDL.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update WSDL Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isArchive ? (\n                            <InlineMessage type='info' height={80} className={classes.emptyBox}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.WSDL.preview.not.available'\n                                            defaultMessage='The API has a WSDL ZIP hence the preview is not available.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        ) : (\n                            <MonacoEditor\n                                language='xml'\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={wsdl}\n                                options={editorOptions}\n                            />\n                        )}\n\n                    </Suspense>\n                </div>\n            </>\n        );\n    }\n}\n\nWSDL.contextType = AppContext;\nWSDL.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(WSDL)));\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext, usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport { useRevisionContext } from 'AppComponents/Shared/RevisionContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport GoTo from 'AppComponents/Apis/Details/GoTo/GoTo';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport MUIAlert from 'AppComponents/Shared/MuiAlert';\nimport DeleteApiButton from './DeleteApiButton';\nimport CreateNewVersionButton from './CreateNewVersionButton';\n\nconst styles = (theme) => ({\n    root: {\n        height: theme.custom.apis.topMenu.height,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'contents',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    viewInStoreLauncher: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        textAlign: 'center',\n        justifyContent: 'center',\n        height: 70,\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n    dateWrapper: {\n        flex: 1,\n        alignSelf: 'center',\n    },\n    lastUpdatedTypography: {\n        display: 'inline-block',\n        minWidth: 30,\n    },\n    apiName: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    downloadApi: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        height: 70,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    downloadApiFlex: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    revisionWrapper: {\n        paddingRight: theme.spacing(2),\n    },\n    topRevisionStyle: {\n        marginLeft: theme.spacing(1),\n        maxWidth: 500,\n    },\n    readOnlyStyle: {\n        color: 'red',\n    },\n    active: {\n        background: theme.custom.revision.activeRevision.background,\n        width: 8,\n        height: 8,\n        borderRadius: '50%',\n        alignItems: 'center',\n    },\n});\n\nconst APIDetailsTopMenu = (props) => {\n    const {\n        classes, theme, api, isAPIProduct, imageUpdate, intl, openPageSearch, setOpenPageSearch, updateAPI\n    } = props;\n    const history = useHistory();\n    const prevLocation = history.location.pathname;\n    const lastIndex = prevLocation.split('/')[3];\n    const [revisionId, setRevisionId] = useState(api.id);\n    let lifecycleState;\n    let isVisibleInStore;\n    if (isAPIProduct) {\n        lifecycleState = api.state === 'PROTOTYPED' ? 'PRE-RELEASED' : api.state;\n        isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.state);\n    } else {\n        lifecycleState = api.lifeCycleStatus === 'PROTOTYPED' ? 'PRE-RELEASED' : api.lifeCycleStatus;\n        isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n    }\n    /**\n         * The component for advanced endpoint configurations.\n         * @param {string} name The name of the\n         * @param {string} version Version of the API\n         * @param {string} provider Provider of the API\n         * @param {string} format Weather to recive files in YALM of JSON format\n         * @returns {zip} Zpi file containing the API directory.\n     */\n    function exportAPI() {\n        return api.export().then((zipFile) => {\n            return Utils.forceDownload(zipFile);\n        }).catch((error) => {\n            console.error(error);\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.components.APIDetailsTopMenu.error',\n                    defaultMessage: 'Something went wrong while downloading the API.',\n                }));\n            }\n        });\n    }\n\n    const handleChange = (event) => {\n        setRevisionId(event.target.value);\n    };\n\n    /**\n     * Update the state when new props are available\n     */\n    useEffect(() => {\n        setRevisionId(api.id);\n    }, [api.id]);\n\n    const isDownloadable = [API.CONSTS.API, API.CONSTS.APIProduct].includes(api.apiType);\n    const { user } = useAppContext();\n    const { data: settings } = usePublisherSettings();\n    const { allRevisions, allEnvRevision } = useRevisionContext();\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = settings ? `${settings.devportalUrl}/apis/${api.id}/overview` : '';\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = settings ? `${settings.devportalUrl}/apis/${api.id}/overview?tenant=${tenantDomain}` : '';\n    }\n\n    function getDeployments(revisionKey) {\n        const array = [];\n        allEnvRevision.filter(\n            (env) => env.id === revisionKey,\n        )[0].deploymentInfo.map((environment) => array.push(environment.name));\n        return array.join(', ');\n    }\n\n    // todo: need to support rev proxy ~tmkb\n    return (\n        <div className={classes.root}>\n            <Link\n                to={isAPIProduct\n                    ? `/api-products/${api.id}/overview`\n                    : `/apis/${api.id}/overview`}\n                className={classes.backLink}\n            >\n                <Box width={70} height={50} marginLeft={1}>\n                    <ThumbnailView api={api} width={70} height={50} imageUpdate={imageUpdate} \n                        updateAPI={updateAPI} />\n                </Box>\n                <div style={{ marginLeft: theme.spacing(1), maxWidth: 500 }}>\n                    <Link\n                        to={isAPIProduct\n                            ? `/api-products/${api.id}/overview`\n                            : `/apis/${api.id}/overview`}\n                        className={classes.backLink}\n                    >\n                        <Typography id='itest-api-name-version' variant='h4' component='h1' className={classes.apiName}>\n                            {api.name}\n                            {' '}\n                            {isAPIProduct ? '' : ':' + api.version}\n                        </Typography>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.components.APIDetailsTopMenu.created.by'\n                                defaultMessage='Created by:'\n                            />\n                            {' '}\n                            {api.provider}\n                        </Typography>\n                    </Link>\n                </div>\n            </Link>\n            <VerticalDivider height={70} />\n            <div className={classes.infoItem}>\n                <Typography data-testid='itest-api-state' component='div' variant='subtitle1'>\n                    {lifecycleState}\n                </Typography>\n                <Typography variant='caption' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.state'\n                        defaultMessage='State'\n                    />\n                </Typography>\n            </div>\n\n            <div className={classes.dateWrapper} />\n            {api.isRevision && (\n                <MUIAlert\n                    variant='outlined'\n                    severity='warning'\n                    icon={false}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.read.only.label'\n                        defaultMessage='Read only'\n                    />\n                </MUIAlert>\n            )}\n            <div className={classes.dateWrapper} />\n            {(api.advertiseInfo && api.advertiseInfo.advertised) && (\n                <MUIAlert\n                    data-testid='itest-third-party-api-label'\n                    variant='outlined'\n                    severity='warning'\n                    icon={false}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.advertise.only.label'\n                        defaultMessage='Third Party'\n                    />\n                </MUIAlert>\n            )}\n            {(!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                <div className={classes.topRevisionStyle}>\n                    <TextField\n                        id='revision-selector'\n                        value={revisionId}\n                        select\n                        SelectProps={{\n                            MenuProps: {\n                                anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                },\n                                getContentAnchorEl: null,\n                            },\n                        }}\n                        name='selectRevision'\n                        onChange={handleChange}\n                        margin='dense'\n                        variant='outlined'\n                    >\n                        {!isAPIProduct ? (\n                            <MenuItem\n                                value={api.isRevision ? api.revisionedApiId : api.id}\n                                component={Link}\n                                to={'/apis/' + (api.isRevision ? api.revisionedApiId : api.id) + '/' + lastIndex}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.components.APIDetailsTopMenu.current.api'\n                                    defaultMessage='Current API'\n                                />\n                            </MenuItem>\n                        ) : (\n                            <MenuItem\n                                value={api.isRevision ? api.revisionedApiProductId : api.id}\n                                component={Link}\n                                to={'/api-products/' + (api.isRevision\n                                    ? api.revisionedApiProductId : api.id) + '/' + lastIndex}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.components.APIDetailsTopMenu.current.api'\n                                    defaultMessage='Current API'\n                                />\n                            </MenuItem>\n                        )}\n                        {allRevisions && !isAPIProduct && allRevisions.map((item) => (\n                            <MenuItem value={item.id} component={Link} to={'/apis/' + item.id + '/' + lastIndex}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='center'\n                                >\n                                    <Grid item>\n                                        {item.displayName}\n                                    </Grid>\n                                    {allEnvRevision && allEnvRevision.find((env) => env.id === item.id) && (\n                                        <Grid item>\n                                            <Box ml={2}>\n                                                <Tooltip\n                                                    title={getDeployments(item.id)}\n                                                    placement='bottom'\n                                                >\n                                                    <Grid className={classes.active} />\n                                                </Tooltip>\n                                            </Box>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </MenuItem>\n                        ))}\n                        {allRevisions && isAPIProduct && allRevisions.map((item) => (\n                            <MenuItem\n                                value={item.id}\n                                component={Link}\n                                to={'/api-products/' + item.id + '/' + lastIndex}\n                            >\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='center'\n                                >\n                                    <Grid item>\n                                        {item.displayName}\n                                    </Grid>\n                                    {allEnvRevision && allEnvRevision.find((env) => env.id === item.id) && (\n                                        <Grid item>\n                                            <Box ml={2}>\n                                                <Tooltip\n                                                    title={getDeployments(item.id)}\n                                                    placement='bottom'\n                                                >\n                                                    <Grid className={classes.active} />\n                                                </Tooltip>\n                                            </Box>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </div>\n            )}\n\n            <VerticalDivider height={70} />\n            <GoTo\n                setOpenPageSearch={setOpenPageSearch}\n                openPageSearch={openPageSearch}\n                api={api}\n                isAPIProduct={isAPIProduct}\n            />\n            {(isVisibleInStore) && <VerticalDivider height={70} />}\n            {(isVisibleInStore) && (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={devportalUrl}\n                    className={classes.viewInStoreLauncher}\n                    style={{ minWidth: 90 }}\n                >\n                    <div>\n                        <LaunchIcon />\n                    </div>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                            defaultMessage='View in Dev Portal'\n                        />\n                    </Typography>\n                </a>\n            )}\n            {/* Page error banner */}\n            {/* end of Page error banner */}\n            {isAPIProduct || api.isRevision\n                ? null : <CreateNewVersionButton buttonClass={classes.viewInStoreLauncher} api={api} />}\n            {(isDownloadable) && <VerticalDivider height={70} />}\n            <div className={classes.downloadApi}>\n                {(isDownloadable) && (\n                    <a\n                        onClick={exportAPI}\n                        onKeyDown={null}\n                        className={classes.downloadApiFlex}\n                        id='download-api-btn'\n                    >\n                        <div>\n                            <CloudDownloadRounded />\n                        </div>\n                        <Typography variant='caption' align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDetailsTopMenu.download.api'\n                                defaultMessage='Download API'\n                            />\n                        </Typography>\n                    </a>\n                )}\n            </div>\n            {api.isRevision || isRestricted(['apim:api_create'], api)\n                ? (<div className={classes.revisionWrapper} />)\n                : (<DeleteApiButton buttonClass={classes.viewInStoreLauncher} api={api} isAPIProduct={isAPIProduct} />)}\n        </div>\n    );\n};\n\nAPIDetailsTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    imageUpdate: PropTypes.number.isRequired,\n};\n\n// export default withStyles(styles, { withTheme: true })(APIDetailsTopMenu);\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIDetailsTopMenu));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint object-shorthand: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\n/* eslint no-unused-expressions: 0 */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport GoToSuggestions from 'AppComponents/Apis/Details/GoTo/Components/GoToSuggestions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: theme.zIndex.goToSearch,\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n        fontSize: '20px',\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n    linkButton: {\n        display: 'grid',\n        alignItems: 'center',\n        flexDirection: 'column',\n        padding: 10,\n        cursor: 'pointer',\n        minWidth: 30,\n    },\n    goToWrapper: {\n        position: 'relative',\n    },\n    downshiftWrapper: {\n        padding: theme.spacing(1),\n        background: theme.palette.background.paper,\n        borderRadius: 10,\n        width: '70vw',\n        marginBottom: '20%',\n        boxShadow: '0px 0px 20px 3px rgb(0 0 0 / 56%)',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        backdropFilter: 'blur(1px)',\n    },\n}));\n\n/**\n * Method to render the input of the user\n * @param {*} inputProps inputProps\n * @returns {*} TextField\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            variant='outlined'\n            autoFocus\n            InputProps={{\n                inputRef: ref,\n                autoFocus: true,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                startAdornment: (\n                    <InputAdornment position='start'>\n                        <SearchIcon color='disabled' fontSize='large' />\n                    </InputAdornment>\n                ),\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.shape({}).isRequired,\n    InputProps: PropTypes.shape({}).isRequired,\n};\n\n/**\n * Method to render the GoTo search feature\n * @param {*} props props param\n * @returns {*} Downshift element\n */\nfunction GoTo(props) {\n    const {\n        isAPIProduct, api, openPageSearch, setOpenPageSearch,\n    } = props;\n    const classes = useStyles();\n    const [showSearch, setShowSearch] = useState(openPageSearch);\n    const intl = useIntl();\n    useEffect(() => {\n        setShowSearch(openPageSearch);\n    }, [openPageSearch]);\n    let isGraphQL = false;\n\n    if (api.type === 'GRAPHQL') {\n        isGraphQL = true;\n    }\n    const toggleSearch = () => {\n        setShowSearch(!showSearch);\n    };\n    const handleClickAway = () => {\n        setShowSearch(false);\n        setOpenPageSearch(false);\n    };\n\n    return (\n        <div className={classes.goToWrapper}>\n            <Button className={classes.linkButton} onClick={toggleSearch}>\n                <Icon>find_in_page</Icon>\n                <Typography variant='caption'>\n                    <FormattedMessage id='Apis.Details.GoTo.GoTo.btn' defaultMessage='Go To' />\n                </Typography>\n            </Button>\n            <Backdrop className={classes.backdrop} open={showSearch} onClick={handleClickAway}>\n                <div onClick={(e) => { e.stopPropagation(); e.preventDefault(); }} className={classes.downshiftWrapper}>\n                    {showSearch && (\n                        <Downshift id='page-search'>\n                            {({\n                                getInputProps,\n                                getItemProps,\n                                getLabelProps,\n                                getMenuProps,\n                                highlightedIndex,\n                                inputValue,\n                                isOpen,\n                                selectedItem,\n                            }) => {\n                                const { onBlur, onFocus, ...inputProps } = getInputProps({\n                                    placeholder: intl.formatMessage({\n                                        id: 'Apis.Details.GoTo.button.placeholder',\n                                        defaultMessage: 'Page Search',\n                                    }),\n                                });\n\n                                return (\n                                    <div className={classes.container}>\n                                        {renderInput({\n                                            fullWidth: true,\n                                            classes,\n                                            InputLabelProps: getLabelProps({ shrink: true }),\n                                            InputProps: { onBlur, onFocus },\n                                            inputProps,\n                                        })}\n\n                                        <div {...getMenuProps()}>\n                                            {isOpen ? (\n                                                <GoToSuggestions\n                                                    inputValue={inputValue}\n                                                    isAPIProduct={isAPIProduct}\n                                                    isGraphQL={isGraphQL}\n                                                    getItemProps={getItemProps}\n                                                    highlightedIndex={highlightedIndex}\n                                                    selectedItem={selectedItem}\n                                                    handleClickAway={handleClickAway}\n                                                    apiId={api.id}\n                                                />\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                );\n                            }}\n                        </Downshift>\n                    )}\n                </div>\n            </Backdrop>\n        </div>\n    );\n}\n\nGoTo.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default GoTo;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport deburr from 'lodash/deburr';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\n\nimport suggestions from 'AppComponents/Apis/Details/GoTo/RouteMappings';\nimport GoToSuggestion from 'AppComponents/Apis/Details/GoTo/Components/GoToSuggestion';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        zIndex: theme.zIndex.goToSearch,\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        left: 0,\n        right: 0,\n        maxHeight: '60vh',\n        overflowY: 'scroll',\n    },\n}));\n\n/**\n * Method to retrieve suggestions\n * @param {*} value Value of suggestion\n * @param {*} isAPIProduct Boolean to check if it is an APIProduct\n * @param {*} param2 showEmpty\n * @returns {*} filter\n */\nfunction getSuggestions(value, isAPIProduct, isGraphQL, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    const newSuggestions = [...suggestions.common];\n\n    if (isAPIProduct) {\n        newSuggestions.push(...suggestions.productOnly);\n    } else if (isGraphQL) {\n        newSuggestions.push(...suggestions.graphqlOnly);\n    } else {\n        newSuggestions.push(...suggestions.apiOnly);\n    }\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : newSuggestions.filter((suggestion) => {\n            const keep = count < 15 && suggestion.label.match(new RegExp(inputValue, 'gi'));\n\n            if (keep) {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\n\nconst GoToSuggestions = (props) => {\n    const {\n        inputValue, isAPIProduct, isGraphQL, getItemProps, highlightedIndex, selectedItem, handleClickAway, apiId,\n    } = props;\n    const classes = useStyles();\n    const currentSuggestions = getSuggestions(inputValue, isAPIProduct, isGraphQL);\n    return (\n        <Paper className={classes.paper} square>\n            {currentSuggestions.length > 0\n                ? currentSuggestions.map((suggestion, index) => (\n                    <GoToSuggestion\n                        suggestion={suggestion}\n                        index={index}\n                        itemProps={getItemProps({ item: suggestion.label })}\n                        highlightedIndex={highlightedIndex}\n                        selectedItem={selectedItem}\n                        handleClickAway={handleClickAway}\n                        apiId={apiId}\n                    />\n                ))\n                : (\n                    <Box\n                        m={3}\n                        color='text.secondary'\n                        fontSize='h5.fontSize'\n                        fontFamily='fontFamily'\n                        display='flex'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.GoTo.Components.GoToSuggestions.no.result'\n                            defaultMessage='There are no results for this query'\n                        />\n                    </Box>\n                )}\n        </Paper>\n    );\n};\n\n\nexport default GoToSuggestions;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst suggestions = {\n    common: [\n        {\n            label: 'comments',\n            route: 'comments',\n        },\n        {\n            label: 'Gateway URLs',\n            route: 'deployments',\n        },\n        {\n            label: 'Overview',\n            route: 'overview',\n        },\n        {\n            label: 'MetaData',\n            route: 'overview',\n        },\n        {\n            label: 'Runtime Configurations',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Transport Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Mutual SSL',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Design Configurations',\n            route: 'configuration',\n        },\n        {\n            label: 'Manage SSL Certificates',\n            route: 'configuration',\n        },\n        {\n            label: 'HTTP HTTPS enable disable',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Application Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable OAuth2',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Basic Auth',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Api Key',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Authorization Headers',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'CORS Configuration',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend Throughput',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Message Mediation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Response',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Request',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Access Control Allow Origins',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Headers',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Credentials',\n            route: 'configuration',\n        },\n        {\n            label: 'Response caching',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Publisher Access Control',\n            route: 'configuration',\n        },\n        {\n            label: 'Developer Portal Visibility',\n            route: 'configuration',\n        },\n        {\n            label: 'Tags',\n            route: 'configuration',\n        },\n        {\n            label: 'Default Version',\n            route: 'configuration',\n        },\n        {\n            label: 'Image',\n            route: 'configuration',\n        },\n        {\n            label: 'Thumbnail',\n            route: 'configuration',\n        },\n        {\n            label: 'Description',\n            route: 'configuration',\n        },\n        {\n            label: 'Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Add New Documents',\n            route: 'documents',\n        },\n        {\n            label: 'API Help',\n            route: 'documents',\n        },\n        {\n            label: 'Markdown Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Business Information',\n            route: 'business info',\n        },\n        {\n            label: 'Business Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Technical Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Properties',\n            route: 'business info',\n        },\n        {\n            label: 'Subscriptions',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Policies',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Availability',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Revisions',\n            route: 'deployments',\n        },\n        {\n            label: 'VHosts',\n            route: 'deployments',\n        },\n    ],\n    apiOnly: [\n        {\n            label: 'API Gateways',\n            route: 'deployments',\n        },\n        {\n            label: 'Environments',\n            route: 'deployments',\n        },\n        {\n            label: 'Deployments',\n            route: 'deployments',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Mediation Policies',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n        {\n            label: 'Policies',\n            route: 'policies'\n        }\n    ],\n    productOnly: [\n        {\n            label: 'Product only feature',\n            route: 'configuration',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n    ],\n    graphqlOnly: [\n        {\n            label: 'Operations',\n            route: 'operations',\n        },\n        {\n            label: 'Operation Type',\n            route: 'operations',\n        },\n        {\n            label: 'Operations Configuration',\n            route: 'operations',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'operations',\n        },\n        {\n            label: 'Schema Definition',\n            route: 'schema definition',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Environments',\n            route: 'deployments',\n        },\n        {\n            label: 'Deployments',\n            route: 'deployments',\n        },\n        {\n            label: 'API Gateways',\n            route: 'deployments',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n};\nexport default suggestions;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\n\n/**\n * Method to render the suggestions\n * @param {*} suggestionProps suggestionProps\n * @returns {*} ListItem list of suggestions\n */\nfunction RenderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, isAPIProduct, handleClickAway, apiId,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n\n    const route = (isAPIProduct\n        ? (`/api-products/${apiId}/${suggestion.route}`)\n        : (`/apis/${apiId}/${suggestion.route}`));\n    return (\n        <Link\n            component={RouterLink}\n            to={route}\n            underline='none'\n            onClick={handleClickAway}\n        >\n            <ListItem\n                key={suggestion.label}\n                {...itemProps}\n                selected={isHighlighted}\n                button\n                aria-haspopup='true'\n                aria-controls='lock-menu'\n                aria-label='when device is locked'\n            >\n                <ListItemText primary={suggestion.label} secondary={suggestion.route} />\n            </ListItem>\n        </Link>\n    );\n}\n\nRenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({}).isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default RenderSuggestion;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport LibraryAdd from '@material-ui/icons/LibraryAdd';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    createNewVersionWrapper: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    createNewVersion: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        color: theme.custom.createNewVersionButtonColor || 'inherit',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n *\n * Function to create a 'CreateNewVersion' button\n *\n * @param {any} props props\n * @returns {*} React CreateNewVersion function component\n * @constructor\n */\nfunction CreateNewVersionButton(props) {\n    const { api, classes } = props;\n    return (\n        <>\n            {/* allowing create new version based on scopes */}\n            <ScopeValidation resourceMethod={resourceMethod.POST} resourcePath={resourcePath.API_COPY}>\n                <div className={classes.createNewVersionWrapper} id='create-new-version-btn'>\n                    <VerticalDivider height={70} />\n                    <Link\n                        className={classes.createNewVersion}\n                        to={'/apis/' + api.id + '/new_version'}\n                        style={{ minWidth: 95 }}\n                    >\n\n                        <div>\n                            <LibraryAdd />\n                        </div>\n                        <Typography variant='caption'>\n                            <FormattedMessage\n                                id='Apis.Details.components.CreateNewVersionButton.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </ScopeValidation>\n        </>\n    );\n}\n\nCreateNewVersionButton.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(CreateNewVersionButton));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api.js';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIValidation from 'AppData/APIValidation';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n});\n\n/**\n *\n *\n * @class BusinessInformation\n * @extends {React.Component}\n */\nclass BusinessInformation extends React.Component {\n    /**\n     *Creates an instance of BusinessInformation.\n     * @param {*} props\n     * @memberof BusinessInformation\n     */\n    constructor(props) {\n        super(props);\n        const {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        } = this.props.api.businessInformation;\n        this.state = {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        };\n        this.isFormUpdated = false;\n        this.isValidBusinessOwnerEmail = true;\n        this.isValidTechnicalOwnerEmail = true;\n    }\n\n    handleChange = (name) => (event) => {\n        let { value } = event.target;\n        const { checked } = event.target;\n        if (name === 'accessControlRoles' || name === 'visibleRoles') {\n            value = value.split(',');\n        } else if (name === 'isDefaultVersion') {\n            value = value === 'yes';\n        } else if (name === 'responseCaching') {\n            value = checked ? 'Enabled' : 'Disabled';\n        }\n        // Validate whether given email addresses are valid.\n        if (name === 'businessOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidBusinessOwnerEmail = (emailStatus === null || value === '');\n        }\n        if (name === 'technicalOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidTechnicalOwnerEmail = (emailStatus === null || value === '');\n        }\n        this.isFormUpdated = true;\n        this.setState({ [name]: value });\n    };\n\n    isValid = () => {\n        return (this.isValidBusinessOwnerEmail && this.isValidTechnicalOwnerEmail && this.isFormUpdated);\n    }\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof BusinessInformation\n     */\n    handleSubmit(updateAPI) {\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n        const businessInformation = {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        };\n        updateAPI({ businessInformation });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns\n     * @memberof BusinessInformation\n     */\n    render() {\n        const { classes, api, updateAPI } = this.props;\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <Box mb={3}>\n                        <Typography id='itest-api-details-bushiness-info-head' variant='h4' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.BusinessInformation.BusinessInformation.business.info'\n                                defaultMessage='Business Information'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.APIProduct.sub.heading'\n                                        defaultMessage='Business Information of the API Product'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )}\n                    </Box>\n                    <Paper elevation={0}>\n                        <Box px={8} py={5}>\n                            <form noValidate autoComplete='off'>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.business.owner.name'\n                                                }\n                                                defaultMessage='Business Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the business owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    variant='outlined'\n                                    value={businessOwner}\n                                    onChange={this.handleChange('businessOwner')}\n                                    autoFocus\n                                />\n                                <TextField\n                                    error={!this.isValidBusinessOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='Email'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation.'\n                                                    + 'business.owner.email'\n                                                }\n                                                defaultMessage='Business Owner Email'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={this.isValidBusinessOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the business owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={businessOwnerEmail}\n                                    onChange={this.handleChange('businessOwnerEmail')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='TOname'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.technical.owner.name'\n                                                }\n                                                defaultMessage='Technical Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the technical owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwner}\n                                    onChange={this.handleChange('technicalOwner')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    error={!this.isValidTechnicalOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='TOemail'\n                                    label={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email'\n                                            }\n                                            defaultMessage='Technical Owner Email'\n                                        />\n                                    )}\n                                    helperText={this.isValidTechnicalOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the technical owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwnerEmail}\n                                    onChange={this.handleChange('technicalOwnerEmail')}\n                                    variant='outlined'\n                                />\n                            </form>\n                            <div className={classes.buttonWrapper}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='flex-start'\n                                    spacing={1}\n                                    className={classes.buttonSection}\n                                >\n                                    <Grid item>\n                                        <div>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                onClick={() => this.handleSubmit(updateAPI)}\n                                                disabled={\n                                                    isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                                    || !this.isValid() || api.isRevision\n                                                }\n                                                id='business-info-save'\n                                            >\n                                                <FormattedMessage id='save' defaultMessage='Save' />\n                                            </Button>\n                                        </div>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            component={Link}\n                                            to={\n                                                (api.apiType === API.CONSTS.APIProduct ? '/api-products/' : '/apis/')\n                                                + api.id\n                                                + '/overview'\n                                            }\n                                        >\n                                            <FormattedMessage id='cancel' defaultMessage='Cancel' />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Box>\n                    </Paper>\n                </Container>\n            </>\n        );\n    }\n}\n\nBusinessInformation.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        businessInformation: PropTypes.shape({\n            businessOwner: PropTypes.string,\n            businessOwnerEmail: PropTypes.string,\n            technicalOwner: PropTypes.string,\n            technicalOwnerEmail: PropTypes.string,\n            apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n        }).isRequired,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withAPI(withStyles(styles)(BusinessInformation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash.isempty';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Box from '@material-ui/core/Box';\nimport APIContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport EditableRow from './EditableRow';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: theme.spacing(3),\n    },\n    paperRoot: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addProperty: {\n        marginRight: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    marginRight: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        paddingTop: theme.spacing(1),\n    },\n    checkBoxStyles: {\n        whiteSpace: 'nowrap',\n        marginLeft: 10,\n    },\n    tableHead: {\n        fontWeight: 600,\n    },\n    table: {\n        '& th': {\n            fontWeight: 600,\n        },\n    },\n}));\n\n/**\n *\n *\n * @class Properties\n * @extends {React.Component}\n */\nfunction Properties(props) {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     */\n    const { intl } = props;\n    const classes = useStyles();\n    const history = useHistory();\n    const { api, updateAPI } = useContext(APIContext);\n    const additionalPropertiesTemp = cloneDeep(api.additionalProperties);\n\n    if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'github_repo')) {\n        delete additionalPropertiesTemp.github_repo;\n    }\n    if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'slack_url')) {\n        delete additionalPropertiesTemp.slack_url;\n    }\n\n    const [additionalProperties, setAdditionalProperties] = useState(additionalPropertiesTemp);\n    const [showAddProperty, setShowAddProperty] = useState(false);\n    const [propertyKey, setPropertyKey] = useState(null);\n    const [propertyValue, setPropertyValue] = useState(null);\n    const [isUpdating, setUpdating] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [isAdditionalPropertiesStale, setIsAdditionalPropertiesStale] = useState(false);\n    const [isVisibleInStore, setIsVisibleInStore] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    const keywords = ['provider', 'version', 'context', 'status', 'description',\n        'subcontext', 'doc', 'lcstate', 'name', 'tags'];\n\n    const toggleAddProperty = () => {\n        setShowAddProperty(!showAddProperty);\n    };\n    const handleChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'propertyKey') {\n            setPropertyKey(value);\n        } else if (name === 'propertyValue') {\n            setPropertyValue(value);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} itemValue\n     * @returns\n     * @memberof Properties\n     */\n    const validateEmpty = function (itemValue) {\n        if (itemValue === null) {\n            return false;\n        } else if (!isVisibleInStore && itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const isKeyword = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        }\n        return keywords.includes(itemValue.toLowerCase());\n    };\n    const hasWhiteSpace = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        }\n        const whitespaceChars = [' ', '\\t', '\\n'];\n        return Array.from(itemValue).some((char) => whitespaceChars.includes(char));\n    };\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof Properties\n     */\n    const handleSave = () => {\n        setUpdating(true);\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'github_repo')) {\n            additionalProperties.github_repo = api.additionalProperties.github_repo;\n        }\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'slack_url')) {\n            additionalProperties.slack_url = api.additionalProperties.slack_url;\n        }\n        const additionalPropertiesCopyForMap = cloneDeep(additionalProperties);\n        const additionalPropertiesMap = {};\n        additionalPropertiesCopyForMap.map((property) => {\n            additionalPropertiesMap[property.name] = property;\n            return additionalPropertiesMap;\n        });\n        const updatePromise = updateAPI({ additionalProperties, additionalPropertiesMap });\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n\n    const handleSaveAndDeploy = () => {\n        setUpdating(true);\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'github_repo')) {\n            additionalProperties.github_repo = api.additionalProperties.github_repo;\n        }\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'slack_url')) {\n            additionalProperties.slack_url = api.additionalProperties.slack_url;\n        }\n        const additionalPropertiesCopyForMap = cloneDeep(additionalProperties);\n        const additionalPropertiesMap = {};\n        additionalPropertiesCopyForMap.map((property) => {\n            additionalPropertiesMap[property.name] = property;\n            return additionalPropertiesMap;\n        });\n        const updatePromise = updateAPI({ additionalProperties, additionalPropertiesMap });\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            })\n            .finally(() => history.push({\n                pathname: api.isAPIProduct() ? `/api-products/${api.id}/deployments`\n                    : `/apis/${api.id}/deployments`,\n                state: 'deploy',\n            }));\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldKey\n     * @memberof Properties\n     */\n    const handleDelete = (oldKey) => {\n        let additionalPropertiesCopy = cloneDeep(additionalProperties);\n        additionalPropertiesCopy = additionalPropertiesCopy.filter((property) => property.name !== oldKey);\n        setAdditionalProperties(additionalPropertiesCopy);\n\n        if (additionalPropertiesCopy !== additionalProperties) {\n            setIsAdditionalPropertiesStale(true);\n        }\n    };\n    const validateBeforeAdd = (fieldKey, fieldValue, additionalPropertiesCopy, action = 'add', oldKey) => {\n        if (additionalPropertiesCopy != null && action === 'add') {\n            let valid = true;\n            additionalPropertiesCopy.forEach((property) => {\n                if (property.name === fieldKey) {\n                    Alert.warning(intl.formatMessage({\n                        id: `Apis.Details.Properties.Properties.\n                            property.name.exists`,\n                        defaultMessage: 'Property name already exists',\n                    }));\n                    valid = false;\n                }\n            });\n            return valid;\n        } else if (additionalPropertiesCopy != null && action === 'update' && oldKey === fieldKey) {\n            let valid = true;\n            additionalPropertiesCopy.forEach((property) => {\n                if (property.name === fieldKey) {\n                    Alert.warning(intl.formatMessage({\n                        id: `Apis.Details.Properties.Properties.\n                                property.name.exists`,\n                        defaultMessage: 'Property name already exists',\n                    }));\n                    valid = false;\n                }\n            });\n            return valid;\n        } else if (validateEmpty(fieldKey) || validateEmpty(fieldValue)) {\n            Alert.warning(intl.formatMessage({\n                id: `Apis.Details.Properties.Properties.\n                    property.name.empty.error`,\n                defaultMessage: 'Property name/value can not be empty',\n            }));\n            return false;\n        } else if (isKeyword(fieldKey)) {\n            Alert.warning(intl.formatMessage({\n                id:\n                `Apis.Details.Properties.Properties.\n                    property.name.keyword.error`,\n                defaultMessage:\n                'Property name can not be a system reserved keyword',\n            }));\n            return false;\n        } else if (hasWhiteSpace(fieldKey)) {\n            Alert.warning(intl.formatMessage({\n                id:\n                    `Apis.Details.Properties.Properties.\n                    property.name.has.whitespaces`,\n                defaultMessage:\n                    'Property name can not have any whitespaces in it',\n            }));\n            return false;\n        } else {\n            return true;\n        }\n    };\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldRow\n     * @param {*} newRow\n     * @memberof Properties\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const additionalPropertiesCopy = cloneDeep(additionalProperties);\n\n        const { oldKey, oldValue, isDisplayInStore } = oldRow;\n        const { newKey, newValue, display } = newRow;\n        if (oldKey === newKey && oldValue === newValue && isDisplayInStore === display) {\n            Alert.warning(intl.formatMessage({\n                id: `Apis.Details.Properties.Properties.\n                    no.changes.to.save`,\n                defaultMessage: 'No changes to save',\n            }));\n            return false;\n        }\n        if (!validateBeforeAdd(newKey, newValue, additionalPropertiesCopy, 'update')) {\n            return false;\n        }\n\n        const newProperty = {\n            name: newKey,\n            value: newValue,\n            display,\n        };\n        let newPropertiesList = additionalPropertiesCopy.map((property) => {\n            if (property.name === newKey) {\n                return newProperty;\n            }\n            return property;\n        });\n        if (oldKey !== newKey) {\n            newPropertiesList = newPropertiesList.filter((property) => property.name !== oldKey);\n            newPropertiesList = [...newPropertiesList, newProperty];\n        }\n        setAdditionalProperties(newPropertiesList);\n        return true;\n    };\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @memberof Properties\n     */\n    const handleAddToList = () => {\n        const additionalPropertiesCopy = cloneDeep(additionalProperties);\n        if (validateBeforeAdd(propertyKey, propertyValue, additionalPropertiesCopy, 'add')) {\n            const newProperty = {\n                name: propertyKey,\n                value: propertyValue,\n                display: isVisibleInStore,\n            };\n            setAdditionalProperties([...additionalPropertiesCopy, newProperty]);\n            setPropertyKey(null);\n            setPropertyValue(null);\n        }\n    };\n\n    /**\n     *\n     *\n     * @memberof Properties\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    const handleChangeVisibleInStore = (event) => {\n        setIsVisibleInStore(event.target.checked);\n    };\n    /**\n     *\n     *\n     * @param {*} additionalProperties\n     * @param {*} apiAdditionalProperties\n     * @returns\n     * @memberof Properties\n     */\n    const renderAdditionalProperties = () => {\n        const items = additionalProperties.map((property) => {\n            return (\n                <EditableRow\n                    oldKey={property.name}\n                    oldValue={property.value}\n                    isDisplayInStore={property.display}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    apiAdditionalProperties={additionalProperties}\n                    {...props}\n                    setEditing={setEditing}\n                    isRestricted={isRestricted}\n                    api={api}\n                    validateEmpty={validateEmpty}\n                    isKeyword={isKeyword}\n                />\n            );\n        });\n        return items;\n    };\n    const getKeyValue = () => {\n        if (propertyKey === null) {\n            return '';\n        } else {\n            return propertyKey;\n        }\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Properties\n     */\n    return (\n        <>\n            <div className={classes.titleWrapper}>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography\n                            id='itest-api-details-api-products-properties-head'\n                            variant='h4'\n                            component='h2'\n                            align='left'\n                            className={classes.mainTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.product.properties'\n                                defaultMessage='API Product Properties'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography\n                            id='itest-api-details-api-properties-head'\n                            variant='h4'\n                            component='h2'\n                            align='left'\n                            className={classes.mainTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )}\n\n                {(!isEmpty(additionalProperties) || showAddProperty) && (\n                    <Box ml={1}>\n                        <Button\n                            id='add-new-property'\n                            variant='outlined'\n                            color='primary'\n                            size='small'\n                            onClick={toggleAddProperty}\n                            disabled={showAddProperty\n                            || isRestricted(['apim:api_create', 'apim:api_publish'], api) || api.isRevision}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.add.new.property'\n                                defaultMessage='Add New Property'\n                            />\n                        </Button>\n                    </Box>\n                )}\n            </div>\n            <Typography variant='caption' component='div' className={classes.helpText}>\n                <FormattedMessage\n                    id='Apis.Details.Properties.Properties.help.main'\n                    defaultMessage={`Usually, APIs have a pre-defined set of properties such as \n                        the name, version, context, etc. API Properties allows you to \n                         add specific custom properties to the API.`}\n                />\n            </Typography>\n            {isEmpty(additionalProperties) && !isAdditionalPropertiesStale && !showAddProperty && (\n                <div className={classes.messageBox}>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.add.new.property.message.title'\n                                    defaultMessage='Create Additional Properties'\n                                />\n                            </Typography>\n                            {api.apiType === API.CONSTS.APIProduct\n                                ? (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.APIProduct.\n                                            add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )\n                                : (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )}\n                            <div className={classes.actions}>\n                                <Button\n                                    id='add-new-property'\n                                    variant='outlined'\n                                    color='primary'\n                                    onClick={toggleAddProperty}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                        || api.isRevision}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.add.new.property'\n                                        defaultMessage='Add New Property'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            )}\n            {(!isEmpty(additionalProperties) || showAddProperty || isAdditionalPropertiesStale) && (\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperRoot}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.table'\n                                                defaultMessage='Property Name'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.value'\n                                                defaultMessage='Property Value'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.visibility'\n                                                defaultMessage='Visibility'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography variant='srOnly'>\n                                                Action\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {showAddProperty && (\n                                        <>\n                                            <TableRow>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='property-name'\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.Properties.\n                                                                show.add.property.property.name`,\n                                                            defaultMessage: 'Name',\n                                                        })}\n                                                        margin='dense'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={getKeyValue()}\n                                                        onChange={handleChange('propertyKey')}\n                                                        onKeyDown={handleKeyDown('propertyKey')}\n                                                        helperText={validateEmpty(propertyKey) ? ''\n                                                            : iff((isKeyword(propertyKey)\n                                                                || hasWhiteSpace(propertyKey)), intl.formatMessage({\n                                                                id: `Apis.Details.Properties.Properties.\n                                                                    show.add.property.invalid.error`,\n                                                                defaultMessage: 'Invalid property name',\n                                                            }), '')}\n                                                        error={validateEmpty(propertyKey) || isKeyword(propertyKey)\n                                                        || hasWhiteSpace(propertyKey)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='property-value'\n                                                        label={intl.formatMessage({\n                                                            id: 'Apis.Details.Properties.Properties.property.value',\n                                                            defaultMessage: 'Value',\n                                                        })}\n                                                        margin='dense'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyValue === null ? '' : propertyValue}\n                                                        onChange={handleChange('propertyValue')}\n                                                        onKeyDown={handleKeyDown('propertyValue')}\n                                                        error={validateEmpty(propertyValue)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormControlLabel\n                                                        control={(\n                                                            <Checkbox\n                                                                checked={isVisibleInStore}\n                                                                onChange={handleChangeVisibleInStore}\n                                                                name='checkedB'\n                                                                color='primary'\n                                                            />\n                                                        )}\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.\n                                                            Properties.editable.show.in.devporal`,\n                                                            defaultMessage: 'Show in devportal',\n                                                        })}\n                                                        className={classes.checkBoxStyles}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align='right'>\n                                                    <Box display='flex'>\n                                                        <Button\n                                                            id='properties-add-btn'\n                                                            variant='contained'\n                                                            color='primary'\n                                                            disabled={\n                                                                !propertyValue\n                                                            || !propertyKey\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                            }\n                                                            onClick={handleAddToList}\n                                                            className={classes.marginRight}\n                                                        >\n                                                            <Typography variant='caption' component='div'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Properties.Properties.add'\n                                                                    defaultMessage='Add'\n                                                                />\n                                                            </Typography>\n                                                        </Button>\n\n                                                        <Button onClick={toggleAddProperty}>\n                                                            <Typography variant='caption' component='div'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Properties.Properties.cancel'\n                                                                    defaultMessage='Cancel'\n                                                                />\n                                                            </Typography>\n                                                        </Button>\n                                                    </Box>\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell colSpan={4}>\n                                                    <Typography variant='caption'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.help'\n                                                            defaultMessage={\n                                                                'Property name should be unique, should not contain '\n                                                                + 'spaces, cannot be more than 80 chars '\n                                                                + 'and cannot be any of the following '\n                                                                + 'reserved keywords : '\n                                                                + 'provider, version, context, status, description, '\n                                                                + 'subcontext, doc, lcState, name, tags.'\n                                                            }\n                                                        />\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </>\n                                    )}\n                                    {renderAdditionalProperties()}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item id='save-api-properties'>\n                                    <div>\n                                        {editing || api.isRevision || (isEmpty(additionalProperties)\n                                            && !isAdditionalPropertiesStale)\n                                            || isRestricted(['apim:api_create', 'apim:api_publish'], api) ? (\n                                                <Button\n                                                    id='save-api-properties'\n                                                    data-testid='save-api-properties-btn'\n                                                    disabled\n                                                    type='submit'\n                                                    variant='contained'\n                                                    color='primary'\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Configuration.Configuration.save'\n                                                        defaultMessage='Save'\n                                                    />\n                                                </Button>\n                                            ) : (\n                                                <CustomSplitButton\n                                                    advertiseInfo={api.advertiseInfo}\n                                                    api={api}\n                                                    handleSave={handleSave}\n                                                    handleSaveAndDeploy={handleSaveAndDeploy}\n                                                    isUpdating={isUpdating}\n                                                />\n                                            )}\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/overview'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Grid>\n                                {isRestricted(['apim:api_create', 'apim:api_publish'], api) && (\n                                    <Grid item xs={12}>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.update.not.allowed'\n                                                defaultMessage='*You are not authorized to update properties of\n                                                    the API due to insufficient permissions'\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n}\n\nProperties.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\nexport default withAPI(injectIntl(Properties));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n    checkBoxStyles: {\n        whiteSpace: 'nowrap',\n        marginLeft: 0,\n        paddingLeft: 0,\n    },\n    colorPrimary: {\n        marginLeft: 0,\n        paddingLeft: 0,\n    },\n    cancelButton: {\n        marginLeft: 4,\n    },\n}));\n\n/**\n *\n * @param {*} props properties\n */\nfunction EditableRow(props) {\n    const {\n        oldKey, oldValue, handleUpdateList, handleDelete, intl, setEditing, isRestricted, api,\n        isDisplayInStore, isKeyword, validateEmpty,\n    } = props;\n    const [newKey, setKey] = useState(oldKey);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n    const [isVisibleInStore, setIsVisibleInStore] = useState(isDisplayInStore);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    const resetText = () => {\n        setIsVisibleInStore(isDisplayInStore);\n        setKey(oldKey);\n        setValue(oldValue);\n    };\n    useEffect(() => {\n        resetText();\n    }, [oldKey, oldValue]);\n\n    const updateEditMode = () => {\n        setEditMode(!editMode);\n        setEditing(true);\n        resetText();\n    };\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setKey(value);\n    };\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n    const saveRow = () => {\n        const oldRow = { oldKey, oldValue, isDisplayInStore };\n        const newRow = { newKey, newValue, display: isVisibleInStore };\n        if (handleUpdateList(oldRow, newRow)) {\n            setEditMode(false);\n            setEditing(false);\n        }\n    };\n    const deleteRow = () => {\n        handleDelete(oldKey);\n    };\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n    const handleChangeVisibleInStore = (event) => {\n        setIsVisibleInStore(event.target.checked);\n    };\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='property-name-edit'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='dense'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newKey}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        helperText={validateEmpty(newKey) ? ''\n                            : iff(isKeyword(newKey), intl.formatMessage({\n                                id: `Apis.Details.Properties.Properties.\n                                show.add.property.invalid.error`,\n                                defaultMessage: 'Invalid property name',\n                            }), '')}\n                        error={validateEmpty(newKey) || isKeyword(newKey)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>\n                    {oldKey}\n                </TableCell>\n            )}\n            {editMode ? (\n                <>\n                    <TableCell>\n                        <TextField\n                            fullWidth\n                            required\n                            id='property-value-edit'\n                            label={intl.formatMessage({\n                                id: 'Apis.Details.Properties.Properties.editable.row.edit.mode.property.value',\n                                defaultMessage: 'Property Value',\n                            })}\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.addProperty}\n                            value={newValue}\n                            onChange={handleValueChange}\n                            onKeyDown={handleKeyDown}\n                            error={validateEmpty(newValue)}\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    checked={isVisibleInStore}\n                                    onChange={handleChangeVisibleInStore}\n                                    name='checkedB'\n                                    color='primary'\n                                />\n                            )}\n                            label={intl.formatMessage({\n                                id: 'Apis.Details.Properties.Properties.editable.show.in.devporal',\n                                defaultMessage: 'Show in devportal',\n                            })}\n                            classes={{ root: classes.checkBoxStyles, colorPrimary: classes.colorPrimary }}\n                        />\n                    </TableCell>\n                </>\n            ) : (\n                <>\n                    <TableCell>\n                        <Box display='inline-block' minWidth={150}>\n                            {oldValue}\n                        </Box>\n                    </TableCell>\n                    <TableCell>\n                        {isVisibleInStore && (\n                            <Box display='flex' alignItems='center'>\n                                <VisibilityIcon />\n                                <Box ml={1} display='inline-block'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.editable.visible.in.store'\n                                        defaultMessage='Visible in devportal'\n                                    />\n                                </Box>\n                            </Box>\n                        )}\n                    </TableCell>\n                </>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <Button\n                            color='primary'\n                            onClick={saveRow}\n                            onKeyDown={() => { }}\n                            variant='contained'\n                            aria-label={'Update ' + oldKey}\n                        >\n                            <Typography variant='caption' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.editable.update'\n                                    defaultMessage='Update'\n                                />\n                            </Typography>\n                        </Button>\n                        <Button onClick={updateEditMode} className={classes.cancelButton}>\n                            <Typography variant='caption' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.editable.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Typography>\n                        </Button>\n\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label={'Edit ' + oldKey}\n                        onClick={updateEditMode}\n                        onKeyDown={() => { }}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label={'Remove ' + oldKey}\n                    onClick={deleteRow}\n                    onKeyDown={() => { }}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\nEditableRow.propTypes = {\n    oldKey: PropTypes.shape({}).isRequired,\n    oldValue: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    handleDelete: PropTypes.shape({}).isRequired,\n    apiAdditionalProperties: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    setEditing: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableRow);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport BusinessPlans from './BusinessPlans';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n        paddingBottom: '10px',\n    },\n    grid: {\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n        minWidth: '50%',\n    },\n    button: {\n        margin: theme.spacing(),\n    },\n});\n\n/**\n *\n *\n * @class Monetization\n * @extends {Component}\n */\nclass Monetization extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monetizationAttributes: [],\n            monStatus: null,\n            property: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMonetizationData();\n    }\n\n    getMonetizationData() {\n        const { api } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            apiProduct.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            apiProduct.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        } else {\n            api.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            api.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ monStatus: event.target.checked });\n    };\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState((oldState) => {\n            const { property } = oldState;\n            property[name] = value;\n            return { property };\n        });\n    };\n\n    /**\n     * Handles the submit action for configuring monetization\n     */\n    handleSubmit() {\n        const { api, intl } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promisedMonetization = apiProduct.configureMonetizationToApiProduct(api.id, body);\n            promisedMonetization.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        } else {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const promisedMonetizationConf = api.configureMonetizationToApi(this.props.api.id, body);\n            promisedMonetizationConf.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        }\n    }\n\n    render() {\n        const { api, classes } = this.props;\n        const { monetizationAttributes, monStatus } = this.state;\n        if (api && isRestricted(['apim:api_publish'], api)) {\n            return (\n                <Grid\n                    container\n                    direction='row'\n                    alignItems='center'\n                    spacing={4}\n                    style={{ marginTop: 20 }}\n                >\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.update.not.allowed'\n                                defaultMessage={'* You are not authorized to update API monetization'\n                                    + ' due to insufficient permissions'}\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!monetizationAttributes || monStatus === null) {\n            return <Progress />;\n        }\n        return (\n            <form method='post' onSubmit={this.handleSubmit}>\n                <Grid container xs={6} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography id='itest-api-details-api-monetization-head' variant='h4' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.monetization'\n                                defaultMessage='Monetization'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_publish'], api)}\n                                    id='monStatus'\n                                    name='monStatus'\n                                    checked={monStatus}\n                                    onChange={this.handleChange}\n                                    value={monStatus}\n                                    color='primary'\n                                />\n                            )}\n                            label='Enable Monetization'\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <Typography className={classes.heading} variant='h6' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.Index.monetization.properties'\n                                        defaultMessage='Monetization Properties'\n                                    />\n                                </Typography>\n                                {\n                                    (monetizationAttributes.length > 0) ? (\n                                        (monetizationAttributes.map((monetizationAttribute, i) => (\n                                            <TextField\n                                                disabled={!monStatus || isRestricted(['apim:api_publish'], api)}\n                                                fullWidth\n                                                id={'attribute' + i}\n                                                label={monetizationAttribute.displayName}\n                                                placeholder={monetizationAttribute.displayName}\n                                                name={monetizationAttribute.name}\n                                                type='text'\n                                                margin='normal'\n                                                variant='outlined'\n                                                required={monetizationAttribute.required}\n                                                onChange={this.handleInputChange}\n                                                autoFocus\n                                            />\n                                        )))\n                                    ) : (\n                                        <Typography>\n                                            <FormattedMessage\n                                                id={'Apis.Details.Monetization.Index.there.are.no'\n                                                   + ' .monetization.properties.configured'}\n                                                defaultMessage='There are no monetization properties configured'\n                                            />\n                                        </Typography>\n                                    )\n                                }\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <BusinessPlans api={api} monStatus={monStatus} />\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.handleSubmit}\n                            color='primary'\n                            variant='contained'\n                            className={classes.button}\n                            disabled={api.isRevision}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Button\n                            component={Link}\n                            to={'/apis/' + api.id + '/overview'}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nMonetization.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Monetization)));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport Banner from 'AppComponents/Shared/Banner';\nimport { Progress } from 'AppComponents/Shared';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        paddingBottom: '10px',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    rightDataColumn: {\n        display: 'flex',\n        flex: 1,\n    },\n    grid: {\n        marginTop: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n    },\n    box: {\n        display: 'block',\n    },\n    tableCel: {\n        width: 50,\n    },\n    table: {\n        width: '100%',\n        border: 'solid 1px #ccc',\n    },\n    tableHeadCell: {\n        color: 'black',\n        background: theme.palette.grey[200],\n    },\n    stateWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    tableHeadTitle: {\n        flex: 1,\n        fontWeight: 'bold',\n    },\n});\n\n/**\n *\n *\n * @class BusinessPlans\n * @extends {Component}\n */\nclass BusinessPlans extends Component {\n    /**\n     *Creates an instance of BusinessPlans.\n     * @param {Object} props\n     * @memberof BusinessPlans\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            policies: [],\n            monetizedPolices: null,\n        };\n        this.monetizationQuery = this.monetizationQuery.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof BusinessPlans\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        api.getSubscriptionPolicies(api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n        api.getMonetization(api.id).then((status) => {\n            this.setState({ monetizedPolices: status.properties });\n        });\n    }\n\n    monetizationQuery(policyName) {\n        const { monetizedPolices } = this.state;\n        return policyName in monetizedPolices;\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} Policies / Business plans list\n     * @memberof BusinessPlans\n     */\n    render() {\n        const { policies, monetizedPolices } = this.state;\n        const { classes } = this.props;\n        if (monetizedPolices === null) {\n            return <Progress />;\n        }\n        const policiesList = policies.map((policy) => (\n            <Grid item xs={12}>\n                <Table className={classes.table}>\n                    <TableRow>\n                        <TableCell variant='head' colSpan={2} className={classes.tableHeadCell}>\n                            <Box display='flex'>\n                                <Typography component='div' className={classes.tableHeadTitle} variant='subtitle1'>\n                                    {policy.name}\n                                </Typography>\n                                {\n                                    this.monetizationQuery(policy.name) ? (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CheckIcon color='primary' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.monetized'\n                                                    defaultMessage='Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    ) : (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CloseIcon color='error' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.not.monetized'\n                                                    defaultMessage='Not Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    )\n                                }\n                            </Box>\n                        </TableCell>\n                    </TableRow>\n                    {Object.keys(policy.monetizationAttributes).map((key) => {\n                        if (policy.monetizationAttributes[key] !== null) {\n                            return (\n                                <TableRow>\n                                    <TableCell className={classes.tableCel} align='left'>\n                                        <Typography component='p' variant='subtitle2'>\n                                            {key}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {policy.monetizationAttributes[key]}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        } else {\n                            return false;\n                        }\n                    })}\n\n                </Table>\n            </Grid>\n        ));\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <Typography variant='h6' component='h3'>\n                        <FormattedMessage\n                            id='Apis.Details.Monetization.BusinessPlans.commercial.policies'\n                            defaultMessage='Commercial Policies'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container direction='row' spacing={3}>\n                        {policiesList}\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        (policies.length > 0) ? (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='Click Save to monetize all unmonetized policies'\n                            />\n                        ) : (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='No commercial policies to monetize'\n                            />\n                        )\n                    }\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nBusinessPlans.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BusinessPlans);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: theme.custom.contentAreaWidth,\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    viewInExStoreLink: {\n        color: theme.palette.common.black,\n        textDecoration: 'underline',\n    },\n}));\n\n/**\n * Renders an External Store list\n * @class ExternalStores\n * @extends {React.Component}\n */\nexport default function ExternalStores() {\n    const { api } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [allExternalStores, setAllExternalStores] = useState([]);\n    const [publishedExternalStores, setPublishedExternalStores] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    if (!settings.externalStoresEnabled) {\n        const resourceNotFoundMessageText = defineMessages({\n            titleMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.title',\n                defaultMessage: 'External Developert Portals not found for the API : {apiUUID}',\n            },\n            bodyMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.body',\n                defaultMessage: 'No External Developer Portals configured for the current tenant',\n            },\n        });\n        const resourceNotFountMessage = {\n            title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                apiUUID: `${api.id}`,\n            }),\n            body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage),\n        };\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n\n    /**\n     * Gets published external stores\n     */\n    function getPublishedExternalStores() {\n        API.getPublishedExternalStores(api.id)\n            .then((response) => {\n                const publishedStoreIds = response.body.list.map((store) => store.id);\n                setPublishedExternalStores(publishedStoreIds);\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.getting.published.external.stores',\n                    defaultMessage: 'Error while getting published external developer portals!! {reason}',\n                }, { reason }));\n            });\n    }\n\n    useEffect(() => {\n        API.getAllExternalStores().then((response) => {\n            setAllExternalStores([...response.body.list]);\n        });\n        getPublishedExternalStores();\n    }, []);\n\n    /**\n     * Handle publish to external store button action\n     */\n    function updateStores() {\n        setUpdating(true);\n        API.publishAPIToExternalStores(api.id, publishedExternalStores)\n            .then((response) => {\n                const successfulStores = response.body.list.map((store) => store.id);\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.successfully.published.to.external.stores',\n                    defaultMessage: 'Successfully Published to external developer portals: {successfulStores}',\n                }, { successfulStores }));\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.while.updating.external.stores',\n                    defaultMessage: 'Error while updating external developer portals!! {reason}',\n                }, { reason }));\n            })\n            .finally(() => {\n                setUpdating(false);\n                getPublishedExternalStores();\n            });\n    }\n\n    return (\n        <div>\n            <div>\n                <Typography variant='h4' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.ExternalStores.ExternalStores.external-stores'\n                        defaultMessage='External Developer Portals'\n                    />\n                </Typography>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.name'\n                                            defaultMessage='Name'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.type'\n                                            defaultMessage='Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.endpoint'\n                                            defaultMessage='Endpoint'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allExternalStores.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            data-testid={'portal-checkbox-' + row.id}\n                                            checked={publishedExternalStores.includes(row.id)}\n                                            disabled={api.lifeCycleStatus !== 'PUBLISHED'\n                                                || isRestricted(['apim:api_publish'], api)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        if (!publishedExternalStores.includes(name)) {\n                                                            setPublishedExternalStores([\n                                                                ...publishedExternalStores, name]);\n                                                        }\n                                                    } else {\n                                                        setPublishedExternalStores(publishedExternalStores\n                                                            .filter((store) => store !== name));\n                                                    }\n                                                }\n                                            }\n                                            name={row.id}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row'>\n                                        <Typography>\n                                            {' '}\n                                            {row.displayName}\n                                            {' '}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        {' '}\n                                        <Typography>{row.type}</Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <a\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            href={row.endpoint}\n                                            className={classes.viewInExStoreLink}\n                                        >\n                                            <Typography>\n                                                {row.endpoint}\n                                            </Typography>\n                                        </a>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container>\n                    <Grid\n                        container\n                        direction='row'\n                        alignItems='center'\n                        spacing={4}\n                        style={{ marginTop: 20 }}\n                    >\n                        <Grid item>\n                            <Button\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                disabled={isUpdating || api.lifeCycleStatus !== 'PUBLISHED'\n                                    || isRestricted(['apim:api_publish'], api)}\n                                onClick={updateStores}\n                                id='stores-save-btn'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.ExternalStores.ExternalStores.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ExternalStores.ExternalStores.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {(isRestricted(['apim:api_publish'], api))\n                            && (\n                                <Grid item>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.update.not.allowed'\n                                            defaultMessage={'* You are not authorized to publish the API'\n                                                + ' to external developer portals due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            )}\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormControl from '@material-ui/core/FormControl';\nimport ServiceCatalog from 'AppData/ServiceCatalog';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 20,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormLabel: {\n        transform: 'translate(0, 1.5px) scale(0.75)',\n        transformOrigin: 'top left',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    root: {\n        padding: 20,\n        marginTop: 20,\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n});\n\n/**\n * React component to create a new version of an API\n * @class CreateNewVersion\n * @extends {Component}\n */\nclass CreateNewVersion extends React.Component {\n    /**\n     * Creates an instance of CreateNewVersion.\n     * @param {any} props @inheritDoc\n     * @memberof CreateNewVersion\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDefaultVersion: 'no',\n            serviceVersion: null,\n            versionList: [],\n            valid: {\n                version: {\n                    empty: false,\n                    alreadyExists: false,\n                    hasSpecialChars: false,\n                    MaxLengthExceeds: false,\n                },\n            },\n        };\n    }\n\n    componentDidMount() {\n        const { api } = this.props;\n        if (api.serviceInfo !== null) {\n            const promisedServices = ServiceCatalog.getServiceByName(api.serviceInfo);\n            promisedServices.then((data) => {\n                const array = data.list.map((item) => item.version);\n                this.setState({ versionList: array });\n            }).catch((error) => {\n                console.error(error);\n                Alert.error('Error while loading services version');\n            });\n        }\n    }\n\n    handleDefaultVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            isDefaultVersion: value,\n        });\n    };\n\n    handleServiceVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            serviceVersion: value,\n        });\n    };\n\n    handleVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            newVersion: value,\n            valid: {\n                version: {\n                    empty: !value,\n                    alreadyExists: false,\n                    hasSpecialChars: this.hasSpecialChars(value),\n                    MaxLengthExceeds: this.isMaxLengthExceeds(value),\n                },\n            },\n        });\n    };\n\n    /**\n     * Handles the submit action for new version creation\n     *\n     * @param {API} api current API\n     * @param {string} newVersion new version to create\n     * @param {string} isDefaultVersion specifies whether the new API should be marked as default version ('yes' | 'no')\n     */\n    handleSubmit(api, newVersion, isDefaultVersion, serviceVersion) {\n        if (!newVersion) {\n            this.setState({ valid: { version: { empty: true } } });\n            return;\n        }\n        const isDefaultVersionBool = isDefaultVersion === 'yes';\n        const { intl } = this.props;\n        api.createNewAPIVersion(newVersion, isDefaultVersionBool, serviceVersion)\n            .then((response) => {\n                this.setState({\n                    redirectToReferrer: true,\n                    apiId: response.obj.id,\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.NewVersion.NewVersion.success',\n                    defaultMessage: 'Successfully created new version ',\n                }) + newVersion);\n            })\n            .catch((error) => {\n                if (error.status === 409) {\n                    this.setState({ valid: { version: { alreadyExists: true } } });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.NewVersion.NewVersion.error',\n                        defaultMessage: 'Something went wrong while creating a new version!. Error: ',\n                    }) + error.status);\n                }\n            });\n    }\n\n    /**\n     *\n     * @param {String} value String to be checked for special characters\n     * @returns {Boolean} Has special character or not\n     */\n    hasSpecialChars(value) {\n        if (/^[^~!@#;:%^*()+={}|\\\\<>\"',&/$]+$/.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    isMaxLengthExceeds(value) {\n        if (value.length > 30) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Renders the CreateNewVersion component.\n     * Once new version is created, redirects to the overview page of the new API.\n     * @returns {*} CreateNewVersion component\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            isDefaultVersion, newVersion, redirectToReferrer, apiId, valid, serviceVersion, versionList,\n        } = this.state;\n        if (redirectToReferrer) {\n            return <Redirect to={'/apis/' + apiId + '/overview'} />;\n        }\n\n        let helperText = '';\n        if (valid.version.empty) {\n            helperText = 'This field cannot be empty';\n        } else if (valid.version.alreadyExists) {\n            helperText = 'An API with version \"' + newVersion + '\" already exists.';\n        } else if (valid.version.hasSpecialChars) {\n            helperText = 'API Version should not contain special characters';\n        } else if (valid.version.MaxLengthExceeds) {\n            helperText = 'API version exceeds maximum length of 30 characters';\n        }\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewVersion.NewVersion.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </div>\n                    <Grid container spacing={7}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.root} elevation={0}>\n                                <FormControl margin='normal' className={classes.FormControlOdd}>\n                                    <TextField\n                                        fullWidth\n                                        id='newVersion'\n                                        error={\n                                            valid.version.empty\n                                            || valid.version.alreadyExists\n                                            || valid.version.hasSpecialChars\n                                            || valid.version.MaxLengthExceeds\n                                        }\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.NewVersion.NewVersion.new.version'\n                                                defaultMessage='New Version'\n                                            />\n                                        )}\n                                        helperText={\n                                            helperText\n                                        }\n                                        type='text'\n                                        name='newVersion'\n                                        placeholder='Eg: 2.0.0'\n                                        value={newVersion}\n                                        variant='outlined'\n                                        onChange={this.handleVersionChange()}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                {api.serviceInfo && (\n                                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                                        <TextField\n                                            id='version-selector'\n                                            select\n                                            label={(\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewVersion.NewVersion.service.version'\n                                                    defaultMessage='Service Version'\n                                                />\n                                            )}\n                                            name='selectVersion'\n                                            onChange={this.handleServiceVersionChange()}\n                                            margin='dense'\n                                            variant='outlined'\n                                        >\n                                            {versionList && versionList.map((item) => (\n                                                <MenuItem value={item}>\n                                                    {item}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </FormControl>\n                                )}\n                                <FormControl margin='normal' className={classes.FormControl}>\n                                    <FormLabel className={classes.FormLabel} component='legend'>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewVersion.NewVersion.default'\n                                            defaultMessage='Make this the default version'\n                                        />\n                                        <Tooltip\n                                            placement='top'\n                                            classes={{\n                                                tooltip: classes.htmlTooltip,\n                                            }}\n                                            title={(\n                                                <>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.tooltip'\n                                                        defaultMessage={\n                                                            'Indicates if this is the default version of the API. '\n                                                            + 'If an API is invoked without specifying a version, '\n                                                            + 'the API Gateway will route the request to the default '\n                                                            + 'version of the API.'\n                                                        }\n                                                    />\n                                                </>\n                                            )}\n                                            interactive\n                                            aria-label='Default Version Selector'\n                                            tabIndex='-1'\n                                        >\n                                            <Button className={classes.helpButton}>\n                                                <HelpOutline className={classes.helpIcon} />\n                                            </Button>\n                                        </Tooltip>\n                                    </FormLabel>\n                                    <RadioGroup\n                                        name='isDefaultVersion'\n                                        id='isDefaultVersion'\n                                        className={classes.group}\n                                        value={isDefaultVersion}\n                                        onChange={this.handleDefaultVersionChange()}\n                                    >\n                                        <FormControlLabel value='yes' control={<Radio color='primary' />} label='Yes' />\n                                        <FormControlLabel value='no' control={<Radio color='primary' />} label='No' />\n                                    </RadioGroup>\n                                </FormControl>\n                                <div className={classes.buttonWrapper}>\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        alignItems='flex-start'\n                                        spacing={1}\n                                        className={classes.buttonSection}\n                                    >\n                                        <Grid item>\n                                            <div>\n                                                <Button\n                                                    variant='contained'\n                                                    color='primary'\n                                                    id='createBtn'\n                                                    onClick={() => this.handleSubmit(api, newVersion, isDefaultVersion,\n                                                        serviceVersion)}\n                                                    disabled={\n                                                        valid.version.empty\n                                                        || valid.version.alreadyExists\n                                                        || valid.version.hasSpecialChars\n                                                        || valid.version.MaxLengthExceeds\n                                                        || api.isRevision\n                                                    }\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.create'\n                                                        defaultMessage='Create'\n                                                    />\n                                                </Button>\n                                            </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Link to={'/apis/' + api.id + '/overview'}>\n                                                <Button id='cancelBtn'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.cancel'\n                                                        defaultMessage='Cancel'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </>\n        );\n    }\n}\n\nCreateNewVersion.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(CreateNewVersion)));\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport 'swagger-ui-react/swagger-ui.css';\n\nimport React, {\n    Suspense,\n    lazy,\n    useCallback,\n    useEffect,\n    useMemo,\n    useReducer,\n    useState,\n} from 'react';\n\nimport Alert from 'AppComponents/Shared/MuiAlert';\nimport Api from 'AppData/api';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CONSTS from 'AppData/Constants';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Utils from 'AppData/Utils';\nimport cloneDeep from 'lodash.clonedeep';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport AdvertiseDetailsPanel from \"AppComponents/Apis/Details/TryOut/AdvertiseDetailsPanel\";\n\n// disabled because webpack magic comment for chunk name require to be in the same line\n// eslint-disable-next-line max-len\nconst SwaggerUI = lazy(() => import('AppComponents/Apis/Details/TryOut/SwaggerUI' /* webpackChunkName: \"TryoutConsoleSwaggerUI\" */));\n\n/**\n * @inheritdoc\n * @param {*} theme theme\n */\nconst useStyles = makeStyles((theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    tryoutHeading: {\n        paddingTop: '20px',\n        fontWeight: 400,\n        display: 'block',\n    },\n    menuItem: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    tokenType: {\n        margin: 'auto',\n        display: 'flex',\n        '& .MuiButton-contained.Mui-disabled span.MuiButton-label': {\n            color: '#6d6d6d',\n        },\n    },\n}));\n\ndayjs.extend(relativeTime);\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n\n/**\n * @class TryOutConsole\n * @extends {React.Component}\n */\nconst TryOutConsole = () => {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const [apiKey, setAPIKey] = useState('');\n    const [deployments, setDeployments] = useState([]);\n    const [selectedDeployment, setSelectedDeployment] = useState();\n    const [oasDefinition, setOasDefinition] = useState();\n    const [advAuthHeader, setAdvAuthHeader] = useState('Authorization');\n    const [advAuthHeaderValue, setAdvAuthHeaderValue] = useState('');\n    const [selectedEndpoint, setSelectedEndpoint] = useState('PRODUCTION');\n    const { data: publisherSettings } = usePublisherSettings();\n\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, {\n        generateKey: { inProgress: false, completed: false, error: false },\n        getOAS: { inProgress: false, completed: false, error: false },\n        getDeployments: { inProgress: false, completed: false, error: false },\n    });\n\n    const generateInternalKey = useCallback(() => {\n        tasksStatusDispatcher({ name: 'generateKey', status: { inProgress: true } });\n        Api.generateInternalKey(api.id).then((keyResponse) => {\n            const { apikey } = keyResponse.body;\n            setAPIKey(apikey);\n            tasksStatusDispatcher({ name: 'generateKey', status: { inProgress: false, completed: true } });\n        }).catch((error) => tasksStatusDispatcher({ name: 'generateKey', status: { error, inProgress: false } }));\n    }, [api.id]);\n    useEffect(generateInternalKey, []); // Auto generate API Key on page load\n    useEffect(() => {\n        tasksStatusDispatcher({ name: 'getDeployments', status: { inProgress: true } });\n        if (publisherSettings) {\n            api.getDeployedRevisions(api.id).then((deploymentsResponse) => {\n                tasksStatusDispatcher({ name: 'getDeployments', status: { inProgress: false, completed: true } });\n                const currentDeployments = deploymentsResponse.body;\n                const currentDeploymentsWithDisplayName = currentDeployments.map((deploy) => {\n                    const gwEnvironment = publisherSettings.environment.find((e) => e.name === deploy.name);\n                    const displayName = (gwEnvironment ? gwEnvironment.displayName : deploy.name);\n                    return { ...deploy, displayName };\n                });\n                setDeployments(currentDeploymentsWithDisplayName);\n                if (currentDeploymentsWithDisplayName && currentDeploymentsWithDisplayName.length > 0) {\n                    const [initialDeploymentSelection] = currentDeploymentsWithDisplayName;\n                    setSelectedDeployment(initialDeploymentSelection);\n                }\n            }).catch(\n                (error) => tasksStatusDispatcher({ name: 'getDeployments', status: { inProgress: false, error } }),\n            );\n            api.getSwagger().then((swaggerResponse) => setOasDefinition(swaggerResponse.body));\n        }\n    }, [publisherSettings]);\n\n    const isAPIProduct = api.type === 'APIPRODUCT';\n    const isAdvertised = api.advertiseInfo && api.advertiseInfo.advertised;\n    const setServersSpec = (spec, serverUrl) => {\n        let schemes;\n        const [protocol, host] = serverUrl.split('://');\n        if (protocol === 'http') {\n            schemes = ['http'];\n        } else if (protocol === 'https') {\n            schemes = ['https'];\n        }\n        return {\n            ...spec,\n            schemes,\n            host,\n        };\n    };\n    const updatedOasDefinition = useMemo(() => {\n        let oasCopy;\n        if (selectedDeployment && oasDefinition) {\n            const selectedGWEnvironment = publisherSettings.environment\n                .find((env) => env.name === selectedDeployment.name);\n            let selectedDeploymentVhost = selectedGWEnvironment.vhosts\n                .find((vhost) => vhost.host === selectedDeployment.vhost);\n            if (!selectedDeploymentVhost) {\n                selectedDeploymentVhost = { ...CONSTS.DEFAULT_VHOST, host: selectedDeployment.vhost };\n            }\n            let pathSeparator = '';\n            if (selectedDeploymentVhost.httpContext && !selectedDeploymentVhost.httpContext.startsWith('/')) {\n                pathSeparator = '/';\n            }\n            oasCopy = cloneDeep(oasDefinition); // If not we are directly mutating the state\n            if (oasDefinition.openapi) { // Assumed as OAS 3.x definition\n                const unfilteredServers = api.transport.map((transport) => {\n                    const transportPort = selectedDeploymentVhost[`${transport}Port`];\n                    if (!transportPort) {\n                        console.error(`Can't find ${transport}Port `\n                            + `in selected deployment ( ${selectedDeploymentVhost.name} )`);\n                    }\n                    if (transportPort !== -1) {\n                        const baseURL = `${transport}://${selectedDeployment.vhost}:${transportPort}`;\n                        let url;\n                        if (isAPIProduct) {\n                            url = `${baseURL}${pathSeparator}`\n                                + `${selectedDeploymentVhost.httpContext}${api.context}`;\n                        } else {\n                            url = `${baseURL}${pathSeparator}`\n                            + `${selectedDeploymentVhost.httpContext}${api.context}/${api.version}`;\n                            if (`${api.context}`.includes('{version}')) {\n                                url = `${baseURL}${pathSeparator}`\n                                        + `${selectedDeploymentVhost.httpContext}${api.context}`\n                                            .replaceAll('{version}', `${api.version}`);\n                            }\n                        }\n                        return {url};\n                    }\n                    return null;\n                });\n                const servers = unfilteredServers.filter(url => url);\n                oasCopy.servers = servers.sort((a, b) => ((a.url > b.url) ? -1 : 1));\n            } else { // Assume the API definition is Swagger 2\n                let transportPort = selectedDeploymentVhost.httpsPort;\n                if (api.transport.length === 1 && !api.transport.includes('https')) {\n                    transportPort = selectedDeploymentVhost.httpPort;\n                } else if (api.transport.length > 1) {\n                    // TODO: fix When both HTTP and HTTPs transports are available can't switch the port between them\n                    // ~tmkb\n                    console.warn('HTTPS transport port will be used for all other transports');\n                }\n                const host = `${selectedDeploymentVhost.host}:${transportPort}`;\n                let basePath;\n                if (isAPIProduct) {\n                    basePath = `${pathSeparator}${selectedDeploymentVhost.httpContext}${api.context}`;\n                } else {\n                    basePath = `${pathSeparator}${selectedDeploymentVhost.\n                        httpContext}${api.context}/${api.version}`;\n                    if (`${api.context}`.includes('{version}')) {\n                        basePath = `${pathSeparator}${selectedDeploymentVhost.httpContext}${api.context}`\n                            .replaceAll('{version}', `${api.version}`);\n                    }\n                }\n                let schemes = api.transport.slice().sort((a, b) => ((a > b) ? -1 : 1));\n                if (selectedDeploymentVhost.httpPort === -1){\n                    schemes = schemes.filter(item => item !== 'http');\n                }\n                if (selectedDeploymentVhost.httpsPort === -1){\n                    schemes = schemes.filter(item => item !== 'https');\n                }\n                oasCopy.schemes = schemes;\n                oasCopy.basePath = basePath;\n                oasCopy.host = host;\n            }\n        } else if (oasDefinition) {\n            // If no deployment just show the OAS definition\n            oasCopy = oasDefinition;\n        }\n        if (oasCopy && isAdvertised) {\n            if (oasCopy.openapi) {\n                // Assume the API definition is an OAS 3.x definition\n                if (selectedEndpoint === 'PRODUCTION') {\n                    oasCopy = {\n                        ...oasCopy,\n                        servers: [\n                            { url: api.advertiseInfo.apiExternalProductionEndpoint },\n                        ]\n                    };\n                } else {\n                    oasCopy = {\n                        ...oasCopy,\n                        servers: [\n                            { url: api.advertiseInfo.apiExternalSandboxEndpoint },\n                        ]\n                    };\n                }\n            } else if (selectedEndpoint === 'PRODUCTION') {\n                // Assume the API definition is Swagger 2\n                oasCopy = setServersSpec(oasCopy, api.advertiseInfo.apiExternalProductionEndpoint);\n            } else {\n                oasCopy = setServersSpec(oasCopy, api.advertiseInfo.apiExternalSandboxEndpoint);\n            }\n        }\n        return oasCopy;\n    }, [selectedEndpoint, selectedDeployment, oasDefinition, publisherSettings]);\n\n    /**\n     *\n     * @param {React.SyntheticEventn} event\n     */\n    const deploymentSelectionHandler = (event) => {\n        const selectedGWEnvironment = event.target.value;\n        const currentSelection = deployments.find((deployment) => deployment.name === selectedGWEnvironment);\n        setSelectedDeployment(currentSelection);\n    };\n    const decodedJWT = useMemo(() => Utils.decodeJWT(apiKey), [apiKey]);\n    const isAPIRetired = api.lifeCycleStatus === 'RETIRED';\n\n    const accessTokenProvider = () => {\n        if (isAdvertised) {\n            return advAuthHeaderValue;\n        }\n        return apiKey;\n    };\n\n    const getAuthorizationHeader = () => {\n        if (isAdvertised) {\n            return advAuthHeader;\n        }\n        return 'Internal-Key';\n    };\n\n    return (\n        <>\n            <Typography id='itest-api-details-try-out-head' variant='h4' component='h2'>\n                <FormattedMessage id='Apis.Details.ApiConsole.ApiConsole.title' defaultMessage='Try Out' />\n            </Typography>\n            <Paper elevation={0}>\n                {(!api.advertiseInfo || !api.advertiseInfo.advertised) ? (\n                    <>\n                        <Box display='flex' justifyContent='center'>\n                            <Grid xs={11} md={6} item>\n                                <Typography variant='h5' component='h3' color='textPrimary'>\n                                    <FormattedMessage\n                                        id='api.console.security.heading'\n                                        defaultMessage='Security'\n                                    />\n                                </Typography>\n                                <TextField\n                                    fullWidth\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.TryOutConsole.token.label'\n                                            defaultMessage='Internal API Key'\n                                        />\n                                    )}\n                                    type='password'\n                                    value={apiKey}\n                                    helperText={decodedJWT ? (\n                                        <Box color='success.main'>\n                                            {`Expires ${dayjs.unix(decodedJWT.payload.exp).fromNow()}`}\n                                        </Box>\n                                    ) : 'Generate or provide an internal API Key'}\n                                    margin='normal'\n                                    variant='outlined'\n                                    name='internal'\n                                    multiline\n                                    rows={4}\n                                    onChange={(e) => setAPIKey(e.target.value)}\n                                    disabled={isAPIRetired}\n                                />\n                                <Button\n                                    onClick={generateInternalKey}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={tasksStatus.generateKey.inProgress || isAPIRetired\n                                    || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.ApiConsole.generate.test.key'\n                                        defaultMessage='Generate Key'\n                                    />\n                                </Button>\n                                {tasksStatus.generateKey.inProgress\n                                && (\n                                    <Box\n                                        display='inline'\n                                        position='absolute'\n                                        mt={1}\n                                        ml={-8}\n                                    >\n                                        <CircularProgress size={24} />\n                                    </Box>\n                                )}\n                            </Grid>\n                        </Box>\n                        <Box my={3} display='flex' justifyContent='center'>\n                            <Grid xs={11} md={6} item>\n                                {(tasksStatus.getDeployments.completed && !deployments.length && !isAPIRetired) && (\n                                    <Alert variant='outlined' severity='error'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.deployments.no'\n                                            defaultMessage={'{artifactType} is not deployed yet! Please deploy '\n                                            + 'the {artifactType} before trying out'}\n                                            values={{ artifactType: api.isRevision ? 'Revision' : 'API' }}\n                                        />\n                                        <Link to={'/apis/' + api.id + '/deployments'}>\n                                            <LaunchIcon\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Alert>\n                                )}\n                                {isAPIRetired && (\n                                    <Alert variant='outlined' severity='error'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.deployments.isAPIRetired'\n                                            defaultMessage='Can not Try Out retired APIs!'\n                                        />\n                                    </Alert>\n                                )}\n                                {((deployments && deployments.length > 0))\n                                && (\n                                    <>\n                                        <Typography\n                                            variant='h5'\n                                            component='h3'\n                                            color='textPrimary'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.deployments.api.gateways'\n                                                defaultMessage='API Gateways'\n                                            />\n                                        </Typography>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            label={(\n                                                <FormattedMessage\n                                                    defaultMessage='Environment'\n                                                    id='Apis.Details.ApiConsole.environment'\n                                                />\n                                            )}\n                                            value={(selectedDeployment && selectedDeployment.name) || ''}\n                                            name='selectedEnvironment'\n                                            onChange={deploymentSelectionHandler}\n                                            margin='normal'\n                                            variant='outlined'\n                                            SelectProps={{\n                                                MenuProps: {\n                                                    anchorOrigin: {\n                                                        vertical: 'bottom',\n                                                        horizontal: 'left',\n                                                    },\n                                                    getContentAnchorEl: null,\n                                                },\n                                            }}\n                                        >\n                                            {deployments.map((deployment) => (\n                                                <MenuItem\n                                                    value={deployment.name}\n                                                    key={deployment.name}\n                                                >\n                                                    {deployment.displayName}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </>\n                                )}\n                            </Grid>\n                        </Box>\n                    </>\n                ) : (\n                    <AdvertiseDetailsPanel\n                        classes={classes}\n                        advAuthHeader={advAuthHeader}\n                        setAdvAuthHeader={setAdvAuthHeader}\n                        advAuthHeaderValue={advAuthHeaderValue}\n                        setAdvAuthHeaderValue={setAdvAuthHeaderValue}\n                        selectedEndpoint={selectedEndpoint}\n                        setSelectedEndpoint={setSelectedEndpoint}\n                        advertiseInfo={api.advertiseInfo}\n                    />\n                )}\n                {updatedOasDefinition ? (\n                    <Suspense\n                        fallback={(\n                            <CircularProgress />\n                        )}\n                    >\n                        <SwaggerUI\n                            api={api}\n                            accessTokenProvider={accessTokenProvider}\n                            spec={updatedOasDefinition}\n                            authorizationHeader={getAuthorizationHeader()}\n                        />\n                    </Suspense>\n                ) : <CircularProgress />}\n            </Paper>\n        </>\n    );\n};\nTryOutConsole.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n        titleSub: PropTypes.string.isRequired,\n        grid: PropTypes.string.isRequired,\n        userNotificationPaper: PropTypes.string.isRequired,\n        buttonIcon: PropTypes.string.isRequired,\n        lcState: PropTypes.shape({}).isRequired,\n        theme: PropTypes.shape({}).isRequired,\n        intl: PropTypes.shape({\n            formatMessage: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(makeStyles)(TryOutConsole);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst AdvertiseDetailsPanel = (props) => {\n    const {\n        classes, advAuthHeader, setAdvAuthHeader, advAuthHeaderValue, setAdvAuthHeaderValue, selectedEndpoint,\n        setSelectedEndpoint, advertiseInfo,\n    } = props;\n\n    return (\n        <>\n            <Box display='block' justifyContent='center'>\n                <Grid x={12} md={6} className={classes.centerItems}>\n                    <Typography\n                        variant='h6'\n                        component='label'\n                        id='key-type'\n                        color='textSecondary'\n                        className={classes.tryoutHeading}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.ApiConsole.authentication.heading'\n                            defaultMessage='Authentication'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2} x={8} md={6} direction='row' className={classes.tokenType}>\n                    <Grid xs={6} md={4} style={{ paddingLeft: 0 }} item>\n                        <TextField\n                            margin='normal'\n                            variant='outlined'\n                            id='advAuthHeader'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.ApiConsole.adv.auth.header'\n                                    defaultMessage='Authorization Header'\n                                />\n                            )}\n                            name='advAuthHeader'\n                            onChange={(event) => { setAdvAuthHeader(event.target.value); }}\n                            value={advAuthHeader || ''}\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid xs={6} md={8} style={{ paddingRight: 0 }} item>\n                        <TextField\n                            margin='normal'\n                            variant='outlined'\n                            id='advAuthHeaderValue'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.ApiConsole.adv.auth.header.value'\n                                    defaultMessage='Authorization Header Value'\n                                />\n                            )}\n                            name='advAuthHeaderValue'\n                            onChange={(event) => { setAdvAuthHeaderValue(event.target.value); }}\n                            value={advAuthHeaderValue || ''}\n                            fullWidth\n                        />\n                    </Grid>\n                </Grid>\n            </Box>\n            <Box display='flex' justifyContent='center'>\n                <Grid x={12} md={6} className={classes.centerItems}>\n                    <Typography\n                        variant='h6'\n                        component='label'\n                        id='key-type'\n                        color='textSecondary'\n                        className={classes.tryoutHeading}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.ApiConsole.enpoint.heading'\n                            defaultMessage='API Endpoint'\n                        />\n                    </Typography>\n                    <TextField\n                        fullWidth\n                        select\n                        id='selectedEndpoint'\n                        label={(\n                            <FormattedMessage\n                                defaultMessage='Endpoint type'\n                                id='Apis.Details.ApiConsole.endpoint'\n                            />\n                        )}\n                        value={selectedEndpoint}\n                        name='selectedEndpoint'\n                        onChange={(event) => { setSelectedEndpoint(event.target.value); }}\n                        helperText={(\n                            <FormattedMessage\n                                defaultMessage='Please select an endpoint type'\n                                id='Apis.Details.ApiConsole.endpoint.help'\n                            />\n                        )}\n                        margin='normal'\n                        variant='outlined'\n                    >\n                        {advertiseInfo.apiExternalProductionEndpoint && (\n                            <MenuItem\n                                value='PRODUCTION'\n                                className={classes.menuItem}\n                            >\n                                Production\n                            </MenuItem>\n                        )}\n                        {advertiseInfo.apiExternalSandboxEndpoint && (\n                            <MenuItem\n                                value='SANDBOX'\n                                className={classes.menuItem}\n                            >\n                                Sandbox\n                            </MenuItem>\n                        )}\n                    </TextField>\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nexport default AdvertiseDetailsPanel;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, FC, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Typography,\n    Button,\n    TextField,\n    CircularProgress,\n    Box,\n    FormControlLabel,\n    Checkbox,\n    Select,\n    InputLabel,\n    FormControl,\n    FormHelperText,\n} from '@material-ui/core';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport { PolicySpec, ApiPolicy, AttachedPolicy, Policy, PolicySpecAttribute } from '../Types';\nimport ApiOperationContext from \"../ApiOperationContext\";\n\nconst useStyles = makeStyles(theme => ({\n    resetBtn: {\n        display: 'flex',\n        justifyContent: 'right',\n        alignItems: 'center',\n    },\n    btn: {\n        marginRight: '1em',\n    },\n    drawerInfo: {\n        marginBottom: '1em',\n    },\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    formControl: {\n        width: '80%',\n    },\n}));\n\ninterface GeneralProps {\n    policyObj: AttachedPolicy | null;\n    setDroppedPolicy?: React.Dispatch<React.SetStateAction<Policy | null>>;\n    currentFlow: string;\n    target: string;\n    verb: string;\n    apiPolicy: ApiPolicy;\n    policySpec: PolicySpec;\n    handleDrawerClose: () => void;\n    isEditMode: boolean;\n    isAPILevelPolicy: boolean;\n}\n\nconst General: FC<GeneralProps> = ({\n    policyObj,\n    setDroppedPolicy,\n    currentFlow,\n    target,\n    verb,\n    apiPolicy,\n    policySpec,\n    handleDrawerClose,\n    isEditMode,\n    isAPILevelPolicy,\n}) => {\n    const intl = useIntl();\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [applyToAll, setApplyToAll] = useState(false);\n    const initState: any = {};\n    const { updateApiOperations, updateAllApiOperations } = useContext<any>(ApiOperationContext);\n    policySpec.policyAttributes.forEach(attr => { initState[attr.name] = null });\n    const [state, setState] = useState(initState);\n\n    if (!policyObj) {\n        return <Progress />\n    }\n\n    const onInputChange = (event: any, specType: string) => {\n        if (specType.toLowerCase() === 'boolean') {\n            setState({ ...state, [event.target.name]: event.target.checked });\n        } else if (\n            specType.toLowerCase() === 'string'\n            || specType.toLowerCase() === 'integer'\n            || specType.toLowerCase() === 'enum'\n        ) {\n            setState({ ...state, [event.target.name]: event.target.value });\n        }\n    }\n\n    const getValueOfPolicyParam = (policyParamName: string) => {\n        return apiPolicy.parameters[policyParamName];\n    }\n\n    /**\n     * This function is triggered when the form is submitted for save\n     * @param {React.FormEvent<HTMLFormElement>} event Form submit event\n     */\n    const submitForm = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setSaving(true);\n        const updateCandidates: any = {};\n        Object.keys(state).forEach((key) => {\n            const value = state[key];\n            const attributeSpec = policySpec.policyAttributes.find(\n                (attribute: PolicySpecAttribute) => attribute.name === key,\n            );\n            if (value === null && getValueOfPolicyParam(key) && getValueOfPolicyParam(key) !== '') {\n                updateCandidates[key] = getValueOfPolicyParam(key);\n            } else if (value === null && attributeSpec?.defaultValue && attributeSpec?.defaultValue !==  null) {\n                updateCandidates[key] = attributeSpec.defaultValue;\n            } else {\n                updateCandidates[key] = value;\n            }\n        });\n\n        // Saving field changes to backend\n        const apiPolicyToSave = {...apiPolicy};\n        apiPolicyToSave.parameters = updateCandidates;\n        if (!applyToAll) {\n            updateApiOperations(apiPolicyToSave, target, verb, currentFlow);\n        } else {\n            // Apply the same attached policy to all the resources\n            updateAllApiOperations(apiPolicyToSave, currentFlow);\n            setApplyToAll(false);\n        }\n\n        if (setDroppedPolicy) setDroppedPolicy(null);\n        setSaving(false);\n        handleDrawerClose();\n    };\n\n    /**\n     * Function to get the error string, if there are any errors. Empty string to indicate the absence of errors.\n     * @param {PolicySpecAttribute} specInCheck The policy attribute that needs to be checked for any errors.\n     * @returns {string} String with the error message, where empty string indicates that there are no errors. \n     */\n    const getError = (specInCheck: PolicySpecAttribute) => {\n        let error = '';\n        const value = state[specInCheck.name];\n        if (value !== null) {\n            if (specInCheck.required && value === '') {\n                error = intl.formatMessage({\n                    id: 'Apis.Details.Policies.AttachedPolicyForm.General.required.error',\n                    defaultMessage: 'Required field is empty',\n                });\n            } else if (\n                value !== '' &&\n                specInCheck.validationRegex &&\n                !(!specInCheck.validationRegex || specInCheck.validationRegex === '')\n            ) {\n                // To check if the regex is a valid regex\n                try {\n                    if (!new RegExp(specInCheck.validationRegex).test(value)) {\n                        error = intl.formatMessage({\n                            id: 'Apis.Details.Policies.AttachedPolicyForm.General.regex.error',\n                            defaultMessage: 'Please enter a valid input',\n                        });\n                    }\n                } catch(e) {\n                    console.error(e);\n                }\n            }\n        }\n        return error;\n    }\n\n    const getValue = (spec: PolicySpecAttribute) => {\n        const specName = spec.name;\n        const previousVal = getValueOfPolicyParam(specName);\n        if (state[specName] !== null) {\n            return state[specName];\n        } else if (previousVal !== null && previousVal !== undefined) {\n            if (spec.type.toLowerCase() === 'integer') return parseInt(previousVal, 10);\n            else if (spec.type.toLowerCase() === 'boolean') return (previousVal.toString() === 'true');\n            else return previousVal;\n        } else if (spec.defaultValue !== null && spec.defaultValue !== undefined) {\n            if (spec.type.toLowerCase() === 'integer') return parseInt(spec.defaultValue, 10);\n            else if (spec.type.toLowerCase() === 'boolean') return (spec.defaultValue.toString() === 'true');\n            else return spec.defaultValue;\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Reset the input fields\n     */\n    const resetAll = () => {\n        setState(initState);\n    }\n\n    /**\n     * Function to check whether there are any errors in the form.\n     * If there are errors, we disable the save button.\n     * @returns {boolean} Boolean value indicating whether or not the form has any errors.\n     */\n    const formHasErrors = () => {\n        let formHasAnError = false;\n        policySpec.policyAttributes.forEach((spec) => {\n            if(getError(spec) !== '') {\n                formHasAnError = true\n            }\n        })\n        return formHasAnError;\n    }\n\n    /**\n     * Function to check if the form content is in state that needs to be saved.\n     * @returns {boolean} Whether or not the save button should be disabled.\n     */\n    const isSaveDisabled = () => {\n        if (!isEditMode) {\n            let isDisabled = false;\n            policySpec.policyAttributes.forEach((spec) => {\n                if (spec.type !== 'Boolean') {\n                    const currentState = state[spec.name];\n                    const currentVal = getValue(spec);\n                    if (spec.required && !(currentState || currentVal)) {\n                        isDisabled = true;\n                    }\n                }\n            });\n            return isDisabled;\n        } else {\n            let isDisabled = true;\n            policySpec.policyAttributes.forEach((spec) => {\n                if (spec.type !== 'Boolean') {\n                    const currentState = state[spec.name];\n                    if (currentState !== null) {\n                        isDisabled = false;\n                    }\n                } else {\n                    const currentState = state[spec.name];\n                    if (\n                        currentState !== null &&\n                        (currentState.toString() === 'true' ||\n                            currentState.toString() === 'false')\n                    ) {\n                        isDisabled = false;\n                    }\n                }\n            });\n            return isDisabled;\n        }\n    };\n\n    /**\n     * Toggle the apply to all option on initial policy drop.\n     */\n    const toggleApplyToAll = () => {\n        setApplyToAll(!applyToAll);\n    }\n\n    const hasAttributes = policySpec.policyAttributes.length !== 0;\n    const resetDisabled = Object.values(state).filter((value: any) => \n        (value !== null && (value.toString() !== 'true' || value.toString() !== 'false')) || !!value\n    ).length === 0;\n\n    if (!policySpec) {\n        return <CircularProgress />\n    }\n\n    return (\n        <Box p={2}>\n            <form onSubmit={submitForm}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} className={classes.drawerInfo}>\n                        {hasAttributes && (\n                            <div className={classes.resetBtn}>\n                                <Button variant='outlined' color='primary' disabled={resetDisabled} onClick={resetAll}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.AttachedPolicyForm.General.reset'\n                                        defaultMessage='Reset'\n                                    />\n                                </Button>\n                            </div>\n                        )}\n                        <div>\n                            <Typography variant='subtitle2' color='textPrimary'>\n                                <FormattedMessage\n                                    id='Apis.Details.Policies.AttachedPolicyForm.General.description.title'\n                                    defaultMessage='Description'\n                                />\n                            </Typography>\n                            <Typography variant='caption' color='textPrimary'>\n                                {policySpec.description ? (\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.AttachedPolicyForm.General.description.value.provided'\n                                        defaultMessage='{description}'\n                                        values={{ description: policySpec.description }}\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        id={\n                                            'Apis.Details.Policies.AttachedPolicyForm.General.description.value.' +\n                                            'not.provided'\n                                        }\n                                        defaultMessage='Oops! Looks like this policy does not have a description'\n                                    />\n                                )}                            \n                            </Typography>\n                        </div>\n                    </Grid>\n                    {policySpec.policyAttributes && policySpec.policyAttributes.map((spec: PolicySpecAttribute) => (\n                        <Grid item xs={12}>\n\n                            {/* When the attribute type is string or integer */}\n                            {(spec.type.toLowerCase() === 'string'\n                            || spec.type.toLowerCase() === 'integer') && (\n                                <TextField\n                                    id={spec.name}\n                                    label={(\n                                        <>\n                                            {spec.displayName}\n                                            {spec.required && (\n                                                <sup className={classes.mandatoryStar}>*</sup>\n                                            )}\n                                        </>\n                                    )}\n                                    helperText={getError(spec) === '' ? spec.description : getError(spec)}\n                                    error={getError(spec) !== ''}\n                                    variant='outlined'\n                                    name={spec.name}\n                                    type={spec.type.toLowerCase() === 'integer' ? 'number' : 'text'}\n                                    value={getValue(spec)}\n                                    onChange={(e) => onInputChange(e, spec.type)}\n                                    fullWidth\n                                />\n                            )}\n\n                            {/* When the attribute type is enum */}\n                            {spec.type.toLowerCase() === 'enum' && (\n                                <>\n                                    <FormControl\n                                        variant='outlined'\n                                        className={classes.formControl}\n                                        error={getError(spec) !== ''}\n                                    >\n                                        <InputLabel htmlFor={'enum-label-' + spec.name}>\n                                            <>\n                                                {spec.displayName}\n                                                {spec.required && (\n                                                    <sup className={classes.mandatoryStar}>*</sup>\n                                                )}\n                                            </>\n                                        </InputLabel>\n                                        <Select \n                                            native\n                                            value={getValue(spec)}\n                                            onChange={(e) => onInputChange(e, spec.type)}\n                                            label={(\n                                                <>\n                                                    {spec.displayName}\n                                                    {spec.required && (\n                                                        <sup className={classes.mandatoryStar}>*</sup>\n                                                    )}\n                                                </>\n                                            )}\n                                            inputProps={{\n                                                name: spec.name,\n                                                id: `enum-label-${spec.name}`\n                                            }}\n                                        >\n                                            <option aria-label='None' value='' />\n                                            {spec.allowedValues && spec.allowedValues.map((enumVal) => (\n                                                <option value={enumVal}>{enumVal}</option>\n                                            ))}                                           \n                                        </Select>\n                                        <FormHelperText>\n                                            {getError(spec) === '' ? spec.description : getError(spec)}\n                                        </FormHelperText>\n                                    </FormControl>\n                                </>\n                            )}\n\n                            {/* When attribute type is boolean */}\n                            {spec.type.toLowerCase() === 'boolean' && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={getValue(spec)}\n                                            onChange={(e) => onInputChange(e, spec.type)}\n                                            name={spec.name}\n                                            color='primary'\n                                        />\n                                    }\n                                    label={(\n                                        <>\n                                            {spec.displayName}\n                                            {spec.required && (\n                                                <sup className={classes.mandatoryStar}>*</sup>\n                                            )}\n                                        </>\n                                    )}\n                                />\n                            )}\n                        </Grid>\n                    ))}\n                    {setDroppedPolicy && !isAPILevelPolicy && (\n                        <Grid item container justify='flex-start' xs={12}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        id='checkbox-apply-dropped-policy-to-all'\n                                        checked={applyToAll}\n                                        color='primary'\n                                        name='applyPolicyToAll'\n                                        onChange={toggleApplyToAll}\n                                    />\n                                }\n                                label={(\n                                    <Typography variant='subtitle1' color='textPrimary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Policies.AttachedPolicyForm.General.apply.to.all.resources'\n                                            defaultMessage='Apply to all resources'\n                                        />\n                                    </Typography>\n                                )}\n                            />\n                        </Grid>\n                    )}\n                    <Grid item container justify='flex-end' xs={12}>\n                        <Button\n                            variant='outlined'\n                            color='primary'\n                            onClick={handleDrawerClose}\n                            className={classes.btn}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Policies.AttachedPolicyForm.General.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            variant='contained'\n                            type='submit'\n                            color='primary'\n                            data-testid='policy-attached-details-save'\n                            disabled={ isSaveDisabled() || formHasErrors() || saving}\n                        >\n                            {saving\n                                ? <>\n                                    <CircularProgress size='small' />\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.AttachedPolicyForm.General.saving'\n                                        defaultMessage='Saving'\n                                    />\n                                </>\n                                : <>\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.AttachedPolicyForm.General.save'\n                                        defaultMessage='Save'\n                                    />\n                                </>\n                            }\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Box>\n    );\n};\n\n\nexport default General;\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useEffect, useContext, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {\n    Drawer,\n    makeStyles,\n    ListItemIcon,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Settings, Close } from '@material-ui/icons';\nimport Divider from '@material-ui/core/Divider';\nimport General from './AttachedPolicyForm/General';\nimport type { PolicySpec, ApiPolicy, AttachedPolicy } from './Types';\nimport ApiContext from '../components/ApiContext';\nimport ApiOperationContext from './ApiOperationContext';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    drawerPaper: {\n        backgroundColor: 'white',\n        width: '30%',\n    },\n    iconSize: {\n        height: '1.2em',\n        width: '1.2em',\n        color: theme.palette.grey[700],\n    },\n}));\n\ninterface PolicyConfigurationEditDrawerProps {\n    policyObj: AttachedPolicy | null;\n    currentFlow: string;\n    target: string;\n    verb: string;\n    drawerOpen: boolean;\n    setDrawerOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    allPolicies: PolicySpec[] | null;\n    isAPILevelPolicy: boolean;\n}\n\n/**\n * Renders the policy configuration edit drawer.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Right drawer for policy configuration.\n */\nconst PolicyConfigurationEditDrawer: FC<PolicyConfigurationEditDrawerProps> = ({\n    policyObj,\n    currentFlow,\n    target,\n    verb,\n    allPolicies,\n    drawerOpen,\n    setDrawerOpen,\n    isAPILevelPolicy,\n}) => {\n    const classes = useStyles();\n    const { api } = useContext<any>(ApiContext);\n    const { apiOperations } = useContext<any>(ApiOperationContext);\n    const { apiLevelPolicies } = useContext<any>(ApiOperationContext);\n    const [policySpec, setPolicySpec] = useState<PolicySpec>();\n\n    useEffect(() => {\n        (async () => {\n            if (policyObj) {\n                let policySpecVal = allPolicies?.find(\n                    (policy: PolicySpec) => policy.name === policyObj.name,\n                );\n\n                // If this policy is a deleted common policy we need to do an API call to get the policy specification\n                if (!policySpecVal) {\n                    const policyResponse = await API.getOperationPolicy(\n                        policyObj.id,\n                        api.id,\n                    );\n                    policySpecVal = policyResponse.body;\n                }\n\n                setPolicySpec(policySpecVal);\n                setDrawerOpen(true);\n            }\n        })();\n    }, [policyObj]);\n\n    const operationInAction = (!isAPILevelPolicy) ? apiOperations.find(\n        (op: any) =>\n            op.target === target &&\n            op.verb.toLowerCase() === verb.toLowerCase(),\n    ) : null;\n    const operationFlowPolicy = ((isAPILevelPolicy) ? apiLevelPolicies : operationInAction.operationPolicies)[\n        currentFlow\n    ].find((policy: any) => policy.uuid === policyObj?.uniqueKey);\n\n    const apiPolicy: ApiPolicy = operationFlowPolicy || {\n        policyName: policyObj?.name,\n        policyId: policyObj?.id,\n        policyVersion: policyObj?.version,\n        parameters: {},\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n\n    return (\n        <Drawer\n            anchor='right'\n            open={drawerOpen}\n            onClose={handleDrawerClose}\n            classes={{ paper: classes.drawerPaper }}\n        >\n            <Box role='presentation'>\n                <List>\n                    <ListItem key='policy-config'>\n                        <ListItemIcon>\n                            <Settings className={classes.iconSize} />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.PolicyConfigurationEditDrawer.title'\n                                        defaultMessage='Configure {policy}'\n                                        values={{\n                                            policy: policyObj?.displayName + ' : ' + policyObj?.version,\n                                        }}\n                                    />\n                                </Typography>\n                            }\n                        />\n                        <ListItemIcon>\n                            <IconButton onClick={handleDrawerClose}>\n                                <Close className={classes.iconSize} />\n                            </IconButton>\n                        </ListItemIcon>\n                    </ListItem>\n                </List>\n                <Divider light />\n                {policySpec && (\n                    <General\n                        policyObj={policyObj}\n                        currentFlow={currentFlow}\n                        target={target}\n                        verb={verb}\n                        policySpec={policySpec}\n                        apiPolicy={apiPolicy}\n                        handleDrawerClose={handleDrawerClose}\n                        isEditMode\n                        isAPILevelPolicy={isAPILevelPolicy}\n                    />\n                )}\n            </Box>\n        </Drawer>\n    );\n};\n\nexport default PolicyConfigurationEditDrawer;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties, FC, useContext, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Alert } from 'AppComponents/Shared';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport API from 'AppData/api.js';\nimport Utils from 'AppData/Utils';\nimport { FormattedMessage } from 'react-intl';\nimport ApiContext from '../components/ApiContext';\nimport type { AttachedPolicy, PolicySpec } from './Types';\nimport PolicyConfigurationEditDrawer from './PolicyConfigurationEditDrawer';\nimport ApiOperationContext from './ApiOperationContext';\n\nconst useStyles = makeStyles(() => ({\n    actionsBox: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '1em',\n    },\n}));\n\ninterface AttachedPolicyCardProps {\n    policyObj: AttachedPolicy;\n    currentPolicyList: AttachedPolicy[];\n    setCurrentPolicyList: React.Dispatch<React.SetStateAction<AttachedPolicy[]>>;\n    currentFlow: string;\n    verb: string;\n    target: string;\n    allPolicies: PolicySpec[] | null;\n    isAPILevelPolicy: boolean;\n}\n\n/**\n * Renders a single sortable policy card.\n * @param {any} AttachedPolicyCardProps Input props from parent components.\n * @returns {TSX} Sortable attached policy card UI.\n */\nconst AttachedPolicyCard: FC<AttachedPolicyCardProps> = ({\n    policyObj,\n    currentPolicyList,\n    setCurrentPolicyList,\n    currentFlow,\n    verb,\n    target,\n    allPolicies,\n    isAPILevelPolicy,\n}) => {\n    const classes = useStyles();\n    const { api } = useContext<any>(ApiContext);\n    const { deleteApiOperation } = useContext<any>(ApiOperationContext);\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const policyColor = Utils.stringToColor(policyObj.displayName);\n    const policyBackgroundColor = drawerOpen\n        ? `rgba(${Utils.hexToRGB(policyColor)}, 0.2)`\n        : 'rgba(0, 0, 0, 0)';\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n    } = useSortable({ id: policyObj.uniqueKey.toString() });\n    const style: CSSProperties = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        border: '2px solid',\n        height: '90%',\n        cursor: 'move',\n        borderRadius: '0.3em',\n        padding: '0.2em',\n        borderColor: policyColor,\n        marginLeft: '0.2em',\n        marginRight: '0.2em',\n        backgroundColor: policyBackgroundColor,\n        opacity: isDragging ? 0.5 : 1,\n    };\n\n    /**\n     * Handle policy delete\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event event\n     */\n    const handleDelete = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        const filteredList = currentPolicyList.filter(\n            (policy) => policy.uniqueKey !== policyObj.uniqueKey,\n        );\n        const policyToDelete = currentPolicyList.find(\n            (policy) => policy.uniqueKey === policyObj.uniqueKey,\n        );\n        setCurrentPolicyList(filteredList);\n        deleteApiOperation(\n            policyToDelete?.uniqueKey,\n            target,\n            verb,\n            currentFlow,\n        );\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    /**\n     * Handle policy download\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event event\n     */\n    const handlePolicyDownload = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        if (policyObj.isAPISpecific) {\n            const apiPolicyContentPromise = API.getOperationPolicyContent(\n                policyObj.id,\n                api.id,\n            );\n            apiPolicyContentPromise\n                .then((apiPolicyResponse) => {\n                    Utils.forceDownload(apiPolicyResponse);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error(\n                        <FormattedMessage\n                            id='Apis.Details.Policies.AttachedPolicyCard.apiSpecificPolicy.download.error'\n                            defaultMessage='Something went wrong while downloading the policy'\n                        />,\n                    );\n                });\n        } else {\n            const commonPolicyContentPromise = API.getCommonOperationPolicyContent(\n                policyObj.id,\n            );\n            commonPolicyContentPromise\n                .then((commonPolicyResponse) => {\n                    Utils.forceDownload(commonPolicyResponse);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error(\n                        <FormattedMessage\n                            id='Apis.Details.Policies.AttachedPolicyCard.commonPolicy.download.error'\n                            defaultMessage='Something went wrong while downloading the policy'\n                        />,\n                    );\n                });\n        }\n    };\n\n    const handleDrawerOpen = () => {\n        if (policyObj.id !== '') {\n            // Drawer will only appear for policies that have an ID\n            // Note that a migrated policy will have an empty string as the ID at the initial stage\n            setDrawerOpen(true);\n        }\n    };\n\n    return (\n        <>\n            <div\n                ref={setNodeRef}\n                style={style}\n                {...attributes}\n                {...listeners}\n                onClick={handleDrawerOpen}\n                onKeyDown={handleDrawerOpen}\n            >\n                <Tooltip\n                    key={policyObj.id}\n                    title={`${policyObj.displayName} : ${policyObj.version}`}\n                    placement='top'\n                >\n                    <Avatar\n                        style={{\n                            margin: '0.2em',\n                            backgroundColor: policyColor,\n                        }}\n                    >\n                        {Utils.stringAvatar(\n                            policyObj.displayName.toUpperCase(),\n                        )}\n                    </Avatar>\n                </Tooltip>\n                <Box className={classes.actionsBox}>\n                    <IconButton\n                        key={`${policyObj.id}-download`}\n                        aria-label='Download policy'\n                        size='small'\n                        onClick={handlePolicyDownload}\n                        disableFocusRipple\n                        disableRipple\n                        disabled={policyObj.id === ''} // Disabling policy download for migrated policy\n                    >\n                        <CloudDownloadIcon />\n                    </IconButton>\n                    <IconButton\n                        key={`${policyObj.id}-delete`}\n                        aria-label='delete attached policy'\n                        size='small'\n                        onClick={handleDelete}\n                        disableFocusRipple\n                        disableRipple\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </Box>\n            </div>\n            {drawerOpen && (\n                <PolicyConfigurationEditDrawer\n                    policyObj={policyObj}\n                    drawerOpen={drawerOpen}\n                    setDrawerOpen={setDrawerOpen}\n                    currentFlow={currentFlow}\n                    target={target}\n                    verb={verb}\n                    allPolicies={allPolicies}\n                    isAPILevelPolicy={isAPILevelPolicy}\n                />\n            )}\n        </>\n    );\n};\n\nexport default AttachedPolicyCard;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useContext } from 'react';\nimport {\n    DndContext,\n    closestCenter,\n    PointerSensor,\n    useSensor,\n    useSensors,\n    DragEndEvent,\n} from '@dnd-kit/core';\nimport {\n    horizontalListSortingStrategy,\n    SortableContext,\n} from '@dnd-kit/sortable';\n\nimport AttachedPolicyCard from './AttachedPolicyCard';\nimport type { AttachedPolicy, PolicySpec } from './Types';\nimport ApiOperationContext from './ApiOperationContext';\n\ninterface AttachedPolicyListProps {\n    currentPolicyList: AttachedPolicy[];\n    setCurrentPolicyList: React.Dispatch<React.SetStateAction<AttachedPolicy[]>>;\n    policyDisplayStartDirection: string;\n    currentFlow: string;\n    target: string;\n    verb: string;\n    allPolicies: PolicySpec[] | null;\n    isAPILevelPolicy: boolean;\n}\n\n/**\n * Renders the Gateway selection section.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Radio group for the API Gateway.\n */\nconst AttachedPolicyList: FC<AttachedPolicyListProps> = ({\n    currentPolicyList,\n    setCurrentPolicyList,\n    policyDisplayStartDirection,\n    currentFlow,\n    target,\n    verb,\n    allPolicies,\n    isAPILevelPolicy,\n}) => {\n    const reversedPolicyList = [...currentPolicyList].reverse();\n    const policyListToDisplay =\n        policyDisplayStartDirection === 'left'\n            ? currentPolicyList\n            : reversedPolicyList;\n    const { rearrangeApiOperations } = useContext<any>(ApiOperationContext);\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n                distance: 5,\n            },\n        }),\n    );\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n\n        if (active.id !== over?.id) {\n            const policyListCopy = [...currentPolicyList];\n            const oldIndex = policyListCopy.findIndex(\n                (item) => item.uniqueKey === active.id,\n            );\n            const newIndex = policyListCopy.findIndex(\n                (item) => item.uniqueKey === over?.id,\n            );\n\n            rearrangeApiOperations(\n                oldIndex,\n                newIndex,\n                target,\n                verb,\n                currentFlow,\n            );\n        }\n    };\n\n    return (\n        <>\n            <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleDragEnd}\n            >\n                <SortableContext\n                    items={currentPolicyList.map((item) => item.uniqueKey)}\n                    strategy={horizontalListSortingStrategy}\n                >\n                    {policyListToDisplay.map((policy: AttachedPolicy) => (\n                        <AttachedPolicyCard\n                            key={policy.uniqueKey}\n                            policyObj={policy}\n                            currentPolicyList={currentPolicyList}\n                            setCurrentPolicyList={setCurrentPolicyList}\n                            currentFlow={currentFlow}\n                            target={target}\n                            verb={verb}\n                            allPolicies={allPolicies}\n                            isAPILevelPolicy={isAPILevelPolicy}\n                        />\n                    ))}\n                </SortableContext>\n            </DndContext>\n        </>\n    );\n};\n\nexport default AttachedPolicyList;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {\n    Drawer,\n    makeStyles,\n    ListItemIcon,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Settings, Close } from '@material-ui/icons';\nimport Divider from '@material-ui/core/Divider';\nimport { Progress } from 'AppComponents/Shared';\nimport General from './AttachedPolicyForm/General';\nimport { PolicySpec, ApiPolicy, Policy } from './Types';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    drawerPaper: {\n        backgroundColor: 'white',\n        width: '30%',\n    },\n    iconSize: {\n        height: '1.2em',\n        width: '1.2em',\n        color: theme.palette.grey[700],\n    },\n}));\n\ninterface PolicyConfiguringDrawerProps {\n    policyObj: Policy | null;\n    setDroppedPolicy: React.Dispatch<React.SetStateAction<Policy | null>>;\n    currentFlow: string;\n    target: string;\n    verb: string;\n    allPolicies: PolicySpec[] | null;\n    isAPILevelPolicy: boolean;\n}\n\n/**\n * Renders the policy configuring drawer.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Right drawer for policy configuration.\n */\nconst PolicyConfiguringDrawer: FC<PolicyConfiguringDrawerProps> = ({\n    policyObj,\n    setDroppedPolicy,\n    currentFlow,\n    target,\n    verb,\n    allPolicies,\n    isAPILevelPolicy,\n}) => {\n    const classes = useStyles();\n    const [drawerOpen, setDrawerOpen] = useState(!!policyObj);\n    const [policySpec, setPolicySpec] = useState<PolicySpec>();\n\n    useEffect(() => {\n        if (policyObj) {\n            setPolicySpec(\n                allPolicies?.find(\n                    (policy: PolicySpec) => policy.id === policyObj.id,\n                ),\n            );\n            setDrawerOpen(true);\n        }\n    }, [policyObj]);\n\n    if (!policySpec) {\n        return <Progress />;\n    }\n\n    const apiPolicy: ApiPolicy = {\n        policyName: policyObj?.name,\n        policyId: policyObj?.id,\n        policyVersion: policyObj?.version,\n        parameters: {},\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n        setDroppedPolicy(null);\n    };\n\n    /**\n     * Converts the PolicyObj prop of type Policy to AttachedPolicy\n     * @returns {AttachedPolicy} Returns a policy object of type AttachedPolicy\n     */\n    const getPolicyOfTypeAttachedPolicy = () => {\n        if (policyObj) {\n            return {\n                id: policyObj?.id,\n                name: policyObj?.name,\n                displayName: policyObj?.displayName,\n                version: policyObj?.version,\n                applicableFlows: policyObj?.applicableFlows,\n                uniqueKey: '',\n            };\n        } else {\n            return null;\n        }\n    };\n\n    return (\n        <Drawer\n            anchor='right'\n            open={drawerOpen}\n            onClose={handleDrawerClose}\n            classes={{ paper: classes.drawerPaper }}\n        >\n            <Box role='presentation'>\n                <List>\n                    <ListItem key='policy-config'>\n                        <ListItemIcon>\n                            <Settings className={classes.iconSize} />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.PolicyConfiguringDrawer.title'\n                                        defaultMessage='Configure {policy}'\n                                        values={{\n                                            policy: policyObj?.displayName + ' : ' + policyObj?.version,\n                                        }}\n                                    />\n                                </Typography>\n                            }\n                        />\n                        <ListItemIcon>\n                            <IconButton onClick={handleDrawerClose}>\n                                <Close className={classes.iconSize} />\n                            </IconButton>\n                        </ListItemIcon>\n                    </ListItem>\n                </List>\n                <Divider light />\n                <General\n                    policyObj={getPolicyOfTypeAttachedPolicy()}\n                    setDroppedPolicy={setDroppedPolicy}\n                    currentFlow={currentFlow}\n                    target={target}\n                    verb={verb}\n                    policySpec={policySpec}\n                    apiPolicy={apiPolicy}\n                    handleDrawerClose={handleDrawerClose}\n                    isEditMode={false}\n                    isAPILevelPolicy={isAPILevelPolicy}\n                />\n            </Box>\n        </Drawer>\n    );\n};\n\nexport default PolicyConfiguringDrawer;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useState } from 'react';\nimport { Grid, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { useDrop } from 'react-dnd';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport clsx from 'clsx';\nimport type { AttachedPolicy, Policy, PolicySpec } from './Types';\nimport AttachedPolicyList from './AttachedPolicyList';\nimport PolicyConfiguringDrawer from './PolicyConfiguringDrawer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    dropzoneDiv: {\n        border: '1px dashed',\n        borderColor: theme.palette.primary.main,\n        height: '8rem',\n        padding: '0.8rem',\n        width: '100%',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        textAlign: 'center',\n        borderRadius: '0.3em',\n        display: 'flex',\n        alignItems: 'center',\n        overflowX: 'scroll',\n    },\n    acceptDrop: {\n        backgroundColor: green[50],\n        borderColor: 'green',\n    },\n    rejectDrop: {\n        backgroundColor: red[50],\n        borderColor: 'red',\n    },\n    alignLeft: {\n        justifyContent: 'left',\n    },\n    alignRight: {\n        justifyContent: 'right',\n    },\n    alignCenter: {\n        justifyContent: 'center',\n    },\n}));\n\ninterface PolicyDropzoneProps {\n    policyDisplayStartDirection: string;\n    currentPolicyList: AttachedPolicy[];\n    setCurrentPolicyList: React.Dispatch<\n        React.SetStateAction<AttachedPolicy[]>\n    >;\n    droppablePolicyList: string[];\n    currentFlow: string;\n    target: string;\n    verb: string;\n    allPolicies: PolicySpec[] | null;\n    isAPILevelPolicy: boolean;\n}\n\n/**\n * Renders the dropzone which accepts policy cards that are dragged and dropped.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} List of policies local to the API segment.\n */\nconst PolicyDropzone: FC<PolicyDropzoneProps> = ({\n    policyDisplayStartDirection,\n    currentPolicyList,\n    setCurrentPolicyList,\n    droppablePolicyList,\n    currentFlow,\n    target,\n    verb,\n    allPolicies,\n    isAPILevelPolicy,\n}) => {\n    const classes = useStyles();\n    const [droppedPolicy, setDroppedPolicy] = useState<Policy | null>(null);\n\n    const [{ canDrop }, drop] = useDrop({\n        accept: droppablePolicyList,\n        drop: (item: any) => setDroppedPolicy(item.droppedPolicy),\n        collect: (monitor) => ({\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    return (\n        <>\n            <Grid container>\n                <div\n                    ref={drop}\n                    className={clsx({\n                        [classes.dropzoneDiv]: true,\n                        [classes.acceptDrop]: canDrop,\n                        [classes.alignCenter]: currentPolicyList.length === 0,\n                        [classes.alignLeft]:\n                            currentPolicyList.length !== 0 &&\n                            policyDisplayStartDirection === 'left',\n                        [classes.alignRight]:\n                            currentPolicyList.length !== 0 &&\n                            policyDisplayStartDirection === 'right',\n                    })}\n                >\n                    {currentPolicyList.length === 0 ? (\n                        <Typography>Drag and drop policies here</Typography>\n                    ) : (\n                        <AttachedPolicyList\n                            currentPolicyList={currentPolicyList}\n                            setCurrentPolicyList={setCurrentPolicyList}\n                            policyDisplayStartDirection={\n                                policyDisplayStartDirection\n                            }\n                            currentFlow={currentFlow}\n                            target={target}\n                            verb={verb}\n                            allPolicies={allPolicies}\n                            isAPILevelPolicy={isAPILevelPolicy}\n                        />\n                    )}\n                </div>\n            </Grid>\n            {droppedPolicy && (\n                <PolicyConfiguringDrawer\n                    policyObj={droppedPolicy}\n                    setDroppedPolicy={setDroppedPolicy}\n                    currentFlow={currentFlow}\n                    target={target}\n                    verb={verb}\n                    allPolicies={allPolicies}\n                    isAPILevelPolicy={isAPILevelPolicy}\n                />\n            )}\n        </>\n    );\n};\n\nexport default PolicyDropzone;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(() => ({\n    arrowColor: {\n        backgroundColor: 'black',\n        opacity: 0.4,\n    },\n    iconSize: {\n        fontSize: '2em',\n        color: 'black',\n        opacity: 0.4,\n    }\n}));\n\ninterface FlowArrowProps {\n    arrowDirection: string;\n}\n\n/**\n * Tab panel component to render content of a particular tab.\n * Renders the available policy list under the relevant flow related tab (i.e. request, response or fault).\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Tab panel.\n */\nconst FlowArrow: FC<FlowArrowProps> = ({ arrowDirection }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            {arrowDirection === 'left'\n                ?  (\n                    <Box display='flex' flexDirection='row' alignItems='center' pl={2} pt={1}>\n                        <Box width='90%' mb={0.5} height={4} className={classes.arrowColor} />\n                        <Box width='10%'>\n                            <ArrowForwardIosIcon className={classes.iconSize} />\n                        </Box>\n                    </Box>\n                ) : (\n                    <Box display='flex' flexDirection='row' alignItems='center' pr={2} pl={3} pt={1}>\n                        <Box width='5%'>\n                            <ArrowBackIosIcon className={classes.iconSize} />\n                        </Box>\n                        <Box width='90%' mb={0.5} height={4} className={classes.arrowColor} />\n                    </Box>\n                )\n            }\n        </>\n    );\n}\n\nexport default FlowArrow;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport PolicyDropzone from './PolicyDropzone';\nimport type { AttachedPolicy, Policy, PolicySpec } from './Types';\nimport FlowArrow from './components/FlowArrow';\nimport ApiOperationContext from './ApiOperationContext';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    flowSpecificPolicyAttachGrid: {\n        marginTop: theme.spacing(1),\n        overflowX: 'scroll',\n    },\n}));\n\nconst defaultPolicyForMigration = {\n    id: '',\n    category: 'Mediation',\n    name: '',\n    displayName: '',\n    version: '',\n    description: '',\n    applicableFlows: [],\n    supportedGateways: ['Synapse'],\n    supportedApiTypes: [],\n    policyAttributes: [],\n    isAPISpecific: true,\n};\n\ninterface PoliciesExpansionProps {\n    target: any;\n    verb: string;\n    allPolicies: PolicySpec[] | null;\n    isChoreoConnectEnabled: boolean;\n    policyList: Policy[];\n    isAPILevelPolicy: boolean;\n}\n\nconst PoliciesExpansion: FC<PoliciesExpansionProps> = ({\n    target,\n    verb,\n    allPolicies,\n    isChoreoConnectEnabled,\n    policyList,\n    isAPILevelPolicy,\n}) => {\n    // Policies attached for each request, response and fault flow\n    const [requestFlowPolicyList, setRequestFlowPolicyList] = useState<AttachedPolicy[]>([]);\n    const [responseFlowPolicyList, setResponseFlowPolicyList] = useState<AttachedPolicy[]>([]);\n    const [faultFlowPolicyList, setFaultFlowPolicyList] = useState<AttachedPolicy[]>([]);\n\n    // Droppable policy identifier list for each request, response and fault flow\n    const [requestFlowDroppablePolicyList, setRequestFlowDroppablePolicyList] = useState<string[]>([]);\n    const [responseFlowDroppablePolicyList, setResponseFlowDroppablePolicyList] = useState<string[]>([]);\n    const [faultFlowDroppablePolicyList, setFaultFlowDroppablePolicyList] = useState<string[]>([]);\n\n    const classes = useStyles();\n    const { apiOperations } = useContext<any>(ApiOperationContext);\n    const { apiLevelPolicies } = useContext<any>(ApiOperationContext);\n    const { api } = useContext<any>(APIContext);\n\n    useEffect(() => {\n        const requestList = [];\n        const responseList = [];\n        const faultList = [];\n        for (const policy of policyList) {\n            if (policy.applicableFlows.includes('request')) {\n                requestList.push(`policyCard-${policy.id}`);\n            }\n            if (policy.applicableFlows.includes('response')) {\n                responseList.push(`policyCard-${policy.id}`);\n            }\n            if (policy.applicableFlows.includes('fault')) {\n                faultList.push(`policyCard-${policy.id}`);\n            }\n        }\n        setRequestFlowDroppablePolicyList(requestList);\n        setResponseFlowDroppablePolicyList(responseList);\n        setFaultFlowDroppablePolicyList(faultList);\n    }, [policyList]);\n\n    useEffect(() => {\n        (async () => {\n            const operationInAction = (!isAPILevelPolicy) ? apiOperations.find(\n                (op: any) =>\n                    op.target === target &&\n                    op.verb.toLowerCase() === verb.toLowerCase(),\n            ) : null;\n            const apiPolicies = (isAPILevelPolicy) ? apiLevelPolicies : null;\n\n            // Populate request flow attached policy list\n            const requestFlowList: AttachedPolicy[] = [];\n            const requestFlow = (isAPILevelPolicy) ? apiPolicies.request : operationInAction.operationPolicies.request;\n            for (const requestFlowAttachedPolicy of requestFlow) {\n                const { policyId, policyName, policyVersion, uuid } =\n                    requestFlowAttachedPolicy;\n                if (policyId === null) {\n                    // Handling migration flow\n                    requestFlowList.push({\n                        ...defaultPolicyForMigration,\n                        name: policyName,\n                        displayName: policyName,\n                        applicableFlows: ['request'],\n                        uniqueKey: uuid,\n                    });\n                } else {\n                    const policyObj = allPolicies?.find(\n                        (policy: PolicySpec) => \n                            policy.name === policyName && \n                            policy.version === policyVersion,\n                    );\n                    if (policyObj) {\n                        requestFlowList.push({ ...policyObj, uniqueKey: uuid });\n                    } else {\n                        try {\n                            // eslint-disable-next-line no-await-in-loop\n                            const policyResponse = await API.getOperationPolicy(\n                                policyId,\n                                api.id,\n                            );\n                            if (policyResponse)\n                                requestFlowList.push({\n                                    ...policyResponse.body,\n                                    uniqueKey: uuid,\n                                });\n                        } catch (error) {\n                            console.error(error);\n                        }\n                    }\n                }\n            }\n            setRequestFlowPolicyList(requestFlowList);\n\n            // Populate response flow attached policy list\n            const responseFlowList: AttachedPolicy[] = [];\n            const responseFlow = isAPILevelPolicy\n                ? apiPolicies.response\n                : operationInAction.operationPolicies.response;\n            for (const responseFlowAttachedPolicy of responseFlow) {\n                const { policyId, policyName, policyVersion, uuid } =\n                    responseFlowAttachedPolicy;\n                if (policyId === null) {\n                    // Handling migration flow\n                    responseFlowList.push({\n                        ...defaultPolicyForMigration,\n                        name: policyName,\n                        displayName: policyName,\n                        applicableFlows: ['response'],\n                        uniqueKey: uuid,\n                    });\n                } else {\n                    const policyObj = allPolicies?.find(\n                        (policy: PolicySpec) => \n                            policy.name === policyName && \n                            policy.version === policyVersion,\n                    );\n                    if (policyObj) {\n                        responseFlowList.push({ ...policyObj, uniqueKey: uuid });\n                    } else {\n                        try {\n                            // eslint-disable-next-line no-await-in-loop\n                            const policyResponse = await API.getOperationPolicy(\n                                policyId,\n                                api.id,\n                            );\n                            if (policyResponse)\n                                responseFlowList.push({\n                                    ...policyResponse.body,\n                                    uniqueKey: uuid,\n                                });\n                        } catch (error) {\n                            console.error(error);\n                        }\n                    }   \n                }\n            }\n            setResponseFlowPolicyList(responseFlowList);\n\n            if (!isChoreoConnectEnabled) {\n                // Populate fault flow attached policy list\n                const faultFlowList: AttachedPolicy[] = [];\n                const faultFlow = (isAPILevelPolicy) ? apiPolicies.fault : operationInAction.operationPolicies.fault;\n                for (const faultFlowAttachedPolicy of faultFlow) {\n                    const { policyId, policyName, policyVersion, uuid } =\n                        faultFlowAttachedPolicy;\n                    if (policyId === null) {\n                        // Handling migration flow\n                        faultFlowList.push({\n                            ...defaultPolicyForMigration,\n                            name: policyName,\n                            displayName: policyName,\n                            applicableFlows: ['fault'],\n                            uniqueKey: uuid,\n                        });\n                    } else {\n                        const policyObj = allPolicies?.find(\n                            (policy: PolicySpec) => \n                                policy.name === policyName && \n                                policy.version === policyVersion,\n                        );\n                        if (policyObj) {\n                            faultFlowList.push({ ...policyObj, uniqueKey: uuid });\n                        } else {\n                            try {\n                                // eslint-disable-next-line no-await-in-loop\n                                const policyResponse = await API.getOperationPolicy(\n                                    policyId,\n                                    api.id,\n                                );\n                                if (policyResponse)\n                                    faultFlowList.push({\n                                        ...policyResponse.body,\n                                        uniqueKey: uuid,\n                                    });\n                            } catch (error) {\n                                console.error(error);\n                            }\n                        }\n                    }\n                }\n                setFaultFlowPolicyList(faultFlowList);\n            }\n        })();\n    }, [apiOperations, apiLevelPolicies]);\n\n    return (\n        <ExpansionPanelDetails>\n            <Grid\n                spacing={2}\n                container\n                direction='row'\n                justify='flex-start'\n                alignItems='flex-start'\n            >\n                <Grid item xs={12} md={12}>\n                    <Box className={classes.flowSpecificPolicyAttachGrid} data-testid='drop-policy-zone-request'>\n                        <Typography variant='subtitle2' align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Policies.PoliciesExpansion.request.flow.title'\n                                defaultMessage='Request Flow'\n                            />\n                        </Typography>\n                        <FlowArrow arrowDirection='left' />\n                        <PolicyDropzone\n                            policyDisplayStartDirection='left'\n                            currentPolicyList={requestFlowPolicyList}\n                            setCurrentPolicyList={setRequestFlowPolicyList}\n                            droppablePolicyList={requestFlowDroppablePolicyList}\n                            currentFlow='request'\n                            target={target}\n                            verb={verb}\n                            allPolicies={allPolicies}\n                            isAPILevelPolicy={isAPILevelPolicy}\n                        />\n                    </Box>\n                    <Box className={classes.flowSpecificPolicyAttachGrid} data-testid='drop-policy-zone-response'>\n                        <Typography variant='subtitle2' align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Policies.PoliciesExpansion.response.flow.title'\n                                defaultMessage='Response Flow'\n                            />\n                        </Typography>\n                        <FlowArrow arrowDirection='right' />\n                        <PolicyDropzone\n                            policyDisplayStartDirection='right'\n                            currentPolicyList={responseFlowPolicyList}\n                            setCurrentPolicyList={setResponseFlowPolicyList}\n                            droppablePolicyList={\n                                responseFlowDroppablePolicyList\n                            }\n                            currentFlow='response'\n                            target={target}\n                            verb={verb}\n                            allPolicies={allPolicies}\n                            isAPILevelPolicy={isAPILevelPolicy}\n                        />\n                    </Box>\n                    {!isChoreoConnectEnabled && (\n                        <Box className={classes.flowSpecificPolicyAttachGrid}>\n                            <Typography variant='subtitle2' align='left'>\n                                <FormattedMessage\n                                    id='Apis.Details.Policies.PoliciesExpansion.fault.flow.title'\n                                    defaultMessage='Fault Flow'\n                                />\n                            </Typography>\n                            <FlowArrow arrowDirection='right' />\n                            <PolicyDropzone\n                                policyDisplayStartDirection='right'\n                                currentPolicyList={faultFlowPolicyList}\n                                setCurrentPolicyList={setFaultFlowPolicyList}\n                                droppablePolicyList={\n                                    faultFlowDroppablePolicyList\n                                }\n                                currentFlow='fault'\n                                target={target}\n                                verb={verb}\n                                allPolicies={allPolicies}\n                                isAPILevelPolicy={isAPILevelPolicy}\n                            />\n                        </Box>\n                    )}\n                </Grid>\n            </Grid>\n        </ExpansionPanelDetails>\n    );\n};\n\nexport default PoliciesExpansion;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\nimport Badge from '@material-ui/core/Badge';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport PoliciesExpansion from './PoliciesExpansion';\nimport type { Policy, PolicySpec } from './Types'\n\ninterface OperationPolicyProps {\n    target: string;\n    verb: string;\n    operation: any;\n    highlight: any;\n    api: any;\n    disableUpdate: any;\n    expandedResource: string | null;\n    setExpandedResource: React.Dispatch<React.SetStateAction<string | null>>;\n    policyList: Policy[];\n    allPolicies: PolicySpec[] | null;\n    isChoreoConnectEnabled: boolean;\n}\n\nconst OperationPolicy: FC<OperationPolicyProps> = ({\n    operation, highlight, api, target, verb, expandedResource, setExpandedResource,\n    policyList, allPolicies, isChoreoConnectEnabled\n}) => {\n    const useStyles = makeStyles((theme: any) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb];\n        return {\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n            paperStyles: {\n                border: `1px solid ${backgroundColor}`,\n                borderBottom: '',\n                width: '100%',\n            },\n            customDivider: {\n                backgroundColor,\n            },\n            highlightSelected: {\n                backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n            },\n            contentNoMargin: {\n                margin: theme.spacing(0),\n            },\n            targetText: {\n                maxWidth: 300,\n                margin: '0px 20px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                textOverflow: 'ellipsis',\n                display: 'inline-block',\n            },\n            operationSummaryGrid: {\n                display: 'flex',\n                alignItems: 'center',\n                flexBasis: '100%',\n                maxWidth: '100%',\n            }\n        };\n    });\n\n    const classes = useStyles();\n\n    const apiOperation = api.operations[target] && api.operations[target][verb.toUpperCase()];\n    const isUsedInAPIProduct = apiOperation && Array.isArray(\n        apiOperation.usedProductIds,\n    ) && apiOperation.usedProductIds.length;\n\n    const handleExpansion = (panel: string) => (event: any, isExpanded: boolean) => {\n        setExpandedResource(isExpanded ? panel : null);\n    };\n\n    const renderUsedInApiProducts = () => {\n        return (isUsedInAPIProduct) ? (\n            <Grid item md={3}>\n                <Box display='flex' justifyContent='center'>\n                    <ReportProblemOutlinedIcon fontSize='small' />\n                    <Box display='flex' ml={1} mt={1 / 4} fontSize='caption.fontSize'>\n                        <FormattedMessage\n                            id='Apis.Details.Policies.OperationPolicy.operation.used.in.products'\n                            defaultMessage='This operation is used in {isUsedInAPIProduct} API product(s)'\n                            values={{ isUsedInAPIProduct }}\n                        />\n                    </Box>\n                </Box>\n            </Grid>\n        ) : (\n            <Grid item md={3} />\n        );\n    }\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={expandedResource === verb + target}\n                onChange={handleExpansion(verb + target)}\n                disabled={false}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={highlight ? classes.highlightSelected : ''}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    id={verb + target}\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={4} className={classes.operationSummaryGrid}>\n                            <Badge\n                                invisible={!operation['x-wso2-new']}\n                                color='error'\n                                variant='dot'\n                                style={{ display: 'inline-block' }}\n                            >\n                                <Button\n                                    disableFocusRipple\n                                    variant='contained'\n                                    aria-label={'HTTP verb ' + verb}\n                                    size='small'\n                                    className={classes.customButton}\n                                >\n                                    {verb}\n                                </Button>\n                            </Badge>\n                            <Typography\n                                display='inline'\n                                variant='h6'\n                                gutterBottom\n                                className={classes.targetText}\n                                title={target}\n                            >\n                                {target}\n                                {(operation.summary && operation.summary !== '') && (\n                                    <Typography\n                                        display='inline'\n                                        style={{ margin: '0px 30px' }}\n                                        variant='caption'\n                                        gutterBottom\n                                    >\n                                        {operation.summary}\n                                    </Typography>\n                                )}\n                            </Typography>\n                        </Grid>\n                        {renderUsedInApiProducts}\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <PoliciesExpansion\n                    target={target}\n                    verb={verb}\n                    allPolicies={allPolicies}\n                    isChoreoConnectEnabled={isChoreoConnectEnabled}\n                    policyList={policyList}\n                    isAPILevelPolicy={false}\n                />\n            </ExpansionPanel>\n        </>\n    );\n};\n\nexport default OperationPolicy;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    tagClass: {\n        maxWidth: 1000,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        [theme.breakpoints.down('md')]: {\n            maxWidth: 800,\n        },\n    },\n}));\n\ninterface OperationGroupProps {\n    openAPI: any;\n    children: any;\n    tag: string;\n}\n\nconst OperationGroup: FC<OperationGroupProps> = ({\n    openAPI, children, tag\n}) => {\n    const classes = useStyles();\n    const currentTagInfo = openAPI.tags && openAPI.tags.find((tagInfo: any) => tagInfo.name === tag);\n    let borderColor = \"\";\n\n    return (\n        <Box m={1} p={0.1} mt={1.5} sx={{ boxShadow: 0.5, bgcolor: borderColor, borderRadius: 1 }}>\n            <ExpansionPanel defaultExpanded>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} id={tag}>\n                    <Typography\n                        variant='h4'\n                        className={classes.tagClass}\n                        title={tag}\n                    >\n                        {tag}\n                    </Typography>\n                    <Typography style={{ margin: '0px 10px' }} variant='caption'>\n                        {' '}\n                    </Typography>\n                    {currentTagInfo && (\n                        <Typography style={{ margin: '0px 30px' }} variant='caption'>\n                            {currentTagInfo.description}\n                        </Typography>\n                    )}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Box>\n    );\n};\n\nexport default OperationGroup;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Progress } from 'AppComponents/Shared';\nimport API from 'AppData/api';\nimport type { Policy, PolicySpec } from './Types';\nimport ApiContext from '../components/ApiContext';\nimport PolicyViewForm from './PolicyForm/PolicyViewForm';\n\ninterface ViewPolicyProps {\n    handleDialogClose: () => void;\n    dialogOpen: boolean;\n    policyObj: Policy;\n    isLocalToAPI: boolean;\n}\n\n/**\n * Renders the UI to view a policy selected from the policy list.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Policy view UI.\n */\nconst ViewPolicy: React.FC<ViewPolicyProps> = ({\n    handleDialogClose,\n    dialogOpen,\n    policyObj,\n    isLocalToAPI,\n}) => {\n    const { api } = useContext<any>(ApiContext);\n    const [policySpec, setPolicySpec] = useState<PolicySpec | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (dialogOpen && isLocalToAPI) {\n            setLoading(true);\n            const promisedPolicyGet = API.getOperationPolicy(\n                policyObj.id,\n                api.id,\n            );\n            promisedPolicyGet\n                .then((response) => {\n                    setPolicySpec(response.body);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while retrieving policy details');\n                    }\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        } else if (dialogOpen && !isLocalToAPI) {\n            const promisedCommonPolicyGet = API.getCommonOperationPolicy(\n                policyObj.id,\n            );\n            promisedCommonPolicyGet\n                .then((response) => {\n                    setPolicySpec(response.body);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                    } else {\n                        Alert.error('Something went wrong while retrieving policy details');\n                    }\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [dialogOpen]);\n\n    const stopPropagation = (\n        e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    ) => {\n        e.stopPropagation();\n    };\n\n    const toggleOpen = () => {\n        handleDialogClose();\n    };\n\n    if (loading) {\n        return <Progress />;\n    }\n\n    if (!policySpec) {\n        return <></>;\n    }\n\n    return (\n        <>\n            <Dialog\n                maxWidth='md'\n                open={dialogOpen}\n                aria-labelledby='form-dialog-title'\n                onClose={handleDialogClose}\n                onClick={stopPropagation}\n                fullWidth\n            >\n                <Box\n                    display='flex'\n                    justifyContent='space-between'\n                    alignItems='center'\n                    flexDirection='row'\n                    px={3}\n                    pt={3}\n                >\n                    <Box display='flex'>\n                        <Typography variant='h4' component='h2'>\n                            {policyObj.displayName}\n                        </Typography>\n                    </Box>\n                    <Box display='flex'>\n                        <IconButton\n                            color='inherit'\n                            onClick={toggleOpen}\n                            aria-label='Close'\n                        >\n                            <Icon>close</Icon>\n                        </IconButton>\n                    </Box>\n                </Box>\n                <DialogContent>\n                    <Box my={2}>\n                        <DialogContentText>\n                            <PolicyViewForm\n                                policySpec={policySpec}\n                                onDone={toggleOpen}\n                            />\n                        </DialogContentText>\n                    </Box>\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n};\n\nexport default ViewPolicy;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, FC, useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\ninterface DeletePolicyProps {\n    policyId: string;\n    policyName: string;\n    fetchPolicies: () => void;\n}\n\n/**\n * Renders the policy configuring drawer.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Right drawer for policy configuration.\n */\nconst DeletePolicy: FC<DeletePolicyProps> = ({\n    policyId,\n    policyName,\n    fetchPolicies,\n}) => {\n    const { api } = useContext<any>(ApiContext);\n    const [open, setOpen] = useState(false);\n    const setOpenLocal = setOpen; // Need to copy this to access inside the promise.then\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const handleDelete = () => {\n        const promisedCommonPolicyDelete = API.deleteOperationPolicy(\n            api.id,\n            policyId,\n        );\n        promisedCommonPolicyDelete\n            .then(() => {\n                Alert.info(`${policyName} policy deleted successfully!`);\n                setOpenLocal(!open);\n                fetchPolicies();\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error('Error occurred while deleteting policy');\n                setOpenLocal(!open);\n            });\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <Tooltip\n                placement='top'\n                title={\n                    <FormattedMessage\n                        id='Apis.Details.Policies.DeletePolicy.delete.title'\n                        defaultMessage='Delete'\n                    />\n                }\n            >\n                <IconButton\n                    onClick={toggleOpen}\n                    aria-label={'delete ' + policyName}\n                >\n                    <DeleteIcon />\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <DialogTitle>\n                    <FormattedMessage\n                        id='Apis.Details.Policies.DeletePolicy.delete.confirm'\n                        defaultMessage='Confirm Delete'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <FormattedMessage\n                            id='Apis.Details.Policies.DeletePolicy.delete.confirm.content'\n                            defaultMessage='Are you sure you want to delete {policy} policy ?'\n                            values={{ policy: policyName }}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        id={'cancel-delete-' + policyId}\n                        onClick={handleClose}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Policies.DeletePolicy.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        id={'delete-' + policyId}\n                        onClick={handleDelete}\n                        color='primary'\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Policies.DeletePolicy.confirm'\n                            defaultMessage='Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nexport default DeletePolicy;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties, useMemo, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Utils from 'AppData/Utils';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage } from 'react-intl';\nimport { useDrag } from 'react-dnd';\nimport type { Policy } from './Types';\nimport ViewPolicy from './ViewPolicy';\nimport DeletePolicy from './DeletePolicy';\n\nconst useStyles = makeStyles(() => ({\n    policyCardText: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n    },\n    listItem: {\n        maxHeight: '100%',\n        overflow: 'auto',\n    },\n    policyActions: {\n        visibility: 'hidden',\n        '&:hover': {\n            visibility: 'inherit',\n        },\n    },\n}));\n\nconst style: CSSProperties = {\n    border: '2px solid',\n    marginTop: '0.4rem',\n    cursor: 'move',\n    borderRadius: '0.3em',\n};\n\ninterface DraggablePolicyCardProps {\n    policyObj: Policy;\n    showCopyIcon?: boolean;\n    isLocalToAPI: boolean;\n    fetchPolicies: () => void;\n}\n\n/**\n * Renders a single draggable policy block.\n * @param {any} DraggablePolicyCardProps Input props from parent components.\n * @returns {TSX} Draggable Policy card UI.\n */\nconst DraggablePolicyCard: React.FC<DraggablePolicyCardProps> = ({\n    policyObj,\n    showCopyIcon,\n    isLocalToAPI,\n    fetchPolicies,\n}) => {\n    const classes = useStyles();\n    const [hovered, setHovered] = useState(false);\n    const [dialogOpen, setDialogOpen] = useState(false);\n\n    const [{ isDragging }, drag] = useDrag(\n        () => ({\n            type: `policyCard-${policyObj.id}`,\n            item: { droppedPolicy: policyObj },\n            options: {\n                dropEffect: showCopyIcon ? 'copy' : 'move',\n            },\n            collect: (monitor) => ({\n                isDragging: monitor.isDragging(),\n            }),\n        }),\n        [showCopyIcon],\n    );\n\n    const containerStyle = useMemo(\n        () => ({\n            ...style,\n            opacity: isDragging ? 0.4 : 1,\n            borderColor: Utils.stringToColor(policyObj.displayName),\n            width: '100%',\n        }),\n        [isDragging],\n    );\n\n    const handleViewPolicy = () => {\n        setDialogOpen(true);\n    };\n\n    const handleViewPolicyClose = () => {\n        setDialogOpen(false);\n    };\n\n    return (\n        <>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <div ref={drag} style={containerStyle}>\n                    <ListItem\n                        key={policyObj.id}\n                        className={classes.listItem}\n                        onMouseOver={() => setHovered(true)}\n                        onMouseOut={() => setHovered(false)}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                style={{\n                                    backgroundColor: Utils.stringToColor(\n                                        policyObj.displayName,\n                                    ),\n                                }}\n                            >\n                                {Utils.stringAvatar(\n                                    policyObj.displayName.toUpperCase(),\n                                )}\n                            </Avatar>\n                        </ListItemAvatar>\n                        <Box\n                            display='flex-inline'\n                            flexDirection='column'\n                            sx={{ flexGrow: 1 }}\n                            className={classes.policyCardText}\n                        >\n                            <ListItemText\n                                id={policyObj.displayName}\n                                primary={policyObj.displayName}\n                                classes={{\n                                    primary: classes.policyCardText,\n                                }}\n                            />\n                            <ListItemText\n                                id={policyObj.version}\n                                secondary={policyObj.version}\n                                classes={{\n                                    secondary: classes.policyCardText,\n                                }}\n                            />\n                        </Box>\n                        <Box\n                            display='flex'\n                            justifyContent='flex-end'\n                            className={!hovered ? classes.policyActions : ''}\n                        >\n                            <Tooltip\n                                placement='top'\n                                title={\n                                    <FormattedMessage\n                                        id='Apis.Details.Policies.DraggablePolicyCard.policy.view'\n                                        defaultMessage='View'\n                                    />\n                                }\n                            >\n                                <IconButton\n                                    onClick={handleViewPolicy}\n                                    aria-label={'view-' + policyObj.name}\n                                >\n                                    <VisibilityIcon />\n                                </IconButton>\n                            </Tooltip>\n                            {isLocalToAPI && (\n                                <DeletePolicy\n                                    policyId={policyObj.id}\n                                    policyName={policyObj.displayName}\n                                    fetchPolicies={fetchPolicies}\n                                />\n                            )}\n                        </Box>\n                    </ListItem>\n                </div>\n            </Box>\n            <ViewPolicy\n                dialogOpen={dialogOpen}\n                handleDialogClose={handleViewPolicyClose}\n                policyObj={policyObj}\n                isLocalToAPI={isLocalToAPI}\n            />\n        </>\n    );\n};\n\nexport default DraggablePolicyCard;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Box } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport DraggablePolicyCard from '../DraggablePolicyCard';\nimport type { Policy } from '../Types';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    policyList: Policy[];\n    selectedTab: number;\n    fetchPolicies: () => void;\n}\n\n/**\n * Tab panel component to render content of a particular tab.\n * Renders the available policy list under the relevant flow related tab (i.e. request, response or fault).\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Tab panel.\n */\nconst TabPanel: FC<TabPanelProps> = ({\n    index,\n    policyList,\n    selectedTab,\n    fetchPolicies,\n}) => {\n    const flowNames = ['request', 'response', 'fault'];\n    const currentFlow = flowNames[index];\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={selectedTab !== index}\n            id={`${currentFlow}-tabpanel`}\n            aria-labelledby={`${currentFlow}-tab`}\n        >\n            <Box py={1} px={3}>\n                {selectedTab === index &&\n                    policyList?.map((singlePolicy: Policy) => {\n                        return (\n                            <DraggablePolicyCard\n                                key={singlePolicy.id}\n                                policyObj={singlePolicy}\n                                showCopyIcon\n                                isLocalToAPI={singlePolicy.isAPISpecific}\n                                fetchPolicies={fetchPolicies}\n                            />\n                        );\n                    })}\n            </Box>\n        </div>\n    );\n};\n\nexport default TabPanel;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { Typography, makeStyles, Theme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api.js';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CONSTS from 'AppData/Constants';\nimport type { CreatePolicySpec } from './Types';\nimport PolicyCreateForm from './PolicyForm/PolicyCreateForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    link: {\n        color: theme.palette.primary.dark,\n        marginLeft: theme.spacing(2),\n        display: 'inline',\n    },\n}));\n\ninterface CreatePolicyProps {\n    handleDialogClose: () => void;\n    dialogOpen: boolean;\n    fetchPolicies: () => void;\n}\n\n/**\n * Renders the UI to create a new policy.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Policy create UI.\n */\nconst CreatePolicy: React.FC<CreatePolicyProps> = ({\n    handleDialogClose,\n    dialogOpen,\n    fetchPolicies,\n}) => {\n    const classes = useStyles();\n    const { api } = useContext<any>(ApiContext);\n    const [saving, setSaving] = useState(false);\n    const [synapsePolicyDefinitionFile, setSynapsePolicyDefinitionFile] = useState<any[]>([]);\n    const [ccPolicyDefinitionFile, setCcPolicyDefinitionFile] = useState<any[]>([]);\n\n    const savePolicy = (\n        policySpecContent: CreatePolicySpec,\n        synapsePolicyDefinition: any,\n        ccPolicyDefinition: any,\n    ) => {\n        setSaving(true);\n        const promisedCommonPolicyAdd = API.addOperationPolicy(\n            policySpecContent,\n            api.id,\n            synapsePolicyDefinition,\n            ccPolicyDefinition,\n        );\n        promisedCommonPolicyAdd\n            .then(() => {\n                Alert.info('Policy created successfully!');\n                setSynapsePolicyDefinitionFile([]);\n                setCcPolicyDefinitionFile([]);\n                handleDialogClose();\n                fetchPolicies();\n            })\n            .catch((error) => {\n                handleDialogClose();\n                console.error(error);\n                Alert.error('Something went wrong while creating policy');\n            })\n            .finally(() => {\n                setSaving(false);\n            });\n    };\n\n    const onSave = (policySpecification: CreatePolicySpec) => {\n        const synapseFile = synapsePolicyDefinitionFile.length !== 0 ? synapsePolicyDefinitionFile : null;\n        const ccFile = ccPolicyDefinitionFile.length !== 0 ? ccPolicyDefinitionFile : null;\n        savePolicy(\n            policySpecification,\n            synapseFile,\n            ccFile,\n        );\n        handleDialogClose();\n    };\n\n    const stopPropagation = (\n        e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    ) => {\n        e.stopPropagation();\n    };\n\n    return (\n        <>\n            <Dialog\n                maxWidth='md'\n                open={dialogOpen}\n                aria-labelledby='form-dialog-title'\n                onClose={handleDialogClose}\n                onClick={stopPropagation}\n                fullWidth\n            >\n                <Box\n                    display='flex'\n                    justifyContent='space-between'\n                    alignItems='center'\n                    flexDirection='row'\n                    px={3}\n                    pt={3}\n                >\n                    <Box display='flex'>\n                        <Typography variant='h4' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.Policies.CreatePolicy.create.new.policy'\n                                defaultMessage='Create New Policy'\n                            />\n                        </Typography>\n                    </Box>\n                    <Box display='flex'>\n                        <IconButton\n                            color='inherit'\n                            onClick={handleDialogClose}\n                            aria-label='Close'\n                        >\n                            <Icon>close</Icon>\n                        </IconButton>\n                    </Box>\n                </Box>\n                <DialogContent>\n                    <Box my={2}>\n                        <DialogContentText>\n                            <PolicyCreateForm\n                                onSave={onSave}\n                                synapsePolicyDefinitionFile={synapsePolicyDefinitionFile}\n                                setSynapsePolicyDefinitionFile={setSynapsePolicyDefinitionFile}\n                                ccPolicyDefinitionFile={ccPolicyDefinitionFile}\n                                setCcPolicyDefinitionFile={setCcPolicyDefinitionFile}\n                                onCancel={handleDialogClose}\n                                saving={saving}\n                            />\n                        </DialogContentText>\n                    </Box>\n                </DialogContent>\n                <Box\n                    display='flex'\n                    flexDirection='row'\n                    justifyContent='right'\n                    px={3}\n                    pb={3}\n                >\n                    <Link to={CONSTS.PATH_TEMPLATES.COMMON_POLICIES}>\n                        <Typography className={classes.link} variant='caption'>\n                            Want to create a common policy that will be visible to all APIs instead?\n                            <LaunchIcon\n                                style={{ marginLeft: '2px' }}\n                                fontSize='small'\n                            />\n                        </Typography>\n                    </Link>\n                </Box>\n            </Dialog>\n        </>\n    );\n};\n\nexport default CreatePolicy;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, FC } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport CardContent from '@material-ui/core/CardContent';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { AddCircle } from '@material-ui/icons';\nimport { Button, makeStyles, Theme } from '@material-ui/core';\nimport CONSTS from 'AppData/Constants';\nimport type { Policy } from './Types';\nimport TabPanel from './components/TabPanel';\nimport CreatePolicy from './CreatePolicy';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    flowTabs: {\n        '& button': {\n            minWidth: 50,\n        },\n    },\n    flowTab: {\n        fontSize: 'smaller',\n    },\n    addPolicyBtn: {\n        marginLeft: 'auto',\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    paperPosition: {\n        // position: 'fixed',\n    },\n}));\n\ninterface PolicyListPorps {\n    policyList: Policy[];\n    fetchPolicies: () => void;\n    isChoreoConnectEnabled: boolean;\n}\n\n/**\n * Renders the local policy list.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} List of policies local to the API segment.\n */\nconst PolicyList: FC<PolicyListPorps> = ({policyList, fetchPolicies, isChoreoConnectEnabled}) => {\n    const classes = useStyles();\n    const [selectedTab, setSelectedTab] = useState(0); // Request flow related tab is active by default\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    let gatewayType = CONSTS.GATEWAY_TYPE.synapse;\n\n    const handleAddPolicy = () => {\n        setDialogOpen(true);\n    };\n\n    const handleAddPolicyClose = () => {\n        setDialogOpen(false);\n    };\n\n    if (isChoreoConnectEnabled) {\n        gatewayType = CONSTS.GATEWAY_TYPE.choreoConnect;\n    }\n\n    return (\n        <Paper className={classes.paperPosition}>\n            <Card variant='outlined'>\n                <CardContent>\n                    <Box display='flex'>\n                        <Typography variant='subtitle2'>\n                            <FormattedMessage\n                                id='Apis.Details.Policies.PolicyList.title'\n                                defaultMessage='Policy List'\n                            />\n                        </Typography>\n                        <Button\n                            onClick={handleAddPolicy}\n                            disabled={false}\n                            variant='outlined'\n                            color='primary'\n                            data-testid='add-new-api-specific-policy'\n                            size='small'\n                            className={classes.addPolicyBtn}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Policies.PolicyList.add.new.policy'\n                                defaultMessage='Add New Policy'\n                            />\n                        </Button>\n                    </Box>\n                    <Box>\n                        <Tabs\n                            value={selectedTab}\n                            onChange={(event, tab) => setSelectedTab(tab)}\n                            indicatorColor='primary'\n                            textColor='primary'\n                            variant='standard'\n                            aria-label='Policies local to API'\n                            className={classes.flowTabs}\n                        >\n                            <Tab\n                                label={<span className={classes.flowTab}>Request</span>}\n                                id='request-tab'\n                                aria-controls='request-tabpanel'\n                            />\n                            <Tab\n                                label={<span className={classes.flowTab}>Response</span>}\n                                id='response-tab'\n                                aria-controls='response-tabpanel'\n                            />\n                            {!isChoreoConnectEnabled && (\n                                <Tab\n                                    label={<span className={classes.flowTab}>Fault</span>}\n                                    id='fault-tab'\n                                    aria-controls='fault-tabpanel'\n                                />)\n                            }\n                        </Tabs>\n                        <Box height='60vh' pt={1} overflow='scroll'>\n                            <TabPanel\n                                policyList={policyList.filter(\n                                    (policy) =>\n                                        policy.applicableFlows.includes(\n                                            'request',\n                                        ) &&\n                                        policy.supportedGateways.includes(\n                                            gatewayType,\n                                        ),\n                                )}\n                                index={0}\n                                selectedTab={selectedTab}\n                                fetchPolicies={fetchPolicies}\n                            />\n                            <TabPanel\n                                policyList={policyList.filter(\n                                    (policy) =>\n                                        policy.applicableFlows.includes(\n                                            'response',\n                                        ) &&\n                                        policy.supportedGateways.includes(\n                                            gatewayType,\n                                        ),\n                                )}\n                                index={1}\n                                selectedTab={selectedTab}\n                                fetchPolicies={fetchPolicies}\n                            />\n                            {!isChoreoConnectEnabled && (\n                                <TabPanel\n                                    policyList={policyList.filter((policy) =>\n                                        policy.applicableFlows.includes('fault'),\n                                    )}\n                                    index={2}\n                                    selectedTab={selectedTab}\n                                    fetchPolicies={fetchPolicies}\n                                />\n                            )}\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Card>\n            <CreatePolicy\n                dialogOpen={dialogOpen}\n                handleDialogClose={handleAddPolicyClose}\n                fetchPolicies={fetchPolicies}\n            />\n        </Paper>\n    );\n};\n\nexport default PolicyList;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useState } from 'react';\nimport { HelpOutline } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Button,\n    DialogActions,\n    Radio,\n} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { FormattedMessage } from 'react-intl';\n\nconst SupportedGatewayTypes = {\n    REGULAR: 'Regular Gateway',\n    CC: 'Choreo Connect',\n};\n\ninterface GatewaySelectorProps {\n    setIsChangedToCCGatewayType: (isCCEnabled: boolean) => void;\n    isChoreoConnectEnabled: boolean;\n    removeAPIPoliciesForGatewayChange: () => void;\n}\n\n/**\n * Renders the Gateway selection section.\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Radio group for the API Gateway.\n */\nconst GatewaySelector: FC<GatewaySelectorProps> = ({\n    setIsChangedToCCGatewayType,\n    isChoreoConnectEnabled,\n    removeAPIPoliciesForGatewayChange\n}) => {\n    const [apiFromContext] = useAPI();\n    let selectedGatewayType;\n\n    const [isDialogBoxVisible, setIsDialogBoxVisible] = useState(false);\n    // This state is maintained until user gived approval for gateway change.\n    // Without this state radio buttons will switch even user disagrees to proceed gateway change.\n    const [isCCSelected, setIsCCSelected] = useState(false);\n\n    const saveAfterGatewayChange = () => {\n        if (isCCSelected) {\n            setIsChangedToCCGatewayType(true); \n        } else {\n            setIsChangedToCCGatewayType(false);\n        }\n        removeAPIPoliciesForGatewayChange();\n        setIsDialogBoxVisible(false);\n    }\n\n    if (isChoreoConnectEnabled) {\n        selectedGatewayType = SupportedGatewayTypes.CC;\n    } else {\n        selectedGatewayType = SupportedGatewayTypes.REGULAR;\n    }\n\n    /**\n     * Handles accepted gateway type change after approving dialog box.\n     * @param {event: React.ChangeEvent<HTMLInputElement>} event Indicates gateway type radio button change event.\n     */\n    const handleDialogBox = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if(event.target.value === SupportedGatewayTypes.CC) {\n            setIsCCSelected(true)\n        } else {\n            setIsCCSelected(false);\n        }\n        setIsDialogBoxVisible(true);\n    }\n\n    /**\n     * Handles discarded gateway type change after cancelling dialog box.\n     */\n    const handleDiscardedGatewayChange = () => {\n        setIsDialogBoxVisible(false);\n    };\n\n    return (\n        <Paper>\n            <Grid container direction='row' spacing={3}>\n                <Grid item md={12} xs={12}>\n                    <Box\n                        display='flex'\n                        flexDirection='row'\n                        justifyContent='space-between'\n                        alignItems='center'\n                        ml={3}\n                        mr={5}\n                    >\n                        <Box>\n                            <Typography\n                                variant='subtitle1'\n                                component='h3'\n                                gutterBottom\n                            >\n                                API Gateway\n                                <Tooltip\n                                    title='Policy list is dependant on the selected Gateway'\n                                    placement='right-start'\n                                    interactive\n                                >\n                                    <IconButton aria-label='API Gateway selector help text'>\n                                        <HelpOutline />\n                                    </IconButton>\n                                </Tooltip>\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <FormControl component='fieldset'>\n                                <RadioGroup\n                                    row\n                                    name='gateway-selector-radio-buttons-group'\n                                    value={selectedGatewayType}\n                                    onChange={handleDialogBox}\n                                >\n                                    <FormControlLabel\n                                        value={SupportedGatewayTypes.REGULAR}\n                                        control={\n                                            <Radio\n                                                color='primary'\n                                                defaultChecked\n                                                id='regularGateway'\n                                                disabled={isRestricted(\n                                                    ['apim:api_create'],\n                                                    apiFromContext,\n                                                )}\n                                                inputProps={{\n                                                    'aria-label': 'Regular Gateway',\n                                                }}\n                                            />\n                                        }\n                                        label='Regular Gateway'\n                                        labelPlacement='end'\n                                    />\n                                    <FormControlLabel\n                                        value={SupportedGatewayTypes.CC}\n                                        control={\n                                            <Radio\n                                                color='primary'\n                                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                inputProps={{\n                                                    'aria-label': 'Choreo Connect',\n                                                }}\n                                            />\n                                        }\n                                        label='Choreo Connect'\n                                        labelPlacement='end'\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Dialog\n                open={isDialogBoxVisible}\n                maxWidth='xl'\n            >\n                <DialogTitle>\n                    <Typography variant='subtitle2'>\n                        <FormattedMessage\n                            id='Apis.Details.Policies.GatewaySelector.change.gateway.confirm.title'\n                            defaultMessage='Change Gateway Type'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Policies.GatewaySelector.change.gateway.confirm.content'\n                            defaultMessage={\n                                'Changing the gateway type will remove all existing policies ' +\n                                'added to the API'\n                            }\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleDiscardedGatewayChange}\n                        color='primary'\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Policies.GatewaySelector.change.gateway.confirm.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={saveAfterGatewayChange}\n                        color='primary'\n                        variant='contained'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Policies.GatewaySelector.change.gateway.confirm.proceed'\n                            defaultMessage='Proceed'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Paper>\n    );\n};\n\nexport default GatewaySelector;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { FormattedMessage } from 'react-intl';\nimport CustomSplitButton from 'AppComponents/Shared/CustomSplitButton';\nimport ApiContext from '../components/ApiContext';\n\ninterface SaveOperationPoliciesProps {\n    saveApi: () => void;\n    updating: boolean;\n}\n\n/**\n * Renders the save button (with Save option & Save and deploy option).\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Policies page save button.\n */\nconst SaveOperationPolicies: React.FC<SaveOperationPoliciesProps> = ({\n    saveApi, updating\n}) => {\n    const { api } = useContext<any>(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Handle save button event\n     *\n     */\n    const handleSave = () => {\n        saveApi();\n    }\n\n    /**\n     * Handle save and deploy button event\n     * \n     */\n    const handleSaveAndDeploy = () => {\n        saveApi();\n        history.push({\n            pathname: `/apis/${api.id}/deployments`,\n            state: 'deploy',\n        });\n    }\n\n    return (\n        <Grid container direction='row' spacing={1}>\n            <Grid item>\n                <Box p={1} mt={3}>\n                    {api.isRevision || isRestricted(['apim:api_create'], api) ? (\n                        <Button\n                            disabled\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Policies.SaveOperationPolicies.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                    ) : (\n                        <CustomSplitButton\n                            handleSave={handleSave}\n                            api={api}\n                            handleSaveAndDeploy={handleSaveAndDeploy}\n                            isUpdating={updating}\n                        />\n                    )}\n                </Box>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default SaveOperationPolicies;\n","/*\n * Copyright (c) 2023, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport CONSTS from 'AppData/Constants';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Alert from '@material-ui/lab/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport OperationPolicy from './OperationPolicy';\nimport OperationsGroup from './OperationsGroup';\nimport type { Policy, PolicySpec } from './Types';\nimport PoliciesExpansion from './PoliciesExpansion';\n\nconst useStyles = makeStyles(() => ({\n    gridItem: {\n        display: 'flex',\n        width: '100%',\n    },\n    alert: {\n        backgroundColor: 'transparent',\n        marginTop: '-25px',\n        marginBottom: '-15px',\n    },\n}));\n\ninterface PolicySectionProps {\n    openAPISpec: any;\n    isChoreoConnectEnabled: boolean;\n    isAPILevelTabSelected: boolean;\n    allPolicies: PolicySpec[] | null;\n    policyList: Policy[];\n    api: any;\n    expandedResource: string | null;\n    setExpandedResource: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\n/**\n * Renders the policy management page.\n * @returns {TSX} Policy management page to render.\n */\nconst PoliciesSection: FC<PolicySectionProps> = ({\n    openAPISpec,\n    isChoreoConnectEnabled,\n    isAPILevelTabSelected,\n    allPolicies,\n    policyList,\n    api,\n    expandedResource,\n    setExpandedResource,\n}) => {\n    const classes = useStyles();\n    const borderColor = '';\n\n    return (\n        <Box>\n            {isAPILevelTabSelected ? (\n                <Box\n                    m={1}\n                    p={0.1}\n                    mt={1.5}\n                    sx={{\n                        boxShadow: 0.5,\n                        bgcolor: borderColor,\n                        borderRadius: 1,\n                    }}\n                >\n                    <Grid item xs={12}>\n                        <Grid\n                            container\n                            direction='column'\n                            justify='flex-start'\n                            spacing={1}\n                            alignItems='stretch'\n                        >\n                            <PoliciesExpansion\n                                target={null}\n                                verb='None'\n                                allPolicies={allPolicies}\n                                isChoreoConnectEnabled={isChoreoConnectEnabled}\n                                policyList={policyList}\n                                isAPILevelPolicy\n                            />\n                        </Grid>\n                    </Grid>\n                </Box>\n            ) : (\n                <Box\n                    m={1}\n                    p={0.1}\n                    mt={1.5}\n                    sx={{\n                        boxShadow: 0.5,\n                        bgcolor: borderColor,\n                        borderRadius: 1,\n                    }}\n                >\n                    {!isChoreoConnectEnabled && (\n                        <Alert severity='info' className={classes.alert}>\n                            <FormattedMessage\n                                id='Apis.Details.Policies.PoliciesSection.info'\n                                defaultMessage='API level policies will execute before operation level policies'\n                            />\n                        </Alert>\n                    )}\n                    {Object.entries(openAPISpec.paths).map(([target, verbObject]: [string, any]) => (\n                        <Grid key={target} item xs={12}>\n                            <OperationsGroup openAPI={openAPISpec} tag={target}>\n                                <Grid\n                                    container\n                                    direction='column'\n                                    justify='flex-start'\n                                    spacing={1}\n                                    alignItems='stretch'\n                                >\n                                    {Object.entries(verbObject).map(([verb, operation]) => {\n                                        return CONSTS.HTTP_METHODS.includes(verb) ? (\n                                            <Grid\n                                                key={`${target}/${verb}`}\n                                                item\n                                                className={classes.gridItem}\n                                            >\n                                                <OperationPolicy\n                                                    target={target}\n                                                    verb={verb}\n                                                    highlight\n                                                    operation={operation}\n                                                    api={api}\n                                                    disableUpdate={isRestricted(['apim:api_create'], api)}\n                                                    expandedResource={expandedResource}\n                                                    setExpandedResource={setExpandedResource}\n                                                    policyList={policyList}\n                                                    allPolicies={allPolicies}\n                                                    isChoreoConnectEnabled={isChoreoConnectEnabled}\n                                                />\n                                            </Grid>\n                                        ) : null;\n                                    })}\n                                </Grid>\n                            </OperationsGroup>\n                        </Grid>\n                    ))}\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default PoliciesSection;\n","/*\n * Copyright (c) 2023, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Box } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport PoliciesSection from '../PoliciesSection';\nimport type { Policy, PolicySpec } from '../Types';\n\ninterface PolicyPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    selectedTab: number;\n    openAPISpec: any;\n    isChoreoConnectEnabled: boolean;\n    isAPILevelTabSelected: boolean;\n    allPolicies: PolicySpec[] | null;\n    policyList: Policy[];\n    api: any;\n    expandedResource: string | null;\n    setExpandedResource: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\n/**\n * Tab panel component to render content of a particular tab.\n * Renders the policy section under the relevant tab (i.e. API Level or Operation Level).\n * @param {JSON} props Input props from parent components.\n * @returns {TSX} Tab panel.\n */\nconst PolicyPanel: FC<PolicyPanelProps> = ({\n    index,\n    selectedTab,\n    openAPISpec,\n    isChoreoConnectEnabled,\n    isAPILevelTabSelected,\n    allPolicies,\n    policyList,\n    api,\n    expandedResource,\n    setExpandedResource,\n}) => {\n    const tabs = ['api-level', 'operation-level'];\n    const currentTab = tabs[index];\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={selectedTab !== index}\n            id={`${currentTab}-tabpanel`}\n            aria-labelledby={`${currentTab}-tab`}\n        >\n            <Box py={1} px={3}>\n                <PoliciesSection\n                    openAPISpec={openAPISpec}\n                    isChoreoConnectEnabled={isChoreoConnectEnabled}\n                    isAPILevelTabSelected={isAPILevelTabSelected}\n                    allPolicies={allPolicies}\n                    policyList={policyList}\n                    api={api}\n                    expandedResource={expandedResource}\n                    setExpandedResource={setExpandedResource}\n                />\n            </Box>\n        </div>\n    );\n};\n\nexport default PolicyPanel;\n","/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport Alert from 'AppComponents/Shared/Alert';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { FormattedMessage } from 'react-intl';\nimport CONSTS from 'AppData/Constants';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { mapAPIOperations } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport API from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport OperationPolicy from './OperationPolicy';\nimport OperationsGroup from './OperationsGroup';\nimport PolicyList from './PolicyList';\nimport type { ApiPolicy, Policy, PolicySpec, ApiLevelPolicy } from './Types';\nimport GatewaySelector from './GatewaySelector';\nimport { ApiOperationContextProvider } from './ApiOperationContext';\nimport { uuidv4 } from './Utils';\nimport SaveOperationPolicies from './SaveOperationPolicies';\nimport PolicyPanel from './components/PolicyPanel';\n\nconst Configurations = require('Config');\n\nconst useStyles = makeStyles(() => ({\n    gridItem: {\n        display: 'flex',\n        width: '100%',\n    },\n    operationListingBox: {\n        overflowY: 'scroll',\n    },\n    paper: {\n        padding: '2px',\n    },\n    ccTypography: {\n        paddingLeft: '10px',\n        marginTop: '20px',\n    },\n    flowTabs: {\n        '& button': {\n            minWidth: 50,\n        },\n    },\n    flowTab: {\n        fontSize: 'smaller',\n    },\n}));\n\n/**\n * Renders the policy management page.\n * @returns {TSX} Policy management page to render.\n */\nconst Policies: React.FC = () => {\n    const classes = useStyles();\n    const [api, updateAPI] = useAPI();\n    const [updating, setUpdating] = useState(false);\n    const [policies, setPolicies] = useState<Policy[] | null>(null);\n    const [allPolicies, setAllPolicies] = useState<PolicySpec[] | null>(null);\n    const [expandedResource, setExpandedResource] = useState<string | null>(null);\n    const [isChoreoConnectEnabled, setIsChoreoConnectEnabled] = useState(api.gatewayType === 'wso2/choreo-connect');\n    const [selectedTab, setSelectedTab] = useState((api.apiPolicies != null) ? 0 : 1);\n    const [apiPoliciesEnabled, setApiPoliciesEnabled] = useState<boolean>(false);\n    const { showMultiVersionPolicies } = Configurations.apis;\n\n    // If Choreo Connect radio button is selected in GatewaySelector, it will pass \n    // value as true to render other UI changes specific to the Choreo Connect.\n    const setIsChangedToCCGatewayType = (isCCEnabled: boolean) => {\n        setIsChoreoConnectEnabled(isCCEnabled);\n    }\n\n    const apiLevelTab = 0;\n    const operationLevelTab = 1;\n\n    const initApiLevelPolicy: ApiLevelPolicy = {\n        request: [],\n        response: [],\n        fault: [],\n    };\n\n    const getInitPolicyState = (policyList: any) => {\n        // Iterating through the policy list of request flow, response flow and fault flow\n        for (const flow in policyList) {\n            if (Object.prototype.hasOwnProperty.call(policyList, flow)) {\n                const policyArray = policyList[flow];\n                policyArray.forEach((policyItem: ApiPolicy) => {\n                    // eslint-disable-next-line no-param-reassign\n                    policyItem.uuid = uuidv4();\n                });\n            }\n        }\n    }\n\n    /**\n     * Function to get the initial state of all the operation policies from the API object.\n     * We are setting a unique ID for all the operation policies solely for UI specific operations.\n     * We use this UUID for edit and delete operations.\n     * Before saving to backend, we are removing this UUID.\n     * @returns {Object} The operations object which is cloned from the API object with an additional UUID.\n     */\n    const getInitState = () => {\n        const clonedOperations = cloneDeep(api.operations);\n        clonedOperations.forEach((operation: any) => {\n            if (operation.operationPolicies) {\n                const { operationPolicies } = operation;\n                getInitPolicyState(operationPolicies);\n            }\n        });\n        return clonedOperations;\n    }\n\n    const getInitAPILevelPoliciesState = () => {\n        const clonedAPIPolicies = cloneDeep(api.apiPolicies);\n        if (api.apiPolicies != null) {\n            getInitPolicyState(clonedAPIPolicies);\n        }\n        return clonedAPIPolicies || initApiLevelPolicy;\n    };\n\n    const [apiOperations, setApiOperations] = useState<any>(getInitState);\n    const [apiLevelPolicies, setApiLevelPolicies] = useState<any>(getInitAPILevelPoliciesState);\n    const [openAPISpec, setOpenAPISpec] = useState<any>(null);\n\n    useEffect(() => {\n        // Check if API level policy support feature is enabled\n        const fetchData = async () => {\n            try {\n                const settings: any = await API.getSettings();\n                if (settings.isAPIPoliciesEnabled != null) {\n                    setApiPoliciesEnabled(settings.isAPIPoliciesEnabled);\n                }\n            } catch (error) {\n                // Handle any errors that occurred during the API call\n                console.error(error);\n                setApiPoliciesEnabled(false);\n            }\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        // Handle operation level policies\n        const currentOperations = getInitState();\n        setApiOperations(currentOperations);\n\n        // Handle API level policies\n        const currentAPIPolicies = getInitAPILevelPoliciesState();\n        setApiLevelPolicies(currentAPIPolicies);\n    }, [api]);\n\n    /**\n     * Fetches all common policies & API specific policies.\n     * Sets the allPolicies state: this allPolicies state is used to get policies from any given policy ID.\n     * Sets the policies state: policy state is used to display the available policies that are draggable.\n     */\n    const fetchPolicies = () => {\n        const apiPoliciesPromise = API.getOperationPolicies(api.id);\n        const commonPoliciesPromise = API.getCommonOperationPolicies();\n        Promise.all([apiPoliciesPromise, commonPoliciesPromise]).then((response) => {\n            const [apiPoliciesResponse, commonPoliciesResponse] = response;\n            const apiSpecificPolicies = apiPoliciesResponse.body.list;\n            const commonPolicies = commonPoliciesResponse.body.list;\n            const mergedList = [...commonPolicies, ...apiSpecificPolicies];\n\n            // Get all common policies and API specific policies\n            setAllPolicies(mergedList);\n\n            let unionByPolicyDisplayName;\n            if (showMultiVersionPolicies) {\n                // Get the union of policies depending on the policy display name and version\n                unionByPolicyDisplayName = [...mergedList\n                    .reduce((map, obj) => map.set(obj.name + obj.version, obj), new Map()).values()];\n            } else {\n                // Get the union of policies depending on the policy display name\n                unionByPolicyDisplayName = [...mergedList\n                    .reduce((map, obj) => map.set(obj.name, obj), new Map()).values()];\n            }\n            unionByPolicyDisplayName.sort(\n                (a: Policy, b: Policy) => a.name.localeCompare(b.name))\n            \n            let filteredByGatewayTypeList = null;\n            if (!isChoreoConnectEnabled) {\n                // Get synpase gateway supported policies\n                filteredByGatewayTypeList = unionByPolicyDisplayName.filter(\n                    (policy: Policy) => policy.supportedGateways.includes('Synapse'));\n            } else {\n                // Get CC gateway supported policies\n                filteredByGatewayTypeList = unionByPolicyDisplayName.filter(\n                    (policy: Policy) => policy.supportedGateways.includes('ChoreoConnect'));\n            }\n\n            let filteredByAPITypeList = null;\n            if (api.type === \"HTTP\") {\n                // Get HTTP supported policies\n                filteredByAPITypeList = filteredByGatewayTypeList.filter(\n                    (policy: Policy) => policy.supportedApiTypes.includes('HTTP'));\n            } else if (api.type === \"SOAP\"){\n                // Get SOAP supported policies\n                filteredByAPITypeList = filteredByGatewayTypeList.filter(\n                    (policy: Policy) => policy.supportedApiTypes.includes('SOAP'));\n            } else if (api.type === \"SOAPTOREST\"){\n                // Get SOAP to REST supported policies\n                filteredByAPITypeList = filteredByGatewayTypeList.filter(\n                    (policy: Policy) => policy.supportedApiTypes.includes('SOAPTOREST'));\n            }\n\n            setPolicies(filteredByAPITypeList);\n\n        }).catch((error) => {\n            console.error(error);\n            Alert.error('Error occurred while retrieving the policy list');\n        });\n    }\n\n    const removeAPIPoliciesForGatewayChange = () => {\n        const newApiOperations: any = cloneDeep(apiOperations);\n        // Set operation policies to the API object\n        newApiOperations.forEach((operation: any) => {\n            if (operation.operationPolicies) {\n                const { operationPolicies } = operation;\n\n                // Iterating through the policy list of request flow, response flow and fault flow\n                for (const flow in operationPolicies) {\n                    if (Object.prototype.hasOwnProperty.call(operationPolicies, flow)) {\n                        operationPolicies[flow] = [];\n                    }\n                }\n            }\n        });\n        setApiOperations(newApiOperations);\n        setApiLevelPolicies(initApiLevelPolicy);\n    }\n\n    useEffect(() => {\n        fetchPolicies();\n        if (isChoreoConnectEnabled) {\n            setSelectedTab(1);\n        }\n    }, [isChoreoConnectEnabled]);\n\n    useEffect(() => {\n        // Update the Swagger spec object when API object gets changed\n        api.getSwagger()\n            .then((response: any) => {\n                const retrievedSpec = response.body;\n                setOpenAPISpec(retrievedSpec);\n\n                // To expand the first operation by default on page render\n                const [target, verbObject]: [string, any] = Object.entries(retrievedSpec.paths)[0];\n                const verb = Object.keys(verbObject)[0]\n                setExpandedResource(verb + target)\n            })\n            .catch((error: any) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            });\n    }, [api.id]);\n\n    const localAPI = useMemo(\n        () => ({\n            id: api.id,\n            operations: api.isAPIProduct() ? {} : mapAPIOperations(api.operations),\n        }),\n        [api],\n    );\n\n    /**\n     * To update the API Operations object and maintain the current state of attached policies.\n     * Note that this function does not perform an API object update, rather, just a state update.\n     * @param {any} updatedOperation updated operation of API object\n     * @param {string} target target that needs to be updated\n     * @param {string} verb verb of the operation that neeeds to be updated\n     * @param {string} currentFlow depicts which flow needs to be udpated: request, response or fault\n     */\n    const updateApiOperations = (\n        updatedOperation: any,\n        target: string,\n        verb: string,\n        currentFlow: string,\n    ) => {\n        const newApiOperations: any = cloneDeep(apiOperations);\n        const newApiLevelPolicies: any = cloneDeep(apiLevelPolicies);\n\n        const operationInAction =\n            selectedTab === operationLevelTab\n                ? newApiOperations.find(\n                    (op: any) =>\n                        op.target === target &&\n                          op.verb.toLowerCase() === verb.toLowerCase(),\n                )\n                : null;\n\n        const flowPolicy = (\n            selectedTab === apiLevelTab\n                ? newApiLevelPolicies\n                : operationInAction.operationPolicies\n        )[currentFlow].find(\n            (p: any) =>\n                p.policyId === updatedOperation.policyId &&\n                p.uuid === updatedOperation.uuid,\n        );\n\n        if (flowPolicy) {\n            // Edit policy\n            flowPolicy.parameters = { ...updatedOperation.parameters };\n        } else {\n            // Add new policy\n            const uuid = uuidv4();\n            (selectedTab === apiLevelTab\n                ? newApiLevelPolicies\n                : operationInAction.operationPolicies)[currentFlow].push({\n                ...updatedOperation,\n                uuid,\n            });\n        }\n\n        // Finally update the state\n        if (selectedTab === apiLevelTab) {\n            setApiLevelPolicies(newApiLevelPolicies);\n        } else {\n            setApiOperations(newApiOperations);\n        }\n    };\n\n    /**\n     * To update all API Operations with the provided policy.\n     * Note that this function does not perform an API object update, rather, just a state update.\n     * @param {any} updatedOperation updated operation of API object\n     * @param {string} currentFlow depicts which flow needs to be udpated: request, response or fault\n     */\n    const updateAllApiOperations = (updatedOperation: any, currentFlow: string) => {\n        const newApiOperations: any = cloneDeep(apiOperations);\n\n        // Add attached policy to the same flow of all the operations\n        newApiOperations.forEach((operation: any) => {\n            const uuid = uuidv4();\n            operation.operationPolicies[currentFlow].push({ ...updatedOperation, uuid });\n        });\n\n        // Finally update the state\n        setApiOperations(newApiOperations);\n    }\n\n    /**\n     * To delete one API Operation from the apiOperations object\n     * Note that this function does not perform an API object update, rather, just a state update.\n     * @param {string} uuid operation uuid\n     * @param {string} target target that needs to be updated\n     * @param {string} verb verb of the operation that neeeds to be updated\n     * @param {string} currentFlow depicts which flow needs to be udpated: request, response or fault\n     */\n    const deleteApiOperation = (uuid: string, target: string, verb: string, currentFlow: string) => {\n        if (selectedTab === apiLevelTab) {\n            const newApiLevelPolicies: any = cloneDeep(apiLevelPolicies);\n            const index = newApiLevelPolicies[currentFlow].map((p: any) => p.uuid).indexOf(uuid);\n            newApiLevelPolicies[currentFlow].splice(index, 1);\n            setApiLevelPolicies(newApiLevelPolicies);\n        } else {\n            const newApiOperations: any = cloneDeep(apiOperations);\n            const operationInAction = newApiOperations.find((op: any) =>\n                op.target === target && op.verb.toLowerCase() === verb.toLowerCase());\n            // Find the location of the element using the following logic\n            /*\n            [{a:'1'},{a:'2'},{a:'1'}].map( i => i.a) will output ['1', '2', '1']\n            [{a:'1'},{a:'2'},{a:'1'}].map( i => i.a).indexOf('2') will output the location of '2'\n            */\n            const index = operationInAction.operationPolicies[currentFlow].map((p: any) => p.uuid).indexOf(uuid);\n            // delete the element\n            operationInAction.operationPolicies[currentFlow].splice(index, 1);\n\n            // Finally update the state\n            setApiOperations(newApiOperations);\n        }\n    }\n\n    /**\n     * Function to rearrange the API Operation ordering\n     * @param {string} oldIndex original index of the policy\n     * @param {string} newIndex new index of the policy\n     * @param {string} target target that needs to be updated\n     * @param {string} verb verb of the operation that neeeds to be updated\n     * @param {string} currentFlow depicts which flow needs to be udpated: request, response or fault\n     */\n    const rearrangeApiOperations = (\n        oldIndex: number, newIndex: number, target: string, verb: string, currentFlow: string,\n    ) => {\n        if (selectedTab === apiLevelTab) {\n            const newAPIPolicies: any = cloneDeep(apiLevelPolicies);\n            const policyArray = newAPIPolicies[currentFlow];\n            newAPIPolicies[currentFlow] = arrayMove(policyArray, oldIndex, newIndex);\n            setApiLevelPolicies(newAPIPolicies);\n        } else {\n            const newApiOperations: any = cloneDeep(apiOperations);\n            const operationInAction = newApiOperations.find((op: any) =>\n                op.target === target && op.verb.toLowerCase() === verb.toLowerCase());\n            const policyArray = operationInAction.operationPolicies[currentFlow];\n            operationInAction.operationPolicies[currentFlow] = arrayMove(policyArray, oldIndex, newIndex);\n            setApiOperations(newApiOperations);\n        }\n    };\n\n    const deletePolicyUuid = (operationPolicies: any) => {\n        // Iterating through the policy list of request flow, response flow and fault flow\n        for (const flow in operationPolicies) {\n            if (Object.prototype.hasOwnProperty.call(operationPolicies, flow)) {\n                const policyArray = operationPolicies[flow];\n                policyArray.forEach((policyItem: ApiPolicy) => {\n                    if (policyItem.uuid) {\n                        // eslint-disable-next-line no-param-reassign\n                        delete policyItem.uuid;\n                    }\n                });\n            }\n        }\n    }\n\n    /**\n     * To update the API object with the attached policies on Save.\n     */\n    const saveApi = () => {\n        setUpdating(true);\n        const newApiOperations: any = cloneDeep(apiOperations);\n        const newApiLevelPolicies: any = cloneDeep(apiLevelPolicies);\n        let getewayTypeForPolicies = \"wso2/synapse\";\n        const getewayVendorForPolicies = \"wso2\";\n\n        deletePolicyUuid(newApiLevelPolicies);\n        // Set operation policies to the API object\n        newApiOperations.forEach((operation: any) => {\n            if (operation.operationPolicies) {\n                const { operationPolicies } = operation;\n                deletePolicyUuid(operationPolicies);\n            }\n        });\n\n        // Handles normal policy savings for choreo connect gateway type.\n        if(isChoreoConnectEnabled) {\n            getewayTypeForPolicies = \"wso2/choreo-connect\";\n        }\n\n        const updatePromise = updateAPI({\n            operations: newApiOperations,\n            apiPolicies: newApiLevelPolicies,\n            gatewayVendor: getewayVendorForPolicies,\n            gatewayType: getewayTypeForPolicies\n        });\n        updatePromise\n            .finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    const handleTabChange = (tab: number) => {\n        setSelectedTab(tab);\n    };\n\n    /**\n     * To memoize the value passed into ApiOperationContextProvider\n     */\n    const providerValue = useMemo(\n        () => ({\n            apiOperations,\n            apiLevelPolicies,\n            updateApiOperations,\n            updateAllApiOperations,\n            deleteApiOperation,\n            rearrangeApiOperations,\n        }),\n        [\n            apiOperations,\n            apiLevelPolicies,\n            updateApiOperations,\n            updateAllApiOperations,\n            deleteApiOperation,\n            rearrangeApiOperations,\n        ],\n    );\n\n    if (!policies || !openAPISpec || updating) {\n        return <Progress per={90} message='Loading Policies ...' />\n    }\n\n    return (\n        <ApiOperationContextProvider value={providerValue}>\n            <DndProvider backend={HTML5Backend}>\n                <Box mb={4}>\n                    <Typography id='itest-api-details-resources-head' variant='h4' component='h2' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Details.Policies.Policies.title'\n                            defaultMessage='Policies'\n                        />\n                    </Typography>\n                </Box>\n                {(api.type === 'HTTP') && (\n                    <Box mb={4} px={1}>\n                        <GatewaySelector\n                            setIsChangedToCCGatewayType={setIsChangedToCCGatewayType}\n                            isChoreoConnectEnabled={isChoreoConnectEnabled}\n                            removeAPIPoliciesForGatewayChange={removeAPIPoliciesForGatewayChange}\n                        />\n                    </Box>\n                )}\n                <Box display='flex' flexDirection='row'>\n                    <Box width='65%' p={1} height='115vh' className={classes.operationListingBox}>\n                        <Paper className={classes.paper}>\n                            {apiPoliciesEnabled && (\n                                <Box p={1}>\n                                    <Tabs\n                                        value={selectedTab}\n                                        onChange={(event, tab) =>\n                                            handleTabChange(tab)\n                                        }\n                                        indicatorColor='primary'\n                                        textColor='primary'\n                                        variant='fullWidth'\n                                        aria-label='Policies local to API'\n                                        className={classes.flowTabs}\n                                    >\n                                        <Tab\n                                            label={\n                                                <span className={classes.flowTab}>\n                                                    API Level Policies\n                                                </span>\n                                            }\n                                            id='request-tab'\n                                            aria-controls='request-tabpanel'\n                                            disabled={isChoreoConnectEnabled}\n                                        />\n                                        <Tab\n                                            label={\n                                                <span className={classes.flowTab}>\n                                                    Operation Level Policies\n                                                </span>\n                                            }\n                                            id='response-tab'\n                                            aria-controls='response-tabpanel'\n                                        />\n                                    </Tabs>\n                                    <Box pt={1} overflow='scroll'>\n                                        <PolicyPanel\n                                            index={apiLevelTab}\n                                            selectedTab={selectedTab}\n                                            openAPISpec={openAPISpec}\n                                            isChoreoConnectEnabled={isChoreoConnectEnabled}\n                                            isAPILevelTabSelected\n                                            allPolicies={allPolicies}\n                                            policyList={policies}\n                                            api={localAPI}\n                                            expandedResource={expandedResource}\n                                            setExpandedResource={\n                                                setExpandedResource\n                                            }\n                                        />\n                                        <PolicyPanel\n                                            index={operationLevelTab}\n                                            selectedTab={selectedTab}\n                                            openAPISpec={openAPISpec}\n                                            isChoreoConnectEnabled={isChoreoConnectEnabled}\n                                            isAPILevelTabSelected={false}\n                                            allPolicies={allPolicies}\n                                            policyList={policies}\n                                            api={localAPI}\n                                            expandedResource={expandedResource}\n                                            setExpandedResource={\n                                                setExpandedResource\n                                            }\n                                        />\n                                    </Box>\n                                </Box>\n                            )}\n                            {!apiPoliciesEnabled && Object.entries(openAPISpec.paths).map(\n                                ([target, verbObject]: [string, any]) => (\n                                    <Grid key={target} item xs={12}>\n                                        <OperationsGroup\n                                            openAPI={openAPISpec}\n                                            tag={target}\n                                        >\n                                            <Grid\n                                                container\n                                                direction='column'\n                                                justify='flex-start'\n                                                spacing={1}\n                                                alignItems='stretch'\n                                            >\n                                                {Object.entries(verbObject).map(([verb, operation]) => {\n                                                    return CONSTS.HTTP_METHODS.includes(verb) ? (\n                                                        <Grid\n                                                            key={`${target}/${verb}`}\n                                                            item className={classes.gridItem}\n                                                        >\n                                                            <OperationPolicy\n                                                                target={target}\n                                                                verb={verb}\n                                                                highlight\n                                                                operation={operation}\n                                                                api={localAPI}\n                                                                disableUpdate={isRestricted(['apim:api_create'], api)}\n                                                                expandedResource={expandedResource}\n                                                                setExpandedResource={setExpandedResource}\n                                                                policyList={policies}\n                                                                allPolicies={allPolicies}\n                                                                isChoreoConnectEnabled={isChoreoConnectEnabled}\n                                                            />\n                                                        </Grid>\n                                                    ) : null;\n                                                })}\n                                            </Grid>\n                                        </OperationsGroup>\n                                    </Grid>\n                                )\n                            )}\n                        </Paper>\n                    </Box>\n                    <Box width='35%' p={1}>\n                        <PolicyList\n                            policyList={policies}\n                            fetchPolicies={fetchPolicies}\n                            isChoreoConnectEnabled={isChoreoConnectEnabled}\n                        />\n                    </Box>\n                </Box>\n            </DndProvider>\n            <SaveOperationPolicies\n                saveApi={saveApi}\n                updating={updating}\n            />\n        </ApiOperationContextProvider>\n    );\n};\n\nexport default Policies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport { amber } from '@material-ui/core/colors';\nimport VerticalDivider from './VerticalDivider';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px ' + theme.palette.primary.main,\n        '& span.material-icons.info': {\n            fontSize: 80,\n            color: theme.palette.primary.dark,\n        },\n        '& span.material-icons.warning': {\n            fontSize: 80,\n            color: amber[700],\n        },\n        position: 'relative',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n});\n\n/**\n *\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    handleExpandClick = () => {\n        this.setState((state) => ({ expanded: !state.expanded }));\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof InlineMessage\n     * @inheritdoc\n     */\n    render() {\n        const {\n            classes, height, type, children,\n        } = this.props;\n        return (\n            <Paper className={classes.root} {...this.props}>\n                <Icon className={type}>{type}</Icon>\n                <VerticalDivider height={height} />\n                <div className={classes.content}>{children}</div>\n            </Paper>\n        );\n    }\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.string,\n        iconItem: PropTypes.string,\n        content: PropTypes.string,\n    }).isRequired,\n    height: PropTypes.number,\n    type: PropTypes.string,\n    children: PropTypes.shape({}).isRequired,\n};\nInlineMessage.defaultProps = {\n    height: 100,\n    type: 'info',\n};\nexport default withStyles(styles)(InlineMessage);\n","/* eslint-disable */\n/*\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React from 'react';\nimport API from 'AppData/api.js';\nimport {\n    Spectral,\n    ISpectralDiagnostic,\n} from '@stoplight/spectral-core';\nimport *  as spectralFunc from \"@stoplight/spectral-functions\";\nimport { oas } from '@stoplight/spectral-rulesets';\nimport { green, orange } from '@material-ui/core/colors';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage } from 'react-intl';\n\n/** @type DiagnosticSeverity \n * \n * \nSomething not allowed by the rules of a language or other means.\n    Error = 0,\nSomething suspicious but allowed.\n    Warning = 1,\nSomething to inform about but not a problem.\n    Information = 2,\nSomething to hint to a better way of doing it, like proposing a refactoring.\n    Hint = 3\n*/\n\nconst spectralFunctions: { [key: string]: any} = {\n    \"alphabetical\": spectralFunc.alphabetical,\n    \"casing\": spectralFunc.casing,\n    \"defined\": spectralFunc.defined,\n    \"enumeration\": spectralFunc.enumeration,\n    \"falsy\": spectralFunc.falsy,\n    \"length\": spectralFunc.length,\n    \"pattern\":spectralFunc.pattern,\n    \"truthy\": spectralFunc.truthy,\n    \"undefined\": spectralFunc.undefined,\n    \"unreferencedReusableObject\": spectralFunc.unreferencedReusableObject,\n    \"xor\": spectralFunc.xor,\n}\n\nexport const spectralSeverityMap: { [key: number]: JSX.Element } = {\n    0: <ErrorIcon color=\"error\" />,\n    1: <WarningIcon style={{ color: orange[500] }} />,\n    2: <InfoIcon color=\"primary\" />,\n    3: <HelpOutlineIcon style={{ color: green[500] }} />,\n};\n\nexport const spectralSeverityNames: { [key: number]: string } = {\n    0: \"Errors\",\n    1: \"Warnings\",\n    2: \"Info\",\n    3: \"Hints\"\n};\n\nexport async function getLinterResultsFromContent(swagger: string|undefined) {\n    let validationResults: ISpectralDiagnostic[] = [];\n    \n    if (swagger) {\n        // Validate againt default ruleset by Spectral\n        let defaultRuleSet = { extends: [oas], rules: {} };\n        const linter = new Spectral();\n        linter.setRuleset(defaultRuleSet);\n        \n        try {\n            \n            await linter.run(swagger).then((results)=> {\n                if (results) {\n                    validationResults = validationResults.concat(results);\n                }\n            });\n        } catch (err) {\n            console.error(\"OpenAPI linter default ruleset validation failed\", err);\n            Alert.error(\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.Linting.Linting.default.ruleset.validation.failed'\n                defaultMessage='OpenAPI linter default ruleset validation failed'\n            />);\n        }\n\n\n        // Validate againt custom ruleset defined in tenant config\n        let customRuleset:JSON = await API.getLinterCustomRules().then((LinterCustomRuleset: JSON) => {\n            return LinterCustomRuleset;\n        }).catch((error: any) => {\n            console.log(\"Error retrieving custom linter rules\", error);\n            Alert.error(\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.Linting.Linting.error.retrieving.custom.rules'\n                defaultMessage='Error retrieving custom linter rules'\n            />);\n        });\n        if (customRuleset) {\n            //Parse JSON to JS object to support spectral\n            const parsedCustomRuleset = JSON.parse(\n                JSON.stringify(customRuleset), \n                function (key, value) {\n                    if (key === \"function\") {\n                        return spectralFunctions[value];\n                    } else {\n                        return value;\n                    }\n                }\n            );\n\n            linter.setRuleset(parsedCustomRuleset);\n            \n            try {\n                await linter.run(swagger).then((results)=> {\n                    if (results) {\n                        validationResults = validationResults.concat(results);\n                    }\n                });\n            } catch (error) {\n                if (error instanceof Error) {\n                    console.error(\"OpenAPI linter custom ruleset validation failed\\n\", error, error.stack);\n                }\n                Alert.error(\n                    <FormattedMessage\n                        id='Apis.Details.APIDefinition.Linting.Linting.custom.ruleset.validation.failed'\n                        defaultMessage='OpenAPI linter custom ruleset validation failed'\n                    />);\n            }\n        }\n\n        //Sort linter results order based of severity\n        validationResults = validationResults.sort( function compare(a, b) {\n            if (a.severity < b.severity){\n              return -1;\n            }\n            if (a.severity > b.severity){\n              return 1;\n            }\n            return 0;\n        });\n    }\n    return validationResults;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst options = ['Save and deploy', 'Save'];\n\n/**\n *\n * @returns\n */\nexport default function CustomSplitButton(props) {\n    const [open, setOpen] = React.useState(false);\n    const {\n        advertiseInfo, handleSave, handleSaveAndDeploy, isUpdating, api, id,\n    } = props;\n    const anchorRef = React.useRef(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const securityScheme = [...api.securityScheme];\n    const isMutualSslOnly = securityScheme.length === 2 && securityScheme.includes('mutualssl')\n    && securityScheme.includes('mutualssl_mandatory');\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n\n    const isDeployButtonDisabled = (((api.type !== 'WEBSUB' && !isEndpointAvailable))\n    || (!isMutualSslOnly && !isTierAvailable)\n    || api.workflowStatus === 'CREATED');\n\n    const handleClick = (event, index) => {\n        setSelectedIndex(index);\n        setOpen(false);\n        if (`${options[index]}` === 'Save') {\n            handleSave();\n        } else {\n            handleSaveAndDeploy();\n        }\n    };\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <Grid container direction='column' alignItems='center'>\n            {(advertiseInfo && advertiseInfo.advertised) ? (\n                <Grid item xs={12}>\n                    <Button\n                        onClick={handleSave}\n                        variant='contained'\n                        color='primary'\n                    >\n                        {options[1]}\n                    </Button>\n                </Grid>\n            ) : (\n                <Grid item xs={12}>\n                    <ButtonGroup\n                        variant='contained'\n                        color='primary'\n                        ref={anchorRef}\n                        aria-label='split button'\n                        disabled={isUpdating}\n                        style={{ width: '200px' }}\n                    >\n                        <Button\n                            onClick={(event) => handleClick(event, selectedIndex)}\n                            disabled={isUpdating}\n                            data-testid = 'custom-select-save-button'\n                            style={{ width: '200px' }}\n                            id={id}\n                        >\n                            {options[selectedIndex]}\n                            {isUpdating && <CircularProgress size={24} />}\n                        </Button>\n                        <Button\n                            color='primary'\n                            size='small'\n                            aria-controls={open ? 'split-button-menu' : undefined}\n                            aria-expanded={open ? 'true' : undefined}\n                            aria-label='select merge strategy'\n                            aria-haspopup='menu'\n                            onClick={handleToggle}\n                        >\n                            <ArrowDropDownIcon />\n                        </Button>\n                    </ButtonGroup>\n                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                        {({ TransitionProps, placement }) => (\n                            <Grow\n                                {...TransitionProps}\n                                style={{\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                                }}\n                            >\n                                <Paper>\n                                    <ClickAwayListener onClickAway={handleClose}>\n                                        <MenuList id='split-button-menu'>\n                                            {options.map((option, index) => (\n                                                <MenuItem\n                                                    key={option}\n                                                    selected={index === selectedIndex}\n                                                    onClick={(event) => handleClick(event, index)}\n                                                    disabled={(option === 'Save and deploy' && isDeployButtonDisabled)}\n                                                >\n                                                    {option}\n                                                </MenuItem>\n                                            ))}\n                                        </MenuList>\n                                    </ClickAwayListener>\n                                </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </Grid>\n            )}\n        </Grid>\n    );\n}\n\nCustomSplitButton.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    handleSave: PropTypes.shape({}).isRequired,\n    handleSaveAndDeploy: PropTypes.shape({}).isRequired,\n    isUpdating: PropTypes.bool.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { useTheme } from '@material-ui/core/styles';\n\n/**\n *\n * Convert raw byte values to human readable format\n * @param {Number} bytes number of bytes\n * @param {boolean} [si=false]\n * @returns {String} Human readable string format\n */\nexport function humanFileSize(bytesParam, si = false) {\n    let bytes = bytesParam; // To prevent `no-param-reassign` eslint rule violation\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '100px 20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744',\n};\n\n/**\n *\n * Provide a class friendly Dropzone wrapper using hooks.\n * @export\n * @returns\n */\nexport default function DropZoneLocal(props) {\n    const {\n        message, onDrop, error, children, accept, ariaLabel,\n    } = props;\n    const dropZoneObject = useDropzone({ onDrop });\n    const {\n        getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject,\n    } = dropZoneObject;\n\n    const style = useMemo(\n        () => ({\n            ...baseStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {}),\n        }),\n        [isDragActive, isDragReject, error],\n    );\n    const theme = useTheme();\n\n    const containerStyles = {\n        fontFamily: theme.typography.fontFamily,\n        textAlign: 'center',\n    };\n\n    return (\n        <section className='container' style={containerStyles}>\n            <div {...getRootProps({ style })}>\n                <input\n                    // In accordance with https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html\n                    aria-label={ariaLabel}\n                    {...getInputProps()}\n                    multiple={false}\n                    accept={accept}\n                />\n                {children || message}\n            </div>\n        </section>\n    );\n}\nDropZoneLocal.defaultProps = {\n    message: \"Drag 'n' drop some files here, or click to select files\",\n    onDrop: () => {},\n    showFilesList: true,\n    children: null,\n    error: false,\n    accept: '*',\n};\nDropZoneLocal.propTypes = {\n    message: PropTypes.string,\n    onDrop: PropTypes.func,\n    accept: PropTypes.string,\n    showFilesList: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.shape({}))]),\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({})]),\n};\n"],"sourceRoot":""}